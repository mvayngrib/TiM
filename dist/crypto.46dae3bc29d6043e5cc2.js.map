{"version":3,"sources":["webpack:///crypto.46dae3bc29d6043e5cc2.js","webpack:///./~/bn.js/lib/bn.js","webpack:///./~/elliptic/package.json","webpack:///./~/elliptic/lib/elliptic/utils.js","webpack:///./~/elliptic/lib/elliptic/curve/base.js","webpack:///./~/elliptic/lib/elliptic/curve/short.js","webpack:///./~/elliptic/lib/elliptic/curve/mont.js","webpack:///./~/elliptic/lib/elliptic/curve/edwards.js","webpack:///./~/elliptic/lib/elliptic/precomputed/secp256k1.js","webpack:///./~/elliptic/lib/elliptic/ec/index.js","webpack:///./~/elliptic/lib/elliptic/ec/key.js","webpack:///./~/elliptic/lib/elliptic/ec/signature.js","webpack:///./~/elliptic/lib/elliptic/eddsa/key.js","webpack:///./~/elliptic/lib/elliptic/eddsa/signature.js","webpack:///./~/secp256k1/elliptic.js","webpack:///./~/secp256k1/lib/index.js","webpack:///./~/secp256k1/lib/assert.js","webpack:///./~/secp256k1/lib/der.js","webpack:///./~/secp256k1/lib/messages.json","webpack:///./~/secp256k1/lib/elliptic/index.js","webpack:///./~/nkey-ecdsa/index.js","webpack:///./~/nkey-ecdsa/browser.js","webpack:///./~/nkey/index.js","webpack:///./~/nkey-ecdsa/utils.js","webpack:///./~/nkey-ecdsa/~/asn1.js/lib/asn1/api.js","webpack:///./~/nkey-ecdsa/~/asn1.js/lib/asn1/base/reporter.js","webpack:///./~/nkey-ecdsa/~/asn1.js/lib/asn1/base/node.js","webpack:///./~/nkey-ecdsa/~/asn1.js/lib/asn1/decoders/der.js","webpack:///./~/nkey-ecdsa/~/asn1.js/lib/asn1/decoders/pem.js","webpack:///./~/nkey-ecdsa/~/asn1.js/lib/asn1/encoders/der.js","webpack:///./~/nkey-ecdsa/~/asn1.js/lib/asn1/encoders/pem.js","webpack:///./~/nkey-ecdsa/default.js","webpack:///./~/nkey-ecdsa/~/key-encoder/index.js","webpack:///./~/nkey-ecdsa/~/key-encoder/lib/key-encoder.js","webpack:///./~/nkey-ecdsa/~/key-encoder/~/asn1.js/~/bn.js/lib/bn.js","webpack:///./~/nkey-ecdsa/~/key-encoder/~/asn1.js/lib/asn1/api.js","webpack:///./~/nkey-ecdsa/~/key-encoder/~/asn1.js/lib/asn1/base/reporter.js","webpack:///./~/nkey-ecdsa/~/key-encoder/~/asn1.js/lib/asn1/base/node.js","webpack:///./~/nkey-ecdsa/~/key-encoder/~/asn1.js/lib/asn1/decoders/der.js","webpack:///./~/nkey-ecdsa/~/key-encoder/~/asn1.js/lib/asn1/decoders/pem.js","webpack:///./~/nkey-ecdsa/~/key-encoder/~/asn1.js/lib/asn1/encoders/der.js","webpack:///./~/nkey-ecdsa/~/key-encoder/~/asn1.js/lib/asn1/encoders/pem.js","webpack:///./~/nkey-ecdsa/~/key-encoder/lib/curves.js","webpack:///./~/nkey-ecdsa/~/elliptic/package.json","webpack:///./~/nkey-ecdsa/~/elliptic/lib/elliptic/utils.js","webpack:///./~/nkey-ecdsa/~/elliptic/~/bn.js/lib/bn.js","webpack:///./~/nkey-ecdsa/~/elliptic/lib/elliptic/curve/base.js","webpack:///./~/nkey-ecdsa/~/elliptic/lib/elliptic/curve/short.js","webpack:///./~/nkey-ecdsa/~/elliptic/lib/elliptic/curve/mont.js","webpack:///./~/nkey-ecdsa/~/elliptic/lib/elliptic/curve/edwards.js","webpack:///./~/nkey-ecdsa/~/elliptic/lib/elliptic/ec/index.js","webpack:///./~/nkey-ecdsa/~/elliptic/lib/elliptic/ec/key.js","webpack:///./~/nkey-ecdsa/~/elliptic/lib/elliptic/ec/signature.js","webpack:///./~/nkey-ecdsa/~/elliptic/lib/elliptic/eddsa/key.js","webpack:///./~/nkey-ecdsa/~/elliptic/lib/elliptic/eddsa/signature.js","webpack:///./~/nkey-ecdsa/~/key-encoder/lib/aliases.js","webpack:///./~/nkey-secp256k1/index.js","webpack:///./~/nkey-curve25519/index.js","webpack:///./~/nkey-bitcoin/index.js","webpack:///./~/elliptic/lib/elliptic.js","webpack:///./~/elliptic/lib/elliptic/hmac-drbg.js","webpack:///./~/elliptic/lib/elliptic/curve/index.js","webpack:///./~/elliptic/lib/elliptic/curves.js","webpack:///./~/elliptic/lib/elliptic/eddsa/index.js","webpack:///./~/nkey-ecdsa/~/asn1.js/lib/asn1.js","webpack:///./~/nkey-ecdsa/~/asn1.js/lib/asn1/base/index.js","webpack:///./~/nkey-ecdsa/~/asn1.js/lib/asn1/base/buffer.js","webpack:///./~/nkey-ecdsa/~/asn1.js/lib/asn1/constants/index.js","webpack:///./~/nkey-ecdsa/~/asn1.js/lib/asn1/constants/der.js","webpack:///./~/nkey-ecdsa/~/asn1.js/lib/asn1/decoders/index.js","webpack:///./~/nkey-ecdsa/~/asn1.js/lib/asn1/encoders/index.js"],"names":["webpackJsonp","881","module","exports","__webpack_require__","_typeof","Symbol","iterator","obj","constructor","prototype","assert","val","msg","Error","inherits","ctor","superCtor","super_","TempCtor","BN","number","base","endian","isBN","this","negative","words","length","red","_init","parseHex","str","start","end","r","len","Math","min","i","c","charCodeAt","parseBase","mul","toBitArray","num","w","Array","bitLength","bit","off","wbit","smallMulTo","self","out","a","b","lo","carry","k","ncarry","rword","maxJ","j","max","strip","bigMulTo","hncarry","jumboMulTo","fftm","FFTM","mulp","x","y","MPrime","name","p","n","iushln","isub","tmp","_tmp","K256","call","P224","P192","P25519","Red","m","prime","_prime","gtn","Mont","shift","r2","imod","sqr","rinv","_invmp","minv","isubn","div","umod","sub","wordSize","Buffer","e","isArray","left","right","cmp","_initNumber","_initArray","toString","replace","_parseHex","_parseBase","toArray","ceil","limbLen","limbPow","total","mod","word","imuln","_iaddn","pow","copy","dest","clone","_expand","size","_normSign","inspect","zeros","groupSizes","groupBases","padding","groupSize","groupBase","isZero","modn","idivn","toNumber","ret","toJSON","toBuffer","toArrayLike","ArrayType","byteLength","reqLength","littleEndian","res","q","andln","iushrn","clz32","_countBits","t","_zeroBits","hi","zeroBits","toTwos","width","abs","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","iadd","add","comb10MulTo","mid","o","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","imul","w0","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","mulTo","makeRBT","N","l","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","s","rtwdf","cos","PI","itwdf","sin","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","odd","conjugate","normalize13b","ws","round","convert13b","stub","ph","_","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","muln","isqr","bits","carryMask","newCarry","ishln","hint","extended","h","mask","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","addn","subn","iabs","_ishlnsubmul","_wordDiv","mode","bhi","bhiBits","diff","qj","divmod","positive","divn","divRound","dm","half","acc","egcd","A","B","C","D","g","isEven","yp","xp","im","isOdd","jm","gcd","x1","x2","delta","cmpn","invm","bincn","ucmp","gt","gten","gte","ltn","lt","lten","lte","eqn","eq","toRed","ctx","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","ireduce","rlen","split","imulK","input","output","outLen","prev","next","mod3","one","nOne","lpow","z","inv","windowSize","wnd","current","currentLen","mont","u","undefined","891","892","_args","raw","scope","escapedName","rawSpec","spec","type","_from","_id","_inCache","_location","_phantomChildren","_requested","_requiredBy","_resolved","_shasum","_shrinkwrap","_spec","_where","author","email","bugs","url","dependencies","bn.js","brorand","hash.js","description","devDependencies","brfs","coveralls","grunt","grunt-browserify","grunt-contrib-connect","grunt-contrib-copy","grunt-contrib-uglify","grunt-mocha-istanbul","grunt-saucelabs","istanbul","jscs","jshint","mocha","files","homepage","keywords","license","main","optionalDependencies","readme","readmeFilename","repository","scripts","lint","test","unit","version","893","enc","slice","push","parseInt","zero2","toHex","getNAF","naf","getJSF","k1","k2","jsf","d1","d2","m14","m24","u1","m8","u2","cachedProperty","computer","key","parseBytes","bytes","utils","intFromLE","encode","arr","894","901","902","BaseCurve","conf","zero","two","pointFromJSON","gRed","_wnafT1","_wnafT2","_wnafT3","_wnafT4","adjustCount","redN","_maxwellTrick","BasePoint","curve","precomputed","elliptic","point","validate","_fixedNafMul","doubles","_getDoubles","I","step","repr","nafW","jpoint","mixedAdd","points","toP","_wnafMul","nafPoints","_getNAFPoints","dblp","_wnafMulAdd","defW","coeffs","jacobianResult","wndWidth","comb","toJ","index","ja","jb","decodePoint","pointFromX","encodeCompressed","_encode","compact","getX","getY","concat","precompute","power","beta","_getBeta","_hasDoubles","dbl","903","ShortCurve","Base","tinv","zeroA","threeA","endo","_getEndomorphism","_endoWnafT1","_endoWnafT2","Point","isRed","inf","JPoint","zOne","lambda","betas","_getEndoRoots","lambdas","basis","map","vec","_getEndoBasis","ntinv","l1","l2","prevR","aprxSqrt","floor","v","y1","y2","len1","len2","_endoSplit","v1","v2","c1","c2","p1","p2","q1","q2","ax","rhs","_endoWnafMulAdd","npoints","ncoeffs","fromJSON","pre","endoMul","obj2point","JSON","parse","isInfinity","nx","ny","ys1","dyinv","mulAdd","jmulAdd","_precompute","negate","zinv","zinv2","ay","pz2","z2","s1","s2","h2","h3","nz","jx","jy","jz","jz4","jyd","jx2","jyd2","jyd4","t1","t2","dny","_zeroDbl","_threeDbl","_dbl","xx","yy","yyyy","yyyy8","d","f","c8","gamma","alpha","beta4","beta8","ggamma8","jy2","jxd4","jyd8","trpl","zz","mm","ee","yyu4","kbase","z3","pz3","eqXToP","zs","xc","904","MontCurve","i4","a24","normalize","aa","bb","diffAdd","da","cb","jumlAdd","other","905","EdwardsCurve","twisted","mOneA","dd","oneC","_mulA","_mulC","lhs","pointFromY","_extDbl","nt","_projDbl","_extAdd","_projAdd","zi","906","907","908","EC","options","curves","hasOwnProperty","PresetCurve","nh","hash","KeyPair","Signature","keyPair","keyFromPrivate","priv","fromPrivate","keyFromPublic","pub","fromPublic","genKeyPair","drbg","hmacDRBG","pers","entropy","rand","hmacStrength","nonce","ns2","generate","_truncateToN","truncOnly","sign","bkey","getPrivate","persEnc","ns1","iter","kp","kpX","recoveryParam","canonical","verify","signature","sinv","getPublic","recoverPubKey","isYOdd","isSecondKey","rInv","getKeyRecoveryParam","Q","Qprime","909","ec","_importPrivate","privEnc","_importPublic","pubEnc","result","reason","derive","910","_importDER","Position","place","getLength","buf","initial","octetLen","rmPadding","constructLength","octets","log","LN2","data","slen","toDER","backHalf","911","912","eddsa","params","_secret","secret","isPoint","_pub","_pubBytes","fromSecret","encodePoint","lastIx","encodingLength","decodeInt","privBytes","update","digest","message","sig","getSecret","pubBytes","913","R","S","_R","_S","_Rencoded","Rencoded","_Sencoded","Sencoded","encodeInt","toBytes","toUpperCase","1272","1273","initCompressedValue","value","defaultValue","isBoolean","messages","COMPRESSED_TYPE_INVALID","der","secp256k1","privateKeyVerify","privateKey","isBuffer","EC_PRIVATE_KEY_TYPE_INVALID","privateKeyExport","compressed","isBufferLength","EC_PRIVATE_KEY_LENGTH_INVALID","publicKey","privateKeyImport","EC_PRIVATE_KEY_IMPORT_DER_FAIL","privateKeyTweakAdd","tweak","TWEAK_TYPE_INVALID","TWEAK_LENGTH_INVALID","privateKeyTweakMul","publicKeyCreate","publicKeyConvert","EC_PUBLIC_KEY_TYPE_INVALID","isBufferLength2","EC_PUBLIC_KEY_LENGTH_INVALID","publicKeyVerify","publicKeyTweakAdd","publicKeyTweakMul","publicKeyCombine","publicKeys","EC_PUBLIC_KEYS_TYPE_INVALID","isLengthGTZero","EC_PUBLIC_KEYS_LENGTH_INVALID","signatureNormalize","ECDSA_SIGNATURE_TYPE_INVALID","ECDSA_SIGNATURE_LENGTH_INVALID","signatureExport","sigObj","signatureImport","ECDSA_SIGNATURE_PARSE_DER_FAIL","signatureImportLax","MSG32_TYPE_INVALID","MSG32_LENGTH_INVALID","noncefn","isObject","OPTIONS_TYPE_INVALID","OPTIONS_DATA_TYPE_INVALID","OPTIONS_DATA_LENGTH_INVALID","isFunction","OPTIONS_NONCEFN_TYPE_INVALID","recover","recovery","isNumber","RECOVERY_ID_TYPE_INVALID","isNumberInInterval","RECOVERY_ID_VALUE_INVALID","ecdh","ecdhUnsafe","1274","Object","TypeError","buffer","RangeError","length1","length2","1275","bip66","EC_PRIVKEY_EXPORT_DER_COMPRESSED","EC_PRIVKEY_EXPORT_DER_UNCOMPRESSED","ZERO_BUFFER_32","lenb","lenR","posR","lenS","posS","decode","err","lenbyte","rindex","sindex","rvalue","svalue","1277","EC_PRIVATE_KEY_TWEAK_ADD_FAIL","EC_PRIVATE_KEY_TWEAK_MUL_FAIL","EC_PRIVATE_KEY_EXPORT_DER_FAIL","EC_PUBLIC_KEY_PARSE_FAIL","EC_PUBLIC_KEY_CREATE_FAIL","EC_PUBLIC_KEY_TWEAK_ADD_FAIL","EC_PUBLIC_KEY_TWEAK_MUL_FAIL","EC_PUBLIC_KEY_COMBINE_FAIL","ECDH_FAIL","ECDSA_SIGNATURE_PARSE_FAIL","ECDSA_SIGNATURE_SERIALIZE_DER_FAIL","ECDSA_SIGN_FAIL","ECDSA_RECOVER_FAIL","1278","loadCompressedPublicKey","first","xBuffer","ecparams","loadUncompressedPublicKey","yBuffer","x3","loadPublicKey","createHash","bn","pair","pairs","getNonce","counter","sigr","sigs","shared","scalar","1431","window","crypto","subtle","1432","global","getCurveSpec","namedCurve","toJWKCurve","normalizeAlgorithm","DEFAULT_ALGORITHM","fromCryptoKey","_ref","json","ecOpts","api","getPropsForJSON","co","wrap","regeneratorRuntime","mark","_callee2","algorithm","_context2","abrupt","toArrayBuffer","sent","t0","stop","_callee3","concatSig","verified","_context3","fromDER","nkey","wrapInstance","algo","toLowerCase","HASH_ALGOS","keys","join","pubKeyString","fingerprint","isPrivateKey","exportPrivateKey","exported","omit","check","checkNative","supported","_callee4","ops","jwk","_context4","toJWK","importKey","EXTRACTABLE","syncProps","extend","loadedKey","_callee5","someKey","_context5","KEY_PROPS","forEach","prop","defineProperty","get","method","_callee6","_args6","arguments","_context6","apply","debug","_require","fromJWK","ZERO_BUF","fill","checked","Map","gen","_callee","opts","privJWK","imported","_context","DEFAULT_CURVE","generateKey","exportKey","sha1","sha256","sha384","sha512","_callee7","id","signOpts","prom","works","_context7","process","browser","has","modulusLength","publicExponent","testSign","set","_callee8","_ref2","_context8","wrapAPI","1437","genSync","instance","wrapper","setReadonly","bind","addAsync","customProps","BASE_PROPS","indexOf","asyncify","fn","args","pop","nextTick","enumerable","writable","1440","crv","kty","toUnpaddedBase64","ext","statement","padded","ArrayBuffer","asn1SigToConcatSig","asn1SigBuffer","rsSig","EcdsaDerSig","concatSigToAsn1Sig","concatSigBuffer","asn1","define","seq","1441","1442","Entity","body","decoders","encoders","_createNamed","named","runInThisContext","entity","_initNamed","_getDecoder","_getEncoder","reporter","1443","1444","Reporter","_reporterState","path","errors","ReporterError","rethrow","isError","save","state","pathLen","restore","enterKey","exitKey","leaveKey","enterObject","leaveObject","now","error","inherited","elem","stringify","stack","partial","wrapResult","captureStackTrace","1445","1446","Node","parent","_baseState","children","tag","reverseArgs","choice","optional","any","use","useDecoder","explicit","implicit","contains","_wrap","EncoderBuffer","DecoderBuffer","tags","methods","overrided","stateProps","cstate","filter","child","equal","_useArgs","arg","item","def","newKey","_decode","present","prevKey","_peekTag","_decodeGeneric","_decodeChoice","prevObj","_decodeTag","offset","track","_getUse","_decodeList","_decodeStr","_decodeObjid","_decodeTime","_decodeNull","_decodeBool","_decodeInt","_use","match","some","node","_createEncoderBuffer","_encodeValue","_skipDefault","content","primitive","_encodeChoice","_encodePrimitive","cls","_encodeComposite","_encodeStr","_encodeObjid","_encodeTime","_encodeNull","_encodeInt","_encodeBool","_isNumstr","_isPrintstr","1447","1448","1449","1450","DERDecoder","tree","DERNode","derDecodeTag","fail","readUInt8","tagClass","oct","tagStr","derDecodeLen","bignum","constants","isEmpty","decodedTag","skip","_skipUntilEnd","decoder","possibleEnd","unused","String","fromCharCode","readUInt16BE","numstr","printstr","values","relative","identifiers","ident","subident","second","year","mon","day","hour","sec","Date","UTC","1451","PEMDecoder","lines","label","base64","1452","1453","DEREncoder","encodeTag","tagByName","tagClassByName","encodedTag","header","lenOctets","writeUInt16BE","splice","objid","time","date","getFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","numArray","unshift","dataBuffer","defaultBuffer","1454","PEMEncoder","1455","createECDH","getImpl","special","impl","normalizeOpts","generateKeys","getPrivateKey","getEncodedPriv","privPEM","encoder","encodePrivate","getEncodedPub","pubPEM","encodePublic","signSync","createSign","verifySync","createVerify","setPrivateKey","getPublicKey","KeyEncoder","hasDeterministicSig","p256","p384","p521","setImplementationForCurve","1456","1457","algorithmID","ECPrivateKeyASN","octstr","bitstr","SubjectPublicKeyInfoASN","privateKeyObject","rawPrivateKey","rawPublicKey","parameters","curveParameters","publicKeyObject","originalFormat","destinationFormat","privatePEMOptions","publicPEMOptions","1458","1459","_smallMulTo","_bigMulTo","tlen","nlen","1460","1461","1462","1463","1464","1465","1466","1467","1468","1469","1470","1471","1472","1473","toCurves","cParams","aliases","1474","1475","_installable","_nodeVersion","_npmUser","_npmVersion","browserify","uglify-js","directories","dist","shasum","tarball","gitHead","maintainers","1476","1477","ushl","1478","1479","1480","1481","1482","1483","1484","1485","1486","eNeg","1487","1488","1489","1490","1491","1492","1493","randomBytes","pubFromPriv","exportPrivate","privKeyString","1494","curve25519","secretKey","fromSecretKey","privArr","toUint8Array","sharedKey","before","Uint8Array","box","1497","networkName","DEFAULT_NETWORK","bitcoin","ECKey","makeRandom","ECSignature","network","networks","fromWIF","toWIF","ECPubKey","fromHex","wif","getAddress","2491","__webpack_module_template_argument_0__","__webpack_module_template_argument_1__","__webpack_module_template_argument_2__","__webpack_module_template_argument_3__","__webpack_module_template_argument_4__","__webpack_module_template_argument_5__","__webpack_module_template_argument_6__","2492","HmacDRBG","predResist","outSize","minEntropy","reseed","reseedInterval","K","V","entropyEnc","nonceEnc","seed","_update","_hmac","hmac","kmac","addEnc","temp","2493","edwards","2494","defineCurve","configurable","2495","EDDSA","pointClass","keyFromSecret","hashInt","messagePrefix","s_","makeSignature","SG","RplusAh","normed","xIsOdd","2496","2497","2498","write","2499","_reverse","2500","0","1","2","3","4","5","6","7","8","9","10","11","12","13","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","2501","pem","2502"],"mappings":"AAAAA,cAAc,EAAE,IAEVC,IACA,SAASC,EAAQC,EAASC,IAEH,SAASF,GAAS,YAE9C,IAAIG,GAA4B,kBAAXC,SAAoD,gBAApBA,QAAOC,SAAwB,SAAUC,GAAO,aAAcA,IAAS,SAAUA,GAAO,MAAOA,IAAyB,kBAAXF,SAAyBE,EAAIC,cAAgBH,QAAUE,IAAQF,OAAOI,UAAY,eAAkBF,KCPvQ,SAAWN,EAAQC,GAIjB,QAASQ,QAAQC,EAAKC,GACpB,IAAKD,EAAK,KAAM,IAAIE,OAAMD,GAAO,oBAKnC,QAASE,UAAUC,EAAMC,GACvBD,EAAKE,OAASD,CACd,IAAIE,GAAW,YACfA,GAAST,UAAYO,EAAUP,UAC/BM,EAAKN,UAAY,GAAIS,GACrBH,EAAKN,UAAUD,YAAcO,EAK/B,QAASI,IAAIC,EAAQC,EAAMC,GACzB,MAAIH,IAAGI,KAAKH,GACHA,GAGTI,KAAKC,SAAW,EAChBD,KAAKE,MAAQ,KACbF,KAAKG,OAAS,EAGdH,KAAKI,IAAM,UAEI,OAAXR,IACW,OAATC,GAA0B,OAATA,IACnBC,EAASD,EACTA,EAAO,IAGTG,KAAKK,MAAMT,GAAU,EAAGC,GAAQ,GAAIC,GAAU,SAmJlD,QAASQ,UAAUC,EAAKC,EAAOC,GAG7B,IAAK,GAFDC,GAAI,EACJC,EAAMC,KAAKC,IAAIN,EAAIJ,OAAQM,GACtBK,EAAIN,EAAOM,EAAIH,EAAKG,IAAK,CAChC,GAAIC,GAAIR,EAAIS,WAAWF,GAAK,EAE5BJ,KAAM,EAIJA,GADEK,GAAK,IAAMA,GAAK,GACbA,EAAI,GAAK,GAGLA,GAAK,IAAMA,GAAK,GACpBA,EAAI,GAAK,GAIL,GAAJA,EAGT,MAAOL,GAiCT,QAASO,WAAWV,EAAKC,EAAOC,EAAKS,GAGnC,IAAK,GAFDR,GAAI,EACJC,EAAMC,KAAKC,IAAIN,EAAIJ,OAAQM,GACtBK,EAAIN,EAAOM,EAAIH,EAAKG,IAAK,CAChC,GAAIC,GAAIR,EAAIS,WAAWF,GAAK,EAE5BJ,IAAKQ,EAIHR,GADEK,GAAK,GACFA,EAAI,GAAK,GAGLA,GAAK,GACTA,EAAI,GAAK,GAITA,EAGT,MAAOL,GA8WT,QAASS,YAAYC,GAGnB,IAAK,GAFDC,GAAI,GAAIC,OAAMF,EAAIG,aAEbC,EAAM,EAAGA,EAAMH,EAAElB,OAAQqB,IAAO,CACvC,GAAIC,GAAOD,EAAM,GAAM,EACnBE,EAAOF,EAAM,EAEjBH,GAAEG,IAAQJ,EAAIlB,MAAMuB,GAAQ,GAAKC,KAAWA,EAG9C,MAAOL,GAmWT,QAASM,YAAYC,EAAMR,EAAKS,GAC9BA,EAAI5B,SAAWmB,EAAInB,SAAW2B,EAAK3B,QACnC,IAAIU,GAAOiB,EAAKzB,OAASiB,EAAIjB,OAAU,CACvC0B,GAAI1B,OAASQ,EACbA,EAAOA,EAAM,EAAK,CAGlB,IAAImB,GAAoB,EAAhBF,EAAK1B,MAAM,GACf6B,EAAmB,EAAfX,EAAIlB,MAAM,GACdQ,EAAIoB,EAAIC,EAERC,EAAS,SAAJtB,EACLuB,EAASvB,EAAI,SAAa,CAC9BmB,GAAI3B,MAAM,GAAK8B,CAEf,KAAK,GAAIE,GAAI,EAAGA,EAAIvB,EAAKuB,IAAK,CAM5B,IAAK,GAHDC,GAASF,IAAU,GACnBG,EAAgB,SAARH,EACRI,EAAOzB,KAAKC,IAAIqB,EAAGd,EAAIjB,OAAS,GAC3BmC,EAAI1B,KAAK2B,IAAI,EAAGL,EAAIN,EAAKzB,OAAS,GAAImC,GAAKD,EAAMC,IAAK,CAC7D,GAAIxB,GAAKoB,EAAII,EAAK,CAClBR,GAAoB,EAAhBF,EAAK1B,MAAMY,GACfiB,EAAmB,EAAfX,EAAIlB,MAAMoC,GACd5B,EAAIoB,EAAIC,EAAIK,EACZD,GAAWzB,EAAI,SAAa,EAC5B0B,EAAY,SAAJ1B,EAEVmB,EAAI3B,MAAMgC,GAAa,EAARE,EACfH,EAAiB,EAATE,EAQV,MANc,KAAVF,EACFJ,EAAI3B,MAAMgC,GAAa,EAARD,EAEfJ,EAAI1B,SAGC0B,EAAIW,QAwkBb,QAASC,UAAUb,EAAMR,EAAKS,GAC5BA,EAAI5B,SAAWmB,EAAInB,SAAW2B,EAAK3B,SACnC4B,EAAI1B,OAASyB,EAAKzB,OAASiB,EAAIjB,MAI/B,KAAK,GAFD8B,GAAQ,EACRS,EAAU,EACLR,EAAI,EAAGA,EAAIL,EAAI1B,OAAS,EAAG+B,IAAK,CAGvC,GAAIC,GAASO,CACbA,GAAU,CAGV,KAAK,GAFDN,GAAgB,SAARH,EACRI,EAAOzB,KAAKC,IAAIqB,EAAGd,EAAIjB,OAAS,GAC3BmC,EAAI1B,KAAK2B,IAAI,EAAGL,EAAIN,EAAKzB,OAAS,GAAImC,GAAKD,EAAMC,IAAK,CAC7D,GAAIxB,GAAIoB,EAAII,EACRR,EAAoB,EAAhBF,EAAK1B,MAAMY,GACfiB,EAAmB,EAAfX,EAAIlB,MAAMoC,GACd5B,EAAIoB,EAAIC,EAERC,EAAS,SAAJtB,CACTyB,GAAUA,GAAWzB,EAAI,SAAa,GAAM,EAC5CsB,EAAMA,EAAKI,EAAS,EACpBA,EAAa,SAALJ,EACRG,EAAUA,GAAUH,IAAO,IAAO,EAElCU,GAAWP,IAAW,GACtBA,GAAU,SAEZN,EAAI3B,MAAMgC,GAAKE,EACfH,EAAQE,EACRA,EAASO,EAQX,MANc,KAAVT,EACFJ,EAAI3B,MAAMgC,GAAKD,EAEfJ,EAAI1B,SAGC0B,EAAIW,QAGb,QAASG,YAAYf,EAAMR,EAAKS,GAC9B,GAAIe,GAAO,GAAIC,KACf,OAAOD,GAAKE,KAAKlB,EAAMR,EAAKS,GAsB9B,QAASgB,MAAME,EAAGC,GAChBhD,KAAK+C,EAAIA,EACT/C,KAAKgD,EAAIA,EA0uCX,QAASC,QAAQC,EAAMC,GAErBnD,KAAKkD,KAAOA,EACZlD,KAAKmD,EAAI,GAAIxD,IAAGwD,EAAG,IACnBnD,KAAKoD,EAAIpD,KAAKmD,EAAE5B,YAChBvB,KAAKkC,EAAI,GAAIvC,IAAG,GAAG0D,OAAOrD,KAAKoD,GAAGE,KAAKtD,KAAKmD,GAE5CnD,KAAKuD,IAAMvD,KAAKwD,OA2ClB,QAASC,QACPR,OAAOS,KACL1D,KACA,OACA,2EA+DJ,QAAS2D,QACPV,OAAOS,KACL1D,KACA,OACA,kEAIJ,QAAS4D,QACPX,OAAOS,KACL1D,KACA,OACA,yDAIJ,QAAS6D,UAEPZ,OAAOS,KACL1D,KACA,QACA,uEA8CJ,QAAS8D,KAAKC,GACZ,GAAiB,gBAANA,GAAgB,CACzB,GAAIC,GAAQrE,GAAGsE,OAAOF,EACtB/D,MAAK+D,EAAIC,EAAMb,EACfnD,KAAKgE,MAAQA,MAEb9E,QAAO6E,EAAEG,IAAI,GAAI,kCACjBlE,KAAK+D,EAAIA,EACT/D,KAAKgE,MAAQ,KAkOjB,QAASG,MAAMJ,GACbD,IAAIJ,KAAK1D,KAAM+D,GAEf/D,KAAKoE,MAAQpE,KAAK+D,EAAExC,YAChBvB,KAAKoE,MAAQ,KAAO,IACtBpE,KAAKoE,OAAS,GAAMpE,KAAKoE,MAAQ,IAGnCpE,KAAKU,EAAI,GAAIf,IAAG,GAAG0D,OAAOrD,KAAKoE,OAC/BpE,KAAKqE,GAAKrE,KAAKsE,KAAKtE,KAAKU,EAAE6D,OAC3BvE,KAAKwE,KAAOxE,KAAKU,EAAE+D,OAAOzE,KAAK+D,GAE/B/D,KAAK0E,KAAO1E,KAAKwE,KAAKtD,IAAIlB,KAAKU,GAAGiE,MAAM,GAAGC,IAAI5E,KAAK+D,GACpD/D,KAAK0E,KAAO1E,KAAK0E,KAAKG,KAAK7E,KAAKU,GAChCV,KAAK0E,KAAO1E,KAAKU,EAAEoE,IAAI9E,KAAK0E,MAjwGR,YAAlB,mBAAOjG,GAAP,YAAAG,EAAOH,IACTA,EAAOC,QAAUiB,GAEjBjB,EAAQiB,GAAKA,GAGfA,GAAGA,GAAKA,GACRA,GAAGoF,SAAW,EAEd,IAAIC,EACJ,KACEA,EAASrG,EAAQ,KAAeqG,OAChC,MAAOC,IAGTtF,GAAGI,KAAO,SAAeqB,GACvB,MAAIA,aAAezB,KAIJ,OAARyB,GAA+B,YAAf,mBAAOA,GAAP,YAAAxC,EAAOwC,KAC5BA,EAAIpC,YAAY+F,WAAapF,GAAGoF,UAAYzD,MAAM4D,QAAQ9D,EAAIlB,QAGlEP,GAAG4C,IAAM,SAAc4C,EAAMC,GAC3B,MAAID,GAAKE,IAAID,GAAS,EAAUD,EACzBC,GAGTzF,GAAGkB,IAAM,SAAcsE,EAAMC,GAC3B,MAAID,GAAKE,IAAID,GAAS,EAAUD,EACzBC,GAGTzF,GAAGV,UAAUoB,MAAQ,SAAeT,EAAQC,EAAMC,GAChD,GAAsB,gBAAXF,GACT,MAAOI,MAAKsF,YAAY1F,EAAQC,EAAMC,EAGxC,IAAsB,YAAlB,mBAAOF,GAAP,YAAAhB,EAAOgB,IACT,MAAOI,MAAKuF,WAAW3F,EAAQC,EAAMC,EAG1B,SAATD,IACFA,EAAO,IAETX,OAAOW,KAAiB,EAAPA,IAAaA,GAAQ,GAAKA,GAAQ,IAEnDD,EAASA,EAAO4F,WAAWC,QAAQ,OAAQ,GAC3C,IAAIjF,GAAQ,CACM,OAAdZ,EAAO,IACTY,IAGW,KAATX,EACFG,KAAK0F,UAAU9F,EAAQY,GAEvBR,KAAK2F,WAAW/F,EAAQC,EAAMW,GAGd,MAAdZ,EAAO,KACTI,KAAKC,SAAW,GAGlBD,KAAKwC,QAEU,OAAX1C,GAEJE,KAAKuF,WAAWvF,KAAK4F,UAAW/F,EAAMC,IAGxCH,GAAGV,UAAUqG,YAAc,SAAsB1F,EAAQC,EAAMC,GACzDF,EAAS,IACXI,KAAKC,SAAW,EAChBL,GAAUA,GAERA,EAAS,UACXI,KAAKE,OAAmB,SAATN,GACfI,KAAKG,OAAS,GACLP,EAAS,kBAClBI,KAAKE,OACM,SAATN,EACCA,EAAS,SAAa,UAEzBI,KAAKG,OAAS,IAEdjB,OAAOU,EAAS,kBAChBI,KAAKE,OACM,SAATN,EACCA,EAAS,SAAa,SACvB,GAEFI,KAAKG,OAAS,GAGD,OAAXL,GAGJE,KAAKuF,WAAWvF,KAAK4F,UAAW/F,EAAMC,IAGxCH,GAAGV,UAAUsG,WAAa,SAAqB3F,EAAQC,EAAMC,GAG3D,GADAZ,OAAgC,gBAAlBU,GAAOO,QACjBP,EAAOO,QAAU,EAGnB,MAFAH,MAAKE,OAAU,GACfF,KAAKG,OAAS,EACPH,IAGTA,MAAKG,OAASS,KAAKiF,KAAKjG,EAAOO,OAAS,GACxCH,KAAKE,MAAQ,GAAIoB,OAAMtB,KAAKG,OAC5B,KAAK,GAAIW,GAAI,EAAGA,EAAId,KAAKG,OAAQW,IAC/Bd,KAAKE,MAAMY,GAAK,CAGlB,IAAIwB,GAAGjB,EACHI,EAAM,CACV,IAAe,OAAX3B,EACF,IAAKgB,EAAIlB,EAAOO,OAAS,EAAGmC,EAAI,EAAGxB,GAAK,EAAGA,GAAK,EAC9CO,EAAIzB,EAAOkB,GAAMlB,EAAOkB,EAAI,IAAM,EAAMlB,EAAOkB,EAAI,IAAM,GACzDd,KAAKE,MAAMoC,IAAOjB,GAAKI,EAAO,SAC9BzB,KAAKE,MAAMoC,EAAI,GAAMjB,IAAO,GAAKI,EAAQ,SACzCA,GAAO,GACHA,GAAO,KACTA,GAAO,GACPa,SAGC,IAAe,OAAXxC,EACT,IAAKgB,EAAI,EAAGwB,EAAI,EAAGxB,EAAIlB,EAAOO,OAAQW,GAAK,EACzCO,EAAIzB,EAAOkB,GAAMlB,EAAOkB,EAAI,IAAM,EAAMlB,EAAOkB,EAAI,IAAM,GACzDd,KAAKE,MAAMoC,IAAOjB,GAAKI,EAAO,SAC9BzB,KAAKE,MAAMoC,EAAI,GAAMjB,IAAO,GAAKI,EAAQ,SACzCA,GAAO,GACHA,GAAO,KACTA,GAAO,GACPa,IAIN,OAAOtC,MAAKwC,SA2Bd7C,GAAGV,UAAUyG,UAAY,SAAoB9F,EAAQY,GAEnDR,KAAKG,OAASS,KAAKiF,MAAMjG,EAAOO,OAASK,GAAS,GAClDR,KAAKE,MAAQ,GAAIoB,OAAMtB,KAAKG,OAC5B,KAAK,GAAIW,GAAI,EAAGA,EAAId,KAAKG,OAAQW,IAC/Bd,KAAKE,MAAMY,GAAK,CAGlB,IAAIwB,GAAGjB,EAEHI,EAAM,CACV,KAAKX,EAAIlB,EAAOO,OAAS,EAAGmC,EAAI,EAAGxB,GAAKN,EAAOM,GAAK,EAClDO,EAAIf,SAASV,EAAQkB,EAAGA,EAAI,GAC5Bd,KAAKE,MAAMoC,IAAOjB,GAAKI,EAAO,SAE9BzB,KAAKE,MAAMoC,EAAI,IAAMjB,IAAO,GAAKI,EAAO,QACxCA,GAAO,GACHA,GAAO,KACTA,GAAO,GACPa,IAGAxB,GAAI,IAAMN,IACZa,EAAIf,SAASV,EAAQY,EAAOM,EAAI,GAChCd,KAAKE,MAAMoC,IAAOjB,GAAKI,EAAO,SAC9BzB,KAAKE,MAAMoC,EAAI,IAAMjB,IAAO,GAAKI,EAAO,SAE1CzB,KAAKwC,SA2BP7C,GAAGV,UAAU0G,WAAa,SAAqB/F,EAAQC,EAAMW,GAE3DR,KAAKE,OAAU,GACfF,KAAKG,OAAS,CAGd,KAAK,GAAI2F,GAAU,EAAGC,EAAU,EAAGA,GAAW,SAAWA,GAAWlG,EAClEiG,GAEFA,KACAC,EAAWA,EAAUlG,EAAQ,CAO7B,KAAK,GALDmG,GAAQpG,EAAOO,OAASK,EACxByF,EAAMD,EAAQF,EACdrF,EAAMG,KAAKC,IAAImF,EAAOA,EAAQC,GAAOzF,EAErC0F,EAAO,EACFpF,EAAIN,EAAOM,EAAIL,EAAKK,GAAKgF,EAChCI,EAAOjF,UAAUrB,EAAQkB,EAAGA,EAAIgF,EAASjG,GAEzCG,KAAKmG,MAAMJ,GACP/F,KAAKE,MAAM,GAAKgG,EAAO,SACzBlG,KAAKE,MAAM,IAAMgG,EAEjBlG,KAAKoG,OAAOF,EAIhB,IAAY,IAARD,EAAW,CACb,GAAII,GAAM,CAGV,KAFAH,EAAOjF,UAAUrB,EAAQkB,EAAGlB,EAAOO,OAAQN,GAEtCiB,EAAI,EAAGA,EAAImF,EAAKnF,IACnBuF,GAAOxG,CAGTG,MAAKmG,MAAME,GACPrG,KAAKE,MAAM,GAAKgG,EAAO,SACzBlG,KAAKE,MAAM,IAAMgG,EAEjBlG,KAAKoG,OAAOF,KAKlBvG,GAAGV,UAAUqH,KAAO,SAAeC,GACjCA,EAAKrG,MAAQ,GAAIoB,OAAMtB,KAAKG,OAC5B,KAAK,GAAIW,GAAI,EAAGA,EAAId,KAAKG,OAAQW,IAC/ByF,EAAKrG,MAAMY,GAAKd,KAAKE,MAAMY,EAE7ByF,GAAKpG,OAASH,KAAKG,OACnBoG,EAAKtG,SAAWD,KAAKC,SACrBsG,EAAKnG,IAAMJ,KAAKI,KAGlBT,GAAGV,UAAUuH,MAAQ,WACnB,GAAI9F,GAAI,GAAIf,IAAG,KAEf,OADAK,MAAKsG,KAAK5F,GACHA,GAGTf,GAAGV,UAAUwH,QAAU,SAAkBC,GACvC,KAAO1G,KAAKG,OAASuG,GACnB1G,KAAKE,MAAMF,KAAKG,UAAY,CAE9B,OAAOH,OAITL,GAAGV,UAAUuD,MAAQ,WACnB,KAAOxC,KAAKG,OAAS,GAAqC,IAAhCH,KAAKE,MAAMF,KAAKG,OAAS,IACjDH,KAAKG,QAEP,OAAOH,MAAK2G,aAGdhH,GAAGV,UAAU0H,UAAY,WAKvB,MAHoB,KAAhB3G,KAAKG,QAAkC,IAAlBH,KAAKE,MAAM,KAClCF,KAAKC,SAAW,GAEXD,MAGTL,GAAGV,UAAU2H,QAAU,WACrB,OAAQ5G,KAAKI,IAAM,UAAY,SAAWJ,KAAKwF,SAAS,IAAM,IAiChE,IAAIqB,IACF,GACA,IACA,KACA,MACA,OACA,QACA,SACA,UACA,WACA,YACA,aACA,cACA,eACA,gBACA,iBACA,kBACA,mBACA,oBACA,qBACA,sBACA,uBACA,wBACA,yBACA,0BACA,2BACA,6BAGEC,GACF,EAAG,EACH,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EACvB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAClB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAClB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAClB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAGhBC,GACF,EAAG,EACH,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAC5D,SAAU,IAAU,SAAU,SAAU,SAAU,QAAS,SAC3D,SAAU,SAAU,SAAU,SAAU,KAAU,QAAS,QAC3D,QAAS,QAAS,QAAS,SAAU,SAAU,SAAU,SACzD,MAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAG9DpH,IAAGV,UAAUuG,SAAW,SAAmB3F,EAAMmH,GAC/CnH,EAAOA,GAAQ,GACfmH,EAAoB,EAAVA,GAAe,CAEzB,IAAInF,EACJ,IAAa,KAAThC,GAAwB,QAATA,EAAgB,CACjCgC,EAAM,EAGN,KAAK,GAFDJ,GAAM,EACNQ,EAAQ,EACHnB,EAAI,EAAGA,EAAId,KAAKG,OAAQW,IAAK,CACpC,GAAIO,GAAIrB,KAAKE,MAAMY,GACfoF,GAA+B,UAArB7E,GAAKI,EAAOQ,IAAmBuD,SAAS,GACtDvD,GAASZ,IAAO,GAAKI,EAAQ,SAE3BI,EADY,IAAVI,GAAenB,IAAMd,KAAKG,OAAS,EAC/B0G,EAAM,EAAIX,EAAK/F,QAAU+F,EAAOrE,EAEhCqE,EAAOrE,EAEfJ,GAAO,EACHA,GAAO,KACTA,GAAO,GACPX,KAMJ,IAHc,IAAVmB,IACFJ,EAAMI,EAAMuD,SAAS,IAAM3D,GAEtBA,EAAI1B,OAAS6G,IAAY,GAC9BnF,EAAM,IAAMA,CAKd,OAHsB,KAAlB7B,KAAKC,WACP4B,EAAM,IAAMA,GAEPA,EAGT,GAAIhC,KAAiB,EAAPA,IAAaA,GAAQ,GAAKA,GAAQ,GAAI,CAElD,GAAIoH,GAAYH,EAAWjH,GAEvBqH,EAAYH,EAAWlH,EAC3BgC,GAAM,EACN,IAAId,GAAIf,KAAKwG,OAEb,KADAzF,EAAEd,SAAW,GACLc,EAAEoG,UAAU,CAClB,GAAIzG,GAAIK,EAAEqG,KAAKF,GAAW1B,SAAS3F,EACnCkB,GAAIA,EAAEsG,MAAMH,GAKVrF,EAHGd,EAAEoG,SAGCzG,EAAImB,EAFJgF,EAAMI,EAAYvG,EAAEP,QAAUO,EAAImB,EAQ5C,IAHI7B,KAAKmH,WACPtF,EAAM,IAAMA,GAEPA,EAAI1B,OAAS6G,IAAY,GAC9BnF,EAAM,IAAMA,CAKd,OAHsB,KAAlB7B,KAAKC,WACP4B,EAAM,IAAMA,GAEPA,EAGT3C,QAAO,EAAO,oCAGhBS,GAAGV,UAAUqI,SAAW,WACtB,GAAIC,GAAMvH,KAAKE,MAAM,EASrB,OARoB,KAAhBF,KAAKG,OACPoH,GAAuB,SAAhBvH,KAAKE,MAAM,GACO,IAAhBF,KAAKG,QAAkC,IAAlBH,KAAKE,MAAM,GAEzCqH,GAAO,iBAAoC,SAAhBvH,KAAKE,MAAM,GAC7BF,KAAKG,OAAS,GACvBjB,QAAO,EAAO,8CAEU,IAAlBc,KAAKC,UAAmBsH,EAAMA,GAGxC5H,GAAGV,UAAUuI,OAAS,WACpB,MAAOxH,MAAKwF,SAAS,KAGvB7F,GAAGV,UAAUwI,SAAW,SAAmB3H,EAAQK,GAEjD,MADAjB,QAAyB,mBAAX8F,IACPhF,KAAK0H,YAAY1C,EAAQlF,EAAQK,IAG1CR,GAAGV,UAAU2G,QAAU,SAAkB9F,EAAQK,GAC/C,MAAOH,MAAK0H,YAAYpG,MAAOxB,EAAQK,IAGzCR,GAAGV,UAAUyI,YAAc,SAAsBC,EAAW7H,EAAQK,GAClE,GAAIyH,GAAa5H,KAAK4H,aAClBC,EAAY1H,GAAUS,KAAK2B,IAAI,EAAGqF,EACtC1I,QAAO0I,GAAcC,EAAW,yCAChC3I,OAAO2I,EAAY,EAAG,+BAEtB7H,KAAKwC,OACL,IAGIT,GAAGjB,EAHHgH,EAA0B,OAAXhI,EACfiI,EAAM,GAAIJ,GAAUE,GAGpBG,EAAIhI,KAAKwG,OACb,IAAKsB,EAYE,CACL,IAAKhH,EAAI,GAAIkH,EAAEb,SAAUrG,IACvBiB,EAAIiG,EAAEC,MAAM,KACZD,EAAEE,OAAO,GAETH,EAAIjH,GAAKiB,CAGX,MAAOjB,EAAI+G,EAAW/G,IACpBiH,EAAIjH,GAAK,MArBM,CAEjB,IAAKA,EAAI,EAAGA,EAAI+G,EAAYD,EAAY9G,IACtCiH,EAAIjH,GAAK,CAGX,KAAKA,EAAI,GAAIkH,EAAEb,SAAUrG,IACvBiB,EAAIiG,EAAEC,MAAM,KACZD,EAAEE,OAAO,GAETH,EAAIF,EAAY/G,EAAI,GAAKiB,EAe7B,MAAOgG,IAGLnH,KAAKuH,MACPxI,GAAGV,UAAUmJ,WAAa,SAAqB/G,GAC7C,MAAO,IAAKT,KAAKuH,MAAM9G,IAGzB1B,GAAGV,UAAUmJ,WAAa,SAAqB/G,GAC7C,GAAIgH,GAAIhH,EACJX,EAAI,CAiBR,OAhBI2H,IAAK,OACP3H,GAAK,GACL2H,KAAO,IAELA,GAAK,KACP3H,GAAK,EACL2H,KAAO,GAELA,GAAK,IACP3H,GAAK,EACL2H,KAAO,GAELA,GAAK,IACP3H,GAAK,EACL2H,KAAO,GAEF3H,EAAI2H,GAIf1I,GAAGV,UAAUqJ,UAAY,SAAoBjH,GAE3C,GAAU,IAANA,EAAS,MAAO,GAEpB,IAAIgH,GAAIhH,EACJX,EAAI,CAoBR,OAnBqB,MAAZ,KAAJ2H,KACH3H,GAAK,GACL2H,KAAO,IAEU,KAAV,IAAJA,KACH3H,GAAK,EACL2H,KAAO,GAES,KAAT,GAAJA,KACH3H,GAAK,EACL2H,KAAO,GAES,KAAT,EAAJA,KACH3H,GAAK,EACL2H,KAAO,GAES,KAAT,EAAJA,IACH3H,IAEKA,GAITf,GAAGV,UAAUsC,UAAY,WACvB,GAAIF,GAAIrB,KAAKE,MAAMF,KAAKG,OAAS,GAC7BoI,EAAKvI,KAAKoI,WAAW/G,EACzB,OAA2B,KAAnBrB,KAAKG,OAAS,GAAUoI,GAiBlC5I,GAAGV,UAAUuJ,SAAW,WACtB,GAAIxI,KAAKmH,SAAU,MAAO,EAG1B,KAAK,GADDzG,GAAI,EACCI,EAAI,EAAGA,EAAId,KAAKG,OAAQW,IAAK,CACpC,GAAIiB,GAAI/B,KAAKsI,UAAUtI,KAAKE,MAAMY,GAElC,IADAJ,GAAKqB,EACK,KAANA,EAAU,MAEhB,MAAOrB,IAGTf,GAAGV,UAAU2I,WAAa,WACxB,MAAOhH,MAAKiF,KAAK7F,KAAKuB,YAAc,IAGtC5B,GAAGV,UAAUwJ,OAAS,SAAiBC,GACrC,MAAsB,KAAlB1I,KAAKC,SACAD,KAAK2I,MAAMC,MAAMF,GAAOG,MAAM,GAEhC7I,KAAKwG,SAGd7G,GAAGV,UAAU6J,SAAW,SAAmBJ,GACzC,MAAI1I,MAAK+I,MAAML,EAAQ,GACd1I,KAAKgJ,KAAKN,GAAOG,MAAM,GAAGI,OAE5BjJ,KAAKwG,SAGd7G,GAAGV,UAAUiK,MAAQ,WACnB,MAAyB,KAAlBlJ,KAAKC,UAIdN,GAAGV,UAAUkK,IAAM,WACjB,MAAOnJ,MAAKwG,QAAQyC,QAGtBtJ,GAAGV,UAAUgK,KAAO,WAKlB,MAJKjJ,MAAKmH,WACRnH,KAAKC,UAAY,GAGZD,MAITL,GAAGV,UAAUmK,KAAO,SAAehI,GACjC,KAAOpB,KAAKG,OAASiB,EAAIjB,QACvBH,KAAKE,MAAMF,KAAKG,UAAY,CAG9B,KAAK,GAAIW,GAAI,EAAGA,EAAIM,EAAIjB,OAAQW,IAC9Bd,KAAKE,MAAMY,GAAKd,KAAKE,MAAMY,GAAKM,EAAIlB,MAAMY,EAG5C,OAAOd,MAAKwC,SAGd7C,GAAGV,UAAUoK,IAAM,SAAcjI,GAE/B,MADAlC,QAA0C,KAAlCc,KAAKC,SAAWmB,EAAInB,WACrBD,KAAKoJ,KAAKhI,IAInBzB,GAAGV,UAAUqK,GAAK,SAAalI,GAC7B,MAAIpB,MAAKG,OAASiB,EAAIjB,OAAeH,KAAKwG,QAAQ6C,IAAIjI,GAC/CA,EAAIoF,QAAQ6C,IAAIrJ,OAGzBL,GAAGV,UAAUsK,IAAM,SAAcnI,GAC/B,MAAIpB,MAAKG,OAASiB,EAAIjB,OAAeH,KAAKwG,QAAQ4C,KAAKhI,GAChDA,EAAIoF,QAAQ4C,KAAKpJ,OAI1BL,GAAGV,UAAUuK,MAAQ,SAAgBpI,GAEnC,GAAIW,EAEFA,GADE/B,KAAKG,OAASiB,EAAIjB,OAChBiB,EAEApB,IAGN,KAAK,GAAIc,GAAI,EAAGA,EAAIiB,EAAE5B,OAAQW,IAC5Bd,KAAKE,MAAMY,GAAKd,KAAKE,MAAMY,GAAKM,EAAIlB,MAAMY,EAK5C,OAFAd,MAAKG,OAAS4B,EAAE5B,OAETH,KAAKwC,SAGd7C,GAAGV,UAAUwK,KAAO,SAAerI,GAEjC,MADAlC,QAA0C,KAAlCc,KAAKC,SAAWmB,EAAInB,WACrBD,KAAKwJ,MAAMpI,IAIpBzB,GAAGV,UAAUyK,IAAM,SAActI,GAC/B,MAAIpB,MAAKG,OAASiB,EAAIjB,OAAeH,KAAKwG,QAAQiD,KAAKrI,GAChDA,EAAIoF,QAAQiD,KAAKzJ,OAG1BL,GAAGV,UAAU0K,KAAO,SAAevI,GACjC,MAAIpB,MAAKG,OAASiB,EAAIjB,OAAeH,KAAKwG,QAAQgD,MAAMpI,GACjDA,EAAIoF,QAAQgD,MAAMxJ,OAI3BL,GAAGV,UAAU2K,MAAQ,SAAgBxI,GAEnC,GAAIU,GACAC,CACA/B,MAAKG,OAASiB,EAAIjB,QACpB2B,EAAI9B,KACJ+B,EAAIX,IAEJU,EAAIV,EACJW,EAAI/B,KAGN,KAAK,GAAIc,GAAI,EAAGA,EAAIiB,EAAE5B,OAAQW,IAC5Bd,KAAKE,MAAMY,GAAKgB,EAAE5B,MAAMY,GAAKiB,EAAE7B,MAAMY,EAGvC,IAAId,OAAS8B,EACX,KAAOhB,EAAIgB,EAAE3B,OAAQW,IACnBd,KAAKE,MAAMY,GAAKgB,EAAE5B,MAAMY,EAM5B,OAFAd,MAAKG,OAAS2B,EAAE3B,OAETH,KAAKwC,SAGd7C,GAAGV,UAAU4K,KAAO,SAAezI,GAEjC,MADAlC,QAA0C,KAAlCc,KAAKC,SAAWmB,EAAInB,WACrBD,KAAK4J,MAAMxI,IAIpBzB,GAAGV,UAAU6K,IAAM,SAAc1I,GAC/B,MAAIpB,MAAKG,OAASiB,EAAIjB,OAAeH,KAAKwG,QAAQqD,KAAKzI,GAChDA,EAAIoF,QAAQqD,KAAK7J,OAG1BL,GAAGV,UAAU8K,KAAO,SAAe3I,GACjC,MAAIpB,MAAKG,OAASiB,EAAIjB,OAAeH,KAAKwG,QAAQoD,MAAMxI,GACjDA,EAAIoF,QAAQoD,MAAM5J,OAI3BL,GAAGV,UAAU2J,MAAQ,SAAgBF,GACnCxJ,OAAwB,gBAAVwJ,IAAsBA,GAAS,EAE7C,IAAIsB,GAAsC,EAAxBpJ,KAAKiF,KAAK6C,EAAQ,IAChCuB,EAAWvB,EAAQ,EAGvB1I,MAAKyG,QAAQuD,GAETC,EAAW,GACbD,GAIF,KAAK,GAAIlJ,GAAI,EAAGA,EAAIkJ,EAAalJ,IAC/Bd,KAAKE,MAAMY,GAAsB,UAAhBd,KAAKE,MAAMY,EAS9B,OALImJ,GAAW,IACbjK,KAAKE,MAAMY,IAAMd,KAAKE,MAAMY,GAAM,UAAc,GAAKmJ,GAIhDjK,KAAKwC,SAGd7C,GAAGV,UAAU+J,KAAO,SAAeN,GACjC,MAAO1I,MAAKwG,QAAQoC,MAAMF,IAI5B/I,GAAGV,UAAUiL,KAAO,SAAe1I,EAAKrC,GACtCD,OAAsB,gBAARsC,IAAoBA,GAAO,EAEzC,IAAIC,GAAOD,EAAM,GAAM,EACnBE,EAAOF,EAAM,EAUjB,OARAxB,MAAKyG,QAAQhF,EAAM,GAEftC,EACFa,KAAKE,MAAMuB,GAAOzB,KAAKE,MAAMuB,GAAQ,GAAKC,EAE1C1B,KAAKE,MAAMuB,GAAOzB,KAAKE,MAAMuB,KAAS,GAAKC,GAGtC1B,KAAKwC,SAId7C,GAAGV,UAAUkL,KAAO,SAAe/I,GACjC,GAAIV,EAGJ,IAAsB,IAAlBV,KAAKC,UAAmC,IAAjBmB,EAAInB,SAI7B,MAHAD,MAAKC,SAAW,EAChBS,EAAIV,KAAKsD,KAAKlC,GACdpB,KAAKC,UAAY,EACVD,KAAK2G,WAGP,IAAsB,IAAlB3G,KAAKC,UAAmC,IAAjBmB,EAAInB,SAIpC,MAHAmB,GAAInB,SAAW,EACfS,EAAIV,KAAKsD,KAAKlC,GACdA,EAAInB,SAAW,EACRS,EAAEiG,WAIX,IAAI7E,GAAGC,CACH/B,MAAKG,OAASiB,EAAIjB,QACpB2B,EAAI9B,KACJ+B,EAAIX,IAEJU,EAAIV,EACJW,EAAI/B,KAIN,KAAK,GADDiC,GAAQ,EACHnB,EAAI,EAAGA,EAAIiB,EAAE5B,OAAQW,IAC5BJ,GAAkB,EAAboB,EAAE5B,MAAMY,KAAwB,EAAbiB,EAAE7B,MAAMY,IAAUmB,EAC1CjC,KAAKE,MAAMY,GAAS,SAAJJ,EAChBuB,EAAQvB,IAAM,EAEhB,MAAiB,IAAVuB,GAAenB,EAAIgB,EAAE3B,OAAQW,IAClCJ,GAAkB,EAAboB,EAAE5B,MAAMY,IAAUmB,EACvBjC,KAAKE,MAAMY,GAAS,SAAJJ,EAChBuB,EAAQvB,IAAM,EAIhB,IADAV,KAAKG,OAAS2B,EAAE3B,OACF,IAAV8B,EACFjC,KAAKE,MAAMF,KAAKG,QAAU8B,EAC1BjC,KAAKG,aAEA,IAAI2B,IAAM9B,KACf,KAAOc,EAAIgB,EAAE3B,OAAQW,IACnBd,KAAKE,MAAMY,GAAKgB,EAAE5B,MAAMY,EAI5B,OAAOd,OAITL,GAAGV,UAAUmL,IAAM,SAAchJ,GAC/B,GAAI2G,EACJ,OAAqB,KAAjB3G,EAAInB,UAAoC,IAAlBD,KAAKC,UAC7BmB,EAAInB,SAAW,EACf8H,EAAM/H,KAAK8E,IAAI1D,GACfA,EAAInB,UAAY,EACT8H,GACmB,IAAjB3G,EAAInB,UAAoC,IAAlBD,KAAKC,UACpCD,KAAKC,SAAW,EAChB8H,EAAM3G,EAAI0D,IAAI9E,MACdA,KAAKC,SAAW,EACT8H,GAGL/H,KAAKG,OAASiB,EAAIjB,OAAeH,KAAKwG,QAAQ2D,KAAK/I,GAEhDA,EAAIoF,QAAQ2D,KAAKnK,OAI1BL,GAAGV,UAAUqE,KAAO,SAAelC,GAEjC,GAAqB,IAAjBA,EAAInB,SAAgB,CACtBmB,EAAInB,SAAW,CACf,IAAIS,GAAIV,KAAKmK,KAAK/I,EAElB,OADAA,GAAInB,SAAW,EACRS,EAAEiG,YAGJ,GAAsB,IAAlB3G,KAAKC,SAId,MAHAD,MAAKC,SAAW,EAChBD,KAAKmK,KAAK/I,GACVpB,KAAKC,SAAW,EACTD,KAAK2G,WAId,IAAItB,GAAMrF,KAAKqF,IAAIjE,EAGnB,IAAY,IAARiE,EAIF,MAHArF,MAAKC,SAAW,EAChBD,KAAKG,OAAS,EACdH,KAAKE,MAAM,GAAK,EACTF,IAIT,IAAI8B,GAAGC,CACHsD,GAAM,GACRvD,EAAI9B,KACJ+B,EAAIX,IAEJU,EAAIV,EACJW,EAAI/B,KAIN,KAAK,GADDiC,GAAQ,EACHnB,EAAI,EAAGA,EAAIiB,EAAE5B,OAAQW,IAC5BJ,GAAkB,EAAboB,EAAE5B,MAAMY,KAAwB,EAAbiB,EAAE7B,MAAMY,IAAUmB,EAC1CA,EAAQvB,GAAK,GACbV,KAAKE,MAAMY,GAAS,SAAJJ,CAElB,MAAiB,IAAVuB,GAAenB,EAAIgB,EAAE3B,OAAQW,IAClCJ,GAAkB,EAAboB,EAAE5B,MAAMY,IAAUmB,EACvBA,EAAQvB,GAAK,GACbV,KAAKE,MAAMY,GAAS,SAAJJ,CAIlB,IAAc,IAAVuB,GAAenB,EAAIgB,EAAE3B,QAAU2B,IAAM9B,KACvC,KAAOc,EAAIgB,EAAE3B,OAAQW,IACnBd,KAAKE,MAAMY,GAAKgB,EAAE5B,MAAMY,EAU5B,OANAd,MAAKG,OAASS,KAAK2B,IAAIvC,KAAKG,OAAQW,GAEhCgB,IAAM9B,OACRA,KAAKC,SAAW,GAGXD,KAAKwC,SAId7C,GAAGV,UAAU6F,IAAM,SAAc1D,GAC/B,MAAOpB,MAAKwG,QAAQlD,KAAKlC,GA+C3B,IAAIiJ,GAAc,SAAsBzI,EAAMR,EAAKS,GACjD,GAIIG,GACAsI,EACA/B,EANAzG,EAAIF,EAAK1B,MACT6B,EAAIX,EAAIlB,MACRqK,EAAI1I,EAAI3B,MACRa,EAAI,EAIJyJ,EAAY,EAAP1I,EAAE,GACP2I,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAP7I,EAAE,GACP8I,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPhJ,EAAE,GACPiJ,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPnJ,EAAE,GACPoJ,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPtJ,EAAE,GACPuJ,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPzJ,EAAE,GACP0J,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAP5J,EAAE,GACP6J,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAP/J,EAAE,GACPgK,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPlK,EAAE,GACPmK,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPrK,EAAE,GACPsK,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPvK,EAAE,GACPwK,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAP1K,EAAE,GACP2K,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAP7K,EAAE,GACP8K,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPhL,EAAE,GACPiL,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPnL,EAAE,GACPoL,EAAW,KAALD,EACNE,GAAMF,IAAO,GACbG,GAAY,EAAPtL,EAAE,GACPuL,GAAW,KAALD,GACNE,GAAMF,KAAO,GACbG,GAAY,EAAPzL,EAAE,GACP0L,GAAW,KAALD,GACNE,GAAMF,KAAO,GACbG,GAAY,EAAP5L,EAAE,GACP6L,GAAW,KAALD,GACNE,GAAMF,KAAO,GACbG,GAAY,EAAP/L,EAAE,GACPgM,GAAW,KAALD,GACNE,GAAMF,KAAO,GACbG,GAAY,EAAPlM,EAAE,GACPmM,GAAW,KAALD,GACNE,GAAMF,KAAO,EAEjBpM,GAAI5B,SAAW2B,EAAK3B,SAAWmB,EAAInB,SACnC4B,EAAI1B,OAAS,GAEb6B,EAAKpB,KAAKwN,KAAK3D,EAAK8B,GACpBjC,EAAM1J,KAAKwN,KAAK3D,EAAK+B,GACrBlC,EAAOA,EAAM1J,KAAKwN,KAAK1D,EAAK6B,GAAQ,EACpChE,EAAK3H,KAAKwN,KAAK1D,EAAK8B,EACpB,IAAI6B,KAAQtN,EAAIiB,EAAM,KAAa,KAANsI,IAAiB,IAAO,CACrDvJ,IAAOwH,GAAM+B,IAAQ,IAAO,IAAM+D,KAAO,IAAO,EAChDA,IAAM,SAENrM,EAAKpB,KAAKwN,KAAKxD,EAAK2B,GACpBjC,EAAM1J,KAAKwN,KAAKxD,EAAK4B,GACrBlC,EAAOA,EAAM1J,KAAKwN,KAAKvD,EAAK0B,GAAQ,EACpChE,EAAK3H,KAAKwN,KAAKvD,EAAK2B,GACpBxK,EAAMA,EAAKpB,KAAKwN,KAAK3D,EAAKiC,GAAQ,EAClCpC,EAAOA,EAAM1J,KAAKwN,KAAK3D,EAAKkC,GAAQ,EACpCrC,EAAOA,EAAM1J,KAAKwN,KAAK1D,EAAKgC,GAAQ,EACpCnE,EAAMA,EAAK3H,KAAKwN,KAAK1D,EAAKiC,GAAQ,CAClC,IAAI2B,KAAQvN,EAAIiB,EAAM,KAAa,KAANsI,IAAiB,IAAO,CACrDvJ,IAAOwH,GAAM+B,IAAQ,IAAO,IAAMgE,KAAO,IAAO,EAChDA,IAAM,SAENtM,EAAKpB,KAAKwN,KAAKrD,EAAKwB,GACpBjC,EAAM1J,KAAKwN,KAAKrD,EAAKyB,GACrBlC,EAAOA,EAAM1J,KAAKwN,KAAKpD,EAAKuB,GAAQ,EACpChE,EAAK3H,KAAKwN,KAAKpD,EAAKwB,GACpBxK,EAAMA,EAAKpB,KAAKwN,KAAKxD,EAAK8B,GAAQ,EAClCpC,EAAOA,EAAM1J,KAAKwN,KAAKxD,EAAK+B,GAAQ,EACpCrC,EAAOA,EAAM1J,KAAKwN,KAAKvD,EAAK6B,GAAQ,EACpCnE,EAAMA,EAAK3H,KAAKwN,KAAKvD,EAAK8B,GAAQ,EAClC3K,EAAMA,EAAKpB,KAAKwN,KAAK3D,EAAKoC,GAAQ,EAClCvC,EAAOA,EAAM1J,KAAKwN,KAAK3D,EAAKqC,GAAQ,EACpCxC,EAAOA,EAAM1J,KAAKwN,KAAK1D,EAAKmC,GAAQ,EACpCtE,EAAMA,EAAK3H,KAAKwN,KAAK1D,EAAKoC,GAAQ,CAClC,IAAIyB,KAAQxN,EAAIiB,EAAM,KAAa,KAANsI,IAAiB,IAAO,CACrDvJ,IAAOwH,GAAM+B,IAAQ,IAAO,IAAMiE,KAAO,IAAO,EAChDA,IAAM,SAENvM,EAAKpB,KAAKwN,KAAKlD,EAAKqB,GACpBjC,EAAM1J,KAAKwN,KAAKlD,EAAKsB,GACrBlC,EAAOA,EAAM1J,KAAKwN,KAAKjD,EAAKoB,GAAQ,EACpChE,EAAK3H,KAAKwN,KAAKjD,EAAKqB,GACpBxK,EAAMA,EAAKpB,KAAKwN,KAAKrD,EAAK2B,GAAQ,EAClCpC,EAAOA,EAAM1J,KAAKwN,KAAKrD,EAAK4B,GAAQ,EACpCrC,EAAOA,EAAM1J,KAAKwN,KAAKpD,EAAK0B,GAAQ,EACpCnE,EAAMA,EAAK3H,KAAKwN,KAAKpD,EAAK2B,GAAQ,EAClC3K,EAAMA,EAAKpB,KAAKwN,KAAKxD,EAAKiC,GAAQ,EAClCvC,EAAOA,EAAM1J,KAAKwN,KAAKxD,EAAKkC,GAAQ,EACpCxC,EAAOA,EAAM1J,KAAKwN,KAAKvD,EAAKgC,GAAQ,EACpCtE,EAAMA,EAAK3H,KAAKwN,KAAKvD,EAAKiC,GAAQ,EAClC9K,EAAMA,EAAKpB,KAAKwN,KAAK3D,EAAKuC,GAAQ,EAClC1C,EAAOA,EAAM1J,KAAKwN,KAAK3D,EAAKwC,GAAQ,EACpC3C,EAAOA,EAAM1J,KAAKwN,KAAK1D,EAAKsC,GAAQ,EACpCzE,EAAMA,EAAK3H,KAAKwN,KAAK1D,EAAKuC,GAAQ,CAClC,IAAIuB,KAAQzN,EAAIiB,EAAM,KAAa,KAANsI,IAAiB,IAAO,CACrDvJ,IAAOwH,GAAM+B,IAAQ,IAAO,IAAMkE,KAAO,IAAO,EAChDA,IAAM,SAENxM,EAAKpB,KAAKwN,KAAK/C,EAAKkB,GACpBjC,EAAM1J,KAAKwN,KAAK/C,EAAKmB,GACrBlC,EAAOA,EAAM1J,KAAKwN,KAAK9C,EAAKiB,GAAQ,EACpChE,EAAK3H,KAAKwN,KAAK9C,EAAKkB,GACpBxK,EAAMA,EAAKpB,KAAKwN,KAAKlD,EAAKwB,GAAQ,EAClCpC,EAAOA,EAAM1J,KAAKwN,KAAKlD,EAAKyB,GAAQ,EACpCrC,EAAOA,EAAM1J,KAAKwN,KAAKjD,EAAKuB,GAAQ,EACpCnE,EAAMA,EAAK3H,KAAKwN,KAAKjD,EAAKwB,GAAQ,EAClC3K,EAAMA,EAAKpB,KAAKwN,KAAKrD,EAAK8B,GAAQ,EAClCvC,EAAOA,EAAM1J,KAAKwN,KAAKrD,EAAK+B,GAAQ,EACpCxC,EAAOA,EAAM1J,KAAKwN,KAAKpD,EAAK6B,GAAQ,EACpCtE,EAAMA,EAAK3H,KAAKwN,KAAKpD,EAAK8B,GAAQ,EAClC9K,EAAMA,EAAKpB,KAAKwN,KAAKxD,EAAKoC,GAAQ,EAClC1C,EAAOA,EAAM1J,KAAKwN,KAAKxD,EAAKqC,GAAQ,EACpC3C,EAAOA,EAAM1J,KAAKwN,KAAKvD,EAAKmC,GAAQ,EACpCzE,EAAMA,EAAK3H,KAAKwN,KAAKvD,EAAKoC,GAAQ,EAClCjL,EAAMA,EAAKpB,KAAKwN,KAAK3D,EAAK0C,GAAQ,EAClC7C,EAAOA,EAAM1J,KAAKwN,KAAK3D,EAAK2C,IAAQ,EACpC9C,EAAOA,EAAM1J,KAAKwN,KAAK1D,EAAKyC,GAAQ,EACpC5E,EAAMA,EAAK3H,KAAKwN,KAAK1D,EAAK0C,IAAQ,CAClC,IAAIqB,KAAQ1N,EAAIiB,EAAM,KAAa,KAANsI,IAAiB,IAAO,CACrDvJ,IAAOwH,GAAM+B,IAAQ,IAAO,IAAMmE,KAAO,IAAO,EAChDA,IAAM,SAENzM,EAAKpB,KAAKwN,KAAK5C,EAAKe,GACpBjC,EAAM1J,KAAKwN,KAAK5C,EAAKgB,GACrBlC,EAAOA,EAAM1J,KAAKwN,KAAK3C,EAAKc,GAAQ,EACpChE,EAAK3H,KAAKwN,KAAK3C,EAAKe,GACpBxK,EAAMA,EAAKpB,KAAKwN,KAAK/C,EAAKqB,GAAQ,EAClCpC,EAAOA,EAAM1J,KAAKwN,KAAK/C,EAAKsB,GAAQ,EACpCrC,EAAOA,EAAM1J,KAAKwN,KAAK9C,EAAKoB,GAAQ,EACpCnE,EAAMA,EAAK3H,KAAKwN,KAAK9C,EAAKqB,GAAQ,EAClC3K,EAAMA,EAAKpB,KAAKwN,KAAKlD,EAAK2B,GAAQ,EAClCvC,EAAOA,EAAM1J,KAAKwN,KAAKlD,EAAK4B,GAAQ,EACpCxC,EAAOA,EAAM1J,KAAKwN,KAAKjD,EAAK0B,GAAQ,EACpCtE,EAAMA,EAAK3H,KAAKwN,KAAKjD,EAAK2B,GAAQ,EAClC9K,EAAMA,EAAKpB,KAAKwN,KAAKrD,EAAKiC,GAAQ,EAClC1C,EAAOA,EAAM1J,KAAKwN,KAAKrD,EAAKkC,GAAQ,EACpC3C,EAAOA,EAAM1J,KAAKwN,KAAKpD,EAAKgC,GAAQ,EACpCzE,EAAMA,EAAK3H,KAAKwN,KAAKpD,EAAKiC,GAAQ,EAClCjL,EAAMA,EAAKpB,KAAKwN,KAAKxD,EAAKuC,GAAQ,EAClC7C,EAAOA,EAAM1J,KAAKwN,KAAKxD,EAAKwC,IAAQ,EACpC9C,EAAOA,EAAM1J,KAAKwN,KAAKvD,EAAKsC,GAAQ,EACpC5E,EAAMA,EAAK3H,KAAKwN,KAAKvD,EAAKuC,IAAQ,EAClCpL,EAAMA,EAAKpB,KAAKwN,KAAK3D,EAAK6C,IAAQ,EAClChD,EAAOA,EAAM1J,KAAKwN,KAAK3D,EAAK8C,IAAQ,EACpCjD,EAAOA,EAAM1J,KAAKwN,KAAK1D,EAAK4C,IAAQ,EACpC/E,EAAMA,EAAK3H,KAAKwN,KAAK1D,EAAK6C,IAAQ,CAClC,IAAImB,KAAQ3N,EAAIiB,EAAM,KAAa,KAANsI,IAAiB,IAAO,CACrDvJ,IAAOwH,GAAM+B,IAAQ,IAAO,IAAMoE,KAAO,IAAO,EAChDA,IAAM,SAEN1M,EAAKpB,KAAKwN,KAAKzC,EAAKY,GACpBjC,EAAM1J,KAAKwN,KAAKzC,EAAKa,GACrBlC,EAAOA,EAAM1J,KAAKwN,KAAKxC,EAAKW,GAAQ,EACpChE,EAAK3H,KAAKwN,KAAKxC,EAAKY,GACpBxK,EAAMA,EAAKpB,KAAKwN,KAAK5C,EAAKkB,GAAQ,EAClCpC,EAAOA,EAAM1J,KAAKwN,KAAK5C,EAAKmB,GAAQ,EACpCrC,EAAOA,EAAM1J,KAAKwN,KAAK3C,EAAKiB,GAAQ,EACpCnE,EAAMA,EAAK3H,KAAKwN,KAAK3C,EAAKkB,GAAQ,EAClC3K,EAAMA,EAAKpB,KAAKwN,KAAK/C,EAAKwB,GAAQ,EAClCvC,EAAOA,EAAM1J,KAAKwN,KAAK/C,EAAKyB,GAAQ,EACpCxC,EAAOA,EAAM1J,KAAKwN,KAAK9C,EAAKuB,GAAQ,EACpCtE,EAAMA,EAAK3H,KAAKwN,KAAK9C,EAAKwB,GAAQ,EAClC9K,EAAMA,EAAKpB,KAAKwN,KAAKlD,EAAK8B,GAAQ,EAClC1C,EAAOA,EAAM1J,KAAKwN,KAAKlD,EAAK+B,GAAQ,EACpC3C,EAAOA,EAAM1J,KAAKwN,KAAKjD,EAAK6B,GAAQ,EACpCzE,EAAMA,EAAK3H,KAAKwN,KAAKjD,EAAK8B,GAAQ,EAClCjL,EAAMA,EAAKpB,KAAKwN,KAAKrD,EAAKoC,GAAQ,EAClC7C,EAAOA,EAAM1J,KAAKwN,KAAKrD,EAAKqC,IAAQ,EACpC9C,EAAOA,EAAM1J,KAAKwN,KAAKpD,EAAKmC,GAAQ,EACpC5E,EAAMA,EAAK3H,KAAKwN,KAAKpD,EAAKoC,IAAQ,EAClCpL,EAAMA,EAAKpB,KAAKwN,KAAKxD,EAAK0C,IAAQ,EAClChD,EAAOA,EAAM1J,KAAKwN,KAAKxD,EAAK2C,IAAQ,EACpCjD,EAAOA,EAAM1J,KAAKwN,KAAKvD,EAAKyC,IAAQ,EACpC/E,EAAMA,EAAK3H,KAAKwN,KAAKvD,EAAK0C,IAAQ,EAClCvL,EAAMA,EAAKpB,KAAKwN,KAAK3D,EAAKgD,IAAQ,EAClCnD,EAAOA,EAAM1J,KAAKwN,KAAK3D,EAAKiD,IAAQ,EACpCpD,EAAOA,EAAM1J,KAAKwN,KAAK1D,EAAK+C,IAAQ,EACpClF,EAAMA,EAAK3H,KAAKwN,KAAK1D,EAAKgD,IAAQ,CAClC,IAAIiB,KAAQ5N,EAAIiB,EAAM,KAAa,KAANsI,IAAiB,IAAO,CACrDvJ,IAAOwH,GAAM+B,IAAQ,IAAO,IAAMqE,KAAO,IAAO,EAChDA,IAAM,SAEN3M,EAAKpB,KAAKwN,KAAKtC,EAAKS,GACpBjC,EAAM1J,KAAKwN,KAAKtC,EAAKU,GACrBlC,EAAOA,EAAM1J,KAAKwN,KAAKrC,EAAKQ,GAAQ,EACpChE,EAAK3H,KAAKwN,KAAKrC,EAAKS,GACpBxK,EAAMA,EAAKpB,KAAKwN,KAAKzC,EAAKe,GAAQ,EAClCpC,EAAOA,EAAM1J,KAAKwN,KAAKzC,EAAKgB,GAAQ,EACpCrC,EAAOA,EAAM1J,KAAKwN,KAAKxC,EAAKc,GAAQ,EACpCnE,EAAMA,EAAK3H,KAAKwN,KAAKxC,EAAKe,GAAQ,EAClC3K,EAAMA,EAAKpB,KAAKwN,KAAK5C,EAAKqB,GAAQ,EAClCvC,EAAOA,EAAM1J,KAAKwN,KAAK5C,EAAKsB,GAAQ,EACpCxC,EAAOA,EAAM1J,KAAKwN,KAAK3C,EAAKoB,GAAQ,EACpCtE,EAAMA,EAAK3H,KAAKwN,KAAK3C,EAAKqB,GAAQ,EAClC9K,EAAMA,EAAKpB,KAAKwN,KAAK/C,EAAK2B,GAAQ,EAClC1C,EAAOA,EAAM1J,KAAKwN,KAAK/C,EAAK4B,GAAQ,EACpC3C,EAAOA,EAAM1J,KAAKwN,KAAK9C,EAAK0B,GAAQ,EACpCzE,EAAMA,EAAK3H,KAAKwN,KAAK9C,EAAK2B,GAAQ,EAClCjL,EAAMA,EAAKpB,KAAKwN,KAAKlD,EAAKiC,GAAQ,EAClC7C,EAAOA,EAAM1J,KAAKwN,KAAKlD,EAAKkC,IAAQ,EACpC9C,EAAOA,EAAM1J,KAAKwN,KAAKjD,EAAKgC,GAAQ,EACpC5E,EAAMA,EAAK3H,KAAKwN,KAAKjD,EAAKiC,IAAQ,EAClCpL,EAAMA,EAAKpB,KAAKwN,KAAKrD,EAAKuC,IAAQ,EAClChD,EAAOA,EAAM1J,KAAKwN,KAAKrD,EAAKwC,IAAQ,EACpCjD,EAAOA,EAAM1J,KAAKwN,KAAKpD,EAAKsC,IAAQ,EACpC/E,EAAMA,EAAK3H,KAAKwN,KAAKpD,EAAKuC,IAAQ,EAClCvL,EAAMA,EAAKpB,KAAKwN,KAAKxD,EAAK6C,IAAQ,EAClCnD,EAAOA,EAAM1J,KAAKwN,KAAKxD,EAAK8C,IAAQ,EACpCpD,EAAOA,EAAM1J,KAAKwN,KAAKvD,EAAK4C,IAAQ,EACpClF,EAAMA,EAAK3H,KAAKwN,KAAKvD,EAAK6C,IAAQ,EAClC1L,EAAMA,EAAKpB,KAAKwN,KAAK3D,EAAKmD,IAAQ,EAClCtD,EAAOA,EAAM1J,KAAKwN,KAAK3D,EAAKoD,IAAQ,EACpCvD,EAAOA,EAAM1J,KAAKwN,KAAK1D,EAAKkD,IAAQ,EACpCrF,EAAMA,EAAK3H,KAAKwN,KAAK1D,EAAKmD,IAAQ,CAClC,IAAIe,KAAQ7N,EAAIiB,EAAM,KAAa,KAANsI,IAAiB,IAAO,CACrDvJ,IAAOwH,GAAM+B,IAAQ,IAAO,IAAMsE,KAAO,IAAO,EAChDA,IAAM,SAEN5M,EAAKpB,KAAKwN,KAAKnC,EAAKM,GACpBjC,EAAM1J,KAAKwN,KAAKnC,EAAKO,GACrBlC,EAAOA,EAAM1J,KAAKwN,KAAKlC,EAAKK,GAAQ,EACpChE,EAAK3H,KAAKwN,KAAKlC,EAAKM,GACpBxK,EAAMA,EAAKpB,KAAKwN,KAAKtC,EAAKY,GAAQ,EAClCpC,EAAOA,EAAM1J,KAAKwN,KAAKtC,EAAKa,GAAQ,EACpCrC,EAAOA,EAAM1J,KAAKwN,KAAKrC,EAAKW,GAAQ,EACpCnE,EAAMA,EAAK3H,KAAKwN,KAAKrC,EAAKY,GAAQ,EAClC3K,EAAMA,EAAKpB,KAAKwN,KAAKzC,EAAKkB,GAAQ,EAClCvC,EAAOA,EAAM1J,KAAKwN,KAAKzC,EAAKmB,GAAQ,EACpCxC,EAAOA,EAAM1J,KAAKwN,KAAKxC,EAAKiB,GAAQ,EACpCtE,EAAMA,EAAK3H,KAAKwN,KAAKxC,EAAKkB,GAAQ,EAClC9K,EAAMA,EAAKpB,KAAKwN,KAAK5C,EAAKwB,GAAQ,EAClC1C,EAAOA,EAAM1J,KAAKwN,KAAK5C,EAAKyB,GAAQ,EACpC3C,EAAOA,EAAM1J,KAAKwN,KAAK3C,EAAKuB,GAAQ,EACpCzE,EAAMA,EAAK3H,KAAKwN,KAAK3C,EAAKwB,GAAQ,EAClCjL,EAAMA,EAAKpB,KAAKwN,KAAK/C,EAAK8B,GAAQ,EAClC7C,EAAOA,EAAM1J,KAAKwN,KAAK/C,EAAK+B,IAAQ,EACpC9C,EAAOA,EAAM1J,KAAKwN,KAAK9C,EAAK6B,GAAQ,EACpC5E,EAAMA,EAAK3H,KAAKwN,KAAK9C,EAAK8B,IAAQ,EAClCpL,EAAMA,EAAKpB,KAAKwN,KAAKlD,EAAKoC,IAAQ,EAClChD,EAAOA,EAAM1J,KAAKwN,KAAKlD,EAAKqC,IAAQ,EACpCjD,EAAOA,EAAM1J,KAAKwN,KAAKjD,EAAKmC,IAAQ,EACpC/E,EAAMA,EAAK3H,KAAKwN,KAAKjD,EAAKoC,IAAQ,EAClCvL,EAAMA,EAAKpB,KAAKwN,KAAKrD,EAAK0C,IAAQ,EAClCnD,EAAOA,EAAM1J,KAAKwN,KAAKrD,EAAK2C,IAAQ,EACpCpD,EAAOA,EAAM1J,KAAKwN,KAAKpD,EAAKyC,IAAQ,EACpClF,EAAMA,EAAK3H,KAAKwN,KAAKpD,EAAK0C,IAAQ,EAClC1L,EAAMA,EAAKpB,KAAKwN,KAAKxD,EAAKgD,IAAQ,EAClCtD,EAAOA,EAAM1J,KAAKwN,KAAKxD,EAAKiD,IAAQ,EACpCvD,EAAOA,EAAM1J,KAAKwN,KAAKvD,EAAK+C,IAAQ,EACpCrF,EAAMA,EAAK3H,KAAKwN,KAAKvD,EAAKgD,IAAQ,EAClC7L,EAAMA,EAAKpB,KAAKwN,KAAK3D,EAAKsD,IAAQ,EAClCzD,EAAOA,EAAM1J,KAAKwN,KAAK3D,EAAKuD,IAAQ,EACpC1D,EAAOA,EAAM1J,KAAKwN,KAAK1D,EAAKqD,IAAQ,EACpCxF,EAAMA,EAAK3H,KAAKwN,KAAK1D,EAAKsD,IAAQ,CAClC,IAAIa,KAAQ9N,EAAIiB,EAAM,KAAa,KAANsI,IAAiB,IAAO,CACrDvJ,IAAOwH,GAAM+B,IAAQ,IAAO,IAAMuE,KAAO,IAAO,EAChDA,IAAM,SAEN7M,EAAKpB,KAAKwN,KAAKhC,EAAKG,GACpBjC,EAAM1J,KAAKwN,KAAKhC,EAAKI,GACrBlC,EAAOA,EAAM1J,KAAKwN,KAAK/B,EAAKE,GAAQ,EACpChE,EAAK3H,KAAKwN,KAAK/B,EAAKG,GACpBxK,EAAMA,EAAKpB,KAAKwN,KAAKnC,EAAKS,GAAQ,EAClCpC,EAAOA,EAAM1J,KAAKwN,KAAKnC,EAAKU,GAAQ,EACpCrC,EAAOA,EAAM1J,KAAKwN,KAAKlC,EAAKQ,GAAQ,EACpCnE,EAAMA,EAAK3H,KAAKwN,KAAKlC,EAAKS,GAAQ,EAClC3K,EAAMA,EAAKpB,KAAKwN,KAAKtC,EAAKe,GAAQ,EAClCvC,EAAOA,EAAM1J,KAAKwN,KAAKtC,EAAKgB,GAAQ,EACpCxC,EAAOA,EAAM1J,KAAKwN,KAAKrC,EAAKc,GAAQ,EACpCtE,EAAMA,EAAK3H,KAAKwN,KAAKrC,EAAKe,GAAQ,EAClC9K,EAAMA,EAAKpB,KAAKwN,KAAKzC,EAAKqB,GAAQ,EAClC1C,EAAOA,EAAM1J,KAAKwN,KAAKzC,EAAKsB,GAAQ,EACpC3C,EAAOA,EAAM1J,KAAKwN,KAAKxC,EAAKoB,GAAQ,EACpCzE,EAAMA,EAAK3H,KAAKwN,KAAKxC,EAAKqB,GAAQ,EAClCjL,EAAMA,EAAKpB,KAAKwN,KAAK5C,EAAK2B,GAAQ,EAClC7C,EAAOA,EAAM1J,KAAKwN,KAAK5C,EAAK4B,IAAQ,EACpC9C,EAAOA,EAAM1J,KAAKwN,KAAK3C,EAAK0B,GAAQ,EACpC5E,EAAMA,EAAK3H,KAAKwN,KAAK3C,EAAK2B,IAAQ,EAClCpL,EAAMA,EAAKpB,KAAKwN,KAAK/C,EAAKiC,IAAQ,EAClChD,EAAOA,EAAM1J,KAAKwN,KAAK/C,EAAKkC,IAAQ,EACpCjD,EAAOA,EAAM1J,KAAKwN,KAAK9C,EAAKgC,IAAQ,EACpC/E,EAAMA,EAAK3H,KAAKwN,KAAK9C,EAAKiC,IAAQ,EAClCvL,EAAMA,EAAKpB,KAAKwN,KAAKlD,EAAKuC,IAAQ,EAClCnD,EAAOA,EAAM1J,KAAKwN,KAAKlD,EAAKwC,IAAQ,EACpCpD,EAAOA,EAAM1J,KAAKwN,KAAKjD,EAAKsC,IAAQ,EACpClF,EAAMA,EAAK3H,KAAKwN,KAAKjD,EAAKuC,IAAQ,EAClC1L,EAAMA,EAAKpB,KAAKwN,KAAKrD,EAAK6C,IAAQ,EAClCtD,EAAOA,EAAM1J,KAAKwN,KAAKrD,EAAK8C,IAAQ,EACpCvD,EAAOA,EAAM1J,KAAKwN,KAAKpD,EAAK4C,IAAQ,EACpCrF,EAAMA,EAAK3H,KAAKwN,KAAKpD,EAAK6C,IAAQ,EAClC7L,EAAMA,EAAKpB,KAAKwN,KAAKxD,EAAKmD,IAAQ,EAClCzD,EAAOA,EAAM1J,KAAKwN,KAAKxD,EAAKoD,IAAQ,EACpC1D,EAAOA,EAAM1J,KAAKwN,KAAKvD,EAAKkD,IAAQ,EACpCxF,EAAMA,EAAK3H,KAAKwN,KAAKvD,EAAKmD,IAAQ,EAClChM,EAAMA,EAAKpB,KAAKwN,KAAK3D,EAAKyD,IAAQ,EAClC5D,EAAOA,EAAM1J,KAAKwN,KAAK3D,EAAK0D,IAAQ,EACpC7D,EAAOA,EAAM1J,KAAKwN,KAAK1D,EAAKwD,IAAQ,EACpC3F,EAAMA,EAAK3H,KAAKwN,KAAK1D,EAAKyD,IAAQ,CAClC,IAAIW,KAAQ/N,EAAIiB,EAAM,KAAa,KAANsI,IAAiB,IAAO,CACrDvJ,IAAOwH,GAAM+B,IAAQ,IAAO,IAAMwE,KAAO,IAAO,EAChDA,IAAM,SAEN9M,EAAKpB,KAAKwN,KAAKhC,EAAKM,GACpBpC,EAAM1J,KAAKwN,KAAKhC,EAAKO,GACrBrC,EAAOA,EAAM1J,KAAKwN,KAAK/B,EAAKK,GAAQ,EACpCnE,EAAK3H,KAAKwN,KAAK/B,EAAKM,GACpB3K,EAAMA,EAAKpB,KAAKwN,KAAKnC,EAAKY,GAAQ,EAClCvC,EAAOA,EAAM1J,KAAKwN,KAAKnC,EAAKa,GAAQ,EACpCxC,EAAOA,EAAM1J,KAAKwN,KAAKlC,EAAKW,GAAQ,EACpCtE,EAAMA,EAAK3H,KAAKwN,KAAKlC,EAAKY,GAAQ,EAClC9K,EAAMA,EAAKpB,KAAKwN,KAAKtC,EAAKkB,GAAQ,EAClC1C,EAAOA,EAAM1J,KAAKwN,KAAKtC,EAAKmB,GAAQ,EACpC3C,EAAOA,EAAM1J,KAAKwN,KAAKrC,EAAKiB,GAAQ,EACpCzE,EAAMA,EAAK3H,KAAKwN,KAAKrC,EAAKkB,GAAQ,EAClCjL,EAAMA,EAAKpB,KAAKwN,KAAKzC,EAAKwB,GAAQ,EAClC7C,EAAOA,EAAM1J,KAAKwN,KAAKzC,EAAKyB,IAAQ,EACpC9C,EAAOA,EAAM1J,KAAKwN,KAAKxC,EAAKuB,GAAQ,EACpC5E,EAAMA,EAAK3H,KAAKwN,KAAKxC,EAAKwB,IAAQ,EAClCpL,EAAMA,EAAKpB,KAAKwN,KAAK5C,EAAK8B,IAAQ,EAClChD,EAAOA,EAAM1J,KAAKwN,KAAK5C,EAAK+B,IAAQ,EACpCjD,EAAOA,EAAM1J,KAAKwN,KAAK3C,EAAK6B,IAAQ,EACpC/E,EAAMA,EAAK3H,KAAKwN,KAAK3C,EAAK8B,IAAQ,EAClCvL,EAAMA,EAAKpB,KAAKwN,KAAK/C,EAAKoC,IAAQ,EAClCnD,EAAOA,EAAM1J,KAAKwN,KAAK/C,EAAKqC,IAAQ,EACpCpD,EAAOA,EAAM1J,KAAKwN,KAAK9C,EAAKmC,IAAQ,EACpClF,EAAMA,EAAK3H,KAAKwN,KAAK9C,EAAKoC,IAAQ,EAClC1L,EAAMA,EAAKpB,KAAKwN,KAAKlD,EAAK0C,IAAQ,EAClCtD,EAAOA,EAAM1J,KAAKwN,KAAKlD,EAAK2C,IAAQ,EACpCvD,EAAOA,EAAM1J,KAAKwN,KAAKjD,EAAKyC,IAAQ,EACpCrF,EAAMA,EAAK3H,KAAKwN,KAAKjD,EAAK0C,IAAQ,EAClC7L,EAAMA,EAAKpB,KAAKwN,KAAKrD,EAAKgD,IAAQ,EAClCzD,EAAOA,EAAM1J,KAAKwN,KAAKrD,EAAKiD,IAAQ,EACpC1D,EAAOA,EAAM1J,KAAKwN,KAAKpD,EAAK+C,IAAQ,EACpCxF,EAAMA,EAAK3H,KAAKwN,KAAKpD,EAAKgD,IAAQ,EAClChM,EAAMA,EAAKpB,KAAKwN,KAAKxD,EAAKsD,IAAQ,EAClC5D,EAAOA,EAAM1J,KAAKwN,KAAKxD,EAAKuD,IAAQ,EACpC7D,EAAOA,EAAM1J,KAAKwN,KAAKvD,EAAKqD,IAAQ,EACpC3F,EAAMA,EAAK3H,KAAKwN,KAAKvD,EAAKsD,IAAQ,CAClC,IAAIY,KAAShO,EAAIiB,EAAM,KAAa,KAANsI,IAAiB,IAAO,CACtDvJ,IAAOwH,GAAM+B,IAAQ,IAAO,IAAMyE,KAAQ,IAAO,EACjDA,IAAO,SAEP/M,EAAKpB,KAAKwN,KAAKhC,EAAKS,GACpBvC,EAAM1J,KAAKwN,KAAKhC,EAAKU,GACrBxC,EAAOA,EAAM1J,KAAKwN,KAAK/B,EAAKQ,GAAQ,EACpCtE,EAAK3H,KAAKwN,KAAK/B,EAAKS,GACpB9K,EAAMA,EAAKpB,KAAKwN,KAAKnC,EAAKe,GAAQ,EAClC1C,EAAOA,EAAM1J,KAAKwN,KAAKnC,EAAKgB,GAAQ,EACpC3C,EAAOA,EAAM1J,KAAKwN,KAAKlC,EAAKc,GAAQ,EACpCzE,EAAMA,EAAK3H,KAAKwN,KAAKlC,EAAKe,GAAQ,EAClCjL,EAAMA,EAAKpB,KAAKwN,KAAKtC,EAAKqB,GAAQ,EAClC7C,EAAOA,EAAM1J,KAAKwN,KAAKtC,EAAKsB,IAAQ,EACpC9C,EAAOA,EAAM1J,KAAKwN,KAAKrC,EAAKoB,GAAQ,EACpC5E,EAAMA,EAAK3H,KAAKwN,KAAKrC,EAAKqB,IAAQ,EAClCpL,EAAMA,EAAKpB,KAAKwN,KAAKzC,EAAK2B,IAAQ,EAClChD,EAAOA,EAAM1J,KAAKwN,KAAKzC,EAAK4B,IAAQ,EACpCjD,EAAOA,EAAM1J,KAAKwN,KAAKxC,EAAK0B,IAAQ,EACpC/E,EAAMA,EAAK3H,KAAKwN,KAAKxC,EAAK2B,IAAQ,EAClCvL,EAAMA,EAAKpB,KAAKwN,KAAK5C,EAAKiC,IAAQ,EAClCnD,EAAOA,EAAM1J,KAAKwN,KAAK5C,EAAKkC,IAAQ,EACpCpD,EAAOA,EAAM1J,KAAKwN,KAAK3C,EAAKgC,IAAQ,EACpClF,EAAMA,EAAK3H,KAAKwN,KAAK3C,EAAKiC,IAAQ,EAClC1L,EAAMA,EAAKpB,KAAKwN,KAAK/C,EAAKuC,IAAQ,EAClCtD,EAAOA,EAAM1J,KAAKwN,KAAK/C,EAAKwC,IAAQ,EACpCvD,EAAOA,EAAM1J,KAAKwN,KAAK9C,EAAKsC,IAAQ,EACpCrF,EAAMA,EAAK3H,KAAKwN,KAAK9C,EAAKuC,IAAQ,EAClC7L,EAAMA,EAAKpB,KAAKwN,KAAKlD,EAAK6C,IAAQ,EAClCzD,EAAOA,EAAM1J,KAAKwN,KAAKlD,EAAK8C,IAAQ,EACpC1D,EAAOA,EAAM1J,KAAKwN,KAAKjD,EAAK4C,IAAQ,EACpCxF,EAAMA,EAAK3H,KAAKwN,KAAKjD,EAAK6C,IAAQ,EAClChM,EAAMA,EAAKpB,KAAKwN,KAAKrD,EAAKmD,IAAQ,EAClC5D,EAAOA,EAAM1J,KAAKwN,KAAKrD,EAAKoD,IAAQ,EACpC7D,EAAOA,EAAM1J,KAAKwN,KAAKpD,EAAKkD,IAAQ,EACpC3F,EAAMA,EAAK3H,KAAKwN,KAAKpD,EAAKmD,IAAQ,CAClC,IAAIa,KAASjO,EAAIiB,EAAM,KAAa,KAANsI,IAAiB,IAAO,CACtDvJ,IAAOwH,GAAM+B,IAAQ,IAAO,IAAM0E,KAAQ,IAAO,EACjDA,IAAO,SAEPhN,EAAKpB,KAAKwN,KAAKhC,EAAKY,GACpB1C,EAAM1J,KAAKwN,KAAKhC,EAAKa,GACrB3C,EAAOA,EAAM1J,KAAKwN,KAAK/B,EAAKW,GAAQ,EACpCzE,EAAK3H,KAAKwN,KAAK/B,EAAKY,GACpBjL,EAAMA,EAAKpB,KAAKwN,KAAKnC,EAAKkB,GAAQ,EAClC7C,EAAOA,EAAM1J,KAAKwN,KAAKnC,EAAKmB,IAAQ,EACpC9C,EAAOA,EAAM1J,KAAKwN,KAAKlC,EAAKiB,GAAQ,EACpC5E,EAAMA,EAAK3H,KAAKwN,KAAKlC,EAAKkB,IAAQ,EAClCpL,EAAMA,EAAKpB,KAAKwN,KAAKtC,EAAKwB,IAAQ,EAClChD,EAAOA,EAAM1J,KAAKwN,KAAKtC,EAAKyB,IAAQ,EACpCjD,EAAOA,EAAM1J,KAAKwN,KAAKrC,EAAKuB,IAAQ,EACpC/E,EAAMA,EAAK3H,KAAKwN,KAAKrC,EAAKwB,IAAQ,EAClCvL,EAAMA,EAAKpB,KAAKwN,KAAKzC,EAAK8B,IAAQ,EAClCnD,EAAOA,EAAM1J,KAAKwN,KAAKzC,EAAK+B,IAAQ,EACpCpD,EAAOA,EAAM1J,KAAKwN,KAAKxC,EAAK6B,IAAQ,EACpClF,EAAMA,EAAK3H,KAAKwN,KAAKxC,EAAK8B,IAAQ,EAClC1L,EAAMA,EAAKpB,KAAKwN,KAAK5C,EAAKoC,IAAQ,EAClCtD,EAAOA,EAAM1J,KAAKwN,KAAK5C,EAAKqC,IAAQ,EACpCvD,EAAOA,EAAM1J,KAAKwN,KAAK3C,EAAKmC,IAAQ,EACpCrF,EAAMA,EAAK3H,KAAKwN,KAAK3C,EAAKoC,IAAQ,EAClC7L,EAAMA,EAAKpB,KAAKwN,KAAK/C,EAAK0C,IAAQ,EAClCzD,EAAOA,EAAM1J,KAAKwN,KAAK/C,EAAK2C,IAAQ,EACpC1D,EAAOA,EAAM1J,KAAKwN,KAAK9C,EAAKyC,IAAQ,EACpCxF,EAAMA,EAAK3H,KAAKwN,KAAK9C,EAAK0C,IAAQ,EAClChM,EAAMA,EAAKpB,KAAKwN,KAAKlD,EAAKgD,IAAQ,EAClC5D,EAAOA,EAAM1J,KAAKwN,KAAKlD,EAAKiD,IAAQ,EACpC7D,EAAOA,EAAM1J,KAAKwN,KAAKjD,EAAK+C,IAAQ,EACpC3F,EAAMA,EAAK3H,KAAKwN,KAAKjD,EAAKgD,IAAQ,CAClC,IAAIc,KAASlO,EAAIiB,EAAM,KAAa,KAANsI,IAAiB,IAAO,CACtDvJ,IAAOwH,GAAM+B,IAAQ,IAAO,IAAM2E,KAAQ,IAAO,EACjDA,IAAO,SAEPjN,EAAKpB,KAAKwN,KAAKhC,EAAKe,GACpB7C,EAAM1J,KAAKwN,KAAKhC,EAAKgB,IACrB9C,EAAOA,EAAM1J,KAAKwN,KAAK/B,EAAKc,GAAQ,EACpC5E,EAAK3H,KAAKwN,KAAK/B,EAAKe,IACpBpL,EAAMA,EAAKpB,KAAKwN,KAAKnC,EAAKqB,IAAQ,EAClChD,EAAOA,EAAM1J,KAAKwN,KAAKnC,EAAKsB,IAAQ,EACpCjD,EAAOA,EAAM1J,KAAKwN,KAAKlC,EAAKoB,IAAQ,EACpC/E,EAAMA,EAAK3H,KAAKwN,KAAKlC,EAAKqB,IAAQ,EAClCvL,EAAMA,EAAKpB,KAAKwN,KAAKtC,EAAK2B,IAAQ,EAClCnD,EAAOA,EAAM1J,KAAKwN,KAAKtC,EAAK4B,IAAQ,EACpCpD,EAAOA,EAAM1J,KAAKwN,KAAKrC,EAAK0B,IAAQ,EACpClF,EAAMA,EAAK3H,KAAKwN,KAAKrC,EAAK2B,IAAQ,EAClC1L,EAAMA,EAAKpB,KAAKwN,KAAKzC,EAAKiC,IAAQ,EAClCtD,EAAOA,EAAM1J,KAAKwN,KAAKzC,EAAKkC,IAAQ,EACpCvD,EAAOA,EAAM1J,KAAKwN,KAAKxC,EAAKgC,IAAQ,EACpCrF,EAAMA,EAAK3H,KAAKwN,KAAKxC,EAAKiC,IAAQ,EAClC7L,EAAMA,EAAKpB,KAAKwN,KAAK5C,EAAKuC,IAAQ,EAClCzD,EAAOA,EAAM1J,KAAKwN,KAAK5C,EAAKwC,IAAQ,EACpC1D,EAAOA,EAAM1J,KAAKwN,KAAK3C,EAAKsC,IAAQ,EACpCxF,EAAMA,EAAK3H,KAAKwN,KAAK3C,EAAKuC,IAAQ,EAClChM,EAAMA,EAAKpB,KAAKwN,KAAK/C,EAAK6C,IAAQ,EAClC5D,EAAOA,EAAM1J,KAAKwN,KAAK/C,EAAK8C,IAAQ,EACpC7D,EAAOA,EAAM1J,KAAKwN,KAAK9C,EAAK4C,IAAQ,EACpC3F,EAAMA,EAAK3H,KAAKwN,KAAK9C,EAAK6C,IAAQ,CAClC,IAAIe,KAASnO,EAAIiB,EAAM,KAAa,KAANsI,IAAiB,IAAO,CACtDvJ,IAAOwH,GAAM+B,IAAQ,IAAO,IAAM4E,KAAQ,IAAO,EACjDA,IAAO,SAEPlN,EAAKpB,KAAKwN,KAAKhC,EAAKkB,IACpBhD,EAAM1J,KAAKwN,KAAKhC,EAAKmB,IACrBjD,EAAOA,EAAM1J,KAAKwN,KAAK/B,EAAKiB,IAAQ,EACpC/E,EAAK3H,KAAKwN,KAAK/B,EAAKkB,IACpBvL,EAAMA,EAAKpB,KAAKwN,KAAKnC,EAAKwB,IAAQ,EAClCnD,EAAOA,EAAM1J,KAAKwN,KAAKnC,EAAKyB,IAAQ,EACpCpD,EAAOA,EAAM1J,KAAKwN,KAAKlC,EAAKuB,IAAQ,EACpClF,EAAMA,EAAK3H,KAAKwN,KAAKlC,EAAKwB,IAAQ,EAClC1L,EAAMA,EAAKpB,KAAKwN,KAAKtC,EAAK8B,IAAQ,EAClCtD,EAAOA,EAAM1J,KAAKwN,KAAKtC,EAAK+B,IAAQ,EACpCvD,EAAOA,EAAM1J,KAAKwN,KAAKrC,EAAK6B,IAAQ,EACpCrF,EAAMA,EAAK3H,KAAKwN,KAAKrC,EAAK8B,IAAQ,EAClC7L,EAAMA,EAAKpB,KAAKwN,KAAKzC,EAAKoC,IAAQ,EAClCzD,EAAOA,EAAM1J,KAAKwN,KAAKzC,EAAKqC,IAAQ,EACpC1D,EAAOA,EAAM1J,KAAKwN,KAAKxC,EAAKmC,IAAQ,EACpCxF,EAAMA,EAAK3H,KAAKwN,KAAKxC,EAAKoC,IAAQ,EAClChM,EAAMA,EAAKpB,KAAKwN,KAAK5C,EAAK0C,IAAQ,EAClC5D,EAAOA,EAAM1J,KAAKwN,KAAK5C,EAAK2C,IAAQ,EACpC7D,EAAOA,EAAM1J,KAAKwN,KAAK3C,EAAKyC,IAAQ,EACpC3F,EAAMA,EAAK3H,KAAKwN,KAAK3C,EAAK0C,IAAQ,CAClC,IAAIgB,KAASpO,EAAIiB,EAAM,KAAa,KAANsI,IAAiB,IAAO,CACtDvJ,IAAOwH,GAAM+B,IAAQ,IAAO,IAAM6E,KAAQ,IAAO,EACjDA,IAAO,SAEPnN,EAAKpB,KAAKwN,KAAKhC,EAAKqB,IACpBnD,EAAM1J,KAAKwN,KAAKhC,EAAKsB,IACrBpD,EAAOA,EAAM1J,KAAKwN,KAAK/B,EAAKoB,IAAQ,EACpClF,EAAK3H,KAAKwN,KAAK/B,EAAKqB,IACpB1L,EAAMA,EAAKpB,KAAKwN,KAAKnC,EAAK2B,IAAQ,EAClCtD,EAAOA,EAAM1J,KAAKwN,KAAKnC,EAAK4B,IAAQ,EACpCvD,EAAOA,EAAM1J,KAAKwN,KAAKlC,EAAK0B,IAAQ,EACpCrF,EAAMA,EAAK3H,KAAKwN,KAAKlC,EAAK2B,IAAQ,EAClC7L,EAAMA,EAAKpB,KAAKwN,KAAKtC,EAAKiC,IAAQ,EAClCzD,EAAOA,EAAM1J,KAAKwN,KAAKtC,EAAKkC,IAAQ,EACpC1D,EAAOA,EAAM1J,KAAKwN,KAAKrC,EAAKgC,IAAQ,EACpCxF,EAAMA,EAAK3H,KAAKwN,KAAKrC,EAAKiC,IAAQ,EAClChM,EAAMA,EAAKpB,KAAKwN,KAAKzC,EAAKuC,IAAQ,EAClC5D,EAAOA,EAAM1J,KAAKwN,KAAKzC,EAAKwC,IAAQ,EACpC7D,EAAOA,EAAM1J,KAAKwN,KAAKxC,EAAKsC,IAAQ,EACpC3F,EAAMA,EAAK3H,KAAKwN,KAAKxC,EAAKuC,IAAQ,CAClC,IAAIiB,KAASrO,EAAIiB,EAAM,KAAa,KAANsI,IAAiB,IAAO,CACtDvJ,IAAOwH,GAAM+B,IAAQ,IAAO,IAAM8E,KAAQ,IAAO,EACjDA,IAAO,SAEPpN,EAAKpB,KAAKwN,KAAKhC,EAAKwB,IACpBtD,EAAM1J,KAAKwN,KAAKhC,EAAKyB,IACrBvD,EAAOA,EAAM1J,KAAKwN,KAAK/B,EAAKuB,IAAQ,EACpCrF,EAAK3H,KAAKwN,KAAK/B,EAAKwB,IACpB7L,EAAMA,EAAKpB,KAAKwN,KAAKnC,EAAK8B,IAAQ,EAClCzD,EAAOA,EAAM1J,KAAKwN,KAAKnC,EAAK+B,IAAQ,EACpC1D,EAAOA,EAAM1J,KAAKwN,KAAKlC,EAAK6B,IAAQ,EACpCxF,EAAMA,EAAK3H,KAAKwN,KAAKlC,EAAK8B,IAAQ,EAClChM,EAAMA,EAAKpB,KAAKwN,KAAKtC,EAAKoC,IAAQ,EAClC5D,EAAOA,EAAM1J,KAAKwN,KAAKtC,EAAKqC,IAAQ,EACpC7D,EAAOA,EAAM1J,KAAKwN,KAAKrC,EAAKmC,IAAQ,EACpC3F,EAAMA,EAAK3H,KAAKwN,KAAKrC,EAAKoC,IAAQ,CAClC,IAAIkB,KAAStO,EAAIiB,EAAM,KAAa,KAANsI,IAAiB,IAAO,CACtDvJ,IAAOwH,GAAM+B,IAAQ,IAAO,IAAM+E,KAAQ,IAAO,EACjDA,IAAO,SAEPrN,EAAKpB,KAAKwN,KAAKhC,EAAK2B,IACpBzD,EAAM1J,KAAKwN,KAAKhC,EAAK4B,IACrB1D,EAAOA,EAAM1J,KAAKwN,KAAK/B,EAAK0B,IAAQ,EACpCxF,EAAK3H,KAAKwN,KAAK/B,EAAK2B,IACpBhM,EAAMA,EAAKpB,KAAKwN,KAAKnC,EAAKiC,IAAQ,EAClC5D,EAAOA,EAAM1J,KAAKwN,KAAKnC,EAAKkC,IAAQ,EACpC7D,EAAOA,EAAM1J,KAAKwN,KAAKlC,EAAKgC,IAAQ,EACpC3F,EAAMA,EAAK3H,KAAKwN,KAAKlC,EAAKiC,IAAQ,CAClC,IAAImB,KAASvO,EAAIiB,EAAM,KAAa,KAANsI,IAAiB,IAAO,CACtDvJ,IAAOwH,GAAM+B,IAAQ,IAAO,IAAMgF,KAAQ,IAAO,EACjDA,IAAO,SAEPtN,EAAKpB,KAAKwN,KAAKhC,EAAK8B,IACpB5D,EAAM1J,KAAKwN,KAAKhC,EAAK+B,IACrB7D,EAAOA,EAAM1J,KAAKwN,KAAK/B,EAAK6B,IAAQ,EACpC3F,EAAK3H,KAAKwN,KAAK/B,EAAK8B,GACpB,IAAIoB,KAASxO,EAAIiB,EAAM,KAAa,KAANsI,IAAiB,IAAO,CA0BtD,OAzBAvJ,IAAOwH,GAAM+B,IAAQ,IAAO,IAAMiF,KAAQ,IAAO,EACjDA,IAAO,SACPhF,EAAE,GAAK8D,GACP9D,EAAE,GAAK+D,GACP/D,EAAE,GAAKgE,GACPhE,EAAE,GAAKiE,GACPjE,EAAE,GAAKkE,GACPlE,EAAE,GAAKmE,GACPnE,EAAE,GAAKoE,GACPpE,EAAE,GAAKqE,GACPrE,EAAE,GAAKsE,GACPtE,EAAE,GAAKuE,GACPvE,EAAE,IAAMwE,GACRxE,EAAE,IAAMyE,GACRzE,EAAE,IAAM0E,GACR1E,EAAE,IAAM2E,GACR3E,EAAE,IAAM4E,GACR5E,EAAE,IAAM6E,GACR7E,EAAE,IAAM8E,GACR9E,EAAE,IAAM+E,GACR/E,EAAE,IAAMgF,GACE,IAANxO,IACFwJ,EAAE,IAAMxJ,EACRc,EAAI1B,UAEC0B,EAIJjB,MAAKwN,OACR/D,EAAc1I,YAiDhBhC,GAAGV,UAAUuQ,MAAQ,SAAgBpO,EAAKS,GACxC,GAAIkG,GACApH,EAAMX,KAAKG,OAASiB,EAAIjB,MAW5B,OATE4H,GADkB,KAAhB/H,KAAKG,QAAgC,KAAfiB,EAAIjB,OACtBkK,EAAYrK,KAAMoB,EAAKS,GACpBlB,EAAM,GACTgB,WAAW3B,KAAMoB,EAAKS,GACnBlB,EAAM,KACT8B,SAASzC,KAAMoB,EAAKS,GAEpBc,WAAW3C,KAAMoB,EAAKS,IAchCgB,KAAK5D,UAAUwQ,QAAU,SAAkBC,GAGzC,IAAK,GAFDrH,GAAI,GAAI/G,OAAMoO,GACdC,EAAIhQ,GAAGV,UAAUmJ,WAAWsH,GAAK,EAC5B5O,EAAI,EAAGA,EAAI4O,EAAG5O,IACrBuH,EAAEvH,GAAKd,KAAK4P,OAAO9O,EAAG6O,EAAGD,EAG3B,OAAOrH,IAITxF,KAAK5D,UAAU2Q,OAAS,SAAiB7M,EAAG4M,EAAGD,GAC7C,GAAU,IAAN3M,GAAWA,IAAM2M,EAAI,EAAG,MAAO3M,EAGnC,KAAK,GADD8M,GAAK,EACA/O,EAAI,EAAGA,EAAI6O,EAAG7O,IACrB+O,IAAW,EAAJ9M,IAAW4M,EAAI7O,EAAI,EAC1BiC,IAAM,CAGR,OAAO8M,IAKThN,KAAK5D,UAAU6Q,QAAU,SAAkBC,EAAKC,EAAKC,EAAKC,EAAMC,EAAMT,GACpE,IAAK,GAAI5O,GAAI,EAAGA,EAAI4O,EAAG5O,IACrBoP,EAAKpP,GAAKkP,EAAID,EAAIjP,IAClBqP,EAAKrP,GAAKmP,EAAIF,EAAIjP,KAItB+B,KAAK5D,UAAUmR,UAAY,SAAoBJ,EAAKC,EAAKC,EAAMC,EAAMT,EAAGK,GACtE/P,KAAK8P,QAAQC,EAAKC,EAAKC,EAAKC,EAAMC,EAAMT,EAExC,KAAK,GAAIW,GAAI,EAAGA,EAAIX,EAAGW,IAAM,EAM3B,IAAK,GALDV,GAAIU,GAAK,EAETC,EAAQ1P,KAAK2P,IAAI,EAAI3P,KAAK4P,GAAKb,GAC/Bc,EAAQ7P,KAAK8P,IAAI,EAAI9P,KAAK4P,GAAKb,GAE1BxM,EAAI,EAAGA,EAAIuM,EAAGvM,GAAKwM,EAI1B,IAAK,GAHDgB,GAASL,EACTM,EAASH,EAEJnO,EAAI,EAAGA,EAAI+N,EAAG/N,IAAK,CAC1B,GAAIuO,GAAKX,EAAK/M,EAAIb,GACdwO,EAAKX,EAAKhN,EAAIb,GAEdyO,EAAKb,EAAK/M,EAAIb,EAAI+N,GAClBW,EAAKb,EAAKhN,EAAIb,EAAI+N,GAElBY,EAAKN,EAASI,EAAKH,EAASI,CAEhCA,GAAKL,EAASK,EAAKJ,EAASG,EAC5BA,EAAKE,EAELf,EAAK/M,EAAIb,GAAKuO,EAAKE,EACnBZ,EAAKhN,EAAIb,GAAKwO,EAAKE,EAEnBd,EAAK/M,EAAIb,EAAI+N,GAAKQ,EAAKE,EACvBZ,EAAKhN,EAAIb,EAAI+N,GAAKS,EAAKE,EAGnB1O,IAAMqN,IACRsB,EAAKX,EAAQK,EAASF,EAAQG,EAE9BA,EAASN,EAAQM,EAASH,EAAQE,EAClCA,EAASM,KAOnBpO,KAAK5D,UAAUiS,YAAc,SAAsB9N,EAAGW,GACpD,GAAI2L,GAAqB,EAAjB9O,KAAK2B,IAAIwB,EAAGX,GAChB+N,EAAU,EAAJzB,EACN5O,EAAI,CACR,KAAK4O,EAAIA,EAAI,EAAI,EAAGA,EAAGA,KAAU,EAC/B5O,GAGF,OAAO,IAAKA,EAAI,EAAIqQ,GAGtBtO,KAAK5D,UAAUmS,UAAY,SAAoBpB,EAAKC,EAAKP,GACvD,KAAIA,GAAK,GAET,IAAK,GAAI5O,GAAI,EAAGA,EAAI4O,EAAI,EAAG5O,IAAK,CAC9B,GAAIuH,GAAI2H,EAAIlP,EAEZkP,GAAIlP,GAAKkP,EAAIN,EAAI5O,EAAI,GACrBkP,EAAIN,EAAI5O,EAAI,GAAKuH,EAEjBA,EAAI4H,EAAInP,GAERmP,EAAInP,IAAMmP,EAAIP,EAAI5O,EAAI,GACtBmP,EAAIP,EAAI5O,EAAI,IAAMuH,IAItBxF,KAAK5D,UAAUoS,aAAe,SAAuBC,EAAI5B,GAEvD,IAAK,GADDzN,GAAQ,EACHnB,EAAI,EAAGA,EAAI4O,EAAI,EAAG5O,IAAK,CAC9B,GAAIO,GAAoC,KAAhCT,KAAK2Q,MAAMD,EAAG,EAAIxQ,EAAI,GAAK4O,GACjC9O,KAAK2Q,MAAMD,EAAG,EAAIxQ,GAAK4O,GACvBzN,CAEFqP,GAAGxQ,GAAS,SAAJO,EAGNY,EADEZ,EAAI,SACE,EAEAA,EAAI,SAAY,EAI5B,MAAOiQ,IAGTzO,KAAK5D,UAAUuS,WAAa,SAAqBF,EAAI3Q,EAAKqP,EAAKN,GAE7D,IAAK,GADDzN,GAAQ,EACHnB,EAAI,EAAGA,EAAIH,EAAKG,IACvBmB,GAAyB,EAARqP,EAAGxQ,GAEpBkP,EAAI,EAAIlP,GAAa,KAARmB,EAAgBA,KAAkB,GAC/C+N,EAAI,EAAIlP,EAAI,GAAa,KAARmB,EAAgBA,KAAkB,EAIrD,KAAKnB,EAAI,EAAIH,EAAKG,EAAI4O,IAAK5O,EACzBkP,EAAIlP,GAAK,CAGX5B,QAAiB,IAAV+C,GACP/C,OAA6B,KAArB+C,WAGVY,KAAK5D,UAAUwS,KAAO,SAAe/B,GAEnC,IAAK,GADDgC,GAAK,GAAIpQ,OAAMoO,GACV5O,EAAI,EAAGA,EAAI4O,EAAG5O,IACrB4Q,EAAG5Q,GAAK,CAGV,OAAO4Q,IAGT7O,KAAK5D,UAAU6D,KAAO,SAAeC,EAAGC,EAAGnB,GACzC,GAAI6N,GAAI,EAAI1P,KAAKkR,YAAYnO,EAAE5C,OAAQ6C,EAAE7C,QAErC4P,EAAM/P,KAAKyP,QAAQC,GAEnBiC,EAAI3R,KAAKyR,KAAK/B,GAEdM,EAAM,GAAI1O,OAAMoO,GAChBkC,EAAO,GAAItQ,OAAMoO,GACjBmC,EAAO,GAAIvQ,OAAMoO,GAEjBoC,EAAO,GAAIxQ,OAAMoO,GACjBqC,EAAQ,GAAIzQ,OAAMoO,GAClBsC,EAAQ,GAAI1Q,OAAMoO,GAElBuC,EAAOpQ,EAAI3B,KACf+R,GAAK9R,OAASuP,EAEd1P,KAAKwR,WAAWzO,EAAE7C,MAAO6C,EAAE5C,OAAQ6P,EAAKN,GACxC1P,KAAKwR,WAAWxO,EAAE9C,MAAO8C,EAAE7C,OAAQ2R,EAAMpC,GAEzC1P,KAAKoQ,UAAUJ,EAAK2B,EAAGC,EAAMC,EAAMnC,EAAGK,GACtC/P,KAAKoQ,UAAU0B,EAAMH,EAAGI,EAAOC,EAAOtC,EAAGK,EAEzC,KAAK,GAAIjP,GAAI,EAAGA,EAAI4O,EAAG5O,IAAK,CAC1B,GAAImQ,GAAKW,EAAK9Q,GAAKiR,EAAMjR,GAAK+Q,EAAK/Q,GAAKkR,EAAMlR,EAC9C+Q,GAAK/Q,GAAK8Q,EAAK9Q,GAAKkR,EAAMlR,GAAK+Q,EAAK/Q,GAAKiR,EAAMjR,GAC/C8Q,EAAK9Q,GAAKmQ,EAUZ,MAPAjR,MAAKoR,UAAUQ,EAAMC,EAAMnC,GAC3B1P,KAAKoQ,UAAUwB,EAAMC,EAAMI,EAAMN,EAAGjC,EAAGK,GACvC/P,KAAKoR,UAAUa,EAAMN,EAAGjC,GACxB1P,KAAKqR,aAAaY,EAAMvC,GAExB7N,EAAI5B,SAAW8C,EAAE9C,SAAW+C,EAAE/C,SAC9B4B,EAAI1B,OAAS4C,EAAE5C,OAAS6C,EAAE7C,OACnB0B,EAAIW,SAIb7C,GAAGV,UAAUiC,IAAM,SAAcE,GAC/B,GAAIS,GAAM,GAAIlC,IAAG,KAEjB,OADAkC,GAAI3B,MAAQ,GAAIoB,OAAMtB,KAAKG,OAASiB,EAAIjB,QACjCH,KAAKwP,MAAMpO,EAAKS,IAIzBlC,GAAGV,UAAUiT,KAAO,SAAe9Q,GACjC,GAAIS,GAAM,GAAIlC,IAAG,KAEjB,OADAkC,GAAI3B,MAAQ,GAAIoB,OAAMtB,KAAKG,OAASiB,EAAIjB,QACjCwC,WAAW3C,KAAMoB,EAAKS,IAI/BlC,GAAGV,UAAUmP,KAAO,SAAehN,GACjC,MAAOpB,MAAKwG,QAAQgJ,MAAMpO,EAAKpB,OAGjCL,GAAGV,UAAUkH,MAAQ,SAAgB/E,GACnClC,OAAsB,gBAARkC,IACdlC,OAAOkC,EAAM,SAIb,KAAK,GADDa,GAAQ,EACHnB,EAAI,EAAGA,EAAId,KAAKG,OAAQW,IAAK,CACpC,GAAIO,IAAqB,EAAhBrB,KAAKE,MAAMY,IAAUM,EAC1BY,GAAU,SAAJX,IAA0B,SAARY,EAC5BA,KAAU,GACVA,GAAUZ,EAAI,SAAa,EAE3BY,GAASD,IAAO,GAChBhC,KAAKE,MAAMY,GAAU,SAALkB,EAQlB,MALc,KAAVC,IACFjC,KAAKE,MAAMY,GAAKmB,EAChBjC,KAAKG,UAGAH,MAGTL,GAAGV,UAAUkT,KAAO,SAAe/Q,GACjC,MAAOpB,MAAKwG,QAAQL,MAAM/E,IAI5BzB,GAAGV,UAAUsF,IAAM,WACjB,MAAOvE,MAAKkB,IAAIlB,OAIlBL,GAAGV,UAAUmT,KAAO,WAClB,MAAOpS,MAAKoO,KAAKpO,KAAKwG,UAIxB7G,GAAGV,UAAUoH,IAAM,SAAcjF,GAC/B,GAAIC,GAAIF,WAAWC,EACnB,IAAiB,IAAbC,EAAElB,OAAc,MAAO,IAAIR,IAAG,EAIlC,KAAK,GADDoI,GAAM/H,KACDc,EAAI,EAAGA,EAAIO,EAAElB,QACP,IAATkB,EAAEP,GADsBA,IAAKiH,EAAMA,EAAIxD,OAI7C,KAAMzD,EAAIO,EAAElB,OACV,IAAK,GAAI6H,GAAID,EAAIxD,MAAOzD,EAAIO,EAAElB,OAAQW,IAAKkH,EAAIA,EAAEzD,MAClC,IAATlD,EAAEP,KAENiH,EAAMA,EAAI7G,IAAI8G,GAIlB,OAAOD,IAITpI,GAAGV,UAAUoE,OAAS,SAAiBgP,GACrCnT,OAAuB,gBAATmT,IAAqBA,GAAQ,EAC3C,IAGIvR,GAHAJ,EAAI2R,EAAO,GACXhC,GAAKgC,EAAO3R,GAAK,GACjB4R,EAAa,WAAe,GAAK5R,GAAQ,GAAKA,CAGlD,IAAU,IAANA,EAAS,CACX,GAAIuB,GAAQ,CAEZ,KAAKnB,EAAI,EAAGA,EAAId,KAAKG,OAAQW,IAAK,CAChC,GAAIyR,GAAWvS,KAAKE,MAAMY,GAAKwR,EAC3BvR,GAAsB,EAAhBf,KAAKE,MAAMY,IAAUyR,GAAa7R,CAC5CV,MAAKE,MAAMY,GAAKC,EAAIkB,EACpBA,EAAQsQ,IAAc,GAAK7R,EAGzBuB,IACFjC,KAAKE,MAAMY,GAAKmB,EAChBjC,KAAKG,UAIT,GAAU,IAANkQ,EAAS,CACX,IAAKvP,EAAId,KAAKG,OAAS,EAAGW,GAAK,EAAGA,IAChCd,KAAKE,MAAMY,EAAIuP,GAAKrQ,KAAKE,MAAMY,EAGjC,KAAKA,EAAI,EAAGA,EAAIuP,EAAGvP,IACjBd,KAAKE,MAAMY,GAAK,CAGlBd,MAAKG,QAAUkQ,EAGjB,MAAOrQ,MAAKwC,SAGd7C,GAAGV,UAAUuT,MAAQ,SAAgBH,GAGnC,MADAnT,QAAyB,IAAlBc,KAAKC,UACLD,KAAKqD,OAAOgP,IAMrB1S,GAAGV,UAAUiJ,OAAS,SAAiBmK,EAAMI,EAAMC,GACjDxT,OAAuB,gBAATmT,IAAqBA,GAAQ,EAC3C,IAAIM,EAEFA,GADEF,GACGA,EAAQA,EAAO,IAAO,GAEvB,CAGN,IAAI/R,GAAI2R,EAAO,GACXhC,EAAIzP,KAAKC,KAAKwR,EAAO3R,GAAK,GAAIV,KAAKG,QACnCyS,EAAO,SAAc,WAAclS,GAAMA,EACzCmS,EAAcH,CAMlB,IAJAC,GAAKtC,EACLsC,EAAI/R,KAAK2B,IAAI,EAAGoQ,GAGZE,EAAa,CACf,IAAK,GAAI/R,GAAI,EAAGA,EAAIuP,EAAGvP,IACrB+R,EAAY3S,MAAMY,GAAKd,KAAKE,MAAMY,EAEpC+R,GAAY1S,OAASkQ,EAGvB,GAAU,IAANA,OAEG,IAAIrQ,KAAKG,OAASkQ,EAEvB,IADArQ,KAAKG,QAAUkQ,EACVvP,EAAI,EAAGA,EAAId,KAAKG,OAAQW,IAC3Bd,KAAKE,MAAMY,GAAKd,KAAKE,MAAMY,EAAIuP,OAGjCrQ,MAAKE,MAAM,GAAK,EAChBF,KAAKG,OAAS,CAGhB,IAAI8B,GAAQ,CACZ,KAAKnB,EAAId,KAAKG,OAAS,EAAGW,GAAK,IAAgB,IAAVmB,GAAenB,GAAK6R,GAAI7R,IAAK,CAChE,GAAIoF,GAAuB,EAAhBlG,KAAKE,MAAMY,EACtBd,MAAKE,MAAMY,GAAMmB,GAAU,GAAKvB,EAAOwF,IAASxF,EAChDuB,EAAQiE,EAAO0M,EAajB,MATIC,IAAyB,IAAV5Q,IACjB4Q,EAAY3S,MAAM2S,EAAY1S,UAAY8B,GAGxB,IAAhBjC,KAAKG,SACPH,KAAKE,MAAM,GAAK,EAChBF,KAAKG,OAAS,GAGTH,KAAKwC,SAGd7C,GAAGV,UAAU6T,MAAQ,SAAgBT,EAAMI,EAAMC,GAG/C,MADAxT,QAAyB,IAAlBc,KAAKC,UACLD,KAAKkI,OAAOmK,EAAMI,EAAMC,IAIjC/S,GAAGV,UAAU8T,KAAO,SAAeV,GACjC,MAAOrS,MAAKwG,QAAQgM,MAAMH,IAG5B1S,GAAGV,UAAU+T,MAAQ,SAAgBX,GACnC,MAAOrS,MAAKwG,QAAQnD,OAAOgP,IAI7B1S,GAAGV,UAAUgU,KAAO,SAAeZ,GACjC,MAAOrS,MAAKwG,QAAQsM,MAAMT,IAG5B1S,GAAGV,UAAUiU,MAAQ,SAAgBb,GACnC,MAAOrS,MAAKwG,QAAQ0B,OAAOmK,IAI7B1S,GAAGV,UAAU8J,MAAQ,SAAgBvH,GACnCtC,OAAsB,gBAARsC,IAAoBA,GAAO,EACzC,IAAId,GAAIc,EAAM,GACV6O,GAAK7O,EAAMd,GAAK,GAChBsH,EAAI,GAAKtH,CAGb,IAAIV,KAAKG,QAAUkQ,EAAG,OAAO,CAG7B,IAAIhP,GAAIrB,KAAKE,MAAMmQ,EAEnB,UAAUhP,EAAI2G,IAIhBrI,GAAGV,UAAUkU,OAAS,SAAiBd,GACrCnT,OAAuB,gBAATmT,IAAqBA,GAAQ,EAC3C,IAAI3R,GAAI2R,EAAO,GACXhC,GAAKgC,EAAO3R,GAAK,EAIrB,IAFAxB,OAAyB,IAAlBc,KAAKC,SAAgB,2CAExBD,KAAKG,QAAUkQ,EACjB,MAAOrQ,KAQT,IALU,IAANU,GACF2P,IAEFrQ,KAAKG,OAASS,KAAKC,IAAIwP,EAAGrQ,KAAKG,QAErB,IAANO,EAAS,CACX,GAAIkS,GAAO,SAAc,WAAclS,GAAMA,CAC7CV,MAAKE,MAAMF,KAAKG,OAAS,IAAMyS,EAGjC,MAAO5S,MAAKwC,SAId7C,GAAGV,UAAUmU,MAAQ,SAAgBf,GACnC,MAAOrS,MAAKwG,QAAQ2M,OAAOd,IAI7B1S,GAAGV,UAAU4J,MAAQ,SAAgBzH,GAGnC,MAFAlC,QAAsB,gBAARkC,IACdlC,OAAOkC,EAAM,UACTA,EAAM,EAAUpB,KAAK2E,OAAOvD,GAGV,IAAlBpB,KAAKC,SACa,IAAhBD,KAAKG,SAAiC,EAAhBH,KAAKE,MAAM,IAAUkB,GAC7CpB,KAAKE,MAAM,GAAKkB,GAAuB,EAAhBpB,KAAKE,MAAM,IAClCF,KAAKC,SAAW,EACTD,OAGTA,KAAKC,SAAW,EAChBD,KAAK2E,MAAMvD,GACXpB,KAAKC,SAAW,EACTD,MAIFA,KAAKoG,OAAOhF,IAGrBzB,GAAGV,UAAUmH,OAAS,SAAiBhF,GACrCpB,KAAKE,MAAM,IAAMkB,CAGjB,KAAK,GAAIN,GAAI,EAAGA,EAAId,KAAKG,QAAUH,KAAKE,MAAMY,IAAM,SAAWA,IAC7Dd,KAAKE,MAAMY,IAAM,SACbA,IAAMd,KAAKG,OAAS,EACtBH,KAAKE,MAAMY,EAAI,GAAK,EAEpBd,KAAKE,MAAMY,EAAI,IAKnB,OAFAd,MAAKG,OAASS,KAAK2B,IAAIvC,KAAKG,OAAQW,EAAI,GAEjCd,MAITL,GAAGV,UAAU0F,MAAQ,SAAgBvD,GAGnC,GAFAlC,OAAsB,gBAARkC,IACdlC,OAAOkC,EAAM,UACTA,EAAM,EAAG,MAAOpB,MAAK6I,OAAOzH,EAEhC,IAAsB,IAAlBpB,KAAKC,SAIP,MAHAD,MAAKC,SAAW,EAChBD,KAAK6I,MAAMzH,GACXpB,KAAKC,SAAW,EACTD,IAKT,IAFAA,KAAKE,MAAM,IAAMkB,EAEG,IAAhBpB,KAAKG,QAAgBH,KAAKE,MAAM,GAAK,EACvCF,KAAKE,MAAM,IAAMF,KAAKE,MAAM,GAC5BF,KAAKC,SAAW,MAGhB,KAAK,GAAIa,GAAI,EAAGA,EAAId,KAAKG,QAAUH,KAAKE,MAAMY,GAAK,EAAGA,IACpDd,KAAKE,MAAMY,IAAM,SACjBd,KAAKE,MAAMY,EAAI,IAAM,CAIzB,OAAOd,MAAKwC,SAGd7C,GAAGV,UAAUoU,KAAO,SAAejS,GACjC,MAAOpB,MAAKwG,QAAQqC,MAAMzH,IAG5BzB,GAAGV,UAAUqU,KAAO,SAAelS,GACjC,MAAOpB,MAAKwG,QAAQ7B,MAAMvD,IAG5BzB,GAAGV,UAAUsU,KAAO,WAGlB,MAFAvT,MAAKC,SAAW,EAETD,MAGTL,GAAGV,UAAU0J,IAAM,WACjB,MAAO3I,MAAKwG,QAAQ+M,QAGtB5T,GAAGV,UAAUuU,aAAe,SAAuBpS,EAAKF,EAAKkD,GAC3D,GACItD,GADAH,EAAMS,EAAIjB,OAASiE,CAGvBpE,MAAKyG,QAAQ9F,EAEb,IAAIU,GACAY,EAAQ,CACZ,KAAKnB,EAAI,EAAGA,EAAIM,EAAIjB,OAAQW,IAAK,CAC/BO,GAA6B,EAAxBrB,KAAKE,MAAMY,EAAIsD,IAAcnC,CAClC,IAAImD,IAAwB,EAAfhE,EAAIlB,MAAMY,IAAUI,CACjCG,IAAa,SAAR+D,EACLnD,GAASZ,GAAK,KAAQ+D,EAAQ,SAAa,GAC3CpF,KAAKE,MAAMY,EAAIsD,GAAa,SAAJ/C,EAE1B,KAAOP,EAAId,KAAKG,OAASiE,EAAOtD,IAC9BO,GAA6B,EAAxBrB,KAAKE,MAAMY,EAAIsD,IAAcnC,EAClCA,EAAQZ,GAAK,GACbrB,KAAKE,MAAMY,EAAIsD,GAAa,SAAJ/C,CAG1B,IAAc,IAAVY,EAAa,MAAOjC,MAAKwC,OAK7B,KAFAtD,OAAO+C,QACPA,EAAQ,EACHnB,EAAI,EAAGA,EAAId,KAAKG,OAAQW,IAC3BO,IAAsB,EAAhBrB,KAAKE,MAAMY,IAAUmB,EAC3BA,EAAQZ,GAAK,GACbrB,KAAKE,MAAMY,GAAS,SAAJO,CAIlB,OAFArB,MAAKC,SAAW,EAETD,KAAKwC,SAGd7C,GAAGV,UAAUwU,SAAW,SAAmBrS,EAAKsS,GAC9C,GAAItP,GAAQpE,KAAKG,OAASiB,EAAIjB,OAE1B2B,EAAI9B,KAAKwG,QACTzE,EAAIX,EAGJuS,EAA8B,EAAxB5R,EAAE7B,MAAM6B,EAAE5B,OAAS,GACzByT,EAAU5T,KAAKoI,WAAWuL,EAC9BvP,GAAQ,GAAKwP,EACC,IAAVxP,IACFrC,EAAIA,EAAEiR,MAAM5O,GACZtC,EAAEuB,OAAOe,GACTuP,EAA8B,EAAxB5R,EAAE7B,MAAM6B,EAAE5B,OAAS,GAI3B,IACI6H,GADAjE,EAAIjC,EAAE3B,OAAS4B,EAAE5B,MAGrB,IAAa,QAATuT,EAAgB,CAClB1L,EAAI,GAAIrI,IAAG,MACXqI,EAAE7H,OAAS4D,EAAI,EACfiE,EAAE9H,MAAQ,GAAIoB,OAAM0G,EAAE7H,OACtB,KAAK,GAAIW,GAAI,EAAGA,EAAIkH,EAAE7H,OAAQW,IAC5BkH,EAAE9H,MAAMY,GAAK,EAIjB,GAAI+S,GAAO/R,EAAE0E,QAAQgN,aAAazR,EAAG,EAAGgC,EAClB,KAAlB8P,EAAK5T,WACP6B,EAAI+R,EACA7L,IACFA,EAAE9H,MAAM6D,GAAK,GAIjB,KAAK,GAAIzB,GAAIyB,EAAI,EAAGzB,GAAK,EAAGA,IAAK,CAC/B,GAAIwR,GAAmC,UAAL,EAAxBhS,EAAE5B,MAAM6B,EAAE5B,OAASmC,KACE,EAA5BR,EAAE5B,MAAM6B,EAAE5B,OAASmC,EAAI,GAO1B,KAHAwR,EAAKlT,KAAKC,IAAKiT,EAAKH,EAAO,EAAG,UAE9B7R,EAAE0R,aAAazR,EAAG+R,EAAIxR,GACA,IAAfR,EAAE7B,UACP6T,IACAhS,EAAE7B,SAAW,EACb6B,EAAE0R,aAAazR,EAAG,EAAGO,GAChBR,EAAEqF,WACLrF,EAAE7B,UAAY,EAGd+H,KACFA,EAAE9H,MAAMoC,GAAKwR,GAajB,MAVI9L,IACFA,EAAExF,QAEJV,EAAEU,QAGW,QAATkR,GAA4B,IAAVtP,GACpBtC,EAAEoG,OAAO9D,IAITQ,IAAKoD,GAAK,KACV/B,IAAKnE,IAQTnC,GAAGV,UAAU8U,OAAS,SAAiB3S,EAAKsS,EAAMM,GAGhD,GAFA9U,QAAQkC,EAAI+F,UAERnH,KAAKmH,SACP,OACEvC,IAAK,GAAIjF,IAAG,GACZsG,IAAK,GAAItG,IAAG,GAIhB,IAAIiF,GAAKqB,EAAK8B,CACd,OAAsB,KAAlB/H,KAAKC,UAAmC,IAAjBmB,EAAInB,UAC7B8H,EAAM/H,KAAKmJ,MAAM4K,OAAO3S,EAAKsS,GAEhB,QAATA,IACF9O,EAAMmD,EAAInD,IAAIuE,OAGH,QAATuK,IACFzN,EAAM8B,EAAI9B,IAAIkD,MACV6K,GAA6B,IAAjB/N,EAAIhG,UAClBgG,EAAIkE,KAAK/I,KAKXwD,IAAKA,EACLqB,IAAKA,IAIa,IAAlBjG,KAAKC,UAAmC,IAAjBmB,EAAInB,UAC7B8H,EAAM/H,KAAK+T,OAAO3S,EAAI+H,MAAOuK;AAEhB,QAATA,IACF9O,EAAMmD,EAAInD,IAAIuE,QAIdvE,IAAKA,EACLqB,IAAK8B,EAAI9B,MAI0B,KAAlCjG,KAAKC,SAAWmB,EAAInB,WACvB8H,EAAM/H,KAAKmJ,MAAM4K,OAAO3S,EAAI+H,MAAOuK,GAEtB,QAATA,IACFzN,EAAM8B,EAAI9B,IAAIkD,MACV6K,GAA6B,IAAjB/N,EAAIhG,UAClBgG,EAAI3C,KAAKlC,KAKXwD,IAAKmD,EAAInD,IACTqB,IAAKA,IAOL7E,EAAIjB,OAASH,KAAKG,QAAUH,KAAKqF,IAAIjE,GAAO,GAE5CwD,IAAK,GAAIjF,IAAG,GACZsG,IAAKjG,MAKU,IAAfoB,EAAIjB,OACO,QAATuT,GAEA9O,IAAK5E,KAAKiU,KAAK7S,EAAIlB,MAAM,IACzB+F,IAAK,MAII,QAATyN,GAEA9O,IAAK,KACLqB,IAAK,GAAItG,IAAGK,KAAKoH,KAAKhG,EAAIlB,MAAM,OAKlC0E,IAAK5E,KAAKiU,KAAK7S,EAAIlB,MAAM,IACzB+F,IAAK,GAAItG,IAAGK,KAAKoH,KAAKhG,EAAIlB,MAAM,MAI7BF,KAAKyT,SAASrS,EAAKsS,IAI5B/T,GAAGV,UAAU2F,IAAM,SAAcxD,GAC/B,MAAOpB,MAAK+T,OAAO3S,EAAK,OAAO,GAAOwD,KAIxCjF,GAAGV,UAAUgH,IAAM,SAAc7E,GAC/B,MAAOpB,MAAK+T,OAAO3S,EAAK,OAAO,GAAO6E,KAGxCtG,GAAGV,UAAU4F,KAAO,SAAezD,GACjC,MAAOpB,MAAK+T,OAAO3S,EAAK,OAAO,GAAM6E,KAIvCtG,GAAGV,UAAUiV,SAAW,SAAmB9S,GACzC,GAAI+S,GAAKnU,KAAK+T,OAAO3S,EAGrB,IAAI+S,EAAGlO,IAAIkB,SAAU,MAAOgN,GAAGvP,GAE/B,IAAIqB,GAA0B,IAApBkO,EAAGvP,IAAI3E,SAAiBkU,EAAGlO,IAAI3C,KAAKlC,GAAO+S,EAAGlO,IAEpDmO,EAAOhT,EAAI8R,MAAM,GACjB7O,EAAKjD,EAAI6G,MAAM,GACf5C,EAAMY,EAAIZ,IAAI+O,EAGlB,OAAI/O,GAAM,GAAY,IAAPhB,GAAoB,IAARgB,EAAkB8O,EAAGvP,IAGrB,IAApBuP,EAAGvP,IAAI3E,SAAiBkU,EAAGvP,IAAID,MAAM,GAAKwP,EAAGvP,IAAIiE,MAAM,IAGhElJ,GAAGV,UAAUmI,KAAO,SAAehG,GACjClC,OAAOkC,GAAO,SAId,KAAK,GAHD+B,IAAK,GAAK,IAAM/B,EAEhBiT,EAAM,EACDvT,EAAId,KAAKG,OAAS,EAAGW,GAAK,EAAGA,IACpCuT,GAAOlR,EAAIkR,GAAuB,EAAhBrU,KAAKE,MAAMY,KAAWM,CAG1C,OAAOiT,IAIT1U,GAAGV,UAAUoI,MAAQ,SAAgBjG,GACnClC,OAAOkC,GAAO,SAGd,KAAK,GADDa,GAAQ,EACHnB,EAAId,KAAKG,OAAS,EAAGW,GAAK,EAAGA,IAAK,CACzC,GAAIO,IAAqB,EAAhBrB,KAAKE,MAAMY,IAAkB,SAARmB,CAC9BjC,MAAKE,MAAMY,GAAMO,EAAID,EAAO,EAC5Ba,EAAQZ,EAAID,EAGd,MAAOpB,MAAKwC,SAGd7C,GAAGV,UAAUgV,KAAO,SAAe7S,GACjC,MAAOpB,MAAKwG,QAAQa,MAAMjG,IAG5BzB,GAAGV,UAAUqV,KAAO,SAAenR,GACjCjE,OAAsB,IAAfiE,EAAElD,UACTf,QAAQiE,EAAEgE,SAEV,IAAIpE,GAAI/C,KACJgD,EAAIG,EAAEqD,OAGRzD,GADiB,IAAfA,EAAE9C,SACA8C,EAAE8B,KAAK1B,GAEPJ,EAAEyD,OAaR,KATA,GAAI+N,GAAI,GAAI5U,IAAG,GACX6U,EAAI,GAAI7U,IAAG,GAGX8U,EAAI,GAAI9U,IAAG,GACX+U,EAAI,GAAI/U,IAAG,GAEXgV,EAAI,EAED5R,EAAE6R,UAAY5R,EAAE4R,UACrB7R,EAAEmF,OAAO,GACTlF,EAAEkF,OAAO,KACPyM,CAMJ,KAHA,GAAIE,GAAK7R,EAAEwD,QACPsO,EAAK/R,EAAEyD,SAEHzD,EAAEoE,UAAU,CAClB,IAAK,GAAIrG,GAAI,EAAGiU,EAAK,EAAyB,KAArBhS,EAAE7C,MAAM,GAAK6U,IAAajU,EAAI,KAAMA,EAAGiU,IAAO,GACvE,GAAIjU,EAAI,EAEN,IADAiC,EAAEmF,OAAOpH,GACFA,KAAM,IACPyT,EAAES,SAAWR,EAAEQ,WACjBT,EAAEpK,KAAK0K,GACPL,EAAElR,KAAKwR,IAGTP,EAAErM,OAAO,GACTsM,EAAEtM,OAAO,EAIb,KAAK,GAAI5F,GAAI,EAAG2S,EAAK,EAAyB,KAArBjS,EAAE9C,MAAM,GAAK+U,IAAa3S,EAAI,KAAMA,EAAG2S,IAAO,GACvE,GAAI3S,EAAI,EAEN,IADAU,EAAEkF,OAAO5F,GACFA,KAAM,IACPmS,EAAEO,SAAWN,EAAEM,WACjBP,EAAEtK,KAAK0K,GACPH,EAAEpR,KAAKwR,IAGTL,EAAEvM,OAAO,GACTwM,EAAExM,OAAO,EAITnF,GAAEsC,IAAIrC,IAAM,GACdD,EAAEO,KAAKN,GACPuR,EAAEjR,KAAKmR,GACPD,EAAElR,KAAKoR,KAEP1R,EAAEM,KAAKP,GACP0R,EAAEnR,KAAKiR,GACPG,EAAEpR,KAAKkR,IAIX,OACE1S,EAAG2S,EACH1S,EAAG2S,EACHQ,IAAKlS,EAAEK,OAAOsR,KAOlBhV,GAAGV,UAAUwF,OAAS,SAAiBtB,GACrCjE,OAAsB,IAAfiE,EAAElD,UACTf,QAAQiE,EAAEgE,SAEV,IAAIrF,GAAI9B,KACJ+B,EAAIoB,EAAEqD,OAGR1E,GADiB,IAAfA,EAAE7B,SACA6B,EAAE+C,KAAK1B,GAEPrB,EAAE0E,OAQR,KALA,GAAI2O,GAAK,GAAIxV,IAAG,GACZyV,EAAK,GAAIzV,IAAG,GAEZ0V,EAAQtT,EAAEyE,QAEP1E,EAAEwT,KAAK,GAAK,GAAKvT,EAAEuT,KAAK,GAAK,GAAG,CACrC,IAAK,GAAIxU,GAAI,EAAGiU,EAAK,EAAyB,KAArBjT,EAAE5B,MAAM,GAAK6U,IAAajU,EAAI,KAAMA,EAAGiU,IAAO,GACvE,GAAIjU,EAAI,EAEN,IADAgB,EAAEoG,OAAOpH,GACFA,KAAM,GACPqU,EAAGH,SACLG,EAAGhL,KAAKkL,GAGVF,EAAGjN,OAAO,EAId,KAAK,GAAI5F,GAAI,EAAG2S,EAAK,EAAyB,KAArBlT,EAAE7B,MAAM,GAAK+U,IAAa3S,EAAI,KAAMA,EAAG2S,IAAO,GACvE,GAAI3S,EAAI,EAEN,IADAP,EAAEmG,OAAO5F,GACFA,KAAM,GACP8S,EAAGJ,SACLI,EAAGjL,KAAKkL,GAGVD,EAAGlN,OAAO,EAIVpG,GAAEuD,IAAItD,IAAM,GACdD,EAAEwB,KAAKvB,GACPoT,EAAG7R,KAAK8R,KAERrT,EAAEuB,KAAKxB,GACPsT,EAAG9R,KAAK6R,IAIZ,GAAIpN,EAWJ,OATEA,GADgB,IAAdjG,EAAEwT,KAAK,GACHH,EAEAC,EAGJrN,EAAIuN,KAAK,GAAK,GAChBvN,EAAIoC,KAAKhH,GAGJ4E,GAGTpI,GAAGV,UAAUiW,IAAM,SAAc9T,GAC/B,GAAIpB,KAAKmH,SAAU,MAAO/F,GAAIuH,KAC9B,IAAIvH,EAAI+F,SAAU,MAAOnH,MAAK2I,KAE9B,IAAI7G,GAAI9B,KAAKwG,QACTzE,EAAIX,EAAIoF,OACZ1E,GAAE7B,SAAW,EACb8B,EAAE9B,SAAW,CAGb,KAAK,GAAImE,GAAQ,EAAGtC,EAAE8S,UAAY7S,EAAE6S,SAAUxQ,IAC5CtC,EAAEoG,OAAO,GACTnG,EAAEmG,OAAO,EAGX,QAAG,CACD,KAAOpG,EAAE8S,UACP9S,EAAEoG,OAAO,EAEX,MAAOnG,EAAE6S,UACP7S,EAAEmG,OAAO,EAGX,IAAIxH,GAAIoB,EAAEuD,IAAItD,EACd,IAAIrB,EAAI,EAAG,CAET,GAAI2H,GAAIvG,CACRA,GAAIC,EACJA,EAAIsG,MACC,IAAU,IAAN3H,GAAyB,IAAdqB,EAAEuT,KAAK,GAC3B,KAGFxT,GAAEwB,KAAKvB,GAGT,MAAOA,GAAEsB,OAAOe,IAIlBzE,GAAGV,UAAUsW,KAAO,SAAenU,GACjC,MAAOpB,MAAKsU,KAAKlT,GAAKU,EAAE+C,KAAKzD,IAG/BzB,GAAGV,UAAU2V,OAAS,WACpB,MAA+B,MAAP,EAAhB5U,KAAKE,MAAM,KAGrBP,GAAGV,UAAU+V,MAAQ,WACnB,MAA+B,MAAP,EAAhBhV,KAAKE,MAAM,KAIrBP,GAAGV,UAAUgJ,MAAQ,SAAgB7G,GACnC,MAAOpB,MAAKE,MAAM,GAAKkB,GAIzBzB,GAAGV,UAAUuW,MAAQ,SAAgBhU,GACnCtC,OAAsB,gBAARsC,GACd,IAAId,GAAIc,EAAM,GACV6O,GAAK7O,EAAMd,GAAK,GAChBsH,EAAI,GAAKtH,CAGb,IAAIV,KAAKG,QAAUkQ,EAGjB,MAFArQ,MAAKyG,QAAQ4J,EAAI,GACjBrQ,KAAKE,MAAMmQ,IAAMrI,EACVhI,IAKT,KAAK,GADDiC,GAAQ+F,EACHlH,EAAIuP,EAAa,IAAVpO,GAAenB,EAAId,KAAKG,OAAQW,IAAK,CACnD,GAAIO,GAAoB,EAAhBrB,KAAKE,MAAMY,EACnBO,IAAKY,EACLA,EAAQZ,IAAM,GACdA,GAAK,SACLrB,KAAKE,MAAMY,GAAKO,EAMlB,MAJc,KAAVY,IACFjC,KAAKE,MAAMY,GAAKmB,EAChBjC,KAAKG,UAEAH,MAGTL,GAAGV,UAAUkI,OAAS,WACpB,MAAuB,KAAhBnH,KAAKG,QAAkC,IAAlBH,KAAKE,MAAM,IAGzCP,GAAGV,UAAUqW,KAAO,SAAelU,GACjC,GAAInB,GAAWmB,EAAM,CAErB,IAAsB,IAAlBpB,KAAKC,WAAmBA,EAAU,QACtC,IAAsB,IAAlBD,KAAKC,UAAkBA,EAAU,MAAO,EAE5CD,MAAKwC,OAEL,IAAIuF,EACJ,IAAI/H,KAAKG,OAAS,EAChB4H,EAAM,MACD,CACD9H,IACFmB,GAAOA,GAGTlC,OAAOkC,GAAO,SAAW,oBAEzB,IAAIC,GAAoB,EAAhBrB,KAAKE,MAAM,EACnB6H,GAAM1G,IAAMD,EAAM,EAAIC,EAAID,KAAW,EAEvC,MAAsB,KAAlBpB,KAAKC,SAA8B,GAAN8H,EAC1BA,GAOTpI,GAAGV,UAAUoG,IAAM,SAAcjE,GAC/B,GAAsB,IAAlBpB,KAAKC,UAAmC,IAAjBmB,EAAInB,SAAgB,QAC/C,IAAsB,IAAlBD,KAAKC,UAAmC,IAAjBmB,EAAInB,SAAgB,MAAO,EAEtD,IAAI8H,GAAM/H,KAAKyV,KAAKrU,EACpB,OAAsB,KAAlBpB,KAAKC,SAA8B,GAAN8H,EAC1BA,GAITpI,GAAGV,UAAUwW,KAAO,SAAerU,GAEjC,GAAIpB,KAAKG,OAASiB,EAAIjB,OAAQ,MAAO,EACrC,IAAIH,KAAKG,OAASiB,EAAIjB,OAAQ,QAG9B,KAAK,GADD4H,GAAM,EACDjH,EAAId,KAAKG,OAAS,EAAGW,GAAK,EAAGA,IAAK,CACzC,GAAIgB,GAAoB,EAAhB9B,KAAKE,MAAMY,GACfiB,EAAmB,EAAfX,EAAIlB,MAAMY,EAElB,IAAIgB,IAAMC,EAAV,CACID,EAAIC,EACNgG,KACSjG,EAAIC,IACbgG,EAAM,EAER,QAEF,MAAOA,IAGTpI,GAAGV,UAAUiF,IAAM,SAAc9C,GAC/B,MAA0B,KAAnBpB,KAAKsV,KAAKlU,IAGnBzB,GAAGV,UAAUyW,GAAK,SAAatU,GAC7B,MAAyB,KAAlBpB,KAAKqF,IAAIjE,IAGlBzB,GAAGV,UAAU0W,KAAO,SAAevU,GACjC,MAAOpB,MAAKsV,KAAKlU,IAAQ,GAG3BzB,GAAGV,UAAU2W,IAAM,SAAcxU,GAC/B,MAAOpB,MAAKqF,IAAIjE,IAAQ,GAG1BzB,GAAGV,UAAU4W,IAAM,SAAczU,GAC/B,MAAOpB,MAAKsV,KAAKlU,SAGnBzB,GAAGV,UAAU6W,GAAK,SAAa1U,GAC7B,MAAOpB,MAAKqF,IAAIjE,SAGlBzB,GAAGV,UAAU8W,KAAO,SAAe3U,GACjC,MAAOpB,MAAKsV,KAAKlU,IAAQ,GAG3BzB,GAAGV,UAAU+W,IAAM,SAAc5U,GAC/B,MAAOpB,MAAKqF,IAAIjE,IAAQ,GAG1BzB,GAAGV,UAAUgX,IAAM,SAAc7U,GAC/B,MAA0B,KAAnBpB,KAAKsV,KAAKlU,IAGnBzB,GAAGV,UAAUiX,GAAK,SAAa9U,GAC7B,MAAyB,KAAlBpB,KAAKqF,IAAIjE,IAOlBzB,GAAGS,IAAM,SAAcgB,GACrB,MAAO,IAAI0C,KAAI1C,IAGjBzB,GAAGV,UAAUkX,MAAQ,SAAgBC,GAGnC,MAFAlX,SAAQc,KAAKI,IAAK,yCAClBlB,OAAyB,IAAlBc,KAAKC,SAAgB,iCACrBmW,EAAIC,UAAUrW,MAAMsW,UAAUF,IAGvCzW,GAAGV,UAAUsX,QAAU,WAErB,MADArX,QAAOc,KAAKI,IAAK,wDACVJ,KAAKI,IAAIoW,YAAYxW,OAG9BL,GAAGV,UAAUqX,UAAY,SAAoBF,GAE3C,MADApW,MAAKI,IAAMgW,EACJpW,MAGTL,GAAGV,UAAUwX,SAAW,SAAmBL,GAEzC,MADAlX,SAAQc,KAAKI,IAAK,yCACXJ,KAAKsW,UAAUF,IAGxBzW,GAAGV,UAAUyX,OAAS,SAAiBtV,GAErC,MADAlC,QAAOc,KAAKI,IAAK,sCACVJ,KAAKI,IAAIgK,IAAIpK,KAAMoB,IAG5BzB,GAAGV,UAAU0X,QAAU,SAAkBvV,GAEvC,MADAlC,QAAOc,KAAKI,IAAK,uCACVJ,KAAKI,IAAI+J,KAAKnK,KAAMoB,IAG7BzB,GAAGV,UAAU2X,OAAS,SAAiBxV,GAErC,MADAlC,QAAOc,KAAKI,IAAK,sCACVJ,KAAKI,IAAI0E,IAAI9E,KAAMoB,IAG5BzB,GAAGV,UAAU4X,QAAU,SAAkBzV,GAEvC,MADAlC,QAAOc,KAAKI,IAAK,uCACVJ,KAAKI,IAAIkD,KAAKtD,KAAMoB,IAG7BzB,GAAGV,UAAU6X,OAAS,SAAiB1V,GAErC,MADAlC,QAAOc,KAAKI,IAAK,sCACVJ,KAAKI,IAAI2W,IAAI/W,KAAMoB,IAG5BzB,GAAGV,UAAU+X,OAAS,SAAiB5V,GAGrC,MAFAlC,QAAOc,KAAKI,IAAK,sCACjBJ,KAAKI,IAAI6W,SAASjX,KAAMoB,GACjBpB,KAAKI,IAAIc,IAAIlB,KAAMoB,IAG5BzB,GAAGV,UAAUiY,QAAU,SAAkB9V,GAGvC,MAFAlC,QAAOc,KAAKI,IAAK,sCACjBJ,KAAKI,IAAI6W,SAASjX,KAAMoB,GACjBpB,KAAKI,IAAIgO,KAAKpO,KAAMoB,IAG7BzB,GAAGV,UAAUkY,OAAS,WAGpB,MAFAjY,QAAOc,KAAKI,IAAK,sCACjBJ,KAAKI,IAAIgX,SAASpX,MACXA,KAAKI,IAAImE,IAAIvE,OAGtBL,GAAGV,UAAUoY,QAAU,WAGrB,MAFAnY,QAAOc,KAAKI,IAAK,uCACjBJ,KAAKI,IAAIgX,SAASpX,MACXA,KAAKI,IAAIgS,KAAKpS,OAIvBL,GAAGV,UAAUqY,QAAU,WAGrB,MAFApY,QAAOc,KAAKI,IAAK,uCACjBJ,KAAKI,IAAIgX,SAASpX,MACXA,KAAKI,IAAImX,KAAKvX,OAGvBL,GAAGV,UAAUuY,QAAU,WAGrB,MAFAtY,QAAOc,KAAKI,IAAK,uCACjBJ,KAAKI,IAAIgX,SAASpX,MACXA,KAAKI,IAAImV,KAAKvV,OAIvBL,GAAGV,UAAUwY,OAAS,WAGpB,MAFAvY,QAAOc,KAAKI,IAAK,sCACjBJ,KAAKI,IAAIgX,SAASpX,MACXA,KAAKI,IAAI+I,IAAInJ,OAGtBL,GAAGV,UAAUyY,OAAS,SAAiBtW,GAGrC,MAFAlC,QAAOc,KAAKI,MAAQgB,EAAIhB,IAAK,qBAC7BJ,KAAKI,IAAIgX,SAASpX,MACXA,KAAKI,IAAIiG,IAAIrG,KAAMoB,GAI5B,IAAIuW,IACFC,KAAM,KACNC,KAAM,KACNC,KAAM,KACNC,OAAQ,KAcV9U,QAAOhE,UAAUuE,KAAO,WACtB,GAAID,GAAM,GAAI5D,IAAG,KAEjB,OADA4D,GAAIrD,MAAQ,GAAIoB,OAAMV,KAAKiF,KAAK7F,KAAKoD,EAAI,KAClCG,GAGTN,OAAOhE,UAAU+Y,QAAU,SAAkB5W,GAG3C,GACI6W,GADAvX,EAAIU,CAGR,GACEpB,MAAKkY,MAAMxX,EAAGV,KAAKuD,KACnB7C,EAAIV,KAAKmY,MAAMzX,GACfA,EAAIA,EAAEyJ,KAAKnK,KAAKuD,KAChB0U,EAAOvX,EAAEa,kBACF0W,EAAOjY,KAAKoD,EAErB,IAAIiC,GAAM4S,EAAOjY,KAAKoD,KAAS1C,EAAE+U,KAAKzV,KAAKmD,EAU3C,OATY,KAARkC,GACF3E,EAAER,MAAM,GAAK,EACbQ,EAAEP,OAAS,GACFkF,EAAM,EACf3E,EAAE4C,KAAKtD,KAAKmD,GAEZzC,EAAE8B,QAGG9B,GAGTuC,OAAOhE,UAAUiZ,MAAQ,SAAgBE,EAAOvW,GAC9CuW,EAAMlQ,OAAOlI,KAAKoD,EAAG,EAAGvB,IAG1BoB,OAAOhE,UAAUkZ,MAAQ,SAAgB/W,GACvC,MAAOA,GAAIgN,KAAKpO,KAAKkC,IASvB5C,SAASmE,KAAMR,QAEfQ,KAAKxE,UAAUiZ,MAAQ,SAAgBE,EAAOC,GAK5C,IAAK,GAHDzF,GAAO,QAEP0F,EAAS1X,KAAKC,IAAIuX,EAAMjY,OAAQ,GAC3BW,EAAI,EAAGA,EAAIwX,EAAQxX,IAC1BuX,EAAOnY,MAAMY,GAAKsX,EAAMlY,MAAMY,EAIhC,IAFAuX,EAAOlY,OAASmY,EAEZF,EAAMjY,QAAU,EAGlB,MAFAiY,GAAMlY,MAAM,GAAK,OACjBkY,EAAMjY,OAAS,EAKjB,IAAIoY,GAAOH,EAAMlY,MAAM,EAGvB,KAFAmY,EAAOnY,MAAMmY,EAAOlY,UAAYoY,EAAO3F,EAElC9R,EAAI,GAAIA,EAAIsX,EAAMjY,OAAQW,IAAK,CAClC,GAAI0X,GAAwB,EAAjBJ,EAAMlY,MAAMY,EACvBsX,GAAMlY,MAAMY,EAAI,KAAQ0X,EAAO5F,IAAS,EAAM2F,IAAS,GACvDA,EAAOC,EAETD,KAAU,GACVH,EAAMlY,MAAMY,EAAI,IAAMyX,EACT,IAATA,GAAcH,EAAMjY,OAAS,GAC/BiY,EAAMjY,QAAU,GAEhBiY,EAAMjY,QAAU,GAIpBsD,KAAKxE,UAAUkZ,MAAQ,SAAgB/W,GAErCA,EAAIlB,MAAMkB,EAAIjB,QAAU,EACxBiB,EAAIlB,MAAMkB,EAAIjB,OAAS,GAAK,EAC5BiB,EAAIjB,QAAU,CAId,KAAK,GADD6B,GAAK,EACAlB,EAAI,EAAGA,EAAIM,EAAIjB,OAAQW,IAAK,CACnC,GAAIO,GAAmB,EAAfD,EAAIlB,MAAMY,EAClBkB,IAAU,IAAJX,EACND,EAAIlB,MAAMY,GAAU,SAALkB,EACfA,EAAS,GAAJX,GAAaW,EAAK,SAAa,GAUtC,MANkC,KAA9BZ,EAAIlB,MAAMkB,EAAIjB,OAAS,KACzBiB,EAAIjB,SAC8B,IAA9BiB,EAAIlB,MAAMkB,EAAIjB,OAAS,IACzBiB,EAAIjB,UAGDiB,GAST9B,SAASqE,KAAMV,QAQf3D,SAASsE,KAAMX,QASf3D,SAASuE,OAAQZ,QAEjBY,OAAO5E,UAAUkZ,MAAQ,SAAgB/W,GAGvC,IAAK,GADDa,GAAQ,EACHnB,EAAI,EAAGA,EAAIM,EAAIjB,OAAQW,IAAK,CACnC,GAAIyH,GAA0B,IAAL,EAAfnH,EAAIlB,MAAMY,IAAiBmB,EACjCD,EAAU,SAALuG,CACTA,MAAQ,GAERnH,EAAIlB,MAAMY,GAAKkB,EACfC,EAAQsG,EAKV,MAHc,KAAVtG,IACFb,EAAIlB,MAAMkB,EAAIjB,UAAY8B,GAErBb,GAITzB,GAAGsE,OAAS,QAASD,OAAOd,GAE1B,GAAIyU,EAAOzU,GAAO,MAAOyU,GAAOzU,EAEhC,IAAIc,MACJ,IAAa,SAATd,EACFc,MAAQ,GAAIP,UACP,IAAa,SAATP,EACTc,MAAQ,GAAIL,UACP,IAAa,SAATT,EACTc,MAAQ,GAAIJ,UACP,IAAa,WAATV,EAGT,KAAM,IAAI7D,OAAM,iBAAmB6D,EAFnCc,OAAQ,GAAIH,QAMd,MAFA8T,GAAOzU,GAAQc,MAERA,OAkBTF,IAAI7E,UAAUmY,SAAW,SAAmBtV,GAC1C5C,OAAsB,IAAf4C,EAAE7B,SAAgB,iCACzBf,OAAO4C,EAAE1B,IAAK,oCAGhB0D,IAAI7E,UAAUgY,SAAW,SAAmBnV,EAAGC,GAC7C7C,OAAqC,KAA7B4C,EAAE7B,SAAW8B,EAAE9B,UAAiB,iCACxCf,OAAO4C,EAAE1B,KAAO0B,EAAE1B,MAAQ2B,EAAE3B,IAC1B,oCAGJ0D,IAAI7E,UAAUqF,KAAO,SAAexC,GAClC,MAAI9B,MAAKgE,MAAchE,KAAKgE,MAAMgU,QAAQlW,GAAGwU,UAAUtW,MAChD8B,EAAE+C,KAAK7E,KAAK+D,GAAGuS,UAAUtW,OAGlC8D,IAAI7E,UAAUkK,IAAM,SAAcrH,GAChC,MAAIA,GAAEqF,SACGrF,EAAE0E,QAGJxG,KAAK+D,EAAEe,IAAIhD,GAAGwU,UAAUtW,OAGjC8D,IAAI7E,UAAUmL,IAAM,SAActI,EAAGC,GACnC/B,KAAKiX,SAASnV,EAAGC,EAEjB,IAAIgG,GAAMjG,EAAEsI,IAAIrI,EAIhB,OAHIgG,GAAI1C,IAAIrF,KAAK+D,IAAM,GACrBgE,EAAIzE,KAAKtD,KAAK+D,GAETgE,EAAIuO,UAAUtW,OAGvB8D,IAAI7E,UAAUkL,KAAO,SAAerI,EAAGC,GACrC/B,KAAKiX,SAASnV,EAAGC,EAEjB,IAAIgG,GAAMjG,EAAEqI,KAAKpI,EAIjB,OAHIgG,GAAI1C,IAAIrF,KAAK+D,IAAM,GACrBgE,EAAIzE,KAAKtD,KAAK+D,GAETgE,GAGTjE,IAAI7E,UAAU6F,IAAM,SAAchD,EAAGC,GACnC/B,KAAKiX,SAASnV,EAAGC,EAEjB,IAAIgG,GAAMjG,EAAEgD,IAAI/C,EAIhB,OAHIgG,GAAIuN,KAAK,GAAK,GAChBvN,EAAIoC,KAAKnK,KAAK+D,GAETgE,EAAIuO,UAAUtW,OAGvB8D,IAAI7E,UAAUqE,KAAO,SAAexB,EAAGC,GACrC/B,KAAKiX,SAASnV,EAAGC,EAEjB,IAAIgG,GAAMjG,EAAEwB,KAAKvB,EAIjB,OAHIgG,GAAIuN,KAAK,GAAK,GAChBvN,EAAIoC,KAAKnK,KAAK+D,GAETgE,GAGTjE,IAAI7E,UAAU8X,IAAM,SAAcjV,EAAGV,GAEnC,MADApB,MAAKoX,SAAStV,GACP9B,KAAKsE,KAAKxC,EAAEkR,MAAM5R,KAG3B0C,IAAI7E,UAAUmP,KAAO,SAAetM,EAAGC,GAErC,MADA/B,MAAKiX,SAASnV,EAAGC,GACV/B,KAAKsE,KAAKxC,EAAEsM,KAAKrM,KAG1B+B,IAAI7E,UAAUiC,IAAM,SAAcY,EAAGC,GAEnC,MADA/B,MAAKiX,SAASnV,EAAGC,GACV/B,KAAKsE,KAAKxC,EAAEZ,IAAIa,KAGzB+B,IAAI7E,UAAUmT,KAAO,SAAetQ,GAClC,MAAO9B,MAAKoO,KAAKtM,EAAGA,EAAE0E,UAGxB1C,IAAI7E,UAAUsF,IAAM,SAAczC,GAChC,MAAO9B,MAAKkB,IAAIY,EAAGA,IAGrBgC,IAAI7E,UAAUsY,KAAO,SAAezV,GAClC,GAAIA,EAAEqF,SAAU,MAAOrF,GAAE0E,OAEzB,IAAIiS,GAAOzY,KAAK+D,EAAEkE,MAAM,EAIxB,IAHA/I,OAAOuZ,EAAO,IAAM,GAGP,IAATA,EAAY,CACd,GAAIpS,GAAMrG,KAAK+D,EAAEqG,IAAI,GAAIzK,IAAG,IAAIuI,OAAO,EACvC,OAAOlI,MAAKqG,IAAIvE,EAAGuE,GAQrB,IAFA,GAAI2B,GAAIhI,KAAK+D,EAAEuP,KAAK,GAChBjD,EAAI,GACArI,EAAEb,UAA2B,IAAfa,EAAEC,MAAM,IAC5BoI,IACArI,EAAEE,OAAO,EAEXhJ,SAAQ8I,EAAEb,SAEV,IAAIuR,GAAM,GAAI/Y,IAAG,GAAGwW,MAAMnW,MACtB2Y,EAAOD,EAAIjB,SAIXmB,EAAO5Y,KAAK+D,EAAEuP,KAAK,GAAGpL,OAAO,GAC7B2Q,EAAI7Y,KAAK+D,EAAExC,WAGf,KAFAsX,EAAI,GAAIlZ,IAAG,EAAIkZ,EAAIA,GAAG1C,MAAMnW,MAEW,IAAhCA,KAAKqG,IAAIwS,EAAGD,GAAMvT,IAAIsT,IAC3BE,EAAElC,QAAQgC,EAOZ,KAJA,GAAI5X,GAAIf,KAAKqG,IAAIwS,EAAG7Q,GAChBtH,EAAIV,KAAKqG,IAAIvE,EAAGkG,EAAEqL,KAAK,GAAGnL,OAAO,IACjCG,EAAIrI,KAAKqG,IAAIvE,EAAGkG,GAChBjE,EAAIsM,EACc,IAAfhI,EAAEhD,IAAIqT,IAAY,CAEvB,IAAK,GADDnV,GAAM8E,EACDvH,EAAI,EAAoB,IAAjByC,EAAI8B,IAAIqT,GAAY5X,IAClCyC,EAAMA,EAAI4T,QAEZjY,QAAO4B,EAAIiD,EACX,IAAIhC,GAAI/B,KAAKqG,IAAItF,EAAG,GAAIpB,IAAG,GAAG0D,OAAOU,EAAIjD,EAAI,GAE7CJ,GAAIA,EAAEsW,OAAOjV,GACbhB,EAAIgB,EAAEoV,SACN9O,EAAIA,EAAE2O,OAAOjW,GACbgD,EAAIjD,EAGN,MAAOJ,IAGToD,IAAI7E,UAAUsW,KAAO,SAAezT,GAClC,GAAIgX,GAAMhX,EAAE2C,OAAOzE,KAAK+D,EACxB,OAAqB,KAAjB+U,EAAI7Y,UACN6Y,EAAI7Y,SAAW,EACRD,KAAKsE,KAAKwU,GAAKrB,UAEfzX,KAAKsE,KAAKwU,IAIrBhV,IAAI7E,UAAUoH,IAAM,SAAcvE,EAAGV,GACnC,GAAIA,EAAI+F,SAAU,MAAO,IAAIxH,IAAG,EAChC,IAAoB,IAAhByB,EAAIkU,KAAK,GAAU,MAAOxT,GAAE0E,OAEhC,IAAIuS,GAAa,EACbC,EAAM,GAAI1X,OAAM,GAAKyX,EACzBC,GAAI,GAAK,GAAIrZ,IAAG,GAAGwW,MAAMnW,MACzBgZ,EAAI,GAAKlX,CACT,KAAK,GAAIhB,GAAI,EAAGA,EAAIkY,EAAI7Y,OAAQW,IAC9BkY,EAAIlY,GAAKd,KAAKkB,IAAI8X,EAAIlY,EAAI,GAAIgB,EAGhC,IAAIiG,GAAMiR,EAAI,GACVC,EAAU,EACVC,EAAa,EACb1Y,EAAQY,EAAIG,YAAc,EAK9B,KAJc,IAAVf,IACFA,EAAQ,IAGLM,EAAIM,EAAIjB,OAAS,EAAGW,GAAK,EAAGA,IAAK,CAEpC,IAAK,GADDoF,GAAO9E,EAAIlB,MAAMY,GACZwB,EAAI9B,EAAQ,EAAG8B,GAAK,EAAGA,IAAK,CACnC,GAAId,GAAO0E,GAAQ5D,EAAK,CACpByF,KAAQiR,EAAI,KACdjR,EAAM/H,KAAKuE,IAAIwD,IAGL,IAARvG,GAAyB,IAAZyX,GAKjBA,IAAY,EACZA,GAAWzX,EACX0X,KACIA,IAAeH,GAAqB,IAANjY,GAAiB,IAANwB,KAE7CyF,EAAM/H,KAAKkB,IAAI6G,EAAKiR,EAAIC,IACxBC,EAAa,EACbD,EAAU,IAXRC,EAAa,EAajB1Y,EAAQ,GAGV,MAAOuH,IAGTjE,IAAI7E,UAAUoX,UAAY,SAAoBjV,GAC5C,GAAIV,GAAIU,EAAIyD,KAAK7E,KAAK+D,EAEtB,OAAOrD,KAAMU,EAAMV,EAAE8F,QAAU9F,GAGjCoD,IAAI7E,UAAUuX,YAAc,SAAsBpV,GAChD,GAAI2G,GAAM3G,EAAIoF,OAEd,OADAuB,GAAI3H,IAAM,KACH2H,GAOTpI,GAAGwZ,KAAO,SAAe/X,GACvB,MAAO,IAAI+C,MAAK/C,IAmBlB9B,SAAS6E,KAAML,KAEfK,KAAKlF,UAAUoX,UAAY,SAAoBjV,GAC7C,MAAOpB,MAAKsE,KAAKlD,EAAI4R,MAAMhT,KAAKoE,SAGlCD,KAAKlF,UAAUuX,YAAc,SAAsBpV,GACjD,GAAIV,GAAIV,KAAKsE,KAAKlD,EAAIF,IAAIlB,KAAKwE,MAE/B,OADA9D,GAAEN,IAAM,KACDM,GAGTyD,KAAKlF,UAAUmP,KAAO,SAAetM,EAAGC,GACtC,GAAID,EAAEqF,UAAYpF,EAAEoF,SAGlB,MAFArF,GAAE5B,MAAM,GAAK,EACb4B,EAAE3B,OAAS,EACJ2B,CAGT,IAAIuG,GAAIvG,EAAEsM,KAAKrM,GACXhB,EAAIsH,EAAE+K,MAAMpT,KAAKoE,OAAOlD,IAAIlB,KAAK0E,MAAMyO,OAAOnT,KAAKoE,OAAOlD,IAAIlB,KAAK+D,GACnEqV,EAAI/Q,EAAE/E,KAAKvC,GAAGmH,OAAOlI,KAAKoE,OAC1B2D,EAAMqR,CAQV,OANIA,GAAE/T,IAAIrF,KAAK+D,IAAM,EACnBgE,EAAMqR,EAAE9V,KAAKtD,KAAK+D,GACTqV,EAAE9D,KAAK,GAAK,IACrBvN,EAAMqR,EAAEjP,KAAKnK,KAAK+D,IAGbgE,EAAIuO,UAAUtW,OAGvBmE,KAAKlF,UAAUiC,IAAM,SAAcY,EAAGC,GACpC,GAAID,EAAEqF,UAAYpF,EAAEoF,SAAU,MAAO,IAAIxH,IAAG,GAAG2W,UAAUtW,KAEzD,IAAIqI,GAAIvG,EAAEZ,IAAIa,GACVhB,EAAIsH,EAAE+K,MAAMpT,KAAKoE,OAAOlD,IAAIlB,KAAK0E,MAAMyO,OAAOnT,KAAKoE,OAAOlD,IAAIlB,KAAK+D,GACnEqV,EAAI/Q,EAAE/E,KAAKvC,GAAGmH,OAAOlI,KAAKoE,OAC1B2D,EAAMqR,CAOV,OANIA,GAAE/T,IAAIrF,KAAK+D,IAAM,EACnBgE,EAAMqR,EAAE9V,KAAKtD,KAAK+D,GACTqV,EAAE9D,KAAK,GAAK,IACrBvN,EAAMqR,EAAEjP,KAAKnK,KAAK+D,IAGbgE,EAAIuO,UAAUtW,OAGvBmE,KAAKlF,UAAUsW,KAAO,SAAezT,GAEnC,GAAIiG,GAAM/H,KAAKsE,KAAKxC,EAAE2C,OAAOzE,KAAK+D,GAAG7C,IAAIlB,KAAKqE,IAC9C,OAAO0D,GAAIuO,UAAUtW,QAEJ,mBAAXvB,IAA0BA,EAl2GpC4a,UDwyG8B3V,KAAKhF,EAASC,EAAoB,KAAKF,KAI/D6a,KACL,KAAM,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAE/BC,IACA,SAAS9a,EAAQC,GEhzGvBD,EAAAC,SACA8a,SAGAC,IAAA,oEACAC,MAAA,KACAC,YAAA,WACAzW,KAAA,WACA0W,QAAA,2DACAC,KAAA,2DACAC,KAAA,UAEA,2CAGAC,MAAA,iBACAC,IAAA,iBACAC,UAAA,EACAC,UAAA,YACAC,oBACAC,YACAX,IAAA,oEACAC,MAAA,KACAC,YAAA,WACAzW,KAAA,WACA0W,QAAA,2DACAC,KAAA,2DACAC,KAAA,UAEAO,aACA,IACA,oBACA,mBACA,eACA,cAEAC,UAAA,2DACAC,QAAA,2CACAC,YAAA,KACAC,MAAA,oEACAC,OAAA,yCACAC,QACAzX,KAAA,gBACA0X,MAAA,qBAEAC,MACAC,IAAA,8CAEAC,cACAC,QAAA,SACAC,QAAA,SACAC,UAAA,SACA5b,SAAA,UAEA6b,YAAA,kBACAC,iBACAC,KAAA,SACAC,UAAA,UACAC,MAAA,SACAC,mBAAA,SACAC,wBAAA,SACAC,qBAAA,SACAC,uBAAA,SACAC,uBAAA,SACAC,kBAAA,SACAC,SAAA,SACAC,KAAA,SACAC,OAAA,SACAC,MAAA,UAEAC,OACA,OAEAC,SAAA,sCACAC,UACA,KACA,WACA,QACA,gBAEAC,QAAA,MACAC,KAAA,kBACApZ,KAAA,WACAqZ,wBACAC,OAAA,qoMACAC,eAAA,YACAC,YACA5C,KAAA,MACAgB,IAAA,iDAEA6B,SACAZ,KAAA,yEACAC,OAAA,yEACAY,KAAA,iCACAC,KAAA,+BACAC,KAAA,qDACAC,QAAA,+BAEAA,QAAA,UFuzGMC,IACA,SAASve,EAAQC,EAASC,GG15GhC,YAUA,SAASiH,SAAQxG,EAAK6d,GACpB,GAAI3b,MAAM4D,QAAQ9F,GAChB,MAAOA,GAAI8d,OACb,KAAK9d,EACH,QACF,IAAI2I,KACJ,IAAmB,gBAAR3I,GAAkB,CAC3B,IAAK,GAAI0B,GAAI,EAAGA,EAAI1B,EAAIe,OAAQW,IAC9BiH,EAAIjH,GAAc,EAAT1B,EAAI0B,EACf,OAAOiH,GAET,GAAKkV,GAUE,GAAY,QAARA,EAAe,CACxB7d,EAAMA,EAAIqG,QAAQ,eAAgB,IAC9BrG,EAAIe,OAAS,IAAM,IACrBf,EAAM,IAAMA,EACd,KAAK,GAAI0B,GAAI,EAAGA,EAAI1B,EAAIe,OAAQW,GAAK,EACnCiH,EAAIoV,KAAKC,SAAShe,EAAI0B,GAAK1B,EAAI0B,EAAI,GAAI,UAdzC,KAAK,GAAIA,GAAI,EAAGA,EAAI1B,EAAIe,OAAQW,IAAK,CACnC,GAAIC,GAAI3B,EAAI4B,WAAWF,GACnByH,EAAKxH,GAAK,EACViB,EAAS,IAAJjB,CACLwH,GACFR,EAAIoV,KAAK5U,EAAIvG,GAEb+F,EAAIoV,KAAKnb,GASf,MAAO+F,GAIT,QAASsV,OAAMnX,GACb,MAAoB,KAAhBA,EAAK/F,OACA,IAAM+F,EAENA,EAIX,QAASoX,OAAMle,GAEb,IAAK,GADD2I,GAAM,GACDjH,EAAI,EAAGA,EAAI1B,EAAIe,OAAQW,IAC9BiH,GAAOsV,MAAMje,EAAI0B,GAAG0E,SAAS,IAC/B,OAAOuC,GAYT,QAASwV,QAAOnc,EAAKC,GAInB,IAHA,GAAImc,MACAlM,EAAK,GAAMjQ,EAAI,EACfa,EAAId,EAAIoF,QACLtE,EAAEoT,KAAK,IAAM,GAAG,CACrB,GAAIuD,EACJ,IAAI3W,EAAE8S,QAAS,CACb,GAAI/O,GAAM/D,EAAE+F,MAAMqJ,EAAK,EAErBuH,GADE5S,GAAOqL,GAAM,GAAK,GACfA,GAAM,GAAKrL,EAEZA,EACN/D,EAAEyC,MAAMkU,OAERA,GAAI,CAEN2E,GAAIL,KAAKtE,EAIT,KAAK,GADDzU,GAAuB,IAAdlC,EAAEoT,KAAK,IAAgC,IAApBpT,EAAE+F,MAAMqJ,EAAK,GAAajQ,EAAI,EAAK,EAC1DP,EAAI,EAAGA,EAAIsD,EAAOtD,IACzB0c,EAAIL,KAAK,EACXjb,GAAEgG,OAAO9D,GAGX,MAAOoZ,GAKT,QAASC,QAAOC,EAAIC,GAClB,GAAIC,UAKJF,GAAKA,EAAGlX,QACRmX,EAAKA,EAAGnX,OAGR,KAFA,GAAIqX,GAAK,EACLC,EAAK,EACFJ,EAAGpI,MAAMuI,GAAM,GAAKF,EAAGrI,MAAMwI,GAAM,GAAG,CAG3C,GAAIC,GAAOL,EAAGzV,MAAM,GAAK4V,EAAM,EAC3BG,EAAOL,EAAG1V,MAAM,GAAK6V,EAAM,CACnB,KAARC,IACFA,MACU,IAARC,IACFA,KACF,IAAIC,EACJ,IAAkB,KAAP,EAANF,GACHE,EAAK,MACA,CACL,GAAIC,GAAMR,EAAGzV,MAAM,GAAK4V,EAAM,CAI5BI,GAHU,IAAPC,GAAmB,IAAPA,GAAqB,IAARF,EAGvBD,GAFCA,EAIVH,EAAI,GAAGT,KAAKc,EAEZ,IAAIE,EACJ,IAAkB,KAAP,EAANH,GACHG,EAAK,MACA,CACL,GAAID,GAAMP,EAAG1V,MAAM,GAAK6V,EAAM,CAI5BK,GAHU,IAAPD,GAAmB,IAAPA,GAAqB,IAARH,EAGvBC,GAFCA,EAIVJ,EAAI,GAAGT,KAAKgB,GAGR,EAAIN,IAAOI,EAAK,IAClBJ,EAAK,EAAIA,GACP,EAAIC,IAAOK,EAAK,IAClBL,EAAK,EAAIA,GACXJ,EAAGxV,OAAO,GACVyV,EAAGzV,OAAO,GAGZ,MAAO0V,GAIT,QAASQ,gBAAerf,EAAKmE,EAAMmb,GACjC,GAAIC,GAAM,IAAMpb,CAChBnE,GAAIE,UAAUiE,GAAQ,WACpB,MAAqBmW,UAAdrZ,KAAKse,GAAqBte,KAAKse,GAC/Bte,KAAKse,GAAOD,EAAS3a,KAAK1D,OAKrC,QAASue,YAAWC,GAClB,MAAwB,gBAAVA,GAAqBC,EAAM7Y,QAAQ4Y,EAAO,OACrBA,EAIrC,QAASE,WAAUF,GACjB,MAAO,IAAI7e,GAAG6e,EAAO,MAAO,MAtK9B,GAAIC,GAAQ/f,EACRiB,EAAKhB,EAAQ,IAEjB8f,GAAMvf,OAAS,SAAgBC,EAAKC,GAClC,IAAKD,EACH,KAAM,IAAIE,OAAMD,GAAO,qBAiC3Bqf,EAAM7Y,QAAUA,QAQhB6Y,EAAMpB,MAAQA,MAQdoB,EAAMnB,MAAQA,MAEdmB,EAAME,OAAS,SAAgBC,EAAK3B,GAClC,MAAY,QAARA,EACKK,MAAMsB,GAENA,GA+BXH,EAAMlB,OAASA,OAyDfkB,EAAMhB,OAASA,OASfgB,EAAML,eAAiBA,eAMvBK,EAAMF,WAAaA,WAKnBE,EAAMC,UAAYA,WHk4GZG,KACL,KAAM,KAEDC,KACL,KAAM,IAAK,IAAK,IAAK,KAEhBC,IACA,SAAStgB,EAAQC,EAASC,GInjHhC,YASA,SAASqgB,WAAUlF,EAAMmF,GACvBjf,KAAK8Z,KAAOA,EACZ9Z,KAAKmD,EAAI,GAAIxD,GAAGsf,EAAK9b,EAAG,IAGxBnD,KAAKI,IAAM6e,EAAKjb,MAAQrE,EAAGS,IAAI6e,EAAKjb,OAASrE,EAAGwZ,KAAKnZ,KAAKmD,GAG1DnD,KAAKkf,KAAO,GAAIvf,GAAG,GAAGwW,MAAMnW,KAAKI,KACjCJ,KAAK0Y,IAAM,GAAI/Y,GAAG,GAAGwW,MAAMnW,KAAKI,KAChCJ,KAAKmf,IAAM,GAAIxf,GAAG,GAAGwW,MAAMnW,KAAKI,KAGhCJ,KAAKoD,EAAI6b,EAAK7b,GAAK,GAAIzD,GAAGsf,EAAK7b,EAAG,IAClCpD,KAAK2U,EAAIsK,EAAKtK,GAAK3U,KAAKof,cAAcH,EAAKtK,EAAGsK,EAAKI,MAGnDrf,KAAKsf,QAAU,GAAIhe,OAAM,GACzBtB,KAAKuf,QAAU,GAAIje,OAAM,GACzBtB,KAAKwf,QAAU,GAAIle,OAAM,GACzBtB,KAAKyf,QAAU,GAAIne,OAAM,EAGzB,IAAIoe,GAAc1f,KAAKoD,GAAKpD,KAAKmD,EAAEyB,IAAI5E,KAAKoD,IACvCsc,GAAeA,EAAYpK,KAAK,KAAO,EAC1CtV,KAAK2f,KAAO,MAEZ3f,KAAK4f,eAAgB,EACrB5f,KAAK2f,KAAO3f,KAAKoD,EAAE+S,MAAMnW,KAAKI,MAmNlC,QAASyf,WAAUC,EAAOhG,GACxB9Z,KAAK8f,MAAQA,EACb9f,KAAK8Z,KAAOA,EACZ9Z,KAAK+f,YAAc,KAzPrB,GAAIpgB,GAAKhB,EAAQ,KACbqhB,EAAWrhB,EAAQ,KACnB8f,EAAQuB,EAASvB,MACjBlB,EAASkB,EAAMlB,OACfE,EAASgB,EAAMhB,OACfve,EAASuf,EAAMvf,MAiCnBT,GAAOC,QAAUsgB,UAEjBA,UAAU/f,UAAUghB,MAAQ,WAC1B,KAAM,IAAI5gB,OAAM,oBAGlB2f,UAAU/f,UAAUihB,SAAW,WAC7B,KAAM,IAAI7gB,OAAM,oBAGlB2f,UAAU/f,UAAUkhB,aAAe,SAAsBhd,EAAGjB,GAC1DhD,EAAOiE,EAAE4c,YACT,IAAIK,GAAUjd,EAAEkd,cAEZ7C,EAAMD,EAAOrb,EAAG,GAChBoe,GAAK,GAAMF,EAAQG,KAAO,IAAOH,EAAQG,KAAO,IAAM,EAAI,EAAI,EAClED,IAAK,CAIL,KAAK,GADDE,MACKle,EAAI,EAAGA,EAAIkb,EAAIrd,OAAQmC,GAAK8d,EAAQG,KAAM,CAEjD,IAAK,GADDE,GAAO,EACFve,EAAII,EAAI8d,EAAQG,KAAO,EAAGre,GAAKI,EAAGJ,IACzCue,GAAQA,GAAQ,GAAKjD,EAAItb,EAC3Bse,GAAKrD,KAAKsD,GAKZ,IAAK,GAFD3e,GAAI9B,KAAK0gB,OAAO,KAAM,KAAM,MAC5B3e,EAAI/B,KAAK0gB,OAAO,KAAM,KAAM,MACvB5f,EAAIwf,EAAGxf,EAAI,EAAGA,IAAK,CAC1B,IAAK,GAAIwB,GAAI,EAAGA,EAAIke,EAAKrgB,OAAQmC,IAAK,CACpC,GAAIme,GAAOD,EAAKle,EACZme,KAAS3f,EACXiB,EAAIA,EAAE4e,SAASP,EAAQQ,OAAOte,IACvBme,KAAU3f,IACjBiB,EAAIA,EAAE4e,SAASP,EAAQQ,OAAOte,GAAG6G,QAErCrH,EAAIA,EAAEsI,IAAIrI,GAEZ,MAAOD,GAAE+e,OAGX7B,UAAU/f,UAAU6hB,SAAW,SAAkB3d,EAAGjB,GAClD,GAAIb,GAAI,EAGJ0f,EAAY5d,EAAE6d,cAAc3f,EAChCA,GAAI0f,EAAU/H,GAQd,KAAK,GAPDA,GAAM+H,EAAUH,OAGhBpD,EAAMD,EAAOrb,EAAGb,GAGhBgT,EAAMrU,KAAK0gB,OAAO,KAAM,KAAM,MACzB5f,EAAI0c,EAAIrd,OAAS,EAAGW,GAAK,EAAGA,IAAK,CAExC,IAAK,GAAIoB,GAAI,EAAGpB,GAAK,GAAgB,IAAX0c,EAAI1c,GAAUA,IACtCoB,GAKF,IAJIpB,GAAK,GACPoB,IACFmS,EAAMA,EAAI4M,KAAK/e,GAEXpB,EAAI,EACN,KACF,IAAI+X,GAAI2E,EAAI1c,EACZ5B,GAAa,IAAN2Z,GAIHxE,EAHW,WAAXlR,EAAE2W,KAEAjB,EAAI,EACAxE,EAAIsM,SAAS3H,EAAKH,EAAI,GAAM,IAE5BxE,EAAIsM,SAAS3H,GAAMH,EAAI,GAAM,GAAG1P,OAGpC0P,EAAI,EACAxE,EAAIjK,IAAI4O,EAAKH,EAAI,GAAM,IAEvBxE,EAAIjK,IAAI4O,GAAMH,EAAI,GAAM,GAAG1P,OAGvC,MAAkB,WAAXhG,EAAE2W,KAAoBzF,EAAIwM,MAAQxM,GAG3C2K,UAAU/f,UAAUiiB,YAAc,SAAqBC,EACAP,EACAQ,EACAzgB,EACA0gB,GAOrD,IAAK,GANDC,GAAWthB,KAAKsf,QAChBtG,EAAMhZ,KAAKuf,QACX/B,EAAMxd,KAAKwf,QAGXjd,EAAM,EACDzB,EAAI,EAAGA,EAAIH,EAAKG,IAAK,CAC5B,GAAIqC,GAAIyd,EAAO9f,GACXigB,EAAY5d,EAAE6d,cAAcG,EAChCG,GAASxgB,GAAKigB,EAAU/H,IACxBA,EAAIlY,GAAKigB,EAAUH,OAIrB,IAAK,GAAI9f,GAAIH,EAAM,EAAGG,GAAK,EAAGA,GAAK,EAAG,CACpC,GAAIgB,GAAIhB,EAAI,EACRiB,EAAIjB,CACR,IAAoB,IAAhBwgB,EAASxf,IAA4B,IAAhBwf,EAASvf,GAAlC,CAQA,GAAIwf,IACFX,EAAO9e,GACP,KACA,KACA8e,EAAO7e,GAI4B,KAAjC6e,EAAO9e,GAAGkB,EAAEqC,IAAIub,EAAO7e,GAAGiB,IAC5Bue,EAAK,GAAKX,EAAO9e,GAAGsI,IAAIwW,EAAO7e,IAC/Bwf,EAAK,GAAKX,EAAO9e,GAAG0f,MAAMb,SAASC,EAAO7e,GAAGoH,QACM,IAA1CyX,EAAO9e,GAAGkB,EAAEqC,IAAIub,EAAO7e,GAAGiB,EAAEyU,WACrC8J,EAAK,GAAKX,EAAO9e,GAAG0f,MAAMb,SAASC,EAAO7e,IAC1Cwf,EAAK,GAAKX,EAAO9e,GAAGsI,IAAIwW,EAAO7e,GAAGoH,SAElCoY,EAAK,GAAKX,EAAO9e,GAAG0f,MAAMb,SAASC,EAAO7e,IAC1Cwf,EAAK,GAAKX,EAAO9e,GAAG0f,MAAMb,SAASC,EAAO7e,GAAGoH,OAG/C,IAAIsY,gBAKF,EACA,EACA,EACA,EACA,GAGE7D,EAAMH,EAAO2D,EAAOtf,GAAIsf,EAAOrf,GACnCQ,GAAM3B,KAAK2B,IAAIqb,EAAI,GAAGzd,OAAQoC,GAC9Bib,EAAI1b,GAAK,GAAIR,OAAMiB,GACnBib,EAAIzb,GAAK,GAAIT,OAAMiB,EACnB,KAAK,GAAID,GAAI,EAAGA,EAAIC,EAAKD,IAAK,CAC5B,GAAIof,GAAiB,EAAZ9D,EAAI,GAAGtb,GACZqf,EAAiB,EAAZ/D,EAAI,GAAGtb,EAEhBkb,GAAI1b,GAAGQ,GAAKmf,EAAiB,GAAVC,EAAK,IAAUC,EAAK,IACvCnE,EAAIzb,GAAGO,GAAK,EACZ0W,EAAIlX,GAAKyf,OAhDT/D,GAAI1b,GAAKyb,EAAO6D,EAAOtf,GAAIwf,EAASxf,IACpC0b,EAAIzb,GAAKwb,EAAO6D,EAAOrf,GAAIuf,EAASvf,IACpCQ,EAAM3B,KAAK2B,IAAIib,EAAI1b,GAAG3B,OAAQoC,GAC9BA,EAAM3B,KAAK2B,IAAIib,EAAIzb,GAAG5B,OAAQoC,GAmDlC,IAAK,GAFD8R,GAAMrU,KAAK0gB,OAAO,KAAM,KAAM,MAC9Bnd,EAAMvD,KAAKyf,QACN3e,EAAIyB,EAAKzB,GAAK,EAAGA,IAAK,CAG7B,IAFA,GAAIoB,GAAI,EAEDpB,GAAK,GAAG,CAEb,IAAK,GADDoe,IAAO,EACF5c,EAAI,EAAGA,EAAI3B,EAAK2B,IACvBiB,EAAIjB,GAAiB,EAAZkb,EAAIlb,GAAGxB,GACD,IAAXyC,EAAIjB,KACN4c,GAAO,EAEX,KAAKA,EACH,KACFhd,KACApB,IAKF,GAHIA,GAAK,GACPoB,IACFmS,EAAMA,EAAI4M,KAAK/e,GACXpB,EAAI,EACN,KAEF,KAAK,GAAIwB,GAAI,EAAGA,EAAI3B,EAAK2B,IAAK,CAC5B,GACIa,GADA0V,EAAItV,EAAIjB,EAEF,KAANuW,IAEKA,EAAI,EACX1V,EAAI6V,EAAI1W,GAAIuW,EAAI,GAAM,GACfA,EAAI,IACX1V,EAAI6V,EAAI1W,IAAKuW,EAAI,GAAM,GAAG1P,OAG1BkL,EADa,WAAXlR,EAAE2W,KACEzF,EAAIsM,SAASxd,GAEbkR,EAAIjK,IAAIjH,KAIpB,IAAK,GAAIrC,GAAI,EAAGA,EAAIH,EAAKG,IACvBkY,EAAIlY,GAAK,IAEX,OAAIugB,GACKhN,EAEAA,EAAIwM,OAQf7B,UAAUa,UAAYA,UAEtBA,UAAU5gB,UAAUiX,GAAK,WACvB,KAAM,IAAI7W,OAAM,oBAGlBwgB,UAAU5gB,UAAUihB,SAAW,WAC7B,MAAOlgB,MAAK8f,MAAMI,SAASlgB,OAG7Bgf,UAAU/f,UAAU2iB,YAAc,SAAqBpD,EAAOvB,GAC5DuB,EAAQC,EAAM7Y,QAAQ4Y,EAAOvB,EAE7B,IAAItc,GAAMX,KAAKmD,EAAEyE,YAGjB,KAAkB,IAAb4W,EAAM,IAA4B,IAAbA,EAAM,IAA4B,IAAbA,EAAM,KACjDA,EAAMre,OAAS,IAAM,EAAIQ,EAAK,CACf,IAAb6d,EAAM,GACRtf,EAAOsf,EAAMA,EAAMre,OAAS,GAAK,IAAM,GACnB,IAAbqe,EAAM,IACbtf,EAAOsf,EAAMA,EAAMre,OAAS,GAAK,IAAM,EAEzC,IAAI4H,GAAO/H,KAAKigB,MAAMzB,EAAMtB,MAAM,EAAG,EAAIvc,GACnB6d,EAAMtB,MAAM,EAAIvc,EAAK,EAAI,EAAIA,GAEnD,OAAOoH,GACF,IAAkB,IAAbyW,EAAM,IAA4B,IAAbA,EAAM,KAC3BA,EAAMre,OAAS,IAAMQ,EAC/B,MAAOX,MAAK6hB,WAAWrD,EAAMtB,MAAM,EAAG,EAAIvc,GAAmB,IAAb6d,EAAM,GAExD,MAAM,IAAInf,OAAM,yBAGlBwgB,UAAU5gB,UAAU6iB,iBAAmB,SAA0B7E,GAC/D,MAAOjd,MAAK2e,OAAO1B,GAAK,IAG1B4C,UAAU5gB,UAAU8iB,QAAU,SAAiBC,GAC7C,GAAIrhB,GAAMX,KAAK8f,MAAM3c,EAAEyE,aACnB7E,EAAI/C,KAAKiiB,OAAOrc,QAAQ,KAAMjF,EAElC,OAAIqhB,IACOhiB,KAAKkiB,OAAOtN,SAAW,EAAO,GAAOuN,OAAOpf,IAE9C,GAAOof,OAAOpf,EAAG/C,KAAKkiB,OAAOtc,QAAQ,KAAMjF,KAGtDkf,UAAU5gB,UAAU0f,OAAS,SAAgB1B,EAAK+E,GAChD,MAAOvD,GAAME,OAAO3e,KAAK+hB,QAAQC,GAAU/E,IAG7C4C,UAAU5gB,UAAUmjB,WAAa,SAAoBC,GACnD,GAAIriB,KAAK+f,YACP,MAAO/f,KAET,IAAI+f,IACFK,QAAS,KACT5C,IAAK,KACL8E,KAAM,KAOR,OALAvC,GAAYvC,IAAMxd,KAAKghB,cAAc,GACrCjB,EAAYK,QAAUpgB,KAAKqgB,YAAY,EAAGgC,GAC1CtC,EAAYuC,KAAOtiB,KAAKuiB,WACxBviB,KAAK+f,YAAcA,EAEZ/f,MAGT6f,UAAU5gB,UAAUujB,YAAc,SAAqBtgB,GACrD,IAAKlC,KAAK+f,YACR,OAAO,CAET,IAAIK,GAAUpgB,KAAK+f,YAAYK,OAC/B,SAAKA,GAGEA,EAAQQ,OAAOzgB,QAAUS,KAAKiF,MAAM3D,EAAEX,YAAc,GAAK6e,EAAQG,OAG1EV,UAAU5gB,UAAUohB,YAAc,SAAqBE,EAAM8B,GAC3D,GAAIriB,KAAK+f,aAAe/f,KAAK+f,YAAYK,QACvC,MAAOpgB,MAAK+f,YAAYK,OAI1B,KAAK,GAFDA,IAAYpgB,MACZqU,EAAMrU,KACDc,EAAI,EAAGA,EAAIuhB,EAAOvhB,GAAKyf,EAAM,CACpC,IAAK,GAAIje,GAAI,EAAGA,EAAIie,EAAMje,IACxB+R,EAAMA,EAAIoO,KACZrC,GAAQjD,KAAK9I,GAEf,OACEkM,KAAMA,EACNK,OAAQR,IAIZP,UAAU5gB,UAAU+hB,cAAgB,SAAuBhI,GACzD,GAAIhZ,KAAK+f,aAAe/f,KAAK+f,YAAYvC,IACvC,MAAOxd,MAAK+f,YAAYvC,GAK1B,KAAK,GAHDzV,IAAQ/H,MACRuC,GAAO,GAAKyW,GAAO,EACnByJ,EAAc,IAARlgB,EAAY,KAAOvC,KAAKyiB,MACzB3hB,EAAI,EAAGA,EAAIyB,EAAKzB,IACvBiH,EAAIjH,GAAKiH,EAAIjH,EAAI,GAAGsJ,IAAIqY,EAC1B,QACEzJ,IAAKA,EACL4H,OAAQ7Y,IAIZ8X,UAAU5gB,UAAUsjB,SAAW,WAC7B,MAAO,OAGT1C,UAAU5gB,UAAUgiB,KAAO,SAAc/e,GAEvC,IAAK,GADDxB,GAAIV,KACCc,EAAI,EAAGA,EAAIoB,EAAGpB,IACrBJ,EAAIA,EAAE+hB,KACR,OAAO/hB,KJ6gHHgiB,IACA,SAASjkB,EAAQC,EAASC,GKn4HhC,YAUA,SAASgkB,YAAW1D,GAClB2D,EAAKlf,KAAK1D,KAAM,QAASif,GAEzBjf,KAAK8B,EAAI,GAAInC,GAAGsf,EAAKnd,EAAG,IAAIqU,MAAMnW,KAAKI,KACvCJ,KAAK+B,EAAI,GAAIpC,GAAGsf,EAAKld,EAAG,IAAIoU,MAAMnW,KAAKI,KACvCJ,KAAK6iB,KAAO7iB,KAAKmf,IAAI3H,UAErBxX,KAAK8iB,MAAqC,IAA7B9iB,KAAK8B,EAAEyU,UAAUjB,KAAK,GACnCtV,KAAK+iB,OAAmD,IAA1C/iB,KAAK8B,EAAEyU,UAAUzR,IAAI9E,KAAKmD,GAAGmS,SAG3CtV,KAAKgjB,KAAOhjB,KAAKijB,iBAAiBhE,GAClCjf,KAAKkjB,YAAc,GAAI5hB,OAAM,GAC7BtB,KAAKmjB,YAAc,GAAI7hB,OAAM,GAoO/B,QAAS8hB,OAAMtD,EAAO/c,EAAGC,EAAGqgB,GAC1BT,EAAK/C,UAAUnc,KAAK1D,KAAM8f,EAAO,UACvB,OAAN/c,GAAoB,OAANC,GAChBhD,KAAK+C,EAAI,KACT/C,KAAKgD,EAAI,KACThD,KAAKsjB,KAAM,IAEXtjB,KAAK+C,EAAI,GAAIpD,GAAGoD,EAAG,IACnB/C,KAAKgD,EAAI,GAAIrD,GAAGqD,EAAG,IAEfqgB,IACFrjB,KAAK+C,EAAE0T,SAASzW,KAAK8f,MAAM1f,KAC3BJ,KAAKgD,EAAEyT,SAASzW,KAAK8f,MAAM1f,MAExBJ,KAAK+C,EAAE3C,MACVJ,KAAK+C,EAAI/C,KAAK+C,EAAEoT,MAAMnW,KAAK8f,MAAM1f,MAC9BJ,KAAKgD,EAAE5C,MACVJ,KAAKgD,EAAIhD,KAAKgD,EAAEmT,MAAMnW,KAAK8f,MAAM1f,MACnCJ,KAAKsjB,KAAM,GA4Nf,QAASC,QAAOzD,EAAO/c,EAAGC,EAAG6V,GAC3B+J,EAAK/C,UAAUnc,KAAK1D,KAAM8f,EAAO,YACvB,OAAN/c,GAAoB,OAANC,GAAoB,OAAN6V,GAC9B7Y,KAAK+C,EAAI/C,KAAK8f,MAAMpH,IACpB1Y,KAAKgD,EAAIhD,KAAK8f,MAAMpH,IACpB1Y,KAAK6Y,EAAI,GAAIlZ,GAAG,KAEhBK,KAAK+C,EAAI,GAAIpD,GAAGoD,EAAG,IACnB/C,KAAKgD,EAAI,GAAIrD,GAAGqD,EAAG,IACnBhD,KAAK6Y,EAAI,GAAIlZ,GAAGkZ,EAAG,KAEhB7Y,KAAK+C,EAAE3C,MACVJ,KAAK+C,EAAI/C,KAAK+C,EAAEoT,MAAMnW,KAAK8f,MAAM1f,MAC9BJ,KAAKgD,EAAE5C,MACVJ,KAAKgD,EAAIhD,KAAKgD,EAAEmT,MAAMnW,KAAK8f,MAAM1f,MAC9BJ,KAAK6Y,EAAEzY,MACVJ,KAAK6Y,EAAI7Y,KAAK6Y,EAAE1C,MAAMnW,KAAK8f,MAAM1f,MAEnCJ,KAAKwjB,KAAOxjB,KAAK6Y,IAAM7Y,KAAK8f,MAAMpH,IAzfpC,GAAIoH,GAAQnhB,EAAQ,KAChBqhB,EAAWrhB,EAAQ,KACnBgB,EAAKhB,EAAQ,KACbW,EAAWX,EAAQ,KACnBikB,EAAO9C,EAAMjgB,KAEbX,EAAS8gB,EAASvB,MAAMvf,MAiB5BI,GAASqjB,WAAYC,GACrBnkB,EAAOC,QAAUikB,WAEjBA,WAAW1jB,UAAUgkB,iBAAmB,SAA0BhE,GAEhE,GAAKjf,KAAK8iB,OAAU9iB,KAAK2U,GAAM3U,KAAKoD,GAAwB,IAAnBpD,KAAKmD,EAAEiE,KAAK,GAArD,CAIA,GAAIkb,GACAmB,CACJ,IAAIxE,EAAKqD,KACPA,EAAO,GAAI3iB,GAAGsf,EAAKqD,KAAM,IAAInM,MAAMnW,KAAKI,SACnC,CACL,GAAIsjB,GAAQ1jB,KAAK2jB,cAAc3jB,KAAKmD,EAEpCmf,GAAOoB,EAAM,GAAGre,IAAIqe,EAAM,IAAM,EAAIA,EAAM,GAAKA,EAAM,GACrDpB,EAAOA,EAAKnM,MAAMnW,KAAKI,KAEzB,GAAI6e,EAAKwE,OACPA,EAAS,GAAI9jB,GAAGsf,EAAKwE,OAAQ,QACxB,CAEL,GAAIG,GAAU5jB,KAAK2jB,cAAc3jB,KAAKoD,EACsB,KAAxDpD,KAAK2U,EAAEzT,IAAI0iB,EAAQ,IAAI7gB,EAAEsC,IAAIrF,KAAK2U,EAAE5R,EAAEiU,OAAOsL,IAC/CmB,EAASG,EAAQ,IAEjBH,EAASG,EAAQ,GACjB1kB,EAA2D,IAApDc,KAAK2U,EAAEzT,IAAIuiB,GAAQ1gB,EAAEsC,IAAIrF,KAAK2U,EAAE5R,EAAEiU,OAAOsL,MAKpD,GAAIuB,EAYJ,OAVEA,GADE5E,EAAK4E,MACC5E,EAAK4E,MAAMC,IAAI,SAASC,GAC9B,OACEjiB,EAAG,GAAInC,GAAGokB,EAAIjiB,EAAG,IACjBC,EAAG,GAAIpC,GAAGokB,EAAIhiB,EAAG,OAIb/B,KAAKgkB,cAAcP,IAI3BnB,KAAMA,EACNmB,OAAQA,EACRI,MAAOA,KAIXlB,WAAW1jB,UAAU0kB,cAAgB,SAAuBviB,GAI1D,GAAIhB,GAAMgB,IAAQpB,KAAKmD,EAAInD,KAAKI,IAAMT,EAAGwZ,KAAK/X,GAC1CyhB,EAAO,GAAIljB,GAAG,GAAGwW,MAAM/V,GAAKoX,UAC5ByM,EAAQpB,EAAKpL,SAEbpH,EAAI,GAAI1Q,GAAG,GAAGwW,MAAM/V,GAAKqX,SAASH,UAAUN,OAAO6L,GAEnDqB,EAAKD,EAAMvN,OAAOrG,GAAGkG,UACrB4N,EAAKF,EAAMrN,OAAOvG,GAAGkG,SACzB,QAAS2N,EAAIC,IAGfxB,WAAW1jB,UAAU+kB,cAAgB,SAAuBP,GA2B1D,IAzBA,GAYIjZ,GACA8B,EAEA3B,EACA8B,EAEA3B,EACA8B,EAEAwX,EAEA1jB,EACAqC,EAxBAshB,EAAWrkB,KAAKoD,EAAE8P,MAAMtS,KAAK0jB,MAAMtkB,KAAKoD,EAAE7B,YAAc,IAIxD6X,EAAIqK,EACJc,EAAIvkB,KAAKoD,EAAEoD,QACX2O,EAAK,GAAIxV,GAAG,GACZ6kB,EAAK,GAAI7kB,GAAG,GACZyV,EAAK,GAAIzV,GAAG,GACZ8kB,EAAK,GAAI9kB,GAAG,GAaZmB,EAAI,EAGa,IAAdsY,EAAE9D,KAAK,IAAU,CACtB,GAAItN,GAAIuc,EAAE3f,IAAIwU,EACd1Y,GAAI6jB,EAAEzf,IAAIkD,EAAE9G,IAAIkY,IAChBrW,EAAIqS,EAAGtQ,IAAIkD,EAAE9G,IAAIiU,GACjB,IAAInS,GAAIyhB,EAAG3f,IAAIkD,EAAE9G,IAAIsjB,GAErB,KAAK7Z,GAAMjK,EAAE2E,IAAIgf,GAAY,EAC3B7Z,EAAK4Z,EAAMjb,MACXmD,EAAK6I,EACLxK,EAAKjK,EAAEyI,MACPsD,EAAK1J,MACA,IAAI4H,GAAc,MAAN7J,EACjB,KAEFsjB,GAAQ1jB,EAER6jB,EAAInL,EACJA,EAAI1Y,EACJ0U,EAAKD,EACLA,EAAKpS,EACL0hB,EAAKD,EACLA,EAAKxhB,EAEP8H,EAAKpK,EAAEyI,MACPyD,EAAK7J,CAEL,IAAI2hB,GAAO/Z,EAAGpG,MAAM6F,IAAIqC,EAAGlI,OACvBogB,EAAO7Z,EAAGvG,MAAM6F,IAAIwC,EAAGrI,MAgB3B,OAfIogB,GAAKtf,IAAIqf,IAAS,IACpB5Z,EAAKN,EACLoC,EAAKN,GAIH3B,EAAG1K,WACL0K,EAAKA,EAAGxB,MACRsD,EAAKA,EAAGtD,OAEN2B,EAAG7K,WACL6K,EAAKA,EAAG3B,MACRyD,EAAKA,EAAGzD,SAINrH,EAAG6I,EAAI5I,EAAG0K,IACV3K,EAAGgJ,EAAI/I,EAAG6K,KAIhB+V,WAAW1jB,UAAU2lB,WAAa,SAAoB1iB,GACpD,GAAI2hB,GAAQ7jB,KAAKgjB,KAAKa,MAClBgB,EAAKhB,EAAM,GACXiB,EAAKjB,EAAM,GAEXkB,EAAKD,EAAG/iB,EAAEb,IAAIgB,GAAGgS,SAASlU,KAAKoD,GAC/B4hB,EAAKH,EAAG9iB,EAAEoH,MAAMjI,IAAIgB,GAAGgS,SAASlU,KAAKoD,GAErC6hB,EAAKF,EAAG7jB,IAAI2jB,EAAG/iB,GACfojB,EAAKF,EAAG9jB,IAAI4jB,EAAGhjB,GACfqjB,EAAKJ,EAAG7jB,IAAI2jB,EAAG9iB,GACfqjB,EAAKJ,EAAG9jB,IAAI4jB,EAAG/iB,GAGf2b,EAAKxb,EAAE4C,IAAImgB,GAAIngB,IAAIogB,GACnBvH,EAAKwH,EAAG/a,IAAIgb,GAAIjc,KACpB,QAASuU,GAAIA,EAAIC,GAAIA,IAGvBgF,WAAW1jB,UAAU4iB,WAAa,SAAoB9e,EAAGoO,GACvDpO,EAAI,GAAIpD,GAAGoD,EAAG,IACTA,EAAE3C,MACL2C,EAAIA,EAAEoT,MAAMnW,KAAKI,KAEnB,IAAIqkB,GAAK1hB,EAAEoU,SAASH,OAAOjU,GAAG4T,QAAQ5T,EAAEiU,OAAOhX,KAAK8B,IAAI6U,QAAQ3W,KAAK+B,GACjEiB,EAAIyhB,EAAGnN,SACX,IAA6C,IAAzCtU,EAAEmU,SAASP,OAAO6N,GAAIpf,IAAIrF,KAAKkf,MACjC,KAAM,IAAI7f,OAAM,gBAIlB,IAAI2V,GAAQhS,EAAEuT,UAAUvB,OAIxB,QAHI7D,IAAQ6D,IAAU7D,GAAO6D,KAC3BhS,EAAIA,EAAEyU,UAEDzX,KAAKigB,MAAMld,EAAGC,IAGvB2f,WAAW1jB,UAAUihB,SAAW,SAAkBD,GAChD,GAAIA,EAAMqD,IACR,OAAO,CAET,IAAIvgB,GAAIkd,EAAMld,EACVC,EAAIid,EAAMjd,EAEVqiB,EAAKrlB,KAAK8B,EAAEkV,OAAOjU,GACnBuiB,EAAMviB,EAAEoU,SAASH,OAAOjU,GAAG4T,QAAQ0O,GAAI1O,QAAQ3W,KAAK+B,EACxD,OAA2C,KAApCiB,EAAEmU,SAASN,QAAQyO,GAAKhQ,KAAK,IAGtCqN,WAAW1jB,UAAUsmB,gBACjB,SAAyB3E,EAAQQ,EAAQC,GAG3C,IAAK,GAFDmE,GAAUxlB,KAAKkjB,YACfuC,EAAUzlB,KAAKmjB,YACVriB,EAAI,EAAGA,EAAI8f,EAAOzgB,OAAQW,IAAK,CACtC,GAAIoX,GAAQlY,KAAK4kB,WAAWxD,EAAOtgB,IAC/BqC,EAAIyd,EAAO9f,GACXwhB,EAAOnf,EAAEof,UAETrK,GAAMwF,GAAGzd,WACXiY,EAAMwF,GAAGzU,OACT9F,EAAIA,EAAEgG,KAAI,IAER+O,EAAMyF,GAAG1d,WACXiY,EAAMyF,GAAG1U,OACTqZ,EAAOA,EAAKnZ,KAAI,IAGlBqc,EAAY,EAAJ1kB,GAASqC,EACjBqiB,EAAY,EAAJ1kB,EAAQ,GAAKwhB,EACrBmD,EAAY,EAAJ3kB,GAASoX,EAAMwF,GACvB+H,EAAY,EAAJ3kB,EAAQ,GAAKoX,EAAMyF,GAK7B,IAAK,GAHD5V,GAAM/H,KAAKkhB,YAAY,EAAGsE,EAASC,EAAa,EAAJ3kB,EAAOugB,GAG9C/e,EAAI,EAAGA,EAAQ,EAAJxB,EAAOwB,IACzBkjB,EAAQljB,GAAK,KACbmjB,EAAQnjB,GAAK,IAEf,OAAOyF,IAwBTzI,EAAS8jB,MAAOR,EAAK/C,WAErB8C,WAAW1jB,UAAUghB,MAAQ,SAAeld,EAAGC,EAAGqgB,GAChD,MAAO,IAAID,OAAMpjB,KAAM+C,EAAGC,EAAGqgB,IAG/BV,WAAW1jB,UAAUmgB,cAAgB,SAAuBrgB,EAAKqB,GAC/D,MAAOgjB,OAAMsC,SAAS1lB,KAAMjB,EAAKqB,IAGnCgjB,MAAMnkB,UAAUsjB,SAAW,WACzB,GAAKviB,KAAK8f,MAAMkD,KAAhB,CAGA,GAAI2C,GAAM3lB,KAAK+f,WACf,IAAI4F,GAAOA,EAAIrD,KACb,MAAOqD,GAAIrD,IAEb,IAAIA,GAAOtiB,KAAK8f,MAAMG,MAAMjgB,KAAK+C,EAAEiU,OAAOhX,KAAK8f,MAAMkD,KAAKV,MAAOtiB,KAAKgD,EACtE,IAAI2iB,EAAK,CACP,GAAI7F,GAAQ9f,KAAK8f,MACb8F,EAAU,SAASziB,GACrB,MAAO2c,GAAMG,MAAM9c,EAAEJ,EAAEiU,OAAO8I,EAAMkD,KAAKV,MAAOnf,EAAEH,GAEpD2iB,GAAIrD,KAAOA,EACXA,EAAKvC,aACHuC,KAAM,KACN9E,IAAKmI,EAAInI,MACPxE,IAAK2M,EAAInI,IAAIxE,IACb4H,OAAQ+E,EAAInI,IAAIoD,OAAOkD,IAAI8B,IAE7BxF,QAASuF,EAAIvF,UACXG,KAAMoF,EAAIvF,QAAQG,KAClBK,OAAQ+E,EAAIvF,QAAQQ,OAAOkD,IAAI8B,KAIrC,MAAOtD,KAGTc,MAAMnkB,UAAUuI,OAAS,WACvB,MAAKxH,MAAK+f,aAGD/f,KAAK+C,EAAG/C,KAAKgD,EAAGhD,KAAK+f,cAC5BK,QAASpgB,KAAK+f,YAAYK,UACxBG,KAAMvgB,KAAK+f,YAAYK,QAAQG;AAC/BK,OAAQ5gB,KAAK+f,YAAYK,QAAQQ,OAAO1D,MAAM,IAEhDM,IAAKxd,KAAK+f,YAAYvC,MACpBxE,IAAKhZ,KAAK+f,YAAYvC,IAAIxE,IAC1B4H,OAAQ5gB,KAAK+f,YAAYvC,IAAIoD,OAAO1D,MAAM,OATnCld,KAAK+C,EAAG/C,KAAKgD,IAc1BogB,MAAMsC,SAAW,SAAkB5F,EAAO/gB,EAAKqB,GAO7C,QAASylB,WAAU9mB,GACjB,MAAO+gB,GAAMG,MAAMlhB,EAAI,GAAIA,EAAI,GAAIqB,GAPlB,gBAARrB,KACTA,EAAM+mB,KAAKC,MAAMhnB,GACnB,IAAIgJ,GAAM+X,EAAMG,MAAMlhB,EAAI,GAAIA,EAAI,GAAIqB,EACtC,KAAKrB,EAAI,GACP,MAAOgJ,EAMT,IAAI4d,GAAM5mB,EAAI,EAYd,OAXAgJ,GAAIgY,aACFuC,KAAM,KACNlC,QAASuF,EAAIvF,UACXG,KAAMoF,EAAIvF,QAAQG,KAClBK,QAAU7Y,GAAMoa,OAAOwD,EAAIvF,QAAQQ,OAAOkD,IAAI+B,aAEhDrI,IAAKmI,EAAInI,MACPxE,IAAK2M,EAAInI,IAAIxE,IACb4H,QAAU7Y,GAAMoa,OAAOwD,EAAInI,IAAIoD,OAAOkD,IAAI+B,cAGvC9d,GAGTqb,MAAMnkB,UAAU2H,QAAU,WACxB,MAAI5G,MAAKgmB,aACA,sBACF,gBAAkBhmB,KAAK+C,EAAEwT,UAAU/Q,SAAS,GAAI,GACnD,OAASxF,KAAKgD,EAAEuT,UAAU/Q,SAAS,GAAI,GAAK,KAGlD4d,MAAMnkB,UAAU+mB,WAAa,WAC3B,MAAOhmB,MAAKsjB,KAGdF,MAAMnkB,UAAUmL,IAAM,SAAajH,GAEjC,GAAInD,KAAKsjB,IACP,MAAOngB,EAGT,IAAIA,EAAEmgB,IACJ,MAAOtjB,KAGT,IAAIA,KAAKkW,GAAG/S,GACV,MAAOnD,MAAKyiB,KAGd,IAAIziB,KAAKmJ,MAAM+M,GAAG/S,GAChB,MAAOnD,MAAK8f,MAAMG,MAAM,KAAM,KAGhC,IAAwB,IAApBjgB,KAAK+C,EAAEsC,IAAIlC,EAAEJ,GACf,MAAO/C,MAAK8f,MAAMG,MAAM,KAAM,KAEhC,IAAIlf,GAAIf,KAAKgD,EAAE4T,OAAOzT,EAAEH,EACN,KAAdjC,EAAEuU,KAAK,KACTvU,EAAIA,EAAEiW,OAAOhX,KAAK+C,EAAE6T,OAAOzT,EAAEJ,GAAGyU,WAClC,IAAIyO,GAAKllB,EAAEoW,SAASN,QAAQ7W,KAAK+C,GAAG8T,QAAQ1T,EAAEJ,GAC1CmjB,EAAKnlB,EAAEiW,OAAOhX,KAAK+C,EAAE6T,OAAOqP,IAAKpP,QAAQ7W,KAAKgD,EAClD,OAAOhD,MAAK8f,MAAMG,MAAMgG,EAAIC,IAG9B9C,MAAMnkB,UAAUwjB,IAAM,WACpB,GAAIziB,KAAKsjB,IACP,MAAOtjB,KAGT,IAAImmB,GAAMnmB,KAAKgD,EAAE0T,OAAO1W,KAAKgD,EAC7B,IAAoB,IAAhBmjB,EAAI7Q,KAAK,GACX,MAAOtV,MAAK8f,MAAMG,MAAM,KAAM,KAEhC,IAAIne,GAAI9B,KAAK8f,MAAMhe,EAEfsT,EAAKpV,KAAK+C,EAAEoU,SACZiP,EAAQD,EAAI3O,UACZzW,EAAIqU,EAAGsB,OAAOtB,GAAIuB,QAAQvB,GAAIuB,QAAQ7U,GAAGkV,OAAOoP,GAEhDH,EAAKllB,EAAEoW,SAASN,QAAQ7W,KAAK+C,EAAE2T,OAAO1W,KAAK+C,IAC3CmjB,EAAKnlB,EAAEiW,OAAOhX,KAAK+C,EAAE6T,OAAOqP,IAAKpP,QAAQ7W,KAAKgD,EAClD,OAAOhD,MAAK8f,MAAMG,MAAMgG,EAAIC,IAG9B9C,MAAMnkB,UAAUgjB,KAAO,WACrB,MAAOjiB,MAAK+C,EAAEwT,WAGhB6M,MAAMnkB,UAAUijB,KAAO,WACrB,MAAOliB,MAAKgD,EAAEuT,WAGhB6M,MAAMnkB,UAAUiC,IAAM,SAAagB,GAGjC,MAFAA,GAAI,GAAIvC,GAAGuC,EAAG,IAEVlC,KAAKwiB,YAAYtgB,GACZlC,KAAK8f,MAAMK,aAAangB,KAAMkC,GAC9BlC,KAAK8f,MAAMkD,KACXhjB,KAAK8f,MAAMyF,iBAAkBvlB,OAAUkC,IAEvClC,KAAK8f,MAAMgB,SAAS9gB,KAAMkC,IAGrCkhB,MAAMnkB,UAAUonB,OAAS,SAAgB3I,EAAIwH,EAAIvH,GAC/C,GAAIiD,IAAW5gB,KAAMklB,GACjB9D,GAAW1D,EAAIC,EACnB,OAAI3d,MAAK8f,MAAMkD,KACNhjB,KAAK8f,MAAMyF,gBAAgB3E,EAAQQ,GAEnCphB,KAAK8f,MAAMoB,YAAY,EAAGN,EAAQQ,EAAQ,IAGrDgC,MAAMnkB,UAAUqnB,QAAU,SAAiB5I,EAAIwH,EAAIvH,GACjD,GAAIiD,IAAW5gB,KAAMklB,GACjB9D,GAAW1D,EAAIC,EACnB,OAAI3d,MAAK8f,MAAMkD,KACNhjB,KAAK8f,MAAMyF,gBAAgB3E,EAAQQ,GAAQ,GAE3CphB,KAAK8f,MAAMoB,YAAY,EAAGN,EAAQQ,EAAQ,GAAG,IAGxDgC,MAAMnkB,UAAUiX,GAAK,SAAY/S,GAC/B,MAAOnD,QAASmD,GACTnD,KAAKsjB,MAAQngB,EAAEmgB,MACVtjB,KAAKsjB,KAA2B,IAApBtjB,KAAK+C,EAAEsC,IAAIlC,EAAEJ,IAAgC,IAApB/C,KAAKgD,EAAEqC,IAAIlC,EAAEH,KAGhEogB,MAAMnkB,UAAUkK,IAAM,SAAaod,GACjC,GAAIvmB,KAAKsjB,IACP,MAAOtjB,KAET,IAAI+H,GAAM/H,KAAK8f,MAAMG,MAAMjgB,KAAK+C,EAAG/C,KAAKgD,EAAEyU,SAC1C,IAAI8O,GAAevmB,KAAK+f,YAAa,CACnC,GAAI4F,GAAM3lB,KAAK+f,YACXyG,EAAS,SAASrjB,GACpB,MAAOA,GAAEgG,MAEXpB,GAAIgY,aACFvC,IAAKmI,EAAInI,MACPxE,IAAK2M,EAAInI,IAAIxE,IACb4H,OAAQ+E,EAAInI,IAAIoD,OAAOkD,IAAI0C,IAE7BpG,QAASuF,EAAIvF,UACXG,KAAMoF,EAAIvF,QAAQG,KAClBK,OAAQ+E,EAAIvF,QAAQQ,OAAOkD,IAAI0C,KAIrC,MAAOze,IAGTqb,MAAMnkB,UAAUuiB,IAAM,WACpB,GAAIxhB,KAAKsjB,IACP,MAAOtjB,MAAK8f,MAAMY,OAAO,KAAM,KAAM,KAEvC,IAAI3Y,GAAM/H,KAAK8f,MAAMY,OAAO1gB,KAAK+C,EAAG/C,KAAKgD,EAAGhD,KAAK8f,MAAMpH,IACvD,OAAO3Q,IAuBTzI,EAASikB,OAAQX,EAAK/C,WAEtB8C,WAAW1jB,UAAUyhB,OAAS,SAAgB3d,EAAGC,EAAG6V,GAClD,MAAO,IAAI0K,QAAOvjB,KAAM+C,EAAGC,EAAG6V,IAGhC0K,OAAOtkB,UAAU4hB,IAAM,WACrB,GAAI7gB,KAAKgmB,aACP,MAAOhmB,MAAK8f,MAAMG,MAAM,KAAM,KAEhC,IAAIwG,GAAOzmB,KAAK6Y,EAAErB,UACdkP,EAAQD,EAAKtP,SACbkO,EAAKrlB,KAAK+C,EAAEiU,OAAO0P,GACnBC,EAAK3mB,KAAKgD,EAAEgU,OAAO0P,GAAO1P,OAAOyP,EAErC,OAAOzmB,MAAK8f,MAAMG,MAAMoF,EAAIsB,IAG9BpD,OAAOtkB,UAAUkK,IAAM,WACrB,MAAOnJ,MAAK8f,MAAMY,OAAO1gB,KAAK+C,EAAG/C,KAAKgD,EAAEyU,SAAUzX,KAAK6Y,IAGzD0K,OAAOtkB,UAAUmL,IAAM,SAAajH,GAElC,GAAInD,KAAKgmB,aACP,MAAO7iB,EAGT,IAAIA,EAAE6iB,aACJ,MAAOhmB,KAGT,IAAI4mB,GAAMzjB,EAAE0V,EAAE1B,SACV0P,EAAK7mB,KAAK6Y,EAAE1B,SACZ8G,EAAKje,KAAK+C,EAAEiU,OAAO4P,GACnBzI,EAAKhb,EAAEJ,EAAEiU,OAAO6P,GAChBC,EAAK9mB,KAAKgD,EAAEgU,OAAO4P,EAAI5P,OAAO7T,EAAE0V,IAChCkO,EAAK5jB,EAAEH,EAAEgU,OAAO6P,EAAG7P,OAAOhX,KAAK6Y,IAE/BlG,EAAIsL,EAAGrH,OAAOuH,GACdzd,EAAIomB,EAAGlQ,OAAOmQ,EAClB,IAAkB,IAAdpU,EAAE2C,KAAK,GACT,MAAkB,KAAd5U,EAAE4U,KAAK,GACFtV,KAAK8f,MAAMY,OAAO,KAAM,KAAM,MAE9B1gB,KAAKyiB,KAGhB,IAAIuE,GAAKrU,EAAEwE,SACP8P,EAAKD,EAAGhQ,OAAOrE,GACf4R,EAAItG,EAAGjH,OAAOgQ,GAEdf,EAAKvlB,EAAEyW,SAASR,QAAQsQ,GAAIpQ,QAAQ0N,GAAG1N,QAAQ0N,GAC/C2B,EAAKxlB,EAAEsW,OAAOuN,EAAE1N,QAAQoP,IAAKpP,QAAQiQ,EAAG9P,OAAOiQ,IAC/CC,EAAKlnB,KAAK6Y,EAAE7B,OAAO7T,EAAE0V,GAAG7B,OAAOrE,EAEnC,OAAO3S,MAAK8f,MAAMY,OAAOuF,EAAIC,EAAIgB,IAGnC3D,OAAOtkB,UAAU0hB,SAAW,SAAkBxd,GAE5C,GAAInD,KAAKgmB,aACP,MAAO7iB,GAAEqe,KAGX,IAAIre,EAAE6iB,aACJ,MAAOhmB,KAGT,IAAI6mB,GAAK7mB,KAAK6Y,EAAE1B,SACZ8G,EAAKje,KAAK+C,EACVob,EAAKhb,EAAEJ,EAAEiU,OAAO6P,GAChBC,EAAK9mB,KAAKgD,EACV+jB,EAAK5jB,EAAEH,EAAEgU,OAAO6P,GAAI7P,OAAOhX,KAAK6Y,GAEhClG,EAAIsL,EAAGrH,OAAOuH,GACdzd,EAAIomB,EAAGlQ,OAAOmQ,EAClB,IAAkB,IAAdpU,EAAE2C,KAAK,GACT,MAAkB,KAAd5U,EAAE4U,KAAK,GACFtV,KAAK8f,MAAMY,OAAO,KAAM,KAAM,MAE9B1gB,KAAKyiB,KAGhB,IAAIuE,GAAKrU,EAAEwE,SACP8P,EAAKD,EAAGhQ,OAAOrE,GACf4R,EAAItG,EAAGjH,OAAOgQ,GAEdf,EAAKvlB,EAAEyW,SAASR,QAAQsQ,GAAIpQ,QAAQ0N,GAAG1N,QAAQ0N,GAC/C2B,EAAKxlB,EAAEsW,OAAOuN,EAAE1N,QAAQoP,IAAKpP,QAAQiQ,EAAG9P,OAAOiQ,IAC/CC,EAAKlnB,KAAK6Y,EAAE7B,OAAOrE,EAEvB,OAAO3S,MAAK8f,MAAMY,OAAOuF,EAAIC,EAAIgB,IAGnC3D,OAAOtkB,UAAUgiB,KAAO,SAAc5a,GACpC,GAAY,IAARA,EACF,MAAOrG,KACT,IAAIA,KAAKgmB,aACP,MAAOhmB,KACT,KAAKqG,EACH,MAAOrG,MAAKyiB,KAEd,IAAIziB,KAAK8f,MAAMgD,OAAS9iB,KAAK8f,MAAMiD,OAAQ,CAEzC,IAAK,GADDriB,GAAIV,KACCc,EAAI,EAAGA,EAAIuF,EAAKvF,IACvBJ,EAAIA,EAAE+hB,KACR,OAAO/hB,GAeT,IAAK,GAVDoB,GAAI9B,KAAK8f,MAAMhe,EACf+gB,EAAO7iB,KAAK8f,MAAM+C,KAElBsE,EAAKnnB,KAAK+C,EACVqkB,EAAKpnB,KAAKgD,EACVqkB,EAAKrnB,KAAK6Y,EACVyO,EAAMD,EAAGlQ,SAASA,SAGlBoQ,EAAMH,EAAG1Q,OAAO0Q,GACXtmB,EAAI,EAAGA,EAAIuF,EAAKvF,IAAK,CAC5B,GAAI0mB,GAAML,EAAGhQ,SACTsQ,EAAOF,EAAIpQ,SACXuQ,EAAOD,EAAKtQ,SACZpW,EAAIymB,EAAI9Q,OAAO8Q,GAAK7Q,QAAQ6Q,GAAK7Q,QAAQ7U,EAAEkV,OAAOsQ,IAElDK,EAAKR,EAAGnQ,OAAOyQ,GACfxB,EAAKllB,EAAEoW,SAASN,QAAQ8Q,EAAGjR,OAAOiR,IAClCC,EAAKD,EAAG9Q,QAAQoP,GAChB4B,EAAM9mB,EAAEiW,OAAO4Q,EACnBC,GAAMA,EAAIlR,QAAQkR,GAAKhR,QAAQ6Q,EAC/B,IAAIR,GAAKK,EAAIvQ,OAAOqQ,EAChBvmB,GAAI,EAAIuF,IACVihB,EAAMA,EAAItQ,OAAO0Q,IAEnBP,EAAKlB,EACLoB,EAAKH,EACLK,EAAMM,EAGR,MAAO7nB,MAAK8f,MAAMY,OAAOyG,EAAII,EAAIvQ,OAAO6L,GAAOwE,IAGjD9D,OAAOtkB,UAAUwjB,IAAM,WACrB,MAAIziB,MAAKgmB,aACAhmB,KAELA,KAAK8f,MAAMgD,MACN9iB,KAAK8nB,WACL9nB,KAAK8f,MAAMiD,OACX/iB,KAAK+nB,YAEL/nB,KAAKgoB,QAGhBzE,OAAOtkB,UAAU6oB,SAAW,WAC1B,GAAI7B,GACAC,EACAgB,CAEJ,IAAIlnB,KAAKwjB,KAAM,CAMb,GAAIyE,GAAKjoB,KAAK+C,EAAEoU,SAEZ+Q,EAAKloB,KAAKgD,EAAEmU,SAEZgR,EAAOD,EAAG/Q,SAEV9G,EAAIrQ,KAAK+C,EAAE2T,OAAOwR,GAAI/Q,SAASN,QAAQoR,GAAIpR,QAAQsR,EACvD9X,GAAIA,EAAEsG,QAAQtG,EAEd,IAAItM,GAAIkkB,EAAGvR,OAAOuR,GAAItR,QAAQsR,GAE1B5f,EAAItE,EAAEoT,SAASN,QAAQxG,GAAGwG,QAAQxG,GAGlC+X,EAAQD,EAAKxR,QAAQwR,EACzBC,GAAQA,EAAMzR,QAAQyR,GACtBA,EAAQA,EAAMzR,QAAQyR,GAGtBnC,EAAK5d,EAEL6d,EAAKniB,EAAEiT,OAAO3G,EAAEwG,QAAQxO,IAAIwO,QAAQuR,GAEpClB,EAAKlnB,KAAKgD,EAAE0T,OAAO1W,KAAKgD,OACnB,CAML,GAAIlB,GAAI9B,KAAK+C,EAAEoU,SAEXpV,EAAI/B,KAAKgD,EAAEmU,SAEXpW,EAAIgB,EAAEoV,SAENkR,EAAIroB,KAAK+C,EAAE2T,OAAO3U,GAAGoV,SAASN,QAAQ/U,GAAG+U,QAAQ9V,EACrDsnB,GAAIA,EAAE1R,QAAQ0R,EAEd,IAAIpjB,GAAInD,EAAE4U,OAAO5U,GAAG6U,QAAQ7U,GAExBwmB,EAAIrjB,EAAEkS,SAGNoR,EAAKxnB,EAAE4V,QAAQ5V,EACnBwnB,GAAKA,EAAG5R,QAAQ4R,GAChBA,EAAKA,EAAG5R,QAAQ4R,GAGhBtC,EAAKqC,EAAEzR,QAAQwR,GAAGxR,QAAQwR,GAE1BnC,EAAKjhB,EAAE+R,OAAOqR,EAAExR,QAAQoP,IAAKpP,QAAQ0R,GAErCrB,EAAKlnB,KAAKgD,EAAEgU,OAAOhX,KAAK6Y,GACxBqO,EAAKA,EAAGvQ,QAAQuQ,GAGlB,MAAOlnB,MAAK8f,MAAMY,OAAOuF,EAAIC,EAAIgB,IAGnC3D,OAAOtkB,UAAU8oB,UAAY,WAC3B,GAAI9B,GACAC,EACAgB,CAEJ,IAAIlnB,KAAKwjB,KAAM,CAMb,GAAIyE,GAAKjoB,KAAK+C,EAAEoU,SAEZ+Q,EAAKloB,KAAKgD,EAAEmU,SAEZgR,EAAOD,EAAG/Q,SAEV9G,EAAIrQ,KAAK+C,EAAE2T,OAAOwR,GAAI/Q,SAASN,QAAQoR,GAAIpR,QAAQsR,EACvD9X,GAAIA,EAAEsG,QAAQtG,EAEd,IAAItM,GAAIkkB,EAAGvR,OAAOuR,GAAItR,QAAQsR,GAAItR,QAAQ3W,KAAK8f,MAAMhe,GAEjDuG,EAAItE,EAAEoT,SAASN,QAAQxG,GAAGwG,QAAQxG,EAEtC4V,GAAK5d,CAEL,IAAI+f,GAAQD,EAAKxR,QAAQwR,EACzBC,GAAQA,EAAMzR,QAAQyR,GACtBA,EAAQA,EAAMzR,QAAQyR,GACtBlC,EAAKniB,EAAEiT,OAAO3G,EAAEwG,QAAQxO,IAAIwO,QAAQuR,GAEpClB,EAAKlnB,KAAKgD,EAAE0T,OAAO1W,KAAKgD,OACnB,CAKL,GAAIqS,GAAQrV,KAAK6Y,EAAE1B,SAEfqR,EAAQxoB,KAAKgD,EAAEmU,SAEfmL,EAAOtiB,KAAK+C,EAAEiU,OAAOwR,GAErBC,EAAQzoB,KAAK+C,EAAE6T,OAAOvB,GAAO2B,OAAOhX,KAAK+C,EAAE2T,OAAOrB,GACtDoT,GAAQA,EAAM/R,OAAO+R,GAAO9R,QAAQ8R,EAEpC,IAAIC,GAAQpG,EAAK3L,QAAQ2L,EACzBoG,GAAQA,EAAM/R,QAAQ+R,EACtB,IAAIC,GAAQD,EAAMhS,OAAOgS,EACzBzC,GAAKwC,EAAMtR,SAASN,QAAQ8R,GAE5BzB,EAAKlnB,KAAKgD,EAAE0T,OAAO1W,KAAK6Y,GAAG1B,SAASN,QAAQ2R,GAAO3R,QAAQxB,EAE3D,IAAIuT,GAAUJ,EAAMrR,QACpByR,GAAUA,EAAQjS,QAAQiS,GAC1BA,EAAUA,EAAQjS,QAAQiS,GAC1BA,EAAUA,EAAQjS,QAAQiS,GAC1B1C,EAAKuC,EAAMzR,OAAO0R,EAAM7R,QAAQoP,IAAKpP,QAAQ+R,GAG/C,MAAO5oB,MAAK8f,MAAMY,OAAOuF,EAAIC,EAAIgB,IAGnC3D,OAAOtkB,UAAU+oB,KAAO,WACtB,GAAIlmB,GAAI9B,KAAK8f,MAAMhe,EAGfqlB,EAAKnnB,KAAK+C,EACVqkB,EAAKpnB,KAAKgD,EACVqkB,EAAKrnB,KAAK6Y,EACVyO,EAAMD,EAAGlQ,SAASA,SAElBqQ,EAAML,EAAGhQ,SACT0R,EAAMzB,EAAGjQ,SAETpW,EAAIymB,EAAI9Q,OAAO8Q,GAAK7Q,QAAQ6Q,GAAK7Q,QAAQ7U,EAAEkV,OAAOsQ,IAElDwB,EAAO3B,EAAGzQ,OAAOyQ,EACrB2B,GAAOA,EAAKnS,QAAQmS,EACpB,IAAInB,GAAKmB,EAAK9R,OAAO6R,GACjB5C,EAAKllB,EAAEoW,SAASN,QAAQ8Q,EAAGjR,OAAOiR,IAClCC,EAAKD,EAAG9Q,QAAQoP,GAEhB8C,EAAOF,EAAI1R,QACf4R,GAAOA,EAAKpS,QAAQoS,GACpBA,EAAOA,EAAKpS,QAAQoS,GACpBA,EAAOA,EAAKpS,QAAQoS,EACpB,IAAI7C,GAAKnlB,EAAEiW,OAAO4Q,GAAI/Q,QAAQkS,GAC1B7B,EAAKE,EAAG1Q,OAAO0Q,GAAIpQ,OAAOqQ,EAE9B,OAAOrnB,MAAK8f,MAAMY,OAAOuF,EAAIC,EAAIgB,IAGnC3D,OAAOtkB,UAAU+pB,KAAO,WACtB,IAAKhpB,KAAK8f,MAAMgD,MACd,MAAO9iB,MAAKyiB,MAAMrY,IAAIpK,KAMxB,IAAIioB,GAAKjoB,KAAK+C,EAAEoU,SAEZ+Q,EAAKloB,KAAKgD,EAAEmU,SAEZ8R,EAAKjpB,KAAK6Y,EAAE1B,SAEZgR,EAAOD,EAAG/Q,SAEVpT,EAAIkkB,EAAGvR,OAAOuR,GAAItR,QAAQsR,GAE1BiB,EAAKnlB,EAAEoT,SAEPlS,EAAIjF,KAAK+C,EAAE2T,OAAOwR,GAAI/Q,SAASN,QAAQoR,GAAIpR,QAAQsR,EACvDljB,GAAIA,EAAE0R,QAAQ1R,GACdA,EAAIA,EAAEyR,OAAOzR,GAAG0R,QAAQ1R,GACxBA,EAAIA,EAAE4R,QAAQqS,EAEd,IAAIC,GAAKlkB,EAAEkS,SAEP9O,EAAI8f,EAAKxR,QAAQwR,EACrB9f,GAAIA,EAAEsO,QAAQtO,GACdA,EAAIA,EAAEsO,QAAQtO,GACdA,EAAIA,EAAEsO,QAAQtO,EAEd,IAAI+Q,GAAIrV,EAAE4S,QAAQ1R,GAAGkS,SAASN,QAAQqS,GAAIrS,QAAQsS,GAAItS,QAAQxO,GAE1D+gB,EAAOlB,EAAGlR,OAAOoC,EACrBgQ,GAAOA,EAAKzS,QAAQyS,GACpBA,EAAOA,EAAKzS,QAAQyS,EACpB,IAAInD,GAAKjmB,KAAK+C,EAAEiU,OAAOmS,GAAItS,QAAQuS,EACnCnD,GAAKA,EAAGtP,QAAQsP,GAChBA,EAAKA,EAAGtP,QAAQsP,EAEhB,IAAIC,GAAKlmB,KAAKgD,EAAEgU,OAAOoC,EAAEpC,OAAO3O,EAAEwO,QAAQuC,IAAIvC,QAAQ5R,EAAE+R,OAAOmS,IAC/DjD,GAAKA,EAAGvP,QAAQuP,GAChBA,EAAKA,EAAGvP,QAAQuP,GAChBA,EAAKA,EAAGvP,QAAQuP,EAEhB,IAAIgB,GAAKlnB,KAAK6Y,EAAEnC,OAAOzR,GAAGkS,SAASN,QAAQoS,GAAIpS,QAAQsS,EAEvD,OAAOnpB,MAAK8f,MAAMY,OAAOuF,EAAIC,EAAIgB,IAGnC3D,OAAOtkB,UAAUiC,IAAM,SAAagB,EAAGmnB,GAGrC,MAFAnnB,GAAI,GAAIvC,GAAGuC,EAAGmnB,GAEPrpB,KAAK8f,MAAMgB,SAAS9gB,KAAMkC,IAGnCqhB,OAAOtkB,UAAUiX,GAAK,SAAY/S,GAChC,GAAe,WAAXA,EAAE2W,KACJ,MAAO9Z,MAAKkW,GAAG/S,EAAEqe,MAEnB,IAAIxhB,OAASmD,EACX,OAAO,CAGT,IAAI0jB,GAAK7mB,KAAK6Y,EAAE1B,SACZyP,EAAMzjB,EAAE0V,EAAE1B,QACd,IAA2D,IAAvDnX,KAAK+C,EAAEiU,OAAO4P,GAAK/P,QAAQ1T,EAAEJ,EAAEiU,OAAO6P,IAAKvR,KAAK,GAClD,OAAO,CAGT,IAAIgU,GAAKzC,EAAG7P,OAAOhX,KAAK6Y,GACpB0Q,EAAM3C,EAAI5P,OAAO7T,EAAE0V,EACvB,OAA8D,KAAvD7Y,KAAKgD,EAAEgU,OAAOuS,GAAK1S,QAAQ1T,EAAEH,EAAEgU,OAAOsS,IAAKhU,KAAK,IAGzDiO,OAAOtkB,UAAUuqB,OAAS,SAAgBzmB,GACxC,GAAI0mB,GAAKzpB,KAAK6Y,EAAE1B,SACZlG,EAAKlO,EAAEoT,MAAMnW,KAAK8f,MAAM1f,KAAK4W,OAAOyS,EACxC,IAAuB,IAAnBzpB,KAAK+C,EAAEsC,IAAI4L,GACb,OAAO,CAIT,KAFA,GAAIyY,GAAK3mB,EAAEyD,QACP6B,EAAIrI,KAAK8f,MAAMH,KAAK3I,OAAOyS,KACtB,CAEP,GADAC,EAAGvf,KAAKnK,KAAK8f,MAAM1c,GACfsmB,EAAGrkB,IAAIrF,KAAK8f,MAAM3c,IAAM,EAC1B,OAAO,CAGT,IADA8N,EAAG0F,QAAQtO,GACY,IAAnBrI,KAAK+C,EAAEsC,IAAI4L,GACb,OAAO,EAEX,OAAO,GAGTsS,OAAOtkB,UAAU2H,QAAU,WACzB,MAAI5G,MAAKgmB,aACA,uBACF,iBAAmBhmB,KAAK+C,EAAEyC,SAAS,GAAI,GAC1C,OAASxF,KAAKgD,EAAEwC,SAAS,GAAI,GAC7B,OAASxF,KAAK6Y,EAAErT,SAAS,GAAI,GAAK,KAGxC+d,OAAOtkB,UAAU+mB,WAAa,WAE5B,MAA0B,KAAnBhmB,KAAK6Y,EAAEvD,KAAK,KL+zHfqU,IACA,SAASlrB,EAAQC,EAASC,GMxuJhC,YAUA,SAASirB,WAAU3K,GACjB2D,EAAKlf,KAAK1D,KAAM,OAAQif,GAExBjf,KAAK8B,EAAI,GAAInC,GAAGsf,EAAKnd,EAAG,IAAIqU,MAAMnW,KAAKI,KACvCJ,KAAK+B,EAAI,GAAIpC,GAAGsf,EAAKld,EAAG,IAAIoU,MAAMnW,KAAKI,KACvCJ,KAAK6pB,GAAK,GAAIlqB,GAAG,GAAGwW,MAAMnW,KAAKI,KAAKoX,UACpCxX,KAAKmf,IAAM,GAAIxf,GAAG,GAAGwW,MAAMnW,KAAKI,KAChCJ,KAAK8pB,IAAM9pB,KAAK6pB,GAAG7S,OAAOhX,KAAK8B,EAAE4U,OAAO1W,KAAKmf,MAc/C,QAASiE,OAAMtD,EAAO/c,EAAG8V,GACvB+J,EAAK/C,UAAUnc,KAAK1D,KAAM8f,EAAO,cACvB,OAAN/c,GAAoB,OAAN8V,GAChB7Y,KAAK+C,EAAI/C,KAAK8f,MAAMpH,IACpB1Y,KAAK6Y,EAAI7Y,KAAK8f,MAAMZ,OAEpBlf,KAAK+C,EAAI,GAAIpD,GAAGoD,EAAG,IACnB/C,KAAK6Y,EAAI,GAAIlZ,GAAGkZ,EAAG,IACd7Y,KAAK+C,EAAE3C,MACVJ,KAAK+C,EAAI/C,KAAK+C,EAAEoT,MAAMnW,KAAK8f,MAAM1f,MAC9BJ,KAAK6Y,EAAEzY,MACVJ,KAAK6Y,EAAI7Y,KAAK6Y,EAAE1C,MAAMnW,KAAK8f,MAAM1f,OAxCvC,GAAI0f,GAAQnhB,EAAQ,KAChBgB,EAAKhB,EAAQ,KACbW,EAAWX,EAAQ,KACnBikB,EAAO9C,EAAMjgB,KAEbmgB,EAAWrhB,EAAQ,KACnB8f,EAAQuB,EAASvB,KAWrBnf,GAASsqB,UAAWhH,GACpBnkB,EAAOC,QAAUkrB,UAEjBA,UAAU3qB,UAAUihB,SAAW,SAAkBD,GAC/C,GAAIld,GAAIkd,EAAM8J,YAAYhnB,EACtBqS,EAAKrS,EAAEoU,SACPmO,EAAMlQ,EAAG4B,OAAOjU,GAAG2T,OAAOtB,EAAG4B,OAAOhX,KAAK8B,IAAI4U,OAAO3T,GACpDC,EAAIsiB,EAAIhO,SAEZ,OAA+B,KAAxBtU,EAAEmU,SAAS9R,IAAIigB,IAiBxBhmB,EAAS8jB,MAAOR,EAAK/C,WAErB+J,UAAU3qB,UAAU2iB,YAAc,SAAqBpD,EAAOvB,GAC5D,MAAOjd,MAAKigB,MAAMxB,EAAM7Y,QAAQ4Y,EAAOvB,GAAM,IAG/C2M,UAAU3qB,UAAUghB,MAAQ,SAAeld,EAAG8V,GAC5C,MAAO,IAAIuK,OAAMpjB,KAAM+C,EAAG8V,IAG5B+Q,UAAU3qB,UAAUmgB,cAAgB,SAAuBrgB,GACzD,MAAOqkB,OAAMsC,SAAS1lB,KAAMjB,IAG9BqkB,MAAMnkB,UAAUmjB,WAAa,aAI7BgB,MAAMnkB,UAAU8iB,QAAU,WACxB,MAAO/hB,MAAKiiB,OAAOrc,QAAQ,KAAM5F,KAAK8f,MAAM3c,EAAEyE,eAGhDwb,MAAMsC,SAAW,SAAkB5F,EAAO/gB,GACxC,MAAO,IAAIqkB,OAAMtD,EAAO/gB,EAAI,GAAIA,EAAI,IAAM+gB,EAAMpH,MAGlD0K,MAAMnkB,UAAU2H,QAAU,WACxB,MAAI5G,MAAKgmB,aACA,sBACF,gBAAkBhmB,KAAK+C,EAAEwT,UAAU/Q,SAAS,GAAI,GACnD,OAASxF,KAAK6Y,EAAEtC,UAAU/Q,SAAS,GAAI,GAAK,KAGlD4d,MAAMnkB,UAAU+mB,WAAa,WAE3B,MAA0B,KAAnBhmB,KAAK6Y,EAAEvD,KAAK,IAGrB8N,MAAMnkB,UAAUwjB,IAAM,WAKpB,GAAI3gB,GAAI9B,KAAK+C,EAAE2T,OAAO1W,KAAK6Y,GAEvBmR,EAAKloB,EAAEqV,SAEPpV,EAAI/B,KAAK+C,EAAE6T,OAAO5W,KAAK6Y,GAEvBoR,EAAKloB,EAAEoV,SAEPpW,EAAIipB,EAAGpT,OAAOqT,GAEdhE,EAAK+D,EAAGhT,OAAOiT,GAEf/C,EAAKnmB,EAAEiW,OAAOiT,EAAGvT,OAAO1W,KAAK8f,MAAMgK,IAAI9S,OAAOjW,IAClD,OAAOf,MAAK8f,MAAMG,MAAMgG,EAAIiB,IAG9B9D,MAAMnkB,UAAUmL,IAAM,WACpB,KAAM,IAAI/K,OAAM,sCAGlB+jB,MAAMnkB,UAAUirB,QAAU,SAAiB/mB,EAAG0Q,GAK5C,GAAI/R,GAAI9B,KAAK+C,EAAE2T,OAAO1W,KAAK6Y,GAEvB9W,EAAI/B,KAAK+C,EAAE6T,OAAO5W,KAAK6Y,GAEvB9X,EAAIoC,EAAEJ,EAAE2T,OAAOvT,EAAE0V,GAEjBwP,EAAIllB,EAAEJ,EAAE6T,OAAOzT,EAAE0V,GAEjBsR,EAAK9B,EAAErR,OAAOlV,GAEdsoB,EAAKrpB,EAAEiW,OAAOjV,GAEdkkB,EAAKpS,EAAKgF,EAAE7B,OAAOmT,EAAGzT,OAAO0T,GAAIjT,UAEjC+P,EAAKrT,EAAK9Q,EAAEiU,OAAOmT,EAAGtT,QAAQuT,GAAIjT,SACtC,OAAOnX,MAAK8f,MAAMG,MAAMgG,EAAIiB,IAG9B9D,MAAMnkB,UAAUiC,IAAM,SAAagB,GAMjC,IAAK,GALDmG,GAAInG,EAAEsE,QACN1E,EAAI9B,KACJ+B,EAAI/B,KAAK8f,MAAMG,MAAM,KAAM,MAC3Blf,EAAIf,KAECqS,KAAyB,IAAdhK,EAAEiN,KAAK,GAAUjN,EAAEH,OAAO,GAC5CmK,EAAK8K,KAAK9U,EAAEJ,MAAM,GAEpB,KAAK,GAAInH,GAAIuR,EAAKlS,OAAS,EAAGW,GAAK,EAAGA,IACpB,IAAZuR,EAAKvR,IAEPgB,EAAIA,EAAEooB,QAAQnoB,EAAGhB,GAEjBgB,EAAIA,EAAE0gB,QAGN1gB,EAAID,EAAEooB,QAAQnoB,EAAGhB,GAEjBe,EAAIA,EAAE2gB,MAGV,OAAO1gB,IAGTqhB,MAAMnkB,UAAUonB,OAAS,WACvB,KAAM,IAAIhnB,OAAM,sCAGlB+jB,MAAMnkB,UAAUorB,QAAU,WACxB,KAAM,IAAIhrB,OAAM,sCAGlB+jB,MAAMnkB,UAAUiX,GAAK,SAAYoU,GAC/B,MAAyC,KAAlCtqB,KAAKiiB,OAAO5c,IAAIilB,EAAMrI,SAG/BmB,MAAMnkB,UAAU8qB,UAAY,WAG1B,MAFA/pB,MAAK+C,EAAI/C,KAAK+C,EAAEiU,OAAOhX,KAAK6Y,EAAErB,WAC9BxX,KAAK6Y,EAAI7Y,KAAK8f,MAAMpH,IACb1Y,MAGTojB,MAAMnkB,UAAUgjB,KAAO,WAIrB,MAFAjiB,MAAK+pB,YAEE/pB,KAAK+C,EAAEwT,YN0uJVgU,IACA,SAAS9rB,EAAQC,EAASC,GO75JhC,YAUA,SAAS6rB,cAAavL,GAEpBjf,KAAKyqB,QAA2B,KAAP,EAATxL,EAAKnd,GACrB9B,KAAK0qB,MAAQ1qB,KAAKyqB,UAAqB,EAATxL,EAAKnd,QACnC9B,KAAK0S,SAAW1S,KAAK0qB,MAErB9H,EAAKlf,KAAK1D,KAAM,UAAWif,GAE3Bjf,KAAK8B,EAAI,GAAInC,GAAGsf,EAAKnd,EAAG,IAAI+C,KAAK7E,KAAKI,IAAI2D,GAC1C/D,KAAK8B,EAAI9B,KAAK8B,EAAEqU,MAAMnW,KAAKI,KAC3BJ,KAAKe,EAAI,GAAIpB,GAAGsf,EAAKle,EAAG,IAAIoV,MAAMnW,KAAKI,KACvCJ,KAAKglB,GAAKhlB,KAAKe,EAAEoW,SACjBnX,KAAKqoB,EAAI,GAAI1oB,GAAGsf,EAAKoJ,EAAG,IAAIlS,MAAMnW,KAAKI,KACvCJ,KAAK2qB,GAAK3qB,KAAKqoB,EAAE3R,OAAO1W,KAAKqoB,GAE7BnpB,GAAQc,KAAKyqB,SAAwC,IAA7BzqB,KAAKe,EAAEwV,UAAUjB,KAAK,IAC9CtV,KAAK4qB,KAAwB,KAAP,EAAT3L,EAAKle,GAwFpB,QAASqiB,OAAMtD,EAAO/c,EAAGC,EAAG6V,EAAGxQ,GAC7Bua,EAAK/C,UAAUnc,KAAK1D,KAAM8f,EAAO,cACvB,OAAN/c,GAAoB,OAANC,GAAoB,OAAN6V,GAC9B7Y,KAAK+C,EAAI/C,KAAK8f,MAAMZ,KACpBlf,KAAKgD,EAAIhD,KAAK8f,MAAMpH,IACpB1Y,KAAK6Y,EAAI7Y,KAAK8f,MAAMpH,IACpB1Y,KAAKqI,EAAIrI,KAAK8f,MAAMZ,KACpBlf,KAAKwjB,MAAO,IAEZxjB,KAAK+C,EAAI,GAAIpD,GAAGoD,EAAG,IACnB/C,KAAKgD,EAAI,GAAIrD,GAAGqD,EAAG,IACnBhD,KAAK6Y,EAAIA,EAAI,GAAIlZ,GAAGkZ,EAAG,IAAM7Y,KAAK8f,MAAMpH,IACxC1Y,KAAKqI,EAAIA,GAAK,GAAI1I,GAAG0I,EAAG,IACnBrI,KAAK+C,EAAE3C,MACVJ,KAAK+C,EAAI/C,KAAK+C,EAAEoT,MAAMnW,KAAK8f,MAAM1f,MAC9BJ,KAAKgD,EAAE5C,MACVJ,KAAKgD,EAAIhD,KAAKgD,EAAEmT,MAAMnW,KAAK8f,MAAM1f,MAC9BJ,KAAK6Y,EAAEzY,MACVJ,KAAK6Y,EAAI7Y,KAAK6Y,EAAE1C,MAAMnW,KAAK8f,MAAM1f,MAC/BJ,KAAKqI,IAAMrI,KAAKqI,EAAEjI,MACpBJ,KAAKqI,EAAIrI,KAAKqI,EAAE8N,MAAMnW,KAAK8f,MAAM1f,MACnCJ,KAAKwjB,KAAOxjB,KAAK6Y,IAAM7Y,KAAK8f,MAAMpH,IAG9B1Y,KAAK8f,MAAMpN,WAAa1S,KAAKqI,IAC/BrI,KAAKqI,EAAIrI,KAAK+C,EAAEiU,OAAOhX,KAAKgD,GACvBhD,KAAKwjB,OACRxjB,KAAKqI,EAAIrI,KAAKqI,EAAE2O,OAAOhX,KAAK6Y,EAAErB,cA3ItC,GAAIsI,GAAQnhB,EAAQ,KAChBqhB,EAAWrhB,EAAQ,KACnBgB,EAAKhB,EAAQ,KACbW,EAAWX,EAAQ,KACnBikB,EAAO9C,EAAMjgB,KAEbX,EAAS8gB,EAASvB,MAAMvf,MAoB5BI,GAASkrB,aAAc5H,GACvBnkB,EAAOC,QAAU8rB,aAEjBA,aAAavrB,UAAU4rB,MAAQ,SAAezpB,GAC5C,MAAIpB,MAAK0qB,MACAtpB,EAAIqW,SAEJzX,KAAK8B,EAAEkV,OAAO5V,IAGzBopB,aAAavrB,UAAU6rB,MAAQ,SAAe1pB,GAC5C,MAAIpB,MAAK4qB,KACAxpB,EAEApB,KAAKe,EAAEiW,OAAO5V,IAIzBopB,aAAavrB,UAAUyhB,OAAS,SAAgB3d,EAAGC,EAAG6V,EAAGxQ,GACvD,MAAOrI,MAAKigB,MAAMld,EAAGC,EAAG6V,EAAGxQ,IAG7BmiB,aAAavrB,UAAU4iB,WAAa,SAAoB9e,EAAGoO,GACzDpO,EAAI,GAAIpD,GAAGoD,EAAG,IACTA,EAAE3C,MACL2C,EAAIA,EAAEoT,MAAMnW,KAAKI,KAEnB,IAAIgV,GAAKrS,EAAEoU,SACPmO,EAAMtlB,KAAKglB,GAAGpO,OAAO5W,KAAK8B,EAAEkV,OAAO5B,IACnC2V,EAAM/qB,KAAK0Y,IAAI9B,OAAO5W,KAAKglB,GAAGhO,OAAOhX,KAAKqoB,GAAGrR,OAAO5B,IAEpDqP,EAAKa,EAAItO,OAAO+T,EAAIvT,WACpBxU,EAAIyhB,EAAGnN,SACX,IAA6C,IAAzCtU,EAAEmU,SAASP,OAAO6N,GAAIpf,IAAIrF,KAAKkf,MACjC,KAAM,IAAI7f,OAAM,gBAElB,IAAI2V,GAAQhS,EAAEuT,UAAUvB,OAIxB,QAHI7D,IAAQ6D,IAAU7D,GAAO6D,KAC3BhS,EAAIA,EAAEyU,UAEDzX,KAAKigB,MAAMld,EAAGC,IAGvBwnB,aAAavrB,UAAU+rB,WAAa,SAAoBhoB,EAAGmO,GACzDnO,EAAI,GAAIrD,GAAGqD,EAAG,IACTA,EAAE5C,MACL4C,EAAIA,EAAEmT,MAAMnW,KAAKI,KAGnB,IAAIqkB,GAAKzhB,EAAEmU,SACP4T,EAAMtG,EAAG7N,OAAO5W,KAAK0Y,KACrB4M,EAAMb,EAAGzN,OAAOhX,KAAKqoB,GAAG3R,OAAO1W,KAAK0Y,KACpCtD,EAAK2V,EAAI/T,OAAOsO,EAAI9N,UAExB,IAA0B,IAAtBpC,EAAG/P,IAAIrF,KAAKkf,MAAa,CAC3B,GAAI/N,EACF,KAAM,IAAI9R,OAAM,gBAEhB,OAAOW,MAAKigB,MAAMjgB,KAAKkf,KAAMlc,GAGjC,GAAID,GAAIqS,EAAGkC,SACX,IAA6C,IAAzCvU,EAAEoU,SAASP,OAAOxB,GAAI/P,IAAIrF,KAAKkf,MACjC,KAAM,IAAI7f,OAAM,gBAKlB,OAHI0D,GAAEiS,UAAY7D,IAChBpO,EAAIA,EAAE0U,UAEDzX,KAAKigB,MAAMld,EAAGC,IAGvBwnB,aAAavrB,UAAUihB,SAAW,SAAkBD,GAClD,GAAIA,EAAM+F,aACR,OAAO,CAGT/F,GAAM8J,WAEN,IAAI3U,GAAK6K,EAAMld,EAAEoU,SACbsN,EAAKxE,EAAMjd,EAAEmU,SACb4T,EAAM3V,EAAG4B,OAAOhX,KAAK8B,GAAG4U,OAAO+N,GAC/Ba,EAAMtlB,KAAKglB,GAAGhO,OAAOhX,KAAK0Y,IAAIhC,OAAO1W,KAAKqoB,EAAErR,OAAO5B,GAAI4B,OAAOyN,IAElE,OAAwB,KAAjBsG,EAAI1lB,IAAIigB,IAkCjBhmB,EAAS8jB,MAAOR,EAAK/C,WAErB2K,aAAavrB,UAAUmgB,cAAgB,SAAuBrgB,GAC5D,MAAOqkB,OAAMsC,SAAS1lB,KAAMjB,IAG9ByrB,aAAavrB,UAAUghB,MAAQ,SAAeld,EAAGC,EAAG6V,EAAGxQ,GACrD,MAAO,IAAI+a,OAAMpjB,KAAM+C,EAAGC,EAAG6V,EAAGxQ,IAGlC+a,MAAMsC,SAAW,SAAkB5F,EAAO/gB,GACxC,MAAO,IAAIqkB,OAAMtD,EAAO/gB,EAAI,GAAIA,EAAI,GAAIA,EAAI,KAG9CqkB,MAAMnkB,UAAU2H,QAAU,WACxB,MAAI5G,MAAKgmB,aACA,sBACF,gBAAkBhmB,KAAK+C,EAAEwT,UAAU/Q,SAAS,GAAI,GACnD,OAASxF,KAAKgD,EAAEuT,UAAU/Q,SAAS,GAAI,GACvC,OAASxF,KAAK6Y,EAAEtC,UAAU/Q,SAAS,GAAI,GAAK,KAGlD4d,MAAMnkB,UAAU+mB,WAAa,WAE3B,MAA0B,KAAnBhmB,KAAK+C,EAAEuS,KAAK,IACW,IAAvBtV,KAAKgD,EAAEqC,IAAIrF,KAAK6Y,IAGzBuK,MAAMnkB,UAAUgsB,QAAU,WAMxB,GAAInpB,GAAI9B,KAAK+C,EAAEoU,SAEXpV,EAAI/B,KAAKgD,EAAEmU,SAEXpW,EAAIf,KAAK6Y,EAAE1B,QACfpW,GAAIA,EAAE4V,QAAQ5V,EAEd,IAAIsnB,GAAIroB,KAAK8f,MAAM+K,MAAM/oB,GAErBmD,EAAIjF,KAAK+C,EAAE2T,OAAO1W,KAAKgD,GAAGmU,SAASN,QAAQ/U,GAAG+U,QAAQ9U,GAEtD4S,EAAI0T,EAAE3R,OAAO3U,GAEbumB,EAAI3T,EAAEiC,OAAO7V,GAEb4R,EAAI0V,EAAEzR,OAAO7U,GAEbkkB,EAAKhhB,EAAE+R,OAAOsR,GAEdpC,EAAKvR,EAAEqC,OAAOrE,GAEduY,EAAKjmB,EAAE+R,OAAOrE,GAEduU,EAAKoB,EAAEtR,OAAOrC,EAClB,OAAO3U,MAAK8f,MAAMG,MAAMgG,EAAIC,EAAIgB,EAAIgE,IAGtC9H,MAAMnkB,UAAUksB,SAAW,WAQzB,GAMIlF,GACAC,EACAgB,EARAnlB,EAAI/B,KAAK+C,EAAE2T,OAAO1W,KAAKgD,GAAGmU,SAE1BpW,EAAIf,KAAK+C,EAAEoU,SAEXkR,EAAIroB,KAAKgD,EAAEmU,QAKf,IAAInX,KAAK8f,MAAM2K,QAAS,CAEtB,GAAIxlB,GAAIjF,KAAK8f,MAAM+K,MAAM9pB,GAErBunB,EAAIrjB,EAAEyR,OAAO2R,EACjB,IAAIroB,KAAKwjB,KAEPyC,EAAKlkB,EAAE6U,OAAO7V,GAAG6V,OAAOyR,GAAGrR,OAAOsR,EAAE1R,OAAO5W,KAAK8f,MAAMX,MAEtD+G,EAAKoC,EAAEtR,OAAO/R,EAAE2R,OAAOyR,IAEvBnB,EAAKoB,EAAEnR,SAASP,OAAO0R,GAAG1R,OAAO0R,OAC5B,CAEL,GAAI3V,GAAI3S,KAAK6Y,EAAE1B,SAEX7U,EAAIgmB,EAAE1R,OAAOjE,GAAGkE,QAAQlE,EAE5BsT,GAAKlkB,EAAE6U,OAAO7V,GAAG8V,QAAQwR,GAAGrR,OAAO1U,GAEnC4jB,EAAKoC,EAAEtR,OAAO/R,EAAE2R,OAAOyR,IAEvBnB,EAAKoB,EAAEtR,OAAO1U,QAEX,CAEL,GAAI2C,GAAIlE,EAAE2V,OAAO2R,GAEb1V,EAAI3S,KAAK8f,MAAMgL,MAAM9qB,KAAKe,EAAEiW,OAAOhX,KAAK6Y,IAAI1B,SAE5C7U,EAAI2C,EAAE2R,OAAOjE,GAAGiE,OAAOjE,EAE3BsT,GAAKjmB,KAAK8f,MAAMgL,MAAM/oB,EAAE8U,QAAQ5R,IAAI+R,OAAO1U,GAE3C4jB,EAAKlmB,KAAK8f,MAAMgL,MAAM7lB,GAAG+R,OAAOjW,EAAE8V,QAAQwR,IAE1CnB,EAAKjiB,EAAE+R,OAAO1U,GAEhB,MAAOtC,MAAK8f,MAAMG,MAAMgG,EAAIC,EAAIgB,IAGlC9D,MAAMnkB,UAAUwjB,IAAM,WACpB,MAAIziB,MAAKgmB,aACAhmB,KAGLA,KAAK8f,MAAMpN,SACN1S,KAAKirB,UAELjrB,KAAKmrB,YAGhB/H,MAAMnkB,UAAUmsB,QAAU,SAAiBjoB,GAMzC,GAAIrB,GAAI9B,KAAKgD,EAAE4T,OAAO5W,KAAK+C,GAAGiU,OAAO7T,EAAEH,EAAE4T,OAAOzT,EAAEJ,IAE9ChB,EAAI/B,KAAKgD,EAAE0T,OAAO1W,KAAK+C,GAAGiU,OAAO7T,EAAEH,EAAE0T,OAAOvT,EAAEJ,IAE9ChC,EAAIf,KAAKqI,EAAE2O,OAAOhX,KAAK8f,MAAM6K,IAAI3T,OAAO7T,EAAEkF,GAE1CggB,EAAIroB,KAAK6Y,EAAE7B,OAAO7T,EAAE0V,EAAEnC,OAAOvT,EAAE0V,IAE/B5T,EAAIlD,EAAE6U,OAAO9U,GAEbwmB,EAAID,EAAEzR,OAAO7V,GAEb4T,EAAI0T,EAAE3R,OAAO3V,GAEb4R,EAAI5Q,EAAE2U,OAAO5U,GAEbmkB,EAAKhhB,EAAE+R,OAAOsR,GAEdpC,EAAKvR,EAAEqC,OAAOrE,GAEduY,EAAKjmB,EAAE+R,OAAOrE,GAEduU,EAAKoB,EAAEtR,OAAOrC,EAClB,OAAO3U,MAAK8f,MAAMG,MAAMgG,EAAIC,EAAIgB,EAAIgE,IAGtC9H,MAAMnkB,UAAUosB,SAAW,SAAkBloB,GAO3C,GAgBI+iB,GACAgB,EAjBAplB,EAAI9B,KAAK6Y,EAAE7B,OAAO7T,EAAE0V,GAEpB9W,EAAID,EAAEqV,SAENpW,EAAIf,KAAK+C,EAAEiU,OAAO7T,EAAEJ,GAEpBslB,EAAIroB,KAAKgD,EAAEgU,OAAO7T,EAAEH,GAEpBiC,EAAIjF,KAAK8f,MAAMuI,EAAErR,OAAOjW,GAAGiW,OAAOqR,GAElCC,EAAIvmB,EAAE6U,OAAO3R,GAEb0P,EAAI5S,EAAE2U,OAAOzR,GAEb1B,EAAMvD,KAAK+C,EAAE2T,OAAO1W,KAAKgD,GAAGgU,OAAO7T,EAAEJ,EAAE2T,OAAOvT,EAAEH,IAAI6T,QAAQ9V,GAAG8V,QAAQwR,GACvEpC,EAAKnkB,EAAEkV,OAAOsR,GAAGtR,OAAOzT,EAc5B,OAXIvD,MAAK8f,MAAM2K,SAEbvE,EAAKpkB,EAAEkV,OAAOrC,GAAGqC,OAAOqR,EAAEzR,OAAO5W,KAAK8f,MAAM+K,MAAM9pB,KAElDmmB,EAAKoB,EAAEtR,OAAOrC,KAGduR,EAAKpkB,EAAEkV,OAAOrC,GAAGqC,OAAOqR,EAAEzR,OAAO7V,IAEjCmmB,EAAKlnB,KAAK8f,MAAMgL,MAAMxC,GAAGtR,OAAOrC,IAE3B3U,KAAK8f,MAAMG,MAAMgG,EAAIC,EAAIgB,IAGlC9D,MAAMnkB,UAAUmL,IAAM,SAAajH,GACjC,MAAInD,MAAKgmB,aACA7iB,EACLA,EAAE6iB,aACGhmB,KAELA,KAAK8f,MAAMpN,SACN1S,KAAKorB,QAAQjoB,GAEbnD,KAAKqrB,SAASloB,IAGzBigB,MAAMnkB,UAAUiC,IAAM,SAAagB,GACjC,MAAIlC,MAAKwiB,YAAYtgB,GACZlC,KAAK8f,MAAMK,aAAangB,KAAMkC,GAE9BlC,KAAK8f,MAAMgB,SAAS9gB,KAAMkC,IAGrCkhB,MAAMnkB,UAAUonB,OAAS,SAAgB3I,EAAIva,EAAGwa,GAC9C,MAAO3d,MAAK8f,MAAMoB,YAAY,GAAKlhB,KAAMmD,IAAOua,EAAIC,GAAM,GAAG,IAG/DyF,MAAMnkB,UAAUqnB,QAAU,SAAiB5I,EAAIva,EAAGwa,GAChD,MAAO3d,MAAK8f,MAAMoB,YAAY,GAAKlhB,KAAMmD,IAAOua,EAAIC,GAAM,GAAG,IAG/DyF,MAAMnkB,UAAU8qB,UAAY,WAC1B,GAAI/pB,KAAKwjB,KACP,MAAOxjB,KAGT,IAAIsrB,GAAKtrB,KAAK6Y,EAAErB,SAOhB,OANAxX,MAAK+C,EAAI/C,KAAK+C,EAAEiU,OAAOsU,GACvBtrB,KAAKgD,EAAIhD,KAAKgD,EAAEgU,OAAOsU,GACnBtrB,KAAKqI,IACPrI,KAAKqI,EAAIrI,KAAKqI,EAAE2O,OAAOsU,IACzBtrB,KAAK6Y,EAAI7Y,KAAK8f,MAAMpH,IACpB1Y,KAAKwjB,MAAO,EACLxjB,MAGTojB,MAAMnkB,UAAUkK,IAAM,WACpB,MAAOnJ,MAAK8f,MAAMG,MAAMjgB,KAAK+C,EAAE0U,SACPzX,KAAKgD,EACLhD,KAAK6Y,EACL7Y,KAAKqI,GAAKrI,KAAKqI,EAAEoP,WAG3C2L,MAAMnkB,UAAUgjB,KAAO,WAErB,MADAjiB,MAAK+pB,YACE/pB,KAAK+C,EAAEwT,WAGhB6M,MAAMnkB,UAAUijB,KAAO,WAErB,MADAliB,MAAK+pB,YACE/pB,KAAKgD,EAAEuT,WAGhB6M,MAAMnkB,UAAUiX,GAAK,SAAYoU,GAC/B,MAAOtqB,QAASsqB,GACyB,IAAlCtqB,KAAKiiB,OAAO5c,IAAIilB,EAAMrI,SACY,IAAlCjiB,KAAKkiB,OAAO7c,IAAIilB,EAAMpI,SAG/BkB,MAAMnkB,UAAUuqB,OAAS,SAAgBzmB,GACvC,GAAIkO,GAAKlO,EAAEoT,MAAMnW,KAAK8f,MAAM1f,KAAK4W,OAAOhX,KAAK6Y,EAC7C,IAAuB,IAAnB7Y,KAAK+C,EAAEsC,IAAI4L,GACb,OAAO,CAIT,KAFA,GAAIyY,GAAK3mB,EAAEyD,QACP6B,EAAIrI,KAAK8f,MAAMH,KAAK3I,OAAOhX,KAAK6Y,KAC3B,CAEP,GADA6Q,EAAGvf,KAAKnK,KAAK8f,MAAM1c,GACfsmB,EAAGrkB,IAAIrF,KAAK8f,MAAM3c,IAAM,EAC1B,OAAO,CAGT,IADA8N,EAAG0F,QAAQtO,GACY,IAAnBrI,KAAK+C,EAAEsC,IAAI4L,GACb,OAAO,EAEX,OAAO,GAITmS,MAAMnkB,UAAU4hB,IAAMuC,MAAMnkB,UAAU8qB,UACtC3G,MAAMnkB,UAAU0hB,SAAWyC,MAAMnkB,UAAUmL,KPo3JrCmhB,KACL,KAAM,IAAK,KAENC,IACA,SAAS/sB,EAAQC,GAEtB,YQ1yKDD,GAAOC,SACL0hB,SACEG,KAAM,EACNK,SAEI,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,oEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,kEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,kEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,oEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,oEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,mEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,kEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,oEAGA,mEACA,qEAGA,kEACA,qEAGA,mEACA,qEAGA,mEACA,sEAINpD,KACExE,IAAK,EACL4H,SAEI,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,oEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,oEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,oEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,oEAGA,mEACA,qEAGA,kEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,oEAGA,mEACA,oEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,oEAGA,mEACA,qEAGA,mEACA,oEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,kEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,oEAGA,mEACA,oEAGA,mEACA,qEAGA,mEACA,qEAGA,kEACA,qEAGA,mEACA,qEAGA,mEACA,oEAGA,mEACA,qEAGA,mEACA,oEAGA,mEACA,qEAGA,kEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,iEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,kEACA,qEAGA,mEACA,oEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,oEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,oEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,oEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,oEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA;IRkjJF6K,IACA,SAAShtB,EAAQC,EAASC,GS1zKhC,YAUA,SAAS+sB,IAAGC,GACV,MAAM3rB,gBAAgB0rB,KAIC,gBAAZC,KACTzsB,EAAO8gB,EAAS4L,OAAOC,eAAeF,GAAU,iBAAmBA,GAEnEA,EAAU3L,EAAS4L,OAAOD,IAIxBA,YAAmB3L,GAAS4L,OAAOE,cACrCH,GAAY7L,MAAO6L,IAErB3rB,KAAK8f,MAAQ6L,EAAQ7L,MAAMA,MAC3B9f,KAAKoD,EAAIpD,KAAK8f,MAAM1c,EACpBpD,KAAK+rB,GAAK/rB,KAAKoD,EAAE8P,MAAM,GACvBlT,KAAK2U,EAAI3U,KAAK8f,MAAMnL,EAGpB3U,KAAK2U,EAAIgX,EAAQ7L,MAAMnL,EACvB3U,KAAK2U,EAAEyN,WAAWuJ,EAAQ7L,MAAM1c,EAAE7B,YAAc,QAGhDvB,KAAKgsB,KAAOL,EAAQK,MAAQL,EAAQ7L,MAAMkM,OAvBjC,GAAIN,IAAGC,GTkzKjB,GAAI/sB,GAA4B,kBAAXC,SAAoD,gBAApBA,QAAOC,SAAwB,SAAUC,GAAO,aAAcA,IAAS,SAAUA,GAAO,MAAOA,IAAyB,kBAAXF,SAAyBE,EAAIC,cAAgBH,QAAUE,IAAQF,OAAOI,UAAY,eAAkBF,IS5zKnQY,EAAKhB,EAAQ,KACbqhB,EAAWrhB,EAAQ,KACnB8f,EAAQuB,EAASvB,MACjBvf,EAASuf,EAAMvf,OAEf+sB,EAAUttB,EAAQ,KAClButB,EAAYvtB,EAAQ,IA6BxBF,GAAOC,QAAUgtB,GAEjBA,GAAGzsB,UAAUktB,QAAU,SAAiBR,GACtC,MAAO,IAAIM,GAAQjsB,KAAM2rB,IAG3BD,GAAGzsB,UAAUmtB,eAAiB,SAAwBC,EAAMpP,GAC1D,MAAOgP,GAAQK,YAAYtsB,KAAMqsB,EAAMpP,IAGzCyO,GAAGzsB,UAAUstB,cAAgB,SAAuBC,EAAKvP,GACvD,MAAOgP,GAAQQ,WAAWzsB,KAAMwsB,EAAKvP,IAGvCyO,GAAGzsB,UAAUytB,WAAa,SAAoBf,GACvCA,IACHA,KAYF,KATA,GAAIgB,GAAO,GAAI3M,GAAS4M,UACtBZ,KAAMhsB,KAAKgsB,KACXa,KAAMlB,EAAQkB,KACdC,QAASnB,EAAQmB,SAAW9M,EAAS+M,KAAK/sB,KAAKgsB,KAAKgB,cACpDC,MAAOjtB,KAAKoD,EAAEwC,YAGZ4Y,EAAQxe,KAAKoD,EAAEwE,aACfslB,EAAMltB,KAAKoD,EAAE0B,IAAI,GAAInF,GAAG,MACzB,CACD,GAAI0sB,GAAO,GAAI1sB,GAAGgtB,EAAKQ,SAAS3O,GAChC,MAAI6N,EAAKhnB,IAAI6nB,GAAO,GAIpB,MADAb,GAAKxjB,MAAM,GACJ7I,KAAKosB,eAAeC,KAI/BX,GAAGzsB,UAAUmuB,aAAe,SAAqBhuB,EAAKiuB,GACpD,GAAIhY,GAA2B,EAAnBjW,EAAIwI,aAAmB5H,KAAKoD,EAAE7B,WAG1C,OAFI8T,GAAQ,IACVjW,EAAMA,EAAI8T,MAAMmC,KACbgY,GAAajuB,EAAIiG,IAAIrF,KAAKoD,IAAM,EAC5BhE,EAAI0F,IAAI9E,KAAKoD,GAEbhE,GAGXssB,GAAGzsB,UAAUquB,KAAO,SAAcluB,EAAKkf,EAAKrB,EAAK0O,GAC5B,YAAf,mBAAO1O,GAAP,YAAAre,EAAOqe,MACT0O,EAAU1O,EACVA,EAAM,MAEH0O,IACHA,MAEFrN,EAAMte,KAAKosB,eAAe9N,EAAKrB,GAC/B7d,EAAMY,KAAKotB,aAAa,GAAIztB,GAAGP,EAAK,IAqBpC,KAAK,GAlBDof,GAAQxe,KAAKoD,EAAEwE,aACf2lB,EAAOjP,EAAIkP,aAAa5nB,QAAQ,KAAM4Y,GAGtCyO,EAAQ7tB,EAAIwG,QAAQ,KAAM4Y,GAG1BmO,EAAO,GAAI3M,GAAS4M,UACtBZ,KAAMhsB,KAAKgsB,KACXc,QAASS,EACTN,MAAOA,EACPJ,KAAMlB,EAAQkB,KACdY,QAAS9B,EAAQ8B,UAIfC,EAAM1tB,KAAKoD,EAAE0B,IAAI,GAAInF,GAAG,IAEnBguB,EAAO,GAAG,EAAMA,IAAQ,CAC/B,GAAIzrB,GAAIypB,EAAQzpB,EACZypB,EAAQzpB,EAAEyrB,GACV,GAAIhuB,GAAGgtB,EAAKQ,SAASntB,KAAKoD,EAAEwE,cAEhC,IADA1F,EAAIlC,KAAKotB,aAAalrB,GAAG,KACrBA,EAAEoT,KAAK,IAAM,GAAKpT,EAAEmD,IAAIqoB,IAAQ,GAApC,CAGA,GAAIE,GAAK5tB,KAAK2U,EAAEzT,IAAIgB,EACpB,KAAI0rB,EAAG5H,aAAP,CAGA,GAAI6H,GAAMD,EAAG3L,OACTvhB,EAAImtB,EAAIhpB,KAAK7E,KAAKoD,EACtB,IAAkB,IAAd1C,EAAE4U,KAAK,GAAX,CAGA,GAAIjF,GAAInO,EAAEqT,KAAKvV,KAAKoD,GAAGlC,IAAIR,EAAEQ,IAAIod,EAAIkP,cAAcrjB,KAAK/K,GAExD,IADAiR,EAAIA,EAAExL,KAAK7E,KAAKoD,GACE,IAAdiN,EAAEiF,KAAK,GAAX,CAGA,GAAIwY,IAAiBF,EAAG1L,OAAOlN,QAAU,EAAI,IACT,IAAf6Y,EAAIxoB,IAAI3E,GAAW,EAAI,EAQ5C,OALIirB,GAAQoC,WAAa1d,EAAEhL,IAAIrF,KAAK+rB,IAAM,IACxC1b,EAAIrQ,KAAKoD,EAAE0B,IAAIuL,GACfyd,GAAiB,GAGZ,GAAI5B,IAAYxrB,EAAGA,EAAG2P,EAAGA,EAAGyd,cAAeA,UAItDpC,GAAGzsB,UAAU+uB,OAAS,SAAgB5uB,EAAK6uB,EAAW3P,EAAKrB,GACzD7d,EAAMY,KAAKotB,aAAa,GAAIztB,GAAGP,EAAK,KACpCkf,EAAMte,KAAKusB,cAAcjO,EAAKrB,GAC9BgR,EAAY,GAAI/B,GAAU+B,EAAW,MAGrC,IAAIvtB,GAAIutB,EAAUvtB,EACd2P,EAAI4d,EAAU5d,CAClB,IAAI3P,EAAE4U,KAAK,GAAK,GAAK5U,EAAE2E,IAAIrF,KAAKoD,IAAM,EACpC,OAAO,CACT,IAAIiN,EAAEiF,KAAK,GAAK,GAAKjF,EAAEhL,IAAIrF,KAAKoD,IAAM,EACpC,OAAO,CAGT,IAAI8qB,GAAO7d,EAAEkF,KAAKvV,KAAKoD,GACnB6a,EAAKiQ,EAAKhtB,IAAI9B,GAAKyF,KAAK7E,KAAKoD,GAC7B+a,EAAK+P,EAAKhtB,IAAIR,GAAGmE,KAAK7E,KAAKoD,EAE/B,KAAKpD,KAAK8f,MAAMF,cAAe,CAC7B,GAAIzc,GAAInD,KAAK2U,EAAE0R,OAAOpI,EAAIK,EAAI6P,YAAahQ,EAC3C,QAAIhb,EAAE6iB,cAGkC,IAAjC7iB,EAAE8e,OAAOpd,KAAK7E,KAAKoD,GAAGiC,IAAI3E,GAMnC,GAAIyC,GAAInD,KAAK2U,EAAE2R,QAAQrI,EAAIK,EAAI6P,YAAahQ,EAC5C,QAAIhb,EAAE6iB,cAMC7iB,EAAEqmB,OAAO9oB,IAGlBgrB,GAAGzsB,UAAUmvB,cAAgB,SAAShvB,EAAK6uB,EAAW3rB,EAAG2a,GACvD/d,GAAQ,EAAIoD,KAAOA,EAAG,4CACtB2rB,EAAY,GAAI/B,GAAU+B,EAAWhR,EAErC,IAAI7Z,GAAIpD,KAAKoD,EACT6B,EAAI,GAAItF,GAAGP,GACXsB,EAAIutB,EAAUvtB,EACd2P,EAAI4d,EAAU5d,EAGdge,EAAa,EAAJ/rB,EACTgsB,EAAchsB,GAAK,CACvB,IAAI5B,EAAE2E,IAAIrF,KAAK8f,MAAM3c,EAAE0B,KAAK7E,KAAK8f,MAAM1c,KAAO,GAAKkrB,EACjD,KAAM,IAAIjvB,OAAM,uCAIhBqB,GADE4tB,EACEtuB,KAAK8f,MAAM+B,WAAWnhB,EAAE0J,IAAIpK,KAAK8f,MAAM1c,GAAIirB,GAE3CruB,KAAK8f,MAAM+B,WAAWnhB,EAAG2tB,EAE/B,IAAIE,GAAON,EAAUvtB,EAAE6U,KAAKnS,GACxB0jB,EAAK1jB,EAAE0B,IAAIG,GAAG/D,IAAIqtB,GAAM1pB,KAAKzB,GAC7B2jB,EAAK1W,EAAEnP,IAAIqtB,GAAM1pB,KAAKzB,EAI1B,OAAOpD,MAAK2U,EAAE0R,OAAOS,EAAIpmB,EAAGqmB,IAG9B2E,GAAGzsB,UAAUuvB,oBAAsB,SAASvpB,EAAGgpB,EAAWQ,EAAGxR,GAE3D,GADAgR,EAAY,GAAI/B,GAAU+B,EAAWhR,GACL,OAA5BgR,EAAUH,cACZ,MAAOG,GAAUH,aAEnB,KAAK,GAAIhtB,GAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,GAAI4tB,EACJ,KACEA,EAAS1uB,KAAKouB,cAAcnpB,EAAGgpB,EAAWntB,GAC1C,MAAOmE,GACP,SAGF,GAAIypB,EAAOxY,GAAGuY,GACZ,MAAO3tB,GAEX,KAAM,IAAIzB,OAAM,0CTyyKZsvB,IACA,SAASlwB,EAAQC,EAASC,GUrhLhC,YAIA,SAASstB,SAAQ2C,EAAIjD,GACnB3rB,KAAK4uB,GAAKA,EACV5uB,KAAKqsB,KAAO,KACZrsB,KAAKwsB,IAAM,KAGPb,EAAQU,MACVrsB,KAAK6uB,eAAelD,EAAQU,KAAMV,EAAQmD,SACxCnD,EAAQa,KACVxsB,KAAK+uB,cAAcpD,EAAQa,IAAKb,EAAQqD,QAX5C,GAAIrvB,GAAKhB,EAAQ,IAajBF,GAAOC,QAAUutB,QAEjBA,QAAQQ,WAAa,SAAoBmC,EAAIpC,EAAKvP,GAChD,MAAIuP,aAAeP,SACVO,EAEF,GAAIP,SAAQ2C,GACjBpC,IAAKA,EACLwC,OAAQ/R,KAIZgP,QAAQK,YAAc,SAAqBsC,EAAIvC,EAAMpP,GACnD,MAAIoP,aAAgBJ,SACXI,EAEF,GAAIJ,SAAQ2C,GACjBvC,KAAMA,EACNyC,QAAS7R,KAIbgP,QAAQhtB,UAAUihB,SAAW,WAC3B,GAAIsM,GAAMxsB,KAAKmuB,WAEf,OAAI3B,GAAIxG,cACGiJ,QAAQ,EAAOC,OAAQ,sBAC7B1C,EAAItM,WAEJsM,EAAItrB,IAAIlB,KAAK4uB,GAAG9O,MAAM1c,GAAG4iB,cAGrBiJ,QAAQ,EAAMC,OAAQ,OAFpBD,QAAQ,EAAOC,OAAQ,wBAFvBD,QAAQ,EAAOC,OAAQ,8BAOpCjD,QAAQhtB,UAAUkvB,UAAY,SAAmBnM,EAAS/E,GAUxD,MARuB,gBAAZ+E,KACT/E,EAAM+E,EACNA,EAAU,MAGPhiB,KAAKwsB,MACRxsB,KAAKwsB,IAAMxsB,KAAK4uB,GAAGja,EAAEzT,IAAIlB,KAAKqsB,OAE3BpP,EAGEjd,KAAKwsB,IAAI7N,OAAO1B,EAAK+E,GAFnBhiB,KAAKwsB,KAKhBP,QAAQhtB,UAAUuuB,WAAa,SAAoBvQ,GACjD,MAAY,QAARA,EACKjd,KAAKqsB,KAAK7mB,SAAS,GAAI,GAEvBxF,KAAKqsB,MAGhBJ,QAAQhtB,UAAU4vB,eAAiB,SAAwBvQ,EAAKrB,GAC9Djd,KAAKqsB,KAAO,GAAI1sB,GAAG2e,EAAKrB,GAAO,IAI/Bjd,KAAKqsB,KAAOrsB,KAAKqsB,KAAKxnB,KAAK7E,KAAK4uB,GAAG9O,MAAM1c,IAG3C6oB,QAAQhtB,UAAU8vB,cAAgB,SAAuBzQ,EAAKrB,GAC5D,MAAIqB,GAAIvb,GAAKub,EAAItb,OACfhD,KAAKwsB,IAAMxsB,KAAK4uB,GAAG9O,MAAMG,MAAM3B,EAAIvb,EAAGub,EAAItb,SAG5ChD,KAAKwsB,IAAMxsB,KAAK4uB,GAAG9O,MAAM8B,YAAYtD,EAAKrB,KAI5CgP,QAAQhtB,UAAUkwB,OAAS,SAAgB3C,GACzC,MAAOA,GAAItrB,IAAIlB,KAAKqsB,MAAMpK,QAI5BgK,QAAQhtB,UAAUquB,KAAO,SAAcluB,EAAK6d,EAAK0O,GAC/C,MAAO3rB,MAAK4uB,GAAGtB,KAAKluB,EAAKY,KAAMid,EAAK0O,IAGtCM,QAAQhtB,UAAU+uB,OAAS,SAAgB5uB,EAAK6uB,GAC9C,MAAOjuB,MAAK4uB,GAAGZ,OAAO5uB,EAAK6uB,EAAWjuB,OAGxCisB,QAAQhtB,UAAU2H,QAAU,WAC1B,MAAO,eAAiB5G,KAAKqsB,MAAQrsB,KAAKqsB,KAAK7mB,SAAS,GAAI,IACrD,UAAYxF,KAAKwsB,KAAOxsB,KAAKwsB,IAAI5lB,WAAa,OV+gLjDwoB,IACA,SAAS3wB,EAAQC,EAASC,GWznLhC,YAQA,SAASutB,WAAUP,EAAS1O,GAC1B,MAAI0O,aAAmBO,WACdP,OAEL3rB,KAAKqvB,WAAW1D,EAAS1O,KAG7B/d,EAAOysB,EAAQjrB,GAAKirB,EAAQtb,EAAG,4BAC/BrQ,KAAKU,EAAI,GAAIf,GAAGgsB,EAAQjrB,EAAG,IAC3BV,KAAKqQ,EAAI,GAAI1Q,GAAGgsB,EAAQtb,EAAG,IACGgJ,SAA1BsS,EAAQmC,cACV9tB,KAAK8tB,cAAgB,KAErB9tB,KAAK8tB,cAAgBnC,EAAQmC,gBAIjC,QAASwB,YACPtvB,KAAKuvB,MAAQ,EAGf,QAASC,WAAUC,EAAKtsB,GACtB,GAAIusB,GAAUD,EAAItsB,EAAEosB,QACpB,MAAgB,IAAVG,GACJ,MAAOA,EAIT,KAAK,GAFDC,GAAqB,GAAVD,EACXvwB,EAAM,EACD2B,EAAI,EAAGW,EAAM0B,EAAEosB,MAAOzuB,EAAI6uB,EAAU7uB,IAAKW,IAChDtC,IAAQ,EACRA,GAAOswB,EAAIhuB,EAGb,OADA0B,GAAEosB,MAAQ9tB,EACHtC,EAGT,QAASywB,WAAUH,GAGjB,IAFA,GAAI3uB,GAAI,EACJH,EAAM8uB,EAAItvB,OAAS,GACfsvB,EAAI3uB,MAAqB,IAAb2uB,EAAI3uB,EAAI,KAAcA,EAAIH,GAC5CG,GAEF,OAAU,KAANA,EACK2uB,EAEFA,EAAIvS,MAAMpc,GAyCnB,QAAS+uB,iBAAgBjR,EAAKje,GAC5B,GAAIA,EAAM,IAER,WADAie,GAAIzB,KAAKxc,EAGX,IAAImvB,GAAS,GAAKlvB,KAAKmvB,IAAIpvB,GAAOC,KAAKovB,MAAQ,EAE/C,KADApR,EAAIzB,KAAc,IAAT2S,KACAA,GACPlR,EAAIzB,KAAMxc,KAASmvB,GAAU,GAAM,IAErClR,GAAIzB,KAAKxc,GAtGX,GAAIhB,GAAKhB,EAAQ,KAEbqhB,EAAWrhB,EAAQ,KACnB8f,EAAQuB,EAASvB,MACjBvf,EAASuf,EAAMvf,MAiBnBT,GAAOC,QAAUwtB,UAiCjBA,UAAUjtB,UAAUowB,WAAa,SAAoBY,EAAMhT,GACzDgT,EAAOxR,EAAM7Y,QAAQqqB,EAAMhT,EAC3B,IAAI9Z,GAAI,GAAImsB,SACZ,IAAwB,KAApBW,EAAK9sB,EAAEosB,SACT,OAAO,CAET,IAAI5uB,GAAM6uB,UAAUS,EAAM9sB,EAC1B,IAAKxC,EAAMwC,EAAEosB,QAAWU,EAAK9vB,OAC3B,OAAO,CAET,IAAwB,IAApB8vB,EAAK9sB,EAAEosB,SACT,OAAO,CAET,IAAItX,GAAOuX,UAAUS,EAAM9sB,GACvBzC,EAAIuvB,EAAK/S,MAAM/Z,EAAEosB,MAAOtX,EAAO9U,EAAEosB,MAErC,IADApsB,EAAEosB,OAAStX,EACa,IAApBgY,EAAK9sB,EAAEosB,SACT,OAAO,CAET,IAAIW,GAAOV,UAAUS,EAAM9sB,EAC3B,IAAI8sB,EAAK9vB,SAAW+vB,EAAO/sB,EAAEosB,MAC3B,OAAO,CAET,IAAIlf,GAAI4f,EAAK/S,MAAM/Z,EAAEosB,MAAOW,EAAO/sB,EAAEosB,MAYrC,OAXa,KAAT7uB,EAAE,IAAoB,IAAPA,EAAE,KACnBA,EAAIA,EAAEwc,MAAM,IAED,IAAT7M,EAAE,IAAoB,IAAPA,EAAE,KACnBA,EAAIA,EAAE6M,MAAM,IAGdld,KAAKU,EAAI,GAAIf,GAAGe,GAChBV,KAAKqQ,EAAI,GAAI1Q,GAAG0Q,GAChBrQ,KAAK8tB,cAAgB,MAEd,GAgBT5B,UAAUjtB,UAAUkxB,MAAQ,SAAelT,GACzC,GAAIvc,GAAIV,KAAKU,EAAEkF,UACXyK,EAAIrQ,KAAKqQ,EAAEzK,SAYf,KATW,IAAPlF,EAAE,KACJA,GAAM,GAAIyhB,OAAOzhB,IAER,IAAP2P,EAAE,KACJA,GAAM,GAAI8R,OAAO9R,IAEnB3P,EAAIkvB,UAAUlvB,GACd2P,EAAIuf,UAAUvf,KAENA,EAAE,IAAe,IAAPA,EAAE,KAClBA,EAAIA,EAAE6M,MAAM,EAEd,IAAI0B,IAAQ,EACZiR,iBAAgBjR,EAAKle,EAAEP,QACvBye,EAAMA,EAAIuD,OAAOzhB,GACjBke,EAAIzB,KAAK,GACT0S,gBAAgBjR,EAAKvO,EAAElQ,OACvB,IAAIiwB,GAAWxR,EAAIuD,OAAO9R,GACtBtI,GAAQ,GAGZ,OAFA8nB,iBAAgB9nB,EAAKqoB,EAASjwB,QAC9B4H,EAAMA,EAAIoa,OAAOiO,GACV3R,EAAME,OAAO5W,EAAKkV,KXynLrBoT,KACL,KAAM,IAAK,IAAK,KAEXC,IACA,SAAS7xB,EAAQC,EAASC,GYlwLhC,YAiBA,SAASstB,SAAQsE,EAAOC,GACtBxwB,KAAKuwB,MAAQA,EACbvwB,KAAKywB,QAAUlS,EAAWiS,EAAOE,QAC7BH,EAAMI,QAAQH,EAAOhE,KACvBxsB,KAAK4wB,KAAOJ,EAAOhE,IAEnBxsB,KAAK6wB,UAAYtS,EAAWiS,EAAOhE,KArBvC,GAAIxM,GAAWrhB,EAAQ,KACnB8f,EAAQuB,EAASvB,MACjBvf,EAASuf,EAAMvf,OACfqf,EAAaE,EAAMF,WACnBH,EAAiBK,EAAML,cAoB3B6N,SAAQQ,WAAa,SAAoB8D,EAAO/D,GAC9C,MAAIA,aAAeP,SACVO,EACF,GAAIP,SAAQsE,GAAS/D,IAAKA,KAGnCP,QAAQ6E,WAAa,SAAoBP,EAAOG,GAC9C,MAAIA,aAAkBzE,SACbyE,EACF,GAAIzE,SAAQsE,GAASG,OAAQA,KAGtCzE,QAAQhtB,UAAUyxB,OAAS,WACzB,MAAO1wB,MAAKywB,SAGdrS,EAAe6N,QAAS,WAAY,WAClC,MAAOjsB,MAAKuwB,MAAMQ,YAAY/wB,KAAKwsB,SAGrCpO,EAAe6N,QAAS,MAAO,WAC7B,MAAIjsB,MAAK6wB,UACA7wB,KAAKuwB,MAAM3O,YAAY5hB,KAAK6wB,WAC9B7wB,KAAKuwB,MAAM5b,EAAEzT,IAAIlB,KAAKqsB,UAG/BjO,EAAe6N,QAAS,YAAa,WACnC,GAAIsE,GAAQvwB,KAAKuwB,MACbvE,EAAOhsB,KAAKgsB,OACZgF,EAAST,EAAMU,eAAiB,EAEhCnvB,EAAIkqB,EAAK9O,MAAM,EAAGqT,EAAMU,eAK5B,OAJAnvB,GAAE,IAAM,IACRA,EAAEkvB,IAAW,IACblvB,EAAEkvB,IAAW,GAENlvB,IAGTsc,EAAe6N,QAAS,OAAQ,WAC9B,MAAOjsB,MAAKuwB,MAAMW,UAAUlxB,KAAKmxB,eAGnC/S,EAAe6N,QAAS,OAAQ,WAC9B,MAAOjsB,MAAKuwB,MAAMvE,OAAOoF,OAAOpxB,KAAK0wB,UAAUW,WAGjDjT,EAAe6N,QAAS,gBAAiB,WACvC,MAAOjsB,MAAKgsB,OAAO9O,MAAMld,KAAKuwB,MAAMU,kBAGtChF,QAAQhtB,UAAUquB,KAAO,SAAcgE,GAErC,MADApyB,GAAOc,KAAKywB,QAAS,2BACdzwB,KAAKuwB,MAAMjD,KAAKgE,EAAStxB,OAGlCisB,QAAQhtB,UAAU+uB,OAAS,SAAgBsD,EAASC,GAClD,MAAOvxB,MAAKuwB,MAAMvC,OAAOsD,EAASC,EAAKvxB,OAGzCisB,QAAQhtB,UAAUuyB,UAAY,SAAmBvU,GAE/C,MADA/d,GAAOc,KAAKywB,QAAS,0BACdhS,EAAME,OAAO3e,KAAK0wB,SAAUzT,IAGrCgP,QAAQhtB,UAAUkvB,UAAY,SAAmBlR,GAC/C,MAAOwB,GAAME,OAAO3e,KAAKyxB,WAAYxU,IAGvCxe,EAAOC,QAAUutB,SZkwLXyF,IACA,SAASjzB,EAAQC,EAASC,Gal2LhC,YAiBA,SAASutB,WAAUqE,EAAOgB,GACxBvxB,KAAKuwB,MAAQA,EAEM,YAAf,mBAAOgB,GAAP,YAAA3yB,EAAO2yB,MACTA,EAAMhT,EAAWgT,IAEfjwB,MAAM4D,QAAQqsB,KAChBA,GACEI,EAAGJ,EAAIrU,MAAM,EAAGqT,EAAMU,gBACtBW,EAAGL,EAAIrU,MAAMqT,EAAMU,kBAIvB/xB,EAAOqyB,EAAII,GAAKJ,EAAIK,EAAG,4BAEnBrB,EAAMI,QAAQY,EAAII,KACpB3xB,KAAK6xB,GAAKN,EAAII,GACZJ,EAAIK,YAAajyB,KACnBK,KAAK8xB,GAAKP,EAAIK,GAEhB5xB,KAAK+xB,UAAYzwB,MAAM4D,QAAQqsB,EAAII,GAAKJ,EAAII,EAAIJ,EAAIS,SACpDhyB,KAAKiyB,UAAY3wB,MAAM4D,QAAQqsB,EAAIK,GAAKL,EAAIK,EAAIL,EAAIW,Sbg0LrD,GAAItzB,GAA4B,kBAAXC,SAAoD,gBAApBA,QAAOC,SAAwB,SAAUC,GAAO,aAAcA,IAAS,SAAUA,GAAO,MAAOA,IAAyB,kBAAXF,SAAyBE,EAAIC,cAAgBH,QAAUE,IAAQF,OAAOI,UAAY,eAAkBF,Iap2LnQY,EAAKhB,EAAQ,KACbqhB,EAAWrhB,EAAQ,KACnB8f,EAAQuB,EAASvB,MACjBvf,EAASuf,EAAMvf,OACfkf,EAAiBK,EAAML,eACvBG,EAAaE,EAAMF,UAkCvBH,GAAe8N,UAAW,IAAK,WAC7B,MAAOlsB,MAAKuwB,MAAMW,UAAUlxB,KAAKkyB,cAGnC9T,EAAe8N,UAAW,IAAK,WAC7B,MAAOlsB,MAAKuwB,MAAM3O,YAAY5hB,KAAKgyB,cAGrC5T,EAAe8N,UAAW,WAAY,WACpC,MAAOlsB,MAAKuwB,MAAMQ,YAAY/wB,KAAK2xB,OAGrCvT,EAAe8N,UAAW,WAAY,WACpC,MAAOlsB,MAAKuwB,MAAM4B,UAAUnyB,KAAK4xB,OAGnC1F,UAAUjtB,UAAUmzB,QAAU,WAC5B,MAAOpyB,MAAKgyB,WAAW7P,OAAOniB,KAAKkyB,aAGrChG,UAAUjtB,UAAUqe,MAAQ,WAC1B,MAAOmB,GAAME,OAAO3e,KAAKoyB,UAAW,OAAOC,eAG7C5zB,EAAOC,QAAUwtB,Wbu2LXoG,KACA,SAAS7zB,EAAQC,EAASC,Gcz6LhC,YACAF,GAAOC,QAAUC,EAAQ,MAASA,EAAQ,Qdg7LpC4zB,KACA,SAAS9zB,EAAQC,EAASC,Gel7LhC,YAKA,SAAS6zB,qBAAqBC,EAAOC,GACnC,MAAcrZ,UAAVoZ,EAA4BC,GAEhCxzB,EAAOyzB,UAAUF,EAAOG,EAASC,yBAC1BJ,GART,GAAIvzB,GAASP,EAAQ,MACjBm0B,EAAMn0B,EAAQ,MACdi0B,EAAWj0B,EAAQ,KASvBF,GAAOC,QAAU,SAAUq0B,GACzB,OACEC,iBAAkB,SAAUC,GAE1B,MADA/zB,GAAOg0B,SAASD,EAAYL,EAASO,6BACR,KAAtBF,EAAW9yB,QAAiB4yB,EAAUC,iBAAiBC,IAGhEG,iBAAkB,SAAUH,EAAYI,GACtCn0B,EAAOg0B,SAASD,EAAYL,EAASO,6BACrCj0B,EAAOo0B,eAAeL,EAAY,GAAIL,EAASW,+BAE/CF,EAAab,oBAAoBa,GAAY,EAC7C,IAAIG,GAAYT,EAAUK,iBAAiBH,EAAYI,EAEvD,OAAOP,GAAIM,iBAAiBH,EAAYO,EAAWH,IAGrDI,iBAAkB,SAAUR,GAI1B,GAHA/zB,EAAOg0B,SAASD,EAAYL,EAASO,6BAErCF,EAAaH,EAAIW,iBAAiBR,GAC9BA,GAAoC,KAAtBA,EAAW9yB,QAAiB4yB,EAAUC,iBAAiBC,GAAa,MAAOA,EAE7F,MAAM,IAAI5zB,OAAMuzB,EAASc,iCAG3BC,mBAAoB,SAAUV,EAAYW,GAOxC,MANA10B,GAAOg0B,SAASD,EAAYL,EAASO,6BACrCj0B,EAAOo0B,eAAeL,EAAY,GAAIL,EAASW,+BAE/Cr0B,EAAOg0B,SAASU,EAAOhB,EAASiB,oBAChC30B,EAAOo0B,eAAeM,EAAO,GAAIhB,EAASkB,sBAEnCf,EAAUY,mBAAmBV,EAAYW,IAGlDG,mBAAoB,SAAUd,EAAYW,GAOxC,MANA10B,GAAOg0B,SAASD,EAAYL,EAASO,6BACrCj0B,EAAOo0B,eAAeL,EAAY,GAAIL,EAASW,+BAE/Cr0B,EAAOg0B,SAASU,EAAOhB,EAASiB,oBAChC30B,EAAOo0B,eAAeM,EAAO,GAAIhB,EAASkB,sBAEnCf,EAAUgB,mBAAmBd,EAAYW,IAGlDI,gBAAiB,SAAUf,EAAYI,GAMrC,MALAn0B,GAAOg0B,SAASD,EAAYL,EAASO,6BACrCj0B,EAAOo0B,eAAeL,EAAY,GAAIL,EAASW,+BAE/CF,EAAab,oBAAoBa,GAAY,GAEtCN,EAAUiB,gBAAgBf,EAAYI,IAG/CY,iBAAkB,SAAUT,EAAWH,GAMrC,MALAn0B,GAAOg0B,SAASM,EAAWZ,EAASsB,4BACpCh1B,EAAOi1B,gBAAgBX,EAAW,GAAI,GAAIZ,EAASwB,8BAEnDf,EAAab,oBAAoBa,GAAY,GAEtCN,EAAUkB,iBAAiBT,EAAWH,IAG/CgB,gBAAiB,SAAUb,GAEzB,MADAt0B,GAAOg0B,SAASM,EAAWZ,EAASsB,4BAC7BnB,EAAUsB,gBAAgBb,IAGnCc,kBAAmB,SAAUd,EAAWI,EAAOP,GAS7C,MARAn0B,GAAOg0B,SAASM,EAAWZ,EAASsB,4BACpCh1B,EAAOi1B,gBAAgBX,EAAW,GAAI,GAAIZ,EAASwB,8BAEnDl1B,EAAOg0B,SAASU,EAAOhB,EAASiB,oBAChC30B,EAAOo0B,eAAeM,EAAO,GAAIhB,EAASkB,sBAE1CT,EAAab,oBAAoBa,GAAY,GAEtCN,EAAUuB,kBAAkBd,EAAWI,EAAOP,IAGvDkB,kBAAmB,SAAUf,EAAWI,EAAOP,GAS7C,MARAn0B,GAAOg0B,SAASM,EAAWZ,EAASsB,4BACpCh1B,EAAOi1B,gBAAgBX,EAAW,GAAI,GAAIZ,EAASwB,8BAEnDl1B,EAAOg0B,SAASU,EAAOhB,EAASiB,oBAChC30B,EAAOo0B,eAAeM,EAAO,GAAIhB,EAASkB,sBAE1CT,EAAab,oBAAoBa,GAAY,GAEtCN,EAAUwB,kBAAkBf,EAAWI,EAAOP,IAGvDmB,iBAAkB,SAAUC,EAAYpB,GACtCn0B,EAAOgG,QAAQuvB,EAAY7B,EAAS8B,6BACpCx1B,EAAOy1B,eAAeF,EAAY7B,EAASgC,8BAC3C,KAAK,GAAI9zB,GAAI,EAAGA,EAAI2zB,EAAWt0B,SAAUW,EACvC5B,EAAOg0B,SAASuB,EAAW3zB,GAAI8xB,EAASsB,4BACxCh1B,EAAOi1B,gBAAgBM,EAAW3zB,GAAI,GAAI,GAAI8xB,EAASwB,6BAKzD,OAFAf,GAAab,oBAAoBa,GAAY,GAEtCN,EAAUyB,iBAAiBC,EAAYpB,IAGhDwB,mBAAoB,SAAU5G,GAI5B,MAHA/uB,GAAOg0B,SAASjF,EAAW2E,EAASkC,8BACpC51B,EAAOo0B,eAAerF,EAAW,GAAI2E,EAASmC,gCAEvChC,EAAU8B,mBAAmB5G,IAGtC+G,gBAAiB,SAAU/G,GACzB/uB,EAAOg0B,SAASjF,EAAW2E,EAASkC,8BACpC51B,EAAOo0B,eAAerF,EAAW,GAAI2E,EAASmC,+BAE9C,IAAIE,GAASlC,EAAUiC,gBAAgB/G,EACvC,OAAO6E,GAAIkC,gBAAgBC,IAG7BC,gBAAiB,SAAU3D,GACzBryB,EAAOg0B,SAAS3B,EAAKqB,EAASkC,8BAC9B51B,EAAOy1B,eAAepD,EAAKqB,EAASmC,+BAEpC,IAAIE,GAASnC,EAAIoC,gBAAgB3D,EACjC,IAAI0D,EAAQ,MAAOlC,GAAUmC,gBAAgBD,EAE7C,MAAM,IAAI51B,OAAMuzB,EAASuC,iCAG3BC,mBAAoB,SAAU7D,GAC5BryB,EAAOg0B,SAAS3B,EAAKqB,EAASkC,8BAC9B51B,EAAOy1B,eAAepD,EAAKqB,EAASmC,+BAEpC,IAAIE,GAASnC,EAAIsC,mBAAmB7D,EACpC,IAAI0D,EAAQ,MAAOlC,GAAUmC,gBAAgBD,EAE7C,MAAM,IAAI51B,OAAMuzB,EAASuC,iCAG3B7H,KAAM,SAAUgE,EAAS2B,EAAYtH,GACnCzsB,EAAOg0B,SAAS5B,EAASsB,EAASyC,oBAClCn2B,EAAOo0B,eAAehC,EAAS,GAAIsB,EAAS0C,sBAE5Cp2B,EAAOg0B,SAASD,EAAYL,EAASO,6BACrCj0B,EAAOo0B,eAAeL,EAAY,GAAIL,EAASW,8BAE/C,IAAItD,GAAO,KACPsF,EAAU,IAgBd,OAfgBlc,UAAZsS,IACFzsB,EAAOs2B,SAAS7J,EAASiH,EAAS6C,sBAEbpc,SAAjBsS,EAAQsE,OACV/wB,EAAOg0B,SAASvH,EAAQsE,KAAM2C,EAAS8C,2BACvCx2B,EAAOo0B,eAAe3H,EAAQsE,KAAM,GAAI2C,EAAS+C,6BACjD1F,EAAOtE,EAAQsE,MAGO5W,SAApBsS,EAAQ4J,UACVr2B,EAAO02B,WAAWjK,EAAQ4J,QAAS3C,EAASiD,8BAC5CN,EAAU5J,EAAQ4J,UAIfxC,EAAUzF,KAAKgE,EAAS2B,EAAYsC,EAAStF,IAGtDjC,OAAQ,SAAUsD,EAASrD,EAAWuF,GAUpC,MATAt0B,GAAOg0B,SAAS5B,EAASsB,EAASyC,oBAClCn2B,EAAOo0B,eAAehC,EAAS,GAAIsB,EAAS0C,sBAE5Cp2B,EAAOg0B,SAASjF,EAAW2E,EAASkC,8BACpC51B,EAAOo0B,eAAerF,EAAW,GAAI2E,EAASmC,gCAE9C71B,EAAOg0B,SAASM,EAAWZ,EAASsB,4BACpCh1B,EAAOi1B,gBAAgBX,EAAW,GAAI,GAAIZ,EAASwB,8BAE5CrB,EAAU/E,OAAOsD,EAASrD,EAAWuF,IAG9CsC,QAAS,SAAUxE,EAASrD,EAAW8H,EAAU1C,GAY/C,MAXAn0B,GAAOg0B,SAAS5B,EAASsB,EAASyC,oBAClCn2B,EAAOo0B,eAAehC,EAAS,GAAIsB,EAAS0C,sBAE5Cp2B,EAAOg0B,SAASjF,EAAW2E,EAASkC,8BACpC51B,EAAOo0B,eAAerF,EAAW,GAAI2E,EAASmC,gCAE9C71B,EAAO82B,SAASD,EAAUnD,EAASqD,0BACnC/2B,EAAOg3B,mBAAmBH,KAAc,EAAGnD,EAASuD,2BAEpD9C,EAAab,oBAAoBa,GAAY,GAEtCN,EAAU+C,QAAQxE,EAASrD,EAAW8H,EAAU1C,IAGzD+C,KAAM,SAAU5C,EAAWP,GAOzB,MANA/zB,GAAOg0B,SAASM,EAAWZ,EAASsB,4BACpCh1B,EAAOi1B,gBAAgBX,EAAW,GAAI,GAAIZ,EAASwB,8BAEnDl1B,EAAOg0B,SAASD,EAAYL,EAASO,6BACrCj0B,EAAOo0B,eAAeL,EAAY,GAAIL,EAASW,+BAExCR,EAAUqD,KAAK5C,EAAWP,IAGnCoD,WAAY,SAAU7C,EAAWP,EAAYI,GAS3C,MARAn0B,GAAOg0B,SAASM,EAAWZ,EAASsB,4BACpCh1B,EAAOi1B,gBAAgBX,EAAW,GAAI,GAAIZ,EAASwB,8BAEnDl1B,EAAOg0B,SAASD,EAAYL,EAASO,6BACrCj0B,EAAOo0B,eAAeL,EAAY,GAAIL,EAASW,+BAE/CF,EAAab,oBAAoBa,GAAY,GAEtCN,EAAUsD,WAAW7C,EAAWP,EAAYI,Of47LnDiD,KACA,SAAS73B,EAAQC,EAASC,IgBhqMhC,SAAAqG,GAAA,YACA,IAAIQ,GAAW+wB,OAAOt3B,UAAUuG,QAGhC9G,GAAQwG,QAAU,SAAUutB,EAAOnB,GACjC,IAAKhwB,MAAM4D,QAAQutB,GAAQ,KAAM+D,WAAUlF,IAG7C5yB,EAAQi0B,UAAY,SAAUF,EAAOnB,GACnC,GAA6B,qBAAzB9rB,EAAS9B,KAAK+uB,GAA+B,KAAM+D,WAAUlF,IAGnE5yB,EAAQw0B,SAAW,SAAUT,EAAOnB,GAClC,IAAKtsB,EAAOkuB,SAAST,GAAQ,KAAM+D,WAAUlF,IAG/C5yB,EAAQk3B,WAAa,SAAUnD,EAAOnB,GACpC,GAA6B,sBAAzB9rB,EAAS9B,KAAK+uB,GAAgC,KAAM+D,WAAUlF,IAGpE5yB,EAAQs3B,SAAW,SAAUvD,EAAOnB,GAClC,GAA6B,oBAAzB9rB,EAAS9B,KAAK+uB,GAA8B,KAAM+D,WAAUlF,IAGlE5yB,EAAQ82B,SAAW,SAAU/C,EAAOnB,GAClC,GAA6B,oBAAzB9rB,EAAS9B,KAAK+uB,GAA8B,KAAM+D,WAAUlF,IAIlE5yB,EAAQ40B,eAAiB,SAAUmD,EAAQt2B,EAAQmxB,GACjD,GAAImF,EAAOt2B,SAAWA,EAAQ,KAAMu2B,YAAWpF,IAGjD5yB,EAAQy1B,gBAAkB,SAAUsC,EAAQE,EAASC,EAAStF,GAC5D,GAAImF,EAAOt2B,SAAWw2B,GAAWF,EAAOt2B,SAAWy2B,EAAS,KAAMF,YAAWpF,IAG/E5yB,EAAQi2B,eAAiB,SAAUlC,EAAOnB,GACxC,GAAqB,IAAjBmB,EAAMtyB,OAAc,KAAMu2B,YAAWpF,IAG3C5yB,EAAQw3B,mBAAqB,SAAUt2B,EAAQmD,EAAGC,EAAGsuB,GACnD,GAAI1xB,GAAUmD,GAAKnD,GAAUoD,EAAG,KAAM0zB,YAAWpF,MhBqqMrB5tB,KAAKhF,EAASC,EAAoB,KAAKqG,SAI/D6xB,KACA,SAASp4B,EAAQC,EAASC,IiBptMhC,SAAAqG,GAAA,YACA,IAAI8xB,GAAQn4B,EAAQ,MAEhBo4B,EAAmC,GAAI/xB,IAEzC,GAAM,IAAM,IAAM,EAAM,EAAM,EAAM,EAAM,GAE1C,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAC1F,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAE1F,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,EAAM,EAAM,EAAM,GAAM,GAAM,EAAM,EAAM,GAAM,IAAM,GAC1F,IAAM,GAAM,EAAM,EAAM,EAAM,GAAM,EAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAC1F,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAC1F,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,GAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAC1F,GAAM,EAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,GAAM,IAAM,IAAM,IAC1F,GAAM,EAAM,EAAM,IAAM,IAAM,IAAM,GAAM,IAAM,GAAM,IAAM,GAAM,IAAM,IAAM,GAAM,GAAM,IAC1F,GAAM,IAAM,EAAM,GAAM,EAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAC1F,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,GAAM,IAAM,IAAM,GAC1F,IAAM,IAAM,GAAM,GAAM,GAAM,EAAM,EAAM,EAAM,IAAM,GAAM,EAAM,GAAM,EAExE,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAC1F,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAC1F,IAGEgyB,EAAqC,GAAIhyB,IAE3C,GAAM,IAAM,EAAM,GAAM,EAAM,EAAM,EAAM,EAAM,GAEhD,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAC1F,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAE1F,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,EAAM,EAAM,EAAM,GAAM,GAAM,EAAM,EAAM,GAAM,IAAM,GAC1F,IAAM,GAAM,EAAM,EAAM,EAAM,GAAM,EAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAC1F,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAC1F,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,GAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAC1F,GAAM,EAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,GAAM,IAAM,IAAM,IAC1F,GAAM,EAAM,EAAM,IAAM,IAAM,IAAM,GAAM,IAAM,GAAM,IAAM,GAAM,IAAM,IAAM,GAAM,GAAM,IAC1F,GAAM,IAAM,GAAM,GAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,GAAM,GAC1F,EAAM,IAAM,IAAM,GAAM,IAAM,GAAM,IAAM,IAAM,GAAM,GAAM,IAAM,GAAM,IAAM,IAAM,IAAM,GAC1F,IAAM,IAAM,EAAM,GAAM,EAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAC1F,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,GAAM,IAAM,IAAM,GAC1F,IAAM,IAAM,GAAM,GAAM,GAAM,EAAM,EAAM,EAAM,IAAM,GAAM,EAAM,GAAM,EAExE,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAC1F,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAC1F,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAC1F,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAC1F,IAGEiyB,EAAiB,GAAIjyB,IACvB,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAC1F,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,GAG5FtG,GAAQ00B,iBAAmB,SAAUH,EAAYO,EAAWH,GAC1D,GAAIpE,GAAS,GAAIjqB,GAAOquB,EAAa0D,EAAmCC,EAGxE,OAFA/D,GAAW3sB,KAAK2oB,EAAQoE,EAAa,EAAI,GACzCG,EAAUltB,KAAK2oB,EAAQoE,EAAa,IAAM,KACnCpE,GAGTvwB,EAAQ+0B,iBAAmB,SAAUR,GACnC,GAAI9yB,GAAS8yB,EAAW9yB,OAGpBshB,EAAQ,CACZ,MAAIthB,EAASshB,EAAQ,GAA2B,KAAtBwR,EAAWxR,MACrCA,GAAS,IAGLthB,EAASshB,EAAQ,IAA2B,IAApBwR,EAAWxR,IAAvC,CAEA,GAAIyV,GAA2B,IAApBjE,EAAWxR,EAEtB,IADAA,GAAS,IACLyV,EAAO,GAAKA,EAAO,GACnB/2B,EAASshB,EAAQyV,GAArB,CAGA,GAAIv2B,GAAMsyB,EAAWxR,EAAQyV,EAAO,IAAMA,EAAO,EAAIjE,EAAWxR,EAAQyV,EAAO,IAAM,EAAI,EAEzF,IADAzV,GAASyV,IACL/2B,EAASshB,EAAQ9gB,GAGjBR,EAASshB,EAAQ,GACK,IAAtBwR,EAAWxR,IACe,IAA1BwR,EAAWxR,EAAQ,IACO,IAA1BwR,EAAWxR,EAAQ,KAGvBA,GAAS,EAGLthB,EAASshB,EAAQ,GACK,IAAtBwR,EAAWxR,IACXwR,EAAWxR,EAAQ,GAAK,IACxBthB,EAASshB,EAAQ,EAAIwR,EAAWxR,EAAQ,KAI5C,MAAOwR,GAAW/V,MAAMuE,EAAQ,EAAGA,EAAQ,EAAIwR,EAAWxR,EAAQ,OAGpE/iB,EAAQs2B,gBAAkB,SAAUC,GAElC,IAAK,GADDv0B,GAAIsE,EAAOmd,QAAQ,GAAInd,IAAQ,IAAKiwB,EAAOv0B,IACtCy2B,EAAO,GAAIC,EAAO,EAAGD,EAAO,GAAiB,IAAZz2B,EAAE02B,MAAkC,IAAd12B,EAAE02B,EAAO,MAAcD,IAAQC,GAG/F,IAAK,GADD/mB,GAAIrL,EAAOmd,QAAQ,GAAInd,IAAQ,IAAKiwB,EAAO5kB,IACtCgnB,EAAO,GAAIC,EAAO,EAAGD,EAAO,GAAiB,IAAZhnB,EAAEinB,MAAkC,IAAdjnB,EAAEinB,EAAO,MAAcD,IAAQC,GAE/F,MAAOR,GAAMnY,OAAOje,EAAEwc,MAAMka,GAAO/mB,EAAE6M,MAAMoa,KAG7C54B,EAAQw2B,gBAAkB,SAAU3D,GAClC,GAAI7wB,GAAI,GAAIsE,GAAOiyB,GACf5mB,EAAI,GAAIrL,GAAOiyB,EAEnB,KACE,GAAIhC,GAAS6B,EAAMS,OAAOhG,EAE1B,IADwB,KAApB0D,EAAOv0B,EAAEP,QAAiC,IAAhB80B,EAAOv0B,EAAE,KAAau0B,EAAOv0B,EAAIu0B,EAAOv0B,EAAEwc,MAAM,IAC1E+X,EAAOv0B,EAAEP,OAAS,GAAI,KAAM,IAAId,OAAM,uBAE1C,IADwB,KAApB41B,EAAO5kB,EAAElQ,QAAiC,IAAhB80B,EAAO5kB,EAAE,KAAa4kB,EAAO5kB,EAAI4kB,EAAO5kB,EAAE6M,MAAM,IAC1E+X,EAAO5kB,EAAElQ,OAAS,GAAI,KAAM,IAAId,OAAM,wBAC1C,MAAOm4B,GACP,OAMF,MAHAvC,GAAOv0B,EAAE4F,KAAK5F,EAAG,GAAKu0B,EAAOv0B,EAAEP,QAC/B80B,EAAO5kB,EAAE/J,KAAK+J,EAAG,GAAK4kB,EAAO5kB,EAAElQ,SAEtBO,EAAGA,EAAG2P,EAAGA,IAGpB3R,EAAQ02B,mBAAqB,SAAU7D,GACrC,GAAI7wB,GAAI,GAAIsE,GAAOiyB,GACf5mB,EAAI,GAAIrL,GAAOiyB,GAEf92B,EAASoxB,EAAIpxB,OACbshB,EAAQ,CAGZ,IAAqB,KAAjB8P,EAAI9P,KAAR,CAGA,GAAIgW,GAAUlG,EAAI9P,IAClB,MAAc,IAAVgW,IACFhW,GAASgW,EAAU,IACfhW,EAAQthB,KAIO,IAAjBoxB,EAAI9P,KAAR,CAGA,GAAIxJ,GAAOsZ,EAAI9P,IACf,IAAW,IAAPxJ,EAAa,CAEf,GADAwf,EAAUxf,EAAO,IACbwJ,EAAQgW,EAAUt3B,EAAQ,MAC9B,MAAOs3B,EAAU,GAAoB,IAAflG,EAAI9P,GAAiBA,GAAS,EAAGgW,GAAW,GAClE,IAAKxf,EAAO,EAAGwf,EAAU,EAAGhW,GAAS,EAAGgW,GAAW,EAAGxf,GAAQA,GAAQ,GAAKsZ,EAAI9P,GAEjF,KAAIxJ,EAAO9X,EAASshB,GAApB,CACA,GAAIiW,GAASjW,CAIb,IAHAA,GAASxJ,EAGY,IAAjBsZ,EAAI9P,KAAR,CAGA,GAAIyO,GAAOqB,EAAI9P,IACf,IAAW,IAAPyO,EAAa,CAEf,GADAuH,EAAUvH,EAAO,IACbzO,EAAQgW,EAAUt3B,EAAQ,MAC9B,MAAOs3B,EAAU,GAAoB,IAAflG,EAAI9P,GAAiBA,GAAS,EAAGgW,GAAW,GAClE,IAAKvH,EAAO,EAAGuH,EAAU,EAAGhW,GAAS,EAAGgW,GAAW,EAAGvH,GAAQA,GAAQ,GAAKqB,EAAI9P,GAEjF,KAAIyO,EAAO/vB,EAASshB,GAApB,CACA,GAAIkW,GAASlW,CAIb,KAHAA,GAASyO,EAGFjY,EAAO,GAAqB,IAAhBsZ,EAAImG,GAAkBzf,GAAQ,EAAGyf,GAAU,GAE9D,KAAIzf,EAAO,IAAX,CACA,GAAI2f,GAASrG,EAAIrU,MAAMwa,EAAQA,EAASzf,EAIxC,KAHA2f,EAAOtxB,KAAK5F,EAAG,GAAKk3B,EAAOz3B,QAGpB+vB,EAAO,GAAqB,IAAhBqB,EAAIoG,GAAkBzH,GAAQ,EAAGyH,GAAU,GAE9D,KAAIzH,EAAO,IAAX,CACA,GAAI2H,GAAStG,EAAIrU,MAAMya,EAAQA,EAASzH,EAGxC,OAFA2H,GAAOvxB,KAAK+J,EAAG,GAAKwnB,EAAO13B,SAElBO,EAAGA,EAAG2P,EAAGA,ajBwrMU3M,KAAKhF,EAASC,EAAoB,KAAKqG,SAI/D8yB,KACA,SAASr5B,EAAQC,GkBh4MvBD,EAAAC,SACAm0B,wBAAA,iCACAM,4BAAA,iCACAI,8BAAA,gCACAwE,8BAAA,yDACAC,8BAAA,qBACAC,+BAAA,gCACAvE,+BAAA,kCACAgB,4BAAA,iCACAE,8BAAA,mDACAV,2BAAA,gCACAE,6BAAA,+BACA8D,yBAAA,mDACAC,0BAAA,iCACAC,6BAAA,wDACAC,6BAAA,qBACAC,2BAAA,0CACAC,UAAA,wCACAzD,6BAAA,+BACAC,+BAAA,8BACAyD,2BAAA,2BACArD,+BAAA,+BACAsD,mCAAA,6CACAC,gBAAA,6DACAC,mBAAA,6CACAtD,mBAAA,6BACAC,qBAAA,4BACAG,qBAAA,8BACAC,0BAAA,kCACAC,4BAAA,iCACAE,6BAAA,uCACAI,yBAAA,8BACAE,0BAAA,8CACAtC,mBAAA,2BACAC,qBAAA,4BlBu4MM8E,KACA,SAASn6B,EAAQC,EAASC,ImB16MhC,SAAAqG,GAAA,YAUA,SAAS6zB,yBAAyBC,EAAOC,GACvC,GAAIh2B,GAAI,GAAIpD,GAAGo5B,EAGf,IAAIh2B,EAAEsC,IAAI2zB,EAAS71B,IAAM,EAAG,MAAO,KACnCJ,GAAIA,EAAEoT,MAAM6iB,EAAS54B,IAGrB,IAAI4C,GAAID,EAAEoU,SAASD,QAAQnU,GAAG4T,QAAQqiB,EAASj3B,GAAGuV,SAGlD,OAFe,KAAVwhB,IAAoB91B,EAAEgS,UAAShS,EAAIA,EAAEyU,UAEnCmX,EAAGzC,SAAUK,KAAOzpB,EAAGA,EAAGC,EAAGA,KAGtC,QAASi2B,2BAA2BH,EAAOC,EAASG,GAClD,GAAIn2B,GAAI,GAAIpD,GAAGo5B,GACX/1B,EAAI,GAAIrD,GAAGu5B,EAGf,IAAIn2B,EAAEsC,IAAI2zB,EAAS71B,IAAM,GAAKH,EAAEqC,IAAI2zB,EAAS71B,IAAM,EAAG,MAAO,KAM7D,IAJAJ,EAAIA,EAAEoT,MAAM6iB,EAAS54B,KACrB4C,EAAIA,EAAEmT,MAAM6iB,EAAS54B,MAGN,IAAV04B,GAA4B,IAAVA,IAAmB91B,EAAEgS,WAAuB,IAAV8jB,GAAiB,MAAO,KAGjF,IAAIK,GAAKp2B,EAAEoU,SAASD,QAAQnU,EAC5B,OAAKC,GAAEmU,SAASN,QAAQsiB,EAAGxiB,QAAQqiB,EAASj3B,IAAIoF,SAEzCynB,EAAGzC,SAAUK,KAAOzpB,EAAGA,EAAGC,EAAGA,KAF6B,KAKnE,QAASo2B,eAAe5F,GACtB,GAAIsF,GAAQtF,EAAU,EACtB,QAAQsF,GACN,IAAK,GACL,IAAK,GACH,MAAyB,MAArBtF,EAAUrzB,OAAsB,KAC7B04B,wBAAwBC,EAAOtF,EAAUtW,MAAM,EAAG,IAC3D,KAAK,GACL,IAAK,GACL,IAAK,GACH,MAAyB,MAArBsW,EAAUrzB,OAAsB,KAC7B84B,0BAA0BH,EAAOtF,EAAUtW,MAAM,EAAG,IAAKsW,EAAUtW,MAAM,GAAI,IACtF,SACE,MAAO,OAxDb,GAAImc,GAAa16B,EAAQ,KACrBgB,EAAKhB,EAAQ,KACb+sB,EAAK/sB,EAAQ,KAAYiwB,GAEzBgE,EAAWj0B,EAAQ,MAEnBiwB,EAAK,GAAIlD,GAAG,aACZsN,EAAWpK,EAAG9O,KAqDlBphB,GAAQs0B,iBAAmB,SAAUC,GACnC,GAAIqG,GAAK,GAAI35B,GAAGszB,EAChB,OAAOqG,GAAGj0B,IAAI2zB,EAAS51B,GAAK,IAAMk2B,EAAGnyB,UAGvCzI,EAAQ00B,iBAAmB,SAAUH,EAAYI,GAC/C,GAAIhL,GAAI,GAAI1oB,GAAGszB,EACf,IAAI5K,EAAEhjB,IAAI2zB,EAAS51B,IAAM,GAAKilB,EAAElhB,SAAU,KAAM,IAAI9H,OAAMuzB,EAASqF,+BAEnE,OAAO,IAAIjzB,GAAO4pB,EAAGxC,eAAe6G,GAAY9E,UAAUkF,GAAY,KAGxE30B,EAAQi1B,mBAAqB,SAAUV,EAAYW,GACjD,GAAI0F,GAAK,GAAI35B,GAAGi0B,EAChB,IAAI0F,EAAGj0B,IAAI2zB,EAAS51B,IAAM,EAAG,KAAM,IAAI/D,OAAMuzB,EAASmF,8BAItD,IAFAuB,EAAGnvB,KAAK,GAAIxK,GAAGszB,IACXqG,EAAGj0B,IAAI2zB,EAAS51B,IAAM,GAAGk2B,EAAGh2B,KAAK01B,EAAS51B,GAC1Ck2B,EAAGnyB,SAAU,KAAM,IAAI9H,OAAMuzB,EAASmF,8BAE1C,OAAOuB,GAAG5xB,YAAY1C,EAAQ,KAAM,KAGtCtG,EAAQq1B,mBAAqB,SAAUd,EAAYW,GACjD,GAAI0F,GAAK,GAAI35B,GAAGi0B,EAChB,IAAI0F,EAAGj0B,IAAI2zB,EAAS51B,IAAM,GAAKk2B,EAAGnyB,SAAU,KAAM,IAAI9H,OAAMuzB,EAASoF,8BAKrE,OAHAsB,GAAGlrB,KAAK,GAAIzO,GAAGszB,IACXqG,EAAGj0B,IAAI2zB,EAAS51B,KAAIk2B,EAAKA,EAAGz0B,KAAKm0B,EAAS51B,IAEvCk2B,EAAG5xB,YAAY1C,EAAQ,KAAM,KAGtCtG,EAAQs1B,gBAAkB,SAAUf,EAAYI,GAC9C,GAAIhL,GAAI,GAAI1oB,GAAGszB,EACf,IAAI5K,EAAEhjB,IAAI2zB,EAAS51B,IAAM,GAAKilB,EAAElhB,SAAU,KAAM,IAAI9H,OAAMuzB,EAASuF,0BAEnE,OAAO,IAAInzB,GAAO4pB,EAAGxC,eAAe6G,GAAY9E,UAAUkF,GAAY,KAGxE30B,EAAQu1B,iBAAmB,SAAUT,EAAWH,GAC9C,GAAIkG,GAAOH,cAAc5F,EACzB,IAAa,OAAT+F,EAAe,KAAM,IAAIl6B,OAAMuzB,EAASsF,yBAE5C,OAAO,IAAIlzB,GAAOu0B,EAAKpL,UAAUkF,GAAY,KAG/C30B,EAAQ21B,gBAAkB,SAAUb,GAClC,MAAoC,QAA7B4F,cAAc5F,IAGvB90B,EAAQ41B,kBAAoB,SAAUd,EAAWI,EAAOP,GACtD,GAAIkG,GAAOH,cAAc5F,EACzB,IAAa,OAAT+F,EAAe,KAAM,IAAIl6B,OAAMuzB,EAASsF,yBAG5C,IADAtE,EAAQ,GAAIj0B,GAAGi0B,GACXA,EAAMvuB,IAAI2zB,EAAS51B,IAAM,EAAG,KAAM,IAAI/D,OAAMuzB,EAASwF,6BAEzD,OAAO,IAAIpzB,GAAOg0B,EAASrkB,EAAEzT,IAAI0yB,GAAOxpB,IAAImvB,EAAK/M,KAAK7N,QAAO,EAAM0U,KAGrE30B,EAAQ61B,kBAAoB,SAAUf,EAAWI,EAAOP,GACtD,GAAIkG,GAAOH,cAAc5F,EACzB,IAAa,OAAT+F,EAAe,KAAM,IAAIl6B,OAAMuzB,EAASsF,yBAG5C,IADAtE,EAAQ,GAAIj0B,GAAGi0B,GACXA,EAAMvuB,IAAI2zB,EAAS51B,IAAM,GAAKwwB,EAAMzsB,SAAU,KAAM,IAAI9H,OAAMuzB,EAASyF,6BAE3E,OAAO,IAAIrzB,GAAOu0B,EAAK/M,IAAItrB,IAAI0yB,GAAOjV,QAAO,EAAM0U,KAGrD30B,EAAQ81B,iBAAmB,SAAUC,EAAYpB,GAE/C,IAAK,GADDmG,GAAQ,GAAIl4B,OAAMmzB,EAAWt0B,QACxBW,EAAI,EAAGA,EAAI2zB,EAAWt0B,SAAUW,EAEvC,GADA04B,EAAM14B,GAAKs4B,cAAc3E,EAAW3zB,IACnB,OAAb04B,EAAM14B,GAAa,KAAM,IAAIzB,OAAMuzB,EAASsF,yBAIlD,KAAK,GADDjY,GAAQuZ,EAAM,GAAGhN,IACZlqB,EAAI,EAAGA,EAAIk3B,EAAMr5B,SAAUmC,EAAG2d,EAAQA,EAAM7V,IAAIovB,EAAMl3B,GAAGkqB,IAClE,IAAIvM,EAAM+F,aAAc,KAAM,IAAI3mB,OAAMuzB,EAAS0F,2BAEjD,OAAO,IAAItzB,GAAOib,EAAMtB,QAAO,EAAM0U,KAGvC30B,EAAQm2B,mBAAqB,SAAU5G,GACrC,GAAIvtB,GAAI,GAAIf,GAAGsuB,EAAU/Q,MAAM,EAAG,KAC9B7M,EAAI,GAAI1Q,GAAGsuB,EAAU/Q,MAAM,GAAI,IACnC,IAAIxc,EAAE2E,IAAI2zB,EAAS51B,IAAM,GAAKiN,EAAEhL,IAAI2zB,EAAS51B,IAAM,EAAG,KAAM,IAAI/D,OAAMuzB,EAAS4F,2BAE/E,IAAIvJ,GAAS,GAAIjqB,GAAOipB,EAGxB,OAFqB,KAAjB5d,EAAEhL,IAAIupB,EAAG7C,KAAWiN,EAAS51B,EAAE0B,IAAIuL,GAAG3I,YAAY1C,EAAQ,KAAM,IAAIsB,KAAK2oB,EAAQ,IAE9EA,GAGTvwB,EAAQs2B,gBAAkB,SAAU/G,GAClC,GAAIvtB,GAAIutB,EAAU/Q,MAAM,EAAG,IACvB7M,EAAI4d,EAAU/Q,MAAM,GAAI,GAC5B,IAAI,GAAIvd,GAAGe,GAAG2E,IAAI2zB,EAAS51B,IAAM,GAAK,GAAIzD,GAAG0Q,GAAGhL,IAAI2zB,EAAS51B,IAAM,EAAG,KAAM,IAAI/D,OAAMuzB,EAAS4F,2BAE/F,QAAS93B,EAAGA,EAAG2P,EAAGA,IAGpB3R,EAAQw2B,gBAAkB,SAAUD,GAClC,GAAIv0B,GAAI,GAAIf,GAAGs1B,EAAOv0B,EAClBA,GAAE2E,IAAI2zB,EAAS51B,IAAM,IAAG1C,EAAI,GAAIf,GAAG,GAEvC,IAAI0Q,GAAI,GAAI1Q,GAAGs1B,EAAO5kB,EAGtB,OAFIA,GAAEhL,IAAI2zB,EAAS51B,IAAM,IAAGiN,EAAI,GAAI1Q,GAAG,IAEhCqF,EAAOmd,QACZzhB,EAAEgH,YAAY1C,EAAQ,KAAM,IAC5BqL,EAAE3I,YAAY1C,EAAQ,KAAM,OAIhCtG,EAAQ4uB,KAAO,SAAUgE,EAAS2B,EAAYsC,EAAStF,GACrD,GAAuB,kBAAZsF,GAAwB,CACjC,GAAIkE,GAAWlE,CACfA,GAAU,SAAUmE,GAClB,GAAIzM,GAAQwM,EAASnI,EAAS2B,EAAY,KAAMhD,EAAMyJ,EACtD,KAAK10B,EAAOkuB,SAASjG,IAA2B,KAAjBA,EAAM9sB,OAAe,KAAM,IAAId,OAAMuzB,EAAS8F,gBAE7E,OAAO,IAAI/4B,GAAGstB,IAIlB,GAAI5E,GAAI,GAAI1oB,GAAGszB,EACf,IAAI5K,EAAEhjB,IAAI2zB,EAAS51B,IAAM,GAAKilB,EAAElhB,SAAU,KAAM,IAAI9H,OAAMuzB,EAAS8F,gBAEnE,IAAIzJ,GAASL,EAAGtB,KAAKgE,EAAS2B,GAAclF,WAAW,EAAM7rB,EAAGqzB,EAAS1I,KAAMoD,GAC/E,QACEhC,UAAWjpB,EAAOmd,QAChB8M,EAAOvuB,EAAEgH,YAAY1C,EAAQ,KAAM,IACnCiqB,EAAO5e,EAAE3I,YAAY1C,EAAQ,KAAM,MAErC+wB,SAAU9G,EAAOnB,gBAIrBpvB,EAAQsvB,OAAS,SAAUsD,EAASrD,EAAWuF,GAC7C,GAAIyB,IAAUv0B,EAAGutB,EAAU/Q,MAAM,EAAG,IAAK7M,EAAG4d,EAAU/Q,MAAM,GAAI,KAE5Dyc,EAAO,GAAIh6B,GAAGs1B,EAAOv0B,GACrBk5B,EAAO,GAAIj6B,GAAGs1B,EAAO5kB,EACzB,IAAIspB,EAAKt0B,IAAI2zB,EAAS51B,IAAM,GAAKw2B,EAAKv0B,IAAI2zB,EAAS51B,IAAM,EAAG,KAAM,IAAI/D,OAAMuzB,EAAS4F,2BACrF,IAAwB,IAApBoB,EAAKv0B,IAAIupB,EAAG7C,KAAa4N,EAAKxyB,UAAYyyB,EAAKzyB,SAAU,OAAO,CAEpE,IAAIoyB,GAAOH,cAAc5F,EACzB,IAAa,OAAT+F,EAAe,KAAM,IAAIl6B,OAAMuzB,EAASsF,yBAE5C,OAAOtJ,GAAGZ,OAAOsD,EAAS2D,GAASlyB,EAAGw2B,EAAK/M,IAAIzpB,EAAGC,EAAGu2B,EAAK/M,IAAIxpB,KAGhEtE,EAAQo3B,QAAU,SAAUxE,EAASrD,EAAW8H,EAAU1C,GACxD,GAAI4B,IAAUv0B,EAAGutB,EAAU/Q,MAAM,EAAG,IAAK7M,EAAG4d,EAAU/Q,MAAM,GAAI,KAE5Dyc,EAAO,GAAIh6B,GAAGs1B,EAAOv0B,GACrBk5B,EAAO,GAAIj6B,GAAGs1B,EAAO5kB,EACzB,IAAIspB,EAAKt0B,IAAI2zB,EAAS51B,IAAM,GAAKw2B,EAAKv0B,IAAI2zB,EAAS51B,IAAM,EAAG,KAAM,IAAI/D,OAAMuzB,EAAS4F,2BAErF,KACE,GAAImB,EAAKxyB,UAAYyyB,EAAKzyB,SAAU,KAAM,IAAI9H,MAE9C,IAAI4gB,GAAQ2O,EAAGR,cAAckD,EAAS2D,EAAQc,EAC9C,OAAO,IAAI/wB,GAAOib,EAAMtB,QAAO,EAAM0U,IACrC,MAAOmE,GACP,KAAM,IAAIn4B,OAAMuzB,EAAS+F,sBAI7Bj6B,EAAQ03B,KAAO,SAAU5C,EAAWP,GAClC,GAAI4G,GAASn7B,EAAQ23B,WAAW7C,EAAWP,GAAY,EACvD,OAAOoG,GAAW,UAAUjI,OAAOyI,GAAQxI,UAG7C3yB,EAAQ23B,WAAa,SAAU7C,EAAWP,EAAYI,GACpD,GAAIkG,GAAOH,cAAc5F,EACzB,IAAa,OAAT+F,EAAe,KAAM,IAAIl6B,OAAMuzB,EAASsF,yBAE5C,IAAI4B,GAAS,GAAIn6B,GAAGszB,EACpB,IAAI6G,EAAOz0B,IAAI2zB,EAAS51B,IAAM,GAAK02B,EAAO3yB,SAAU,KAAM,IAAI9H,OAAMuzB,EAAS2F,UAE7E,OAAO,IAAIvzB,GAAOu0B,EAAK/M,IAAItrB,IAAI44B,GAAQnb,QAAO,EAAM0U,OnB06MxB3vB,KAAKhF,EAASC,EAAoB,KAAKqG,SAI/D+0B,KACA,SAASt7B,EAAQC,EAASC,GAE/B,YoBrqNDF,GAAOC,QACHC,EAD+B,mBAAXq7B,SAA0BA,OAAOC,QAAUD,OAAOC,OAAOC,OACrE,KACA,OpByqNNC,KACA,SAAS17B,EAAQC,EAASC,IAEH,SAASqG,EAAQo1B,GAAS,YqBlnNvD,SAASC,cAAcva,GACrB,OACE5c,KAAM,QACNo3B,WAAYC,EAAWza,GACvBkM,MACE9oB,KAAMs3B,mBAAmB97B,EAAQ+7B,qBAKvC,QAASC,eAATC,GAAuC,GAAbrc,GAAaqc,EAAbrc,IAAKsc,EAAQD,EAARC,KACrB9a,EAAU8a,EAAV9a,MACF+a,EAASR,aAAava,GACtBgb,EAAMC,gBAAgBH,EAuC5B,OAtCAE,GAAIxN,KAAO0N,EAAGC,KAAHC,mBAAAC,KAAQ,QAAAC,UAAWnL,EAAMoL,EAAWjR,GAA5B,GAAAmH,GAAAuB,CAAA,OAAAoI,oBAAAD,KAAA,SAAAK,GAAA,cAAAA,EAAA/iB,KAAA+iB,EAAA9iB,MAAA,UACQ,kBAAd6iB,GADM,CAAAC,EAAA9iB,KAAA,QAEf4R,EAAKiR,EAFUC,EAAA9iB,KAAA,kBAGNgiB,mBAAmBa,KAAe38B,EAAQ+7B,kBAHpC,CAAAa,EAAA9iB,KAAA,cAAA8iB,GAAAC,OAAA,SAIRnR,EAAG,GAAI/qB,OAAM,sDAJL,cAObkyB,GAPa,OAAA+J,EAAA/iB,KAAA,EAAA+iB,EAAA9iB,KAAA,GASH0hB,EAAO5M,KAAKuN,EAAQvc,EAAI2U,WAAYuI,EAAcvL,GAT/C,SASfsB,EATe+J,EAAAG,KAAAH,EAAA9iB,KAAA,uBAAA8iB,GAAA/iB,KAAA,GAAA+iB,EAAAI,GAAAJ,EAAA,YAAAA,EAAAC,OAAA,SAWRnR,QAXQ,SAcX0I,EAAM3C,EAAM,GAAInrB,GAAOusB,IAAM/rB,SAAS,OAC5C4kB,EAAG,KAAM0I,EAfQ,yBAAAwI,GAAAK,SAAAP,SAAAp7B,OAAA,WAkBnB86B,EAAI9M,OAASgN,EAAGC,KAAHC,mBAAAC,KAAQ,QAAAS,UAAW3L,EAAMoL,EAAW9J,EAAKnH,GAAjC,GAAAyR,GAAAC,CAAA,OAAAZ,oBAAAD,KAAA,SAAAc,GAAA,cAAAA,EAAAxjB,KAAAwjB,EAAAvjB,MAAA,UACA,kBAAR+Y,GADQ,CAAAwK,EAAAvjB,KAAA,QAEjB4R,EAAKmH,EACLA,EAAM8J,EAHWU,EAAAvjB,KAAA,kBAIRgiB,mBAAmBa,KAAe38B,EAAQ+7B,kBAJlC,CAAAsB,EAAAvjB,KAAA,cAAAujB,GAAAR,OAAA,SAKVnR,EAAG,GAAI/qB,OAAM,sDALH,cAQbw8B,GAAYG,EAAQ,GAAIh3B,GAAOusB,EAAK,QAEtCuK,EAVe,OAAAC,EAAAxjB,KAAA,EAAAwjB,EAAAvjB,KAAA,GAYA0hB,EAAOlM,OAAO6M,EAAQvc,EAAIkV,UAAWgI,EAAcK,GAAYL,EAAcvL,GAZ7E,SAYjB6L,EAZiBC,EAAAN,KAAAM,EAAAvjB,KAAA,uBAAAujB,GAAAxjB,KAAA,GAAAwjB,EAAAL,GAAAK,EAAA,YAAAA,EAAAR,OAAA,SAcVnR,QAdU,SAiBnBA,EAAG,KAAM0R,EAjBU,yBAAAC,GAAAJ,SAAAC,SAAA57B,OAAA,WAoBdi8B,EAAKC,aAAapB,GAU3B,QAASN,oBAAoB2B,GAE3B,GADAA,EAAOA,EAAKC,eACPC,EAAWF,GACd,KAAM,IAAI98B,OAAJ,oBAA8Bk3B,OAAO+F,KAAKD,GAAYE,KAAK,MAGnE,OAAOF,GAAWF,GAGpB,QAASpB,iBAAiBH,GACxB,GAAM4B,GAAe5B,EAAKpO,IAAIhnB,SAAS,MACvC,QACEsU,OACA0iB,eACAC,YAAa7B,EAAK6B,YAClBC,eAAgB9B,EAAKvO,KACrB7kB,OAAQ,SAAiBm1B,GACvB,GAAIA,EAAkB,CACpB,IAAK/B,EAAKvO,KACR,KAAM,IAAIhtB,OAAM,uBAGlB,OAAOu7B,GAGT,GAAMgC,GAAWC,EAAKjC,EAAM,OAI5B,OAHKgC,GAASpQ,MAAKoQ,EAASpQ,IAAMgQ,GAC7BI,EAAS9iB,OAAM8iB,EAAS9iB,KAAOA,GAE7B8iB,IAKb,QAASlX,UAAUkV,GACjB,GAAMC,GAASR,aAAaO,EAAK9a,OAC3Bgd,EAAQC,EAAY,QAASlC,EAAO7O,KAAK9oB,KAAM23B,EAAOP,YAExD0C,SACElC,EAAME,EAAGC,KAAHC,mBAAAC,KAAQ,QAAA8B,YAAA,GAAAC,GAAAC,CAAA,OAAAjC,oBAAAD,KAAA,SAAAmC,GAAA,cAAAA,EAAA7kB,KAAA6kB,EAAA5kB,MAAA,aAAA4kB,GAAA5kB,KAAA,EACAskB,CADA,WAClBE,EADkBI,EAAA3B,MAEduB,EAFc,CAAAI,EAAA5kB,KAAA,cAGV0kB,GAAMtC,EAAKvO,MAAQ,SAAW,UAC9B8Q,EAAME,EAAMzC,GAJFwC,EAAA7B,OAAA,SAKTrB,EAAOoD,UAAU,MAAOH,EAAKtC,EAAQ0C,EAAaL,GALzC,cAAAE,GAAA7B,OAAA,SAOT58B,EAAQ,MAAa+mB,SAASkV,GAPrB,yBAAAwC,GAAAzB,SAAAsB,SAAAj9B,WAWdw9B,EAAYzC,gBAAgBH,EAClC6C,GAAO3C,EAAK0C,EAEZ,IAAIE,SAgCJ,OA/BA1C,GAAGC,KAAHC,mBAAAC,KAAQ,QAAAwC,YAAA,GAAAC,EAAA,OAAA1C,oBAAAD,KAAA,SAAA4C,GAAA,cAAAA,EAAAtlB,KAAAslB,EAAArlB,MAAA,aAAAqlB,GAAArlB,KAAA,EACgBsiB,CADhB,WACA8C,EADAC,EAAApC,KAEDuB,EAFC,CAAAa,EAAArlB,KAAA,cAAAqlB,GAAAtC,OAAA,SAGGmC,EAAYE,EAHf,QAMNF,EAAYhD,eACVE,OACAtc,KACE2U,WAAY2H,EAAKvO,MAAQuR,EACzBpK,UAAWoK,IAVT,wBAAAC,GAAAlC,SAAAgC,SAAA39B,WAeR89B,EAAUC,QAAQ,SAAAC,GAChBzH,OAAO0H,eAAenD,EAAKkD,GACzBE,IAAK,WACH,MAAOR,IAAaA,EAAUM,IAASR,EAAUQ,SAKrD,OAAQ,UAAUD,QAAQ,SAAAI,GAC1BrD,EAAIqD,GAAUnD,EAAGC,KAAHC,mBAAAC,KAAQ,QAAAiD,YAAA,GAAAC,GAAAC,SAAA,OAAApD,oBAAAD,KAAA,SAAAsD,GAAA,cAAAA,EAAAhmB,KAAAgmB,EAAA/lB,MAAA,aAAA+lB,GAAA/lB,KAAA,EAEdsiB,CAFc,cAAAyD,GAAAhD,OAAA,SAGbmC,EAAUS,GAAQK,MAAMd,EAAxBW,GAHa,wBAAAE,GAAA5C,SAAAyC,SAAAp+B,WAOjBi8B,EAAKC,aAAapB,GA/M3B,GAAMZ,GAASF,OAAOC,OAAOC,OACvB2C,EAAOl+B,EAAQ,MACf8+B,EAAS9+B,EAAQ,MACjB8/B,EAAQ9/B,EAAQ,KAAS,sBACzBs9B,EAAOt9B,EAAQ,MAEfq8B,GADUr8B,EAAQ,MACbA,EAAQ,OACbmb,EAAO,KrBkrNR4kB,EqB1qND//B,EAAQ,MANV0+B,ErBirNWqB,EqBjrNXrB,MACAsB,ErBirNaD,EqBjrNbC,QACApE,ErBirNgBmE,EqBjrNhBnE,WACAiB,ErBirNmBkD,EqBjrNnBlD,cACArL,ErBirNWuO,EqBjrNXvO,MACA6L,ErBirNa0C,EqBjrNb1C,QAGI4C,EAAW,GAAI55B,GAAO,GAC5B45B,GAASC,KAAK,EACd,IAAMtB,IAAc,EACduB,EAAU,GAAIC,KACdjB,GACJ,OACA,eACA,cACA,SACA,gBAGIkB,EAAMhE,EAAGC,KAAHC,mBAAAC,KAAQ,QAAA8D,SAAWC,EAAM9U,GAAjB,GAAAyQ,GAAAmC,EAAA1e,EAAA7E,EAAA0lB,EAAAC,EAAA3C,CAAA,OAAAvB,oBAAAD,KAAA,SAAAoE,GAAA,cAAAA,EAAA9mB,KAAA8mB,EAAA7mB,MAAA,aACZqiB,GAASR,aAAa6E,EAAKpf,OAASphB,EAAQ4gC,eADhCD,EAAA7mB,KAAA,EAEMukB,EAAY,QAASlC,EAAO7O,KAAK9oB,KAAM23B,EAAOP,WAFpD,WAEZ0C,EAFYqC,EAAA5D,KAAA,CAAA4D,EAAA7mB,KAAA,cAAA6mB,GAAA9D,OAAA,SAIT58B,EAAQ,MAAaqgC,IAAIE,EAAM9U,GAJtB,cAOd9L,GAPc,OAAA+gB,EAAA9mB,KAAA,EAAA8mB,EAAA7mB,KAAA,GASE0hB,EAAOqF,YAAY1E,EAAQ0C,GAAc,OAAQ,UATnD,eASV9jB,GATU4lB,EAAA5D,KAAA4D,EAAA7mB,KAAA,GAUM0hB,EAAOsF,UAAU,MAAO/lB,EAAIwZ,WAVlC,eAUVkM,GAVUE,EAAA5D,KAWV2D,EAAWT,EAAQQ,GAXTE,EAAA7mB,KAAA,GAYU0hB,EAAO7I,QAASnuB,KAAM,WAAak8B,EAAS5S,IAZtD,SAYViQ,EAZU4C,EAAA5D,KAahBnd,EAAMoc,eACJpc,IAAK7E,EACLmhB,MACE9gB,OACAgG,MAAOsf,EAAStf,MAChBuM,KAAM+S,EAAS/S,KAAK7mB,SAAS,OAC7BgnB,IAAK4S,EAAS5S,IAAIhnB,SAAS,OAC3Bi3B,YAAa,GAAIz3B,GAAOy3B,GAAaj3B,SAAS,UApBlC65B,EAAA7mB,KAAA,uBAAA6mB,GAAA9mB,KAAA,GAAA8mB,EAAA3D,GAAA2D,EAAA,YAwBhBZ,EAAM,yBAANY,EAAA3D,IAxBgB2D,EAAA9D,OAAA,SAyBTnR,QAzBS,SA4BlBA,EAAG,KAAM9L,EA5BS,yBAAA+gB,GAAA1D,SAAAsD,QAAAj/B,OAAA,WAsFdq8B,GACJoD,KAAQ,QACRC,OAAU,UACVC,OAAU,UACVC,OAAU,WAqGN7C,EAAc/B,EAAGC,KAAHC,mBAAAC,KAAQ,QAAA0E,UAAW/lB,EAAMqiB,EAAMrc,GAAvB,GAAAggB,GAAAZ,EAAAa,EAAAC,EAAAC,CAAA,OAAA/E,oBAAAD,KAAA,SAAAiF,GAAA,cAAAA,EAAA3nB,KAAA2nB,EAAA1nB,MAAA,WACtB4hB,EAAO+F,SAAY/F,EAAO+F,QAAQC,QADZ,CAAAF,EAAA1nB,KAAA,cAAA0nB,GAAA3E,OAAA,UAEjB,EAFiB,WAKrBrB,GAAWA,EAAOoD,WAAcpD,EAAO5M,MAAS4M,EAAOlM,OALlC,CAAAkS,EAAA1nB,KAAA,cAAA0nB,GAAA3E,OAAA,UAMjB,EANiB,WASpBuE,EAAQ3D,EATY,IASJriB,EATI,IASIgG,GAC1Bgf,EAAQuB,IAAIP,GAVU,CAAAI,EAAA1nB,KAAA,cAAA0nB,GAAA3E,OAAA,SAWjBuD,EAAQZ,IAAI4B,GAXK,cAcpBZ,IACJh8B,KAAM4W,GAGJgG,EACFof,EAAK5E,WAAaxa,GAElBof,EAAKoB,cAAgB,KACrBpB,EAAKqB,eAAiB,GAAIv7B,IAAQ,EAAM,EAAM,IAC9Ck6B,EAAKlT,MACH9oB,KAAMi5B,IAIJ4D,GACJ78B,KAAM4W,GAGJgG,IACFigB,EAAS/T,MACP9oB,KAAMi5B,IAIJ6D,EAAOQ,GAAWtB,OAAMa,aAC9BjB,EAAQ2B,IAAItE,EAAM6D,GAvCQE,EAAA1nB,KAAA,GAwCNwnB,CAxCM,eAwCpBC,GAxCoBC,EAAAzE,KAyCtBwE,GACFxB,yCAA6C3kB,EAA7C,gBAAiEqiB,EAAjE,KAAyErc,iBAAuBA,EAAU,KA1ClFogB,EAAA3E,OAAA,SA6CnB0E,EA7CmB,yBAAAC,GAAAvE,SAAAkE,SAAA7/B,SAgDtBwgC,EAAWxF,EAAGC,KAAHC,mBAAAC,KAAQ,QAAAuF,UAAAC,GAAA,GAAAriB,GAAa4gB,EAAbyB,EAAazB,KAAMa,EAAnBY,EAAmBZ,QAAnB,OAAA7E,oBAAAD,KAAA,SAAA2F,GAAA,cAAAA,EAAAroB,KAAAqoB,EAAApoB,MAAA,aAAAooB,GAAAroB,KAAA,EAAAqoB,EAAApoB,KAAA,EAEH0hB,EAAOqF,YAAYL,GAAM,GAAQ,QAF9B,cAEf5gB,GAFesiB,EAAAnF,KAAAmF,EAAApoB,KAAA,EAGf0hB,EAAO5M,KAAKyS,EAAUzhB,EAAI2U,WAAY2L,EAHvB,cAAAgC,GAAArF,OAAA,UAId,EAJc,cAAAqF,GAAAroB,KAAA,EAAAqoB,EAAAlF,GAAAkF,EAAA,YAMrBnC,EAAMmC,EAAAlF,GAAIpK,SANWsP,EAAArF,OAAA,UAOd,EAPc,yBAAAqF,GAAAjF,SAAA+E,SAAA1gC,OAAA,SAWzBvB,GAAOC,QAAUA,EAAUu9B,EAAK4E,SAAU7B,MAAKtZ,oBAC/ChnB,EAAQ+7B,kBAAoB,SAC5B/7B,EAAQ4gC,cAAgB,SrB04NM57B,KAAKhF,EAASC,EAAoB,KAAKqG,OAAS,WAAa,MAAOhF,WAI5F8gC,KACA,SAASriC,EAAQC,EAASC,IsBzqOhC,SAAAwhC,GAAA,YAUA,SAASlF,MAAMl8B,GACb,MAAOA,GAAIigC,KAAOjgC,EAAIgiC,QAAUF,QAAQ9hC,GAAOm9B,aAAan9B,GAG9D,QAASm9B,cAAc8E,GACrB,GAAMC,KACN1K,QAAO+F,KAAK0E,GAAUjD,QAAQ,SAAA77B,GAClB,aAANA,GAA0B,eAANA,GACtBg/B,YAAYD,EAAS/+B,EAAG8+B,EAAS9+B,GAAGi/B,KAAKH,IACzCI,SAASH,EAAe,aAAN/+B,EAAmB,OAAS,WAC/B,WAANA,EACTg/B,YAAYD,EAAS,SAAU;AAC7B,MAAOz6B,GAAM66B,EAAaL,EAASx5B,OAAOg3B,MAAMwC,EAAU1C,cAG5D4C,YAAYD,EAAS/+B,EAA0B,kBAAhB8+B,GAAS9+B,GAAoB8+B,EAAS9+B,GAAGi/B,KAAKH,GAAYA,EAAS9+B,KAItG,IAAMm/B,KAUN,OATAH,aAAYD,EAAS,MAAO,SAAU/+B,EAAGqiB,GAEvC,MADA8c,GAAYn/B,GAAKqiB,EACVvkB,OAGTkhC,YAAYD,EAAS,MAAO,SAAU/+B,GACpC,MAAOm/B,GAAYn/B,KAGd++B,EAGT,QAASJ,SAAS/F,GAChB,GAAMmG,KA+CN,OA9CA1K,QAAO+F,KAAKxB,GAAKiD,QAAQ,SAAA77B,GACb,YAANA,GACFg/B,YAAYD,EAAS,UAAW,WAC9B,GAAMhS,GAAS6L,EAAI54B,GAAGs8B,MAAM1D,EAAKwD,UAKjC,OAJM,gBAAkBrP,KACtBA,EAAOyN,cAAe,GAGjBzN,IAGTmS,SAASH,EAAS,QACH,QAAN/+B,EACTg/B,YAAYD,EAAS,MAAO,SAAU/B,EAAM9U,GAC1C0Q,EAAI54B,GAAGg9B,EAAM,SAAU1H,EAAKvI,GAC1B,MAAIuI,GAAYpN,EAAGoN,IAEb,gBAAkBvI,KACtBA,EAAOyN,cAAe,OAGxBtS,GAAG,KAAM6E,QAGE,aAAN/sB,EACTg/B,YAAYD,EAAS,WAAY,SAAUrG,GACzC,GAAM3L,GAAS6L,EAAIpV,SAAS8Y,MAAM1D,EAAKwD,UAavC,OAZIrP,GAAOwR,KACTlK,OAAO+F,KAAK1B,GAAMmD,QAAQ,SAAA77B,GACnB+sB,EAAO/sB,IAAMo/B,EAAWC,QAAQr/B,SACnC+sB,EAAOwR,IAAIv+B,EAAG04B,EAAK14B,MAKnB,gBAAkB+sB,KACtBA,EAAOyN,eAAiB9B,EAAKvO,MAGxB4C,IAGTiS,YAAYD,EAAS/+B,EAAqB,kBAAX44B,GAAI54B,GAAoB44B,EAAI54B,GAAGi/B,KAAKrG,GAAOA,EAAI54B,MAI3E++B,EAGT,QAASO,UAAUC,GACjB,MAAO,YACL,GAAMC,MAAUxkB,MAAMxZ,KAAK46B,WACrBlU,EAAKsX,EAAKC,MACZ1S,QACJ,KACEA,EAASwS,EAAGjD,MAAM,KAAMkD,GACxB,MAAOlK,GACP,MAAO2I,GAAQyB,SAAS,iBAAMxX,GAAGoN,KAGnC2I,EAAQyB,SAAS,iBAAMxX,GAAG,KAAM6E,MAIpC,QAASmS,UAAUriC,MACdme,MAAMxZ,KAAK46B,UAAW,GAAGP,QAAQ,SAAAI,IAC7Bp/B,EAAIo/B,IAAWp/B,EAAIo/B,EAAS,SAC/B+C,YAAYniC,EAAKo/B,EAAQqD,SAASziC,EAAIo/B,EAAS,YAKrD,QAAS+C,aAAaniC,EAAKmD,EAAGqiB,GAC5BgS,OAAO0H,eAAel/B,EAAKmD,GACzB2/B,YAAY,EACZC,UAAU,EACVrP,MAAOlO,IAtHX,GAAM/d,GAAQ7H,EAAQ,KAChB2iC,GAAc,MAAO,OAAQ,OAEnC5iC,GAAQu8B,KAAOA,KACfv8B,EAAQmiC,QAAUA,QAClBniC,EAAQw9B,aAAeA,aACvBx9B,EAAQ8iC,SAAWA,WtBkyOW99B,KAAKhF,EAASC,EAAoB,OAI1DojC,KACA,SAAStjC,EAAQC,EAASC,IAEH,SAASqG,GAAS,YuBnyO/C,SAAS25B,SAASxB,GAChB,GAAMp6B,GAAI,GAAIiC,GAAOm4B,EAAIp6B,EAAG,UACtBC,EAAI,GAAIgC,GAAOm4B,EAAIn6B,EAAG,UACtBwpB,EAAM,GAAIxnB,GAAO,GACvBwnB,GAAI,GAAK,EACTzpB,EAAEuD,KAAKkmB,EAAK,GACZxpB,EAAEsD,KAAKkmB,EAAK,GACZ,IAAM1M,GAAQqd,EAAI6E,IAAIv8B,QAAQ,IAAK,IAAI22B,cACjC/P,EAAO8Q,EAAI9U,GAAK,GAAIrjB,GAAOm4B,EAAI9U,EAAG,SAExC,QACEmE,MACAH,OACAvM,SAIJ,QAASud,OAAO/e,GACd,GAAM+N,GAAO/N,EAAI+N,MAAQ5kB,SAAS6W,EAAI+N,KAClCA,IACFntB,OAAuB,KAAhBmtB,EAAKlsB,OAAe,+BAG7B,IAAMqsB,GAAM/kB,SAAS6W,EAAIkO,IACzBttB,QAAsB,KAAfstB,EAAIrsB,OAAe,sCAC1BjB,OAAkB,IAAXstB,EAAI,GAAX,gEAEA,IAAM2Q,IACJ8E,IAAK,KACLD,IAAKzH,WAAWjc,EAAIwB,OACpB/c,EAAGm/B,iBAAiB1V,EAAItP,MAAM,EAAG,KACjCla,EAAGk/B,iBAAiB1V,EAAItP,MAAM,KAC9BilB,KAAK,EAOP,OAJI9V,KACF8Q,EAAI9U,EAAI6Z,iBAAiB7V,IAGpB8Q,EAGT,QAAS11B,UAAUtI,GACjB,GAAI6F,EAAOkuB,SAAS/zB,GAAM,MAAOA,EACjC,IAAmB,gBAARA,GAAkB,MAAO,IAAI6F,GAAO7F,EAAK,MAEpD,MAAM,IAAIE,OAAM,6BAGlB,QAASH,QAAQkjC,EAAW9Q,GAC1B,IAAK8Q,EAAW,KAAM,IAAI/iC,OAAMiyB,GAAW,oBAG7C,QAAS4Q,kBAAkBzS,GACzB,GAAM4S,GAAS5S,EAAIjqB,SAAS,SAC5B,OAAO68B,GAAO58B,QAAQ,QAAS,IAAIA,QAAQ,OAAQ,KAAKA,QAAQ,QAAQ,KAG1E,QAAS80B,YAAYza,GACnB,MAAO,KAAOA,EAAM5C,MAAM,GAG5B,QAASse,eAAer8B,GACtB,GAAIA,YAAemjC,aAAa,MAAOnjC,EAEvC,IAAmB,gBAARA,GACT,MAAO,IAAI6F,GAAO7F,GAAKs3B,MAGzB,IAAIzxB,EAAOkuB,SAAS/zB,GAClB,MAAOA,GAAIs3B,MAGb,MAAM,IAAIp3B,OAAM,0CAWlB,QAASkjC,oBAAoBC,GAC3B,GAAMC,GAAQC,EAAYnL,OAAOiL,EAAe,MAChD,OAAOx9B,GAAOmd,QACZsgB,EAAM/hC,EAAEgH,YAAY1C,EAAQ,KAAM,IAClCy9B,EAAMpyB,EAAE3I,YAAY1C,EAAQ,KAAM,MAItC,QAAS29B,oBAAoBC,GAC3B,GAAMliC,GAAI,GAAIf,GAAGijC,EAAgB1lB,MAAM,EAAG,IAAI1X,SAAS,OAAQ,GAAI,MAC7D6K,EAAI,GAAI1Q,GAAGijC,EAAgB1lB,MAAM,IAAI1X,SAAS,OAAQ,GAAI,KAChE,OAAOk9B,GAAY/jB,QAAQje,IAAG2P,KAAI,OA7GpC,GAAMwyB,GAAOlkC,EAAQ,MACfgB,EAAKhB,EAAQ,IAEnBF,GAAOC,SACL2+B,YACA9C,sBACAoE,gBACAl3B,kBACA+zB,4BACAQ,QAASuG,mBACTpS,MAAOwS,mBACPzjC,cAgFF,IAAMwjC,GAAcG,EAAKC,OAAO,eAAgB,WAC9C,MAAO9iC,MAAK+iC,MAAMhkC,IAChBiB,KAAKse,IAAI,KAATte,SACAA,KAAKse,IAAI,KAATte,cvB8zO0B0D,KAAKhF,EAASC,EAAoB,KAAKqG,SAI/Dg+B,MACL,KAAM,IAAK,KAAM,KAAM,KAAM,KAAM,MAE9BC,KACA,SAASxkC,EAAQC,EAASC,GAE/B,YwB75OD,SAASukC,QAAOhgC,EAAMigC,GACpBnjC,KAAKkD,KAAOA,EACZlD,KAAKmjC,KAAOA,EAEZnjC,KAAKojC,YACLpjC,KAAKqjC,YAdP,GAAIR,GAAOlkC,EAAQ,MACfW,EAAWX,EAAQ,KAEnBm8B,EAAMp8B,CAEVo8B,GAAIgI,OAAS,SAAgB5/B,EAAMigC,GACjC,MAAO,IAAID,QAAOhgC,EAAMigC,IAW1BD,OAAOjkC,UAAUqkC,aAAe,SAAqBzjC,GACnD,GAAI0jC,EACJ,KACEA,EAAQ5kC,EAAQ,KAAM6kC,iBACpB,aAAexjC,KAAKkD,KAAO,8CAI7B,MAAO+B,GACPs+B,EAAQ,SAAUE,GAChBzjC,KAAK0jC,WAAWD,IAQpB,MALAnkC,GAASikC,EAAO1jC,GAChB0jC,EAAMtkC,UAAUykC,WAAa,SAAmBD,GAC9C5jC,EAAK6D,KAAK1D,KAAMyjC,IAGX,GAAIF,GAAMvjC,OAGnBkjC,OAAOjkC,UAAU0kC,YAAc,SAAqB1mB,GAKlD,MAJAA,GAAMA,GAAO,MAERjd,KAAKojC,SAASvX,eAAe5O,KAChCjd,KAAKojC,SAASnmB,GAAOjd,KAAKsjC,aAAaT,EAAKO,SAASnmB,KAChDjd,KAAKojC,SAASnmB,IAGvBimB,OAAOjkC,UAAUs4B,OAAS,SAAgBtH,EAAMhT,EAAK0O,GACnD,MAAO3rB,MAAK2jC,YAAY1mB,GAAKsa,OAAOtH,EAAMtE,IAG5CuX,OAAOjkC,UAAU2kC,YAAc,SAAqB3mB,GAKlD,MAJAA,GAAMA,GAAO,MAERjd,KAAKqjC,SAASxX,eAAe5O,KAChCjd,KAAKqjC,SAASpmB,GAAOjd,KAAKsjC,aAAaT,EAAKQ,SAASpmB,KAChDjd,KAAKqjC,SAASpmB,IAGvBimB,OAAOjkC,UAAU0f,OAAS,SAAgBsR,EAAMhT,EAAoB4mB,GAClE,MAAO7jC,MAAK4jC,YAAY3mB,GAAK0B,OAAOsR,EAAM4T,KxBu6OtCC,MACL,KAAM,KAAM,KAAM,KAAM,MAEnBC,KACA,SAAStlC,EAAQC,EAASC,GAE/B,YyBt+OD,SAASqlC,UAASrY,GAChB3rB,KAAKikC,gBACHllC,IAAK,KACLmlC,QACAvY,QAASA,MACTwY,WA6FJ,QAASC,eAAcF,EAAM9kC,GAC3BY,KAAKkkC,KAAOA,EACZlkC,KAAKqkC,QAAQjlC,GAtGf,GAAIE,GAAWX,EAAQ,IAUvBD,GAAQslC,SAAWA,SAEnBA,SAAS/kC,UAAUqlC,QAAU,SAAiBvlC,GAC5C,MAAOA,aAAeqlC,gBAGxBJ,SAAS/kC,UAAUslC,KAAO,WACxB,GAAIC,GAAQxkC,KAAKikC,cAEjB,QAASllC,IAAKylC,EAAMzlC,IAAK0lC,QAASD,EAAMN,KAAK/jC,SAG/C6jC,SAAS/kC,UAAUylC,QAAU,SAAiBzU,GAC5C,GAAIuU,GAAQxkC,KAAKikC,cAEjBO,GAAMzlC,IAAMkxB,EAAKlxB,IACjBylC,EAAMN,KAAOM,EAAMN,KAAKhnB,MAAM,EAAG+S,EAAKwU,UAGxCT,SAAS/kC,UAAU0lC,SAAW,SAAkBrmB,GAC9C,MAAOte,MAAKikC,eAAeC,KAAK/mB,KAAKmB,IAGvC0lB,SAAS/kC,UAAU2lC,QAAU,SAAiBnjB,GAC5C,GAAI+iB,GAAQxkC,KAAKikC,cAEjBO,GAAMN,KAAOM,EAAMN,KAAKhnB,MAAM,EAAGuE,EAAQ,IAG3CuiB,SAAS/kC,UAAU4lC,SAAW,SAAkBpjB,EAAOnD,EAAKmU,GAC1D,GAAI+R,GAAQxkC,KAAKikC,cAEjBjkC,MAAK4kC,QAAQnjB,GACK,OAAd+iB,EAAMzlC,MACRylC,EAAMzlC,IAAIuf,GAAOmU,IAGrBuR,SAAS/kC,UAAUilC,KAAO,WACxB,MAAOlkC,MAAKikC,eAAeC,KAAK3H,KAAK,MAGvCyH,SAAS/kC,UAAU6lC,YAAc,WAC/B,GAAIN,GAAQxkC,KAAKikC,eAEb1rB,EAAOisB,EAAMzlC,GAEjB,OADAylC,GAAMzlC,OACCwZ,GAGTyrB,SAAS/kC,UAAU8lC,YAAc,SAAqBxsB,GACpD,GAAIisB,GAAQxkC,KAAKikC,eAEbe,EAAMR,EAAMzlC,GAEhB,OADAylC,GAAMzlC,IAAMwZ,EACLysB,GAGThB,SAAS/kC,UAAUgmC,MAAQ,SAAe7lC,GACxC,GAAIo4B,GACAgN,EAAQxkC,KAAKikC,eAEbiB,EAAY9lC,YAAeglC,cAS/B,IAPE5M,EADE0N,EACI9lC,EAEA,GAAIglC,eAAcI,EAAMN,KAAKpgB,IAAI,SAASqhB,GAC9C,MAAO,IAAMrf,KAAKsf,UAAUD,GAAQ,MACnC5I,KAAK,IAAKn9B,EAAIkyB,SAAWlyB,EAAKA,EAAIimC,QAGlCb,EAAM7Y,QAAQ2Z,QACjB,KAAM9N,EAKR,OAHK0N,IACHV,EAAML,OAAOhnB,KAAKqa,GAEbA,GAGTwM,SAAS/kC,UAAUsmC,WAAa,SAAoBtW,GAClD,GAAIuV,GAAQxkC,KAAKikC,cACjB,OAAKO,GAAM7Y,QAAQ2Z,SAIjBrW,OAAQjvB,KAAKskC,QAAQrV,GAAU,KAAOA,EACtCkV,OAAQK,EAAML,QAJPlV,GAYX3vB,EAAS8kC,cAAe/kC,OAExB+kC,cAAcnlC,UAAUolC,QAAU,SAAiBjlC,GAKjD,GAJAY,KAAKsxB,QAAUlyB,EAAM,SAAWY,KAAKkkC,MAAQ,aACzC7kC,MAAMmmC,mBACRnmC,MAAMmmC,kBAAkBxlC,KAAMokC,gBAE3BpkC,KAAKqlC,MACR,IAEE,KAAM,IAAIhmC,OAAMW,KAAKsxB,SACrB,MAAOrsB,GACPjF,KAAKqlC,MAAQpgC,EAAEogC,MAGnB,MAAOrlC,QzB0+OHylC,MACL,KAAM,MAEDC,KACA,SAASjnC,EAAQC,EAASC,GAE/B,Y0B1kPD,SAASgnC,MAAK1oB,EAAK2oB,GACjB,GAAIpB,KACJxkC,MAAK6lC,WAAarB,EAElBA,EAAMvnB,IAAMA,EAEZunB,EAAMoB,OAASA,GAAU,KACzBpB,EAAMsB,SAAW,KAGjBtB,EAAMuB,IAAM,KACZvB,EAAM9C,KAAO,KACb8C,EAAMwB,YAAc,KACpBxB,EAAMyB,OAAS,KACfzB,EAAM0B,UAAW,EACjB1B,EAAM2B,KAAM,EACZ3B,EAAMzlC,KAAM,EACZylC,EAAM4B,IAAM,KACZ5B,EAAM6B,WAAa,KACnB7B,EAAMlmB,IAAM,KACZkmB,EAAM,WAAa,KACnBA,EAAM8B,SAAW,KACjB9B,EAAM+B,SAAW,KACjB/B,EAAMgC,SAAW,KAGZhC,EAAMoB,SACTpB,EAAMsB,YACN9lC,KAAKymC,S1BgjPR,GAAI7nC,GAA4B,kBAAXC,SAAoD,gBAApBA,QAAOC,SAAwB,SAAUC,GAAO,aAAcA,IAAS,SAAUA,GAAO,MAAOA,IAAyB,kBAAXF,SAAyBE,EAAIC,cAAgBH,QAAUE,IAAQF,OAAOI,UAAY,eAAkBF,I0BzmPnQilC,EAAWrlC,EAAQ,MAAWqlC,SAC9B0C,EAAgB/nC,EAAQ,MAAW+nC,cACnCC,EAAgBhoC,EAAQ,MAAWgoC,cACnCznC,EAASP,EAAQ,KAGjBioC,GACF,MAAO,QAAS,MAAO,QAAS,QAAS,OACzC,UAAW,UAAW,QAAS,OAAQ,MAAO,UAC9C,SAAU,SAAU,UAAW,SAAU,WAAY,SAAU,YAC/D,SAAU,SAAU,WAAY,SAAU,SAAU,UAAW,YAI7DC,GACF,MAAO,MAAO,MAAO,WAAY,WAAY,WAAY,MAAO,SAChE,MAAO,YACP1kB,OAAOykB,GAGLE,GACF,WAAY,aAAc,OAC1B,aAAc,eAAgB,cAC9B,cAAe,aAAc,cAAe,cAE5C,mBAAoB,aAAc,eAAgB,cAClD,cAAe,aAAc,cAkC/BroC,GAAOC,QAAUinC,IAEjB,IAAIoB,IACF,MAAO,SAAU,WAAY,MAAO,OAAQ,cAAe,SAC3D,WAAY,MAAO,MAAO,MAAO,aAAc,MAAO,UAAW,WACjE,WAAY,WAGdpB,MAAK1mC,UAAUuH,MAAQ,WACrB,GAAIg+B,GAAQxkC,KAAK6lC,WACbmB,IACJD,GAAWhJ,QAAQ,SAASC,GAC1BgJ,EAAOhJ,GAAQwG,EAAMxG,IAEvB,IAAIj2B,GAAM,GAAI/H,MAAKhB,YAAYgoC,EAAOpB,OAEtC,OADA79B,GAAI89B,WAAamB,EACVj/B,GAGT49B,KAAK1mC,UAAUwnC,MAAQ,WACrB,GAAIjC,GAAQxkC,KAAK6lC,UACjBgB,GAAQ9I,QAAQ,SAASI,GACvBn+B,KAAKm+B,GAAU,WACb,GAAI33B,GAAQ,GAAIxG,MAAKhB,YAAYgB,KAEjC,OADAwkC,GAAMsB,SAAS3oB,KAAK3W,GACbA,EAAM23B,GAAQK,MAAMh4B,EAAO83B,aAEnCt+B,OAGL2lC,KAAK1mC,UAAUoB,MAAQ,SAAc8iC,GACnC,GAAIqB,GAAQxkC,KAAK6lC,UAEjB3mC,GAAwB,OAAjBslC,EAAMoB,QACbzC,EAAKz/B,KAAK1D,MAGVwkC,EAAMsB,SAAWtB,EAAMsB,SAASmB,OAAO,SAASC,GAC9C,MAAOA,GAAMrB,WAAWD,SAAW5lC,MAClCA,MACHd,EAAOioC,MAAM3C,EAAMsB,SAAS3lC,OAAQ,EAAG,sCAGzCwlC,KAAK1mC,UAAUmoC,SAAW,SAAiB1F,GACzC,GAAI8C,GAAQxkC,KAAK6lC,WAGbC,EAAWpE,EAAKuF,OAAO,SAASI,GAClC,MAAOA,aAAernC,MAAKhB,aAC1BgB,KACH0hC,GAAOA,EAAKuF,OAAO,SAASI,GAC1B,QAASA,YAAernC,MAAKhB,cAC5BgB,MAEqB,IAApB8lC,EAAS3lC,SACXjB,EAA0B,OAAnBslC,EAAMsB,UACbtB,EAAMsB,SAAWA,EAGjBA,EAAS/H,QAAQ,SAASmJ,GACxBA,EAAMrB,WAAWD,OAAS5lC,MACzBA,OAEe,IAAhB0hC,EAAKvhC,SACPjB,EAAsB,OAAfslC,EAAM9C,MACb8C,EAAM9C,KAAOA,EACb8C,EAAMwB,YAActE,EAAK5d,IAAI,SAASujB,GACpC,GAAmB,YAAf,mBAAOA,GAAP,YAAAzoC,EAAOyoC,KAAoBA,EAAIroC,cAAgBu3B,OACjD,MAAO8Q,EAET,IAAIt/B,KAOJ,OANAwuB,QAAO+F,KAAK+K,GAAKtJ,QAAQ,SAASzf,GAC5BA,IAAc,EAANA,KACVA,GAAO,EACT,IAAImU,GAAQ4U,EAAI/oB,EAChBvW,GAAI0qB,GAASnU,IAERvW,MASb++B,EAAU/I,QAAQ,SAASI,GACzBwH,KAAK1mC,UAAUk/B,GAAU,WACvB,GAAIqG,GAAQxkC,KAAK6lC,UACjB,MAAM,IAAIxmC,OAAM8+B,EAAS,kCAAoCqG,EAAMvnB,QAQvE2pB,EAAK7I,QAAQ,SAASgI,GACpBJ,KAAK1mC,UAAU8mC,GAAO,WACpB,GAAIvB,GAAQxkC,KAAK6lC,WACbnE,EAAOpgC,MAAMrC,UAAUie,MAAMxZ,KAAK46B,UAOtC,OALAp/B,GAAqB,OAAdslC,EAAMuB,KACbvB,EAAMuB,IAAMA,EAEZ/lC,KAAKonC,SAAS1F,GAEP1hC,QAIX2lC,KAAK1mC,UAAUmnC,IAAM,SAAakB,GAChCpoC,EAAOooC,EACP,IAAI9C,GAAQxkC,KAAK6lC,UAKjB,OAHA3mC,GAAqB,OAAdslC,EAAM4B,KACb5B,EAAM4B,IAAMkB,EAELtnC,MAGT2lC,KAAK1mC,UAAUinC,SAAW,WACxB,GAAI1B,GAAQxkC,KAAK6lC,UAIjB,OAFArB,GAAM0B,UAAW,EAEVlmC,MAGT2lC,KAAK1mC,UAAUsoC,IAAM,SAAapoC,GAChC,GAAIqlC,GAAQxkC,KAAK6lC,UAMjB,OAJA3mC,GAA4B,OAArBslC,EAAM,YACbA,EAAM,WAAarlC,EACnBqlC,EAAM0B,UAAW,EAEVlmC,MAGT2lC,KAAK1mC,UAAUqnC,SAAW,SAAkBllC,GAC1C,GAAIojC,GAAQxkC,KAAK6lC,UAKjB,OAHA3mC,GAA0B,OAAnBslC,EAAM8B,UAAwC,OAAnB9B,EAAM+B,UACxC/B,EAAM8B,SAAWllC,EAEVpB,MAGT2lC,KAAK1mC,UAAUsnC,SAAW,SAAkBnlC,GAC1C,GAAIojC,GAAQxkC,KAAK6lC,UAKjB,OAHA3mC,GAA0B,OAAnBslC,EAAM8B,UAAwC,OAAnB9B,EAAM+B,UACxC/B,EAAM+B,SAAWnlC,EAEVpB,MAGT2lC,KAAK1mC,UAAUF,IAAM,WACnB,GAAIylC,GAAQxkC,KAAK6lC,WACbnE,EAAOpgC,MAAMrC,UAAUie,MAAMxZ,KAAK46B,UAOtC,OALAkG,GAAMzlC,KAAM,EAEQ,IAAhB2iC,EAAKvhC,QACPH,KAAKonC,SAAS1F,GAET1hC,MAGT2lC,KAAK1mC,UAAUqf,IAAM,SAAakpB,GAChC,GAAIhD,GAAQxkC,KAAK6lC,UAKjB,OAHA3mC,GAAqB,OAAdslC,EAAMlmB,KACbkmB,EAAMlmB,IAAMkpB,EAELxnC,MAGT2lC,KAAK1mC,UAAUknC,IAAM,WACnB,GAAI3B,GAAQxkC,KAAK6lC,UAIjB,OAFArB,GAAM2B,KAAM,EAELnmC,MAGT2lC,KAAK1mC,UAAUgnC,OAAS,SAAgBlnC,GACtC,GAAIylC,GAAQxkC,KAAK6lC,UAQjB,OANA3mC,GAAwB,OAAjBslC,EAAMyB,QACbzB,EAAMyB,OAASlnC,EACfiB,KAAKonC,SAAS7Q,OAAO+F,KAAKv9B,GAAK+kB,IAAI,SAASxF,GAC1C,MAAOvf,GAAIuf,MAGNte,MAGT2lC,KAAK1mC,UAAUunC,SAAW,SAAkBc,GAC1C,GAAI9C,GAAQxkC,KAAK6lC,UAKjB,OAHA3mC,GAAqB,OAAdslC,EAAM4B,KACb5B,EAAMgC,SAAWc,EAEVtnC,MAOT2lC,KAAK1mC,UAAUwoC,QAAU,SAAgBrvB,EAAOuT,GAC9C,GAAI6Y,GAAQxkC,KAAK6lC,UAGjB,IAAqB,OAAjBrB,EAAMoB,OACR,MAAOxtB,GAAMmtB,WAAWf,EAAMsB,SAAS,GAAG2B,QAAQrvB,EAAOuT,GAE3D,IAAIsD,GAASuV,EAAM,WACfkD,GAAU,EAEVC,EAAU,IAKd,IAJkB,OAAdnD,EAAMlmB,MACRqpB,EAAUvvB,EAAMusB,SAASH,EAAMlmB,MAG7BkmB,EAAM0B,SAAU,CAClB,GAAIH,GAAM,IAQV,IAPuB,OAAnBvB,EAAM8B,SACRP,EAAMvB,EAAM8B,SACc,OAAnB9B,EAAM+B,SACbR,EAAMvB,EAAM+B,SACS,OAAd/B,EAAMuB,MACbA,EAAMvB,EAAMuB,KAEF,OAARA,GAAiBvB,EAAM2B,KAgBzB,GAFAuB,EAAU1nC,KAAK4nC,SAASxvB,EAAO2tB,EAAKvB,EAAM2B,KAEtC/tB,EAAMksB,QAAQoD,GAChB,MAAOA,OAjBqB,CAE9B,GAAInD,GAAOnsB,EAAMmsB,MACjB,KACuB,OAAjBC,EAAMyB,OACRjmC,KAAK6nC,eAAerD,EAAMuB,IAAK3tB,EAAOuT,GAEtC3rB,KAAK8nC,cAAc1vB,EAAOuT,GAC5B+b,GAAU,EACV,MAAOziC,GACPyiC,GAAU,EAEZtvB,EAAMssB,QAAQH,IAUlB,GAAIwD,EAIJ,IAHIvD,EAAMzlC,KAAO2oC,IACfK,EAAU3vB,EAAM0sB,eAEd4C,EAAS,CAEX,GAAuB,OAAnBlD,EAAM8B,SAAmB,CAC3B,GAAIA,GAAWtmC,KAAKgoC,WAAW5vB,EAAOosB,EAAM8B,SAC5C,IAAIluB,EAAMksB,QAAQgC,GAChB,MAAOA,EACTluB,GAAQkuB,EAGV,GAAI9lC,GAAQ4X,EAAM6vB,MAGlB,IAAkB,OAAdzD,EAAM4B,KAAiC,OAAjB5B,EAAMyB,OAAiB,CAC/C,GAAIzB,EAAM2B,IACR,GAAI5B,GAAOnsB,EAAMmsB,MACnB,IAAIpB,GAAOnjC,KAAKgoC,WACd5vB,EACmB,OAAnBosB,EAAM+B,SAAoB/B,EAAM+B,SAAW/B,EAAMuB,IACjDvB,EAAM2B,IAER,IAAI/tB,EAAMksB,QAAQnB,GAChB,MAAOA,EAELqB,GAAM2B,IACRlX,EAAS7W,EAAMqB,IAAI8qB,GAEnBnsB,EAAQ+qB,EAiBZ,GAdIxX,GAAWA,EAAQuc,OAAuB,OAAd1D,EAAMuB,KACpCpa,EAAQuc,MAAM9vB,EAAM8rB,OAAQ1jC,EAAO4X,EAAMjY,OAAQ,UAE/CwrB,GAAWA,EAAQuc,OAAuB,OAAd1D,EAAMuB,KACpCpa,EAAQuc,MAAM9vB,EAAM8rB,OAAQ9rB,EAAM6vB,OAAQ7vB,EAAMjY,OAAQ,WAIxD8uB,EADEuV,EAAM2B,IACClX,EACe,OAAjBuV,EAAMyB,OACJjmC,KAAK6nC,eAAerD,EAAMuB,IAAK3tB,EAAOuT,GAEtC3rB,KAAK8nC,cAAc1vB,EAAOuT,GAEjCvT,EAAMksB,QAAQrV,GAChB,MAAOA,EAYT,IATKuV,EAAM2B,KAAwB,OAAjB3B,EAAMyB,QAAsC,OAAnBzB,EAAMsB,UAC/CtB,EAAMsB,SAAS/H,QAAQ,SAAwBmJ,GAG7CA,EAAMO,QAAQrvB,EAAOuT,KAKrB6Y,EAAMgC,WAA2B,WAAdhC,EAAMuB,KAAkC,WAAdvB,EAAMuB,KAAmB,CACxE,GAAI9V,GAAO,GAAI0W,GAAc1X,EAC7BA,GAASjvB,KAAKmoC,QAAQ3D,EAAMgC,SAAUpuB,EAAM6rB,eAAellC,KACtD0oC,QAAQxX,EAAMtE,IAcvB,MATI6Y,GAAMzlC,KAAO2oC,IACfzY,EAAS7W,EAAM2sB,YAAYgD,IAGX,OAAdvD,EAAMlmB,KAA4B,OAAX2Q,GAAmByY,KAAY,EAErC,OAAZC,GACPvvB,EAAMwsB,QAAQ+C,GAFdvvB,EAAMysB,SAAS8C,EAASnD,EAAMlmB,IAAK2Q,GAI9BA,GAGT0W,KAAK1mC,UAAU4oC,eAAiB,SAAuB9B,EAAK3tB,EAAOuT,GACjE,GAAI6Y,GAAQxkC,KAAK6lC,UAEjB,OAAY,QAARE,GAAyB,QAARA,EACZ,KACG,UAARA,GAA2B,UAARA,EACd/lC,KAAKooC,YAAYhwB,EAAO2tB,EAAKvB,EAAM9C,KAAK,GAAI/V,GAC5C,OAAO9O,KAAKkpB,GACZ/lC,KAAKqoC,WAAWjwB,EAAO2tB,EAAKpa,GACpB,UAARoa,GAAmBvB,EAAM9C,KACzB1hC,KAAKsoC,aAAalwB,EAAOosB,EAAM9C,KAAK,GAAI8C,EAAM9C,KAAK,GAAI/V,GAC/C,UAARoa,EACA/lC,KAAKsoC,aAAalwB,EAAO,KAAM,KAAMuT,GAC7B,YAARoa,GAA6B,YAARA,EACrB/lC,KAAKuoC,YAAYnwB,EAAO2tB,EAAKpa,GACrB,UAARoa,EACA/lC,KAAKwoC,YAAYpwB,EAAOuT,GAChB,SAARoa,EACA/lC,KAAKyoC,YAAYrwB,EAAOuT,GAChB,YAARoa,EACA/lC,KAAKqoC,WAAWjwB,EAAO2tB,EAAKpa,GACpB,QAARoa,GAAyB,SAARA,EACjB/lC,KAAK0oC,WAAWtwB,EAAOosB,EAAM9C,MAAQ8C,EAAM9C,KAAK,GAAI/V,GAE3C,OAAd6Y,EAAM4B,IACDpmC,KAAKmoC,QAAQ3D,EAAM4B,IAAKhuB,EAAM6rB,eAAellC,KAC/C0oC,QAAQrvB,EAAOuT,GAEbvT,EAAM6sB,MAAM,gBAAkBc,IAIzCJ,KAAK1mC,UAAUkpC,QAAU,SAAiB1E,EAAQ1kC,GAEhD,GAAIylC,GAAQxkC,KAAK6lC,UASjB,OAPArB,GAAM6B,WAAarmC,KAAK2oC,KAAKlF,EAAQ1kC,GACrCG,EAA8C,OAAvCslC,EAAM6B,WAAWR,WAAWD,QACnCpB,EAAM6B,WAAa7B,EAAM6B,WAAWR,WAAWC,SAAS,GACpDtB,EAAM+B,WAAa/B,EAAM6B,WAAWR,WAAWU,WACjD/B,EAAM6B,WAAa7B,EAAM6B,WAAW7/B,QACpCg+B,EAAM6B,WAAWR,WAAWU,SAAW/B,EAAM+B,UAExC/B,EAAM6B,YAGfV,KAAK1mC,UAAU6oC,cAAgB,SAAsB1vB,EAAOuT,GAC1D,GAAI6Y,GAAQxkC,KAAK6lC,WACb5W,EAAS,KACT2Z,GAAQ,CAmBZ,OAjBArS,QAAO+F,KAAKkI,EAAMyB,QAAQ4C,KAAK,SAASvqB,GACtC,GAAIimB,GAAOnsB,EAAMmsB,OACbuE,EAAOtE,EAAMyB,OAAO3nB,EACxB,KACE,GAAImU,GAAQqW,EAAKrB,QAAQrvB,EAAOuT,EAChC,IAAIvT,EAAMksB,QAAQ7R,GAChB,OAAO,CAETxD,IAAWnV,KAAMwE,EAAKmU,MAAOA,GAC7BmW,GAAQ,EACR,MAAO3jC,GAEP,MADAmT,GAAMssB,QAAQH,IACP,EAET,OAAO,GACNvkC,MAEE4oC,EAGE3Z,EAFE7W,EAAM6sB,MAAM,uBASvBU,KAAK1mC,UAAU8pC,qBAAuB,SAA6B9Y,GACjE,MAAO,IAAIyW,GAAczW,EAAMjwB,KAAK6jC,WAGtC8B,KAAK1mC,UAAU8iB,QAAU,SAAgBkO,EAAM4T,EAAU+B,GACvD,GAAIpB,GAAQxkC,KAAK6lC,UACjB,IAAyB,OAArBrB,EAAM,YAAuBA,EAAM,aAAevU,EAAtD,CAGA,GAAIhB,GAASjvB,KAAKgpC,aAAa/Y,EAAM4T,EAAU+B,EAC/C,IAAevsB,SAAX4V,IAGAjvB,KAAKipC,aAAaha,EAAQ4U,EAAU+B,GAGxC,MAAO3W,KAGT0W,KAAK1mC,UAAU+pC,aAAe,SAAgB/Y,EAAM4T,EAAU+B,GAC5D,GAAIpB,GAAQxkC,KAAK6lC,UAGjB,IAAqB,OAAjBrB,EAAMoB,OACR,MAAOpB,GAAMsB,SAAS,GAAG/jB,QAAQkO,EAAM4T,GAAY,GAAIG,GAEzD,IAAI/U,GAAS,IAMb,IAHAjvB,KAAK6jC,SAAWA,EAGZW,EAAM0B,UAAqB7sB,SAAT4W,EAAoB,CACxC,GAAyB,OAArBuU,EAAM,WAGR,MAFAvU,GAAOuU,EAAM,WAMjB,GAAI0E,GAAU,KACVC,GAAY,CAChB,IAAI3E,EAAM2B,IAERlX,EAASjvB,KAAK+oC,qBAAqB9Y,OAC9B,IAAIuU,EAAMyB,OACfhX,EAASjvB,KAAKopC,cAAcnZ,EAAM4T,OAC7B,IAAIW,EAAMgC,SACf0C,EAAUlpC,KAAKmoC,QAAQ3D,EAAMgC,SAAUZ,GAAQ7jB,QAAQkO,EAAM4T,GAC7DsF,GAAY,MACP,IAAI3E,EAAMsB,SACfoD,EAAU1E,EAAMsB,SAAShiB,IAAI,SAASojB,GACpC,GAA6B,UAAzBA,EAAMrB,WAAWE,IACnB,MAAOmB,GAAMnlB,QAAQ,KAAM8hB,EAAU5T,EAEvC,IAA6B,OAAzBiX,EAAMrB,WAAWvnB,IACnB,MAAOulB,GAASoB,MAAM,0BACxB,IAAI0C,GAAU9D,EAASc,SAASuC,EAAMrB,WAAWvnB,IAEjD,IAAoB,YAAhB,mBAAO2R,GAAP,YAAArxB,EAAOqxB,IACT,MAAO4T,GAASoB,MAAM,0CAExB,IAAIl9B,GAAMm/B,EAAMnlB,QAAQkO,EAAKiX,EAAMrB,WAAWvnB,KAAMulB,EAAU5T,EAG9D,OAFA4T,GAASgB,SAAS8C,GAEX5/B,GACN/H,MAAMinC,OAAO,SAASC,GACvB,MAAOA,KAETgC,EAAUlpC,KAAK+oC,qBAAqBG,OAEpC,IAAkB,UAAd1E,EAAMuB,KAAiC,UAAdvB,EAAMuB,IAAiB,CAElD,IAAMvB,EAAM9C,MAA8B,IAAtB8C,EAAM9C,KAAKvhC,OAC7B,MAAO0jC,GAASoB,MAAM,uBAAyBT,EAAMuB,IAEvD,KAAKzkC,MAAM4D,QAAQ+qB,GACjB,MAAO4T,GAASoB,MAAM,qCAExB,IAAIiC,GAAQlnC,KAAKwG,OACjB0gC,GAAMrB,WAAWU,SAAW,KAC5B2C,EAAUlpC,KAAK+oC,qBAAqB9Y,EAAKnM,IAAI,SAASwjB,GACpD,GAAI9C,GAAQxkC,KAAK6lC,UAEjB,OAAO7lC,MAAKmoC,QAAQ3D,EAAM9C,KAAK,GAAIzR,GAAMlO,QAAQulB,EAAMzD,IACtDqD,QACoB,QAAd1C,EAAM4B,IACfnX,EAASjvB,KAAKmoC,QAAQ3D,EAAM4B,IAAKR,GAAQ7jB,QAAQkO,EAAM4T,IAEvDqF,EAAUlpC,KAAKqpC,iBAAiB7E,EAAMuB,IAAK9V,GAC3CkZ,GAAY,EAKhB,IAAIla,EACJ,KAAKuV,EAAM2B,KAAwB,OAAjB3B,EAAMyB,OAAiB,CACvC,GAAIF,GAAyB,OAAnBvB,EAAM+B,SAAoB/B,EAAM+B,SAAW/B,EAAMuB,IACvDuD,EAAyB,OAAnB9E,EAAM+B,SAAoB,YAAc,SAEtC,QAARR,EACgB,OAAdvB,EAAM4B,KACRvC,EAASoB,MAAM,wCAEC,OAAdT,EAAM4B,MACRnX,EAASjvB,KAAKupC,iBAAiBxD,EAAKoD,EAAWG,EAAKJ,IAQ1D,MAHuB,QAAnB1E,EAAM8B,WACRrX,EAASjvB,KAAKupC,iBAAiB/E,EAAM8B,UAAU,EAAO,UAAWrX,IAE5DA,GAGT0W,KAAK1mC,UAAUmqC,cAAgB,SAAsBnZ,EAAM4T,GACzD,GAAIW,GAAQxkC,KAAK6lC,WAEbiD,EAAOtE,EAAMyB,OAAOhW,EAAKnW,KAO7B,OANKgvB,IACH5pC,GACI,EACA+wB,EAAKnW,KAAO,iBACRgM,KAAKsf,UAAU7O,OAAO+F,KAAKkI,EAAMyB,UAEpC6C,EAAK/mB,QAAQkO,EAAKwC,MAAOoR,IAGlC8B,KAAK1mC,UAAUoqC,iBAAmB,SAAyBtD,EAAK9V,GAC9D,GAAIuU,GAAQxkC,KAAK6lC,UAEjB,IAAI,OAAOhpB,KAAKkpB,GACd,MAAO/lC,MAAKwpC,WAAWvZ,EAAM8V,EAC1B,IAAY,UAARA,GAAmBvB,EAAM9C,KAChC,MAAO1hC,MAAKypC,aAAaxZ,EAAMuU,EAAMwB,YAAY,GAAIxB,EAAM9C,KAAK,GAC7D,IAAY,UAARqE,EACP,MAAO/lC,MAAKypC,aAAaxZ,EAAM,KAAM,KAClC,IAAY,YAAR8V,GAA6B,YAARA,EAC5B,MAAO/lC,MAAK0pC,YAAYzZ,EAAM8V,EAC3B,IAAY,UAARA,EACP,MAAO/lC,MAAK2pC,aACT,IAAY,QAAR5D,GAAyB,SAARA,EACxB,MAAO/lC,MAAK4pC,WAAW3Z,EAAMuU,EAAM9C,MAAQ8C,EAAMwB,YAAY,GAC1D,IAAY,SAARD,EACP,MAAO/lC,MAAK6pC,YAAY5Z,EACrB,IAAY,YAAR8V,EACP,MAAO/lC,MAAKwpC,WAAWvZ,EAAM8V,EAE7B,MAAM,IAAI1mC,OAAM,oBAAsB0mC,IAG1CJ,KAAK1mC,UAAU6qC,UAAY,SAAkBvpC,GAC3C,MAAO,YAAYsc,KAAKtc,IAG1BolC,KAAK1mC,UAAU8qC,YAAc,SAAoBxpC,GAC/C,MAAO,oCAAoCsc,KAAKtc,K1BigP5CypC,MACL,KAAM,MAEDC,MACL,KAAM,MAEDC,MACL,KAAM,KAAM,MAEPC,KACA,SAAS1rC,EAAQC,EAASC,GAE/B,Y2B5nQD,SAASyrC,YAAW3G,GAClBzjC,KAAKid,IAAM,MACXjd,KAAKkD,KAAOugC,EAAOvgC,KACnBlD,KAAKyjC,OAASA,EAGdzjC,KAAKqqC,KAAO,GAAIC,SAChBtqC,KAAKqqC,KAAKhqC,MAAMojC,EAAON,MAazB,QAASmH,SAAQ1E,GACf/lC,EAAK8lC,KAAKjiC,KAAK1D,KAAM,MAAO4lC,GAsO9B,QAAS2E,cAAa9a,EAAK+a,GACzB,GAAIzE,GAAMtW,EAAIgb,UAAUD,EACxB,IAAI/a,EAAI6U,QAAQyB,GACd,MAAOA,EAET,IAAIuD,GAAMxW,EAAI4X,SAAS3E,GAAO,GAC1BoD,EAA6B,KAAV,GAANpD,EAGjB,IAAqB,MAAV,GAANA,GAAsB,CACzB,GAAI4E,GAAM5E,CAEV,KADAA,EAAM,EACkB,OAAV,IAAN4E,IAAsB,CAE5B,GADAA,EAAMlb,EAAIgb,UAAUD,GAChB/a,EAAI6U,QAAQqG,GACd,MAAOA,EAET5E,KAAQ,EACRA,GAAa,IAAN4E,OAGT5E,IAAO,EAET,IAAI6E,GAAS9X,EAAIiT,IAAIA,EAErB,QACEuD,IAAKA,EACLH,UAAWA,EACXpD,IAAKA,EACL6E,OAAQA,GAIZ,QAASC,cAAapb,EAAK0Z,EAAWqB,GACpC,GAAI7pC,GAAM8uB,EAAIgb,UAAUD,EACxB,IAAI/a,EAAI6U,QAAQ3jC,GACd,MAAOA,EAGT,KAAKwoC,GAAqB,MAARxoC,EAChB,MAAO,KAGT,IAAqB,KAAV,IAANA,GAEH,MAAOA,EAIT,IAAIS,GAAY,IAANT,CACV,IAAIS,EAAM,EACR,MAAOquB,GAAIwV,MAAM,4BAEnBtkC,GAAM,CACN,KAAK,GAAIG,GAAI,EAAGA,EAAIM,EAAKN,IAAK,CAC5BH,IAAQ,CACR,IAAI2B,GAAImtB,EAAIgb,UAAUD,EACtB,IAAI/a,EAAI6U,QAAQhiC,GACd,MAAOA,EACT3B,IAAO2B,EAGT,MAAO3B,GAlUT,GAAIrB,GAAWX,EAAQ,KAEnBkkC,EAAOlkC,EAAQ,MACfkB,EAAOgjC,EAAKhjC,KACZirC,EAASjI,EAAKiI,OAGdhY,EAAM+P,EAAKkI,UAAUjY,GAWzBr0B,GAAOC,QAAU0rC,WAEjBA,WAAWnrC,UAAUs4B,OAAS,SAAgBtH,EAAMtE,GAIlD,MAHMsE,aAAgBpwB,GAAK8mC,gBACzB1W,EAAO,GAAIpwB,GAAK8mC,cAAc1W,EAAMtE,IAE/B3rB,KAAKqqC,KAAK5C,QAAQxX,EAAMtE,IAQjCrsB,EAASgrC,QAASzqC,EAAK8lC,MAEvB2E,QAAQrrC,UAAU2oC,SAAW,SAAiBnR,EAAQsP,EAAKI,GACzD,GAAI1P,EAAOuU,UACT,OAAO,CAET,IAAIxG,GAAQ/N,EAAO8N,OACf0G,EAAaV,aAAa9T,EAAQ,wBAA0BsP,EAAM,IACtE,OAAItP,GAAO6N,QAAQ2G,GACVA,GAETxU,EAAOiO,QAAQF,GAERyG,EAAWlF,MAAQA,GAAOkF,EAAWL,SAAW7E,GACpDkF,EAAWL,OAAS,OAAU7E,GAAOI,IAG1CmE,QAAQrrC,UAAU+oC,WAAa,SAAmBvR,EAAQsP,EAAKI,GAC7D,GAAI8E,GAAaV,aAAa9T,EACA,4BAA8BsP,EAAM,IAClE,IAAItP,EAAO6N,QAAQ2G,GACjB,MAAOA,EAET,IAAItqC,GAAMkqC,aAAapU,EACAwU,EAAW9B,UACX,4BAA8BpD,EAAM,IAG3D,IAAItP,EAAO6N,QAAQ3jC,GACjB,MAAOA,EAET,KAAKwlC,GACD8E,EAAWlF,MAAQA,GACnBkF,EAAWL,SAAW7E,GACtBkF,EAAWL,OAAS,OAAS7E,EAC/B,MAAOtP,GAAOwO,MAAM,yBAA2Bc,EAAM,IAGvD,IAAIkF,EAAW9B,WAAqB,OAARxoC,EAC1B,MAAO81B,GAAOyU,KAAKvqC,EAAK,6BAA+BolC,EAAM,IAG/D,IAAIvB,GAAQ/N,EAAO8N,OACfx8B,EAAM/H,KAAKmrC,cACX1U,EACA,2CAA6Cz2B,KAAK+lC,IAAM,IAC5D,OAAItP,GAAO6N,QAAQv8B,GACVA,GAETpH,EAAM81B,EAAOwR,OAASzD,EAAMyD,OAC5BxR,EAAOiO,QAAQF,GACR/N,EAAOyU,KAAKvqC,EAAK,6BAA+BolC,EAAM,OAG/DuE,QAAQrrC,UAAUksC,cAAgB,SAAsB1U,EAAQ+T,GAC9D,OAAa,CACX,GAAIzE,GAAMwE,aAAa9T,EAAQ+T,EAC/B,IAAI/T,EAAO6N,QAAQyB,GACjB,MAAOA,EACT,IAAIplC,GAAMkqC,aAAapU,EAAQsP,EAAIoD,UAAWqB,EAC9C,IAAI/T,EAAO6N,QAAQ3jC,GACjB,MAAOA,EAET,IAAIoH,EAOJ,IALEA,EADEg+B,EAAIoD,WAAqB,OAARxoC,EACb81B,EAAOyU,KAAKvqC,GAEZX,KAAKmrC,cAAc1U,EAAQ+T,GAG/B/T,EAAO6N,QAAQv8B,GACjB,MAAOA,EAET,IAAmB,QAAfg+B,EAAI6E,OACN,QAINN,QAAQrrC,UAAUmpC,YAAc,SAAoB3R,EAAQsP,EAAKqF,EACbzf,GAElD,IADA,GAAIsD,OACIwH,EAAOuU,WAAW,CACxB,GAAIK,GAAcrrC,KAAK4nC,SAASnR,EAAQ,MACxC,IAAIA,EAAO6N,QAAQ+G,GACjB,MAAOA,EAET,IAAItjC,GAAMqjC,EAAQ7T,OAAOd,EAAQ,MAAO9K,EACxC,IAAI8K,EAAO6N,QAAQv8B,IAAQsjC,EACzB,KACFpc,GAAO9R,KAAKpV,GAEd,MAAOknB,IAGTqb,QAAQrrC,UAAUopC,WAAa,SAAmB5R,EAAQsP,GACxD,GAAY,WAARA,EAAkB,CACpB,GAAIuF,GAAS7U,EAAOgU,WACpB,OAAIhU,GAAO6N,QAAQgH,GACVA,GACAA,OAAQA,EAAQrb,KAAMwG,EAAOhd,OACjC,GAAY,WAARssB,EAAkB,CAC3B,GAAItsB,GAAMgd,EAAOhd,KACjB,IAAIA,EAAItZ,OAAS,IAAM,EACrB,MAAOs2B,GAAOwO,MAAM,kDAGtB,KAAK,GADD1kC,GAAM,GACDO,EAAI,EAAGA,EAAI2Y,EAAItZ,OAAS,EAAGW,IAClCP,GAAOgrC,OAAOC,aAAa/xB,EAAIgyB,aAAiB,EAAJ3qC,GAE9C,OAAOP,GACF,GAAY,WAARwlC,EAAkB,CAC3B,GAAI2F,GAASjV,EAAOhd,MAAMjU,SAAS,QACnC,OAAKxF,MAAK8pC,UAAU4B,GAIbA,EAHEjV,EAAOwO,MAAM,0DAIjB,GAAY,WAARc,EACT,MAAOtP,GAAOhd,KACT,IAAY,YAARssB,EACT,MAAOtP,GAAOhd,KACT,IAAY,aAARssB,EAAoB,CAC7B,GAAI4F,GAAWlV,EAAOhd,MAAMjU,SAAS,QACrC,OAAKxF,MAAK+pC,YAAY4B,GAIfA,EAHElV,EAAOwO,MAAM,4DAIjB,MAAI,OAAOpoB,KAAKkpB,GACdtP,EAAOhd,MAAMjU,WAEbixB,EAAOwO,MAAM,4BAA8Bc,EAAM,iBAI5DuE,QAAQrrC,UAAUqpC,aAAe,SAAqB7R,EAAQmV,EAAQC,GAIpE,IAHA,GAAI5c,GACA6c,KACAC,EAAQ,GACJtV,EAAOuU,WAAW,CACxB,GAAIgB,GAAWvV,EAAOgU,WACtBsB,KAAU,EACVA,GAAoB,IAAXC,EACiB,KAAV,IAAXA,KACHF,EAAY3uB,KAAK4uB,GACjBA,EAAQ,GAGG,IAAXC,GACFF,EAAY3uB,KAAK4uB,EAEnB,IAAIjT,GAASgT,EAAY,GAAK,GAAM,EAChCG,EAASH,EAAY,GAAK,EAO9B,IAJE7c,EADE4c,EACOC,GAEChT,EAAOmT,GAAQ9pB,OAAO2pB,EAAY5uB,MAAM,IAEhD0uB,EAAQ,CACV,GAAIroC,GAAMqoC,EAAO3c,EAAOsN,KAAK,KACjBljB,UAAR9V,IACFA,EAAMqoC,EAAO3c,EAAOsN,KAAK,OACfljB,SAAR9V,IACF0rB,EAAS1rB,GAGb,MAAO0rB,IAGTqb,QAAQrrC,UAAUspC,YAAc,SAAoB9R,EAAQsP,GAC1D,GAAIxlC,GAAMk2B,EAAOhd,MAAMjU,UACvB,IAAY,YAARugC,EACF,GAAImG,GAAyB,EAAlB3rC,EAAI2c,MAAM,EAAG,GACpBivB,EAAwB,EAAlB5rC,EAAI2c,MAAM,EAAG,GACnBkvB,EAAwB,EAAlB7rC,EAAI2c,MAAM,EAAG,GACnBmvB,EAA0B,EAAnB9rC,EAAI2c,MAAM,EAAG,IACpBrc,EAA0B,EAApBN,EAAI2c,MAAM,GAAI,IACpBovB,EAA0B,EAApB/rC,EAAI2c,MAAM,GAAI,QACnB,IAAY,YAAR6oB,EAYT,MAAOtP,GAAOwO,MAAM,YAAcc,EAAM,6BAXxC,IAAImG,GAAyB,EAAlB3rC,EAAI2c,MAAM,EAAG,GACpBivB,EAAwB,EAAlB5rC,EAAI2c,MAAM,EAAG,GACnBkvB,EAAwB,EAAlB7rC,EAAI2c,MAAM,EAAG,GACnBmvB,EAAyB,EAAlB9rC,EAAI2c,MAAM,EAAG,GACpBrc,EAAyB,EAAnBN,EAAI2c,MAAM,EAAG,IACnBovB,EAA0B,EAApB/rC,EAAI2c,MAAM,GAAI,GAEtBgvB,GADEA,EAAO,GACF,IAAOA,EAEP,KAAOA,EAKlB,MAAOK,MAAKC,IAAIN,EAAMC,EAAM,EAAGC,EAAKC,EAAMxrC,EAAKyrC,EAAK,IAGtDhC,QAAQrrC,UAAUupC,YAAc,SAAoB/R,GAClD,MAAO,OAGT6T,QAAQrrC,UAAUwpC,YAAc,SAAoBhS,GAClD,GAAI1uB,GAAM0uB,EAAOgU,WACjB,OAAIhU,GAAO6N,QAAQv8B,GACVA,EAEQ,IAARA,GAGXuiC,QAAQrrC,UAAUypC,WAAa,SAAmBjS,EAAQmV,GAExD,GAAInyB,GAAMgd,EAAOhd,MACb1R,EAAM,GAAI+iC,GAAOrxB,EAKrB,OAHImyB,KACF7jC,EAAM6jC,EAAO7jC,EAAIvC,SAAS,MAAQuC,GAE7BA,GAGTuiC,QAAQrrC,UAAU0pC,KAAO,SAAalF,EAAQ1kC,GAG5C,MAFsB,kBAAX0kC,KACTA,EAASA,EAAO1kC,IACX0kC,EAAOE,YAAY,OAAO0G,O3B6pQ7BoC,KACA,SAAShuC,EAAQC,EAASC,GAE/B,Y4B15QD,SAAS+tC,YAAWjJ,GAClB2G,EAAW1mC,KAAK1D,KAAMyjC,GACtBzjC,KAAKid,IAAM,MAPb,GAAI3d,GAAWX,EAAQ,KACnBqG,EAASrG,EAAQ,KAAUqG,OAE3BolC,EAAazrC,EAAQ,KAMzBW,GAASotC,WAAYtC,GACrB3rC,EAAOC,QAAUguC,WAEjBA,WAAWztC,UAAUs4B,OAAS,SAAgBtH,EAAMtE,GAQlD,IAAK,GAPDghB,GAAQ1c,EAAKzqB,WAAW0S,MAAM,YAE9B00B,EAAQjhB,EAAQihB,MAAMva,cAEtBxhB,EAAK,kCACLrQ,KACAC,KACKK,EAAI,EAAGA,EAAI6rC,EAAMxsC,OAAQW,IAAK,CACrC,GAAI8nC,GAAQ+D,EAAM7rC,GAAG8nC,MAAM/3B,EAC3B,IAAc,OAAV+3B,GAGAA,EAAM,KAAOgE,EAAjB,CAGA,GAAIpsC,OAIG,CACL,GAAiB,QAAbooC,EAAM,GACR,KACFnoC,GAAMK,CACN,OAPA,GAAiB,UAAb8nC,EAAM,GACR,KACFpoC,GAAQM,GAQZ,GAAIN,QAAgBC,OAClB,KAAM,IAAIpB,OAAM,8BAAgCutC,EAElD,IAAIC,GAASF,EAAMzvB,MAAM1c,EAAQ,EAAGC,GAAK87B,KAAK,GAE9CsQ,GAAOpnC,QAAQ,oBAAqB,GAEpC,IAAI2S,GAAQ,GAAIpT,GAAO6nC,EAAQ,SAC/B,OAAOzC,GAAWnrC,UAAUs4B,OAAO7zB,KAAK1D,KAAMoY,EAAOuT,K5Bi6QjDmhB,MACL,KAAM,KAAM,MAEPC,KACA,SAAStuC,EAAQC,EAASC,GAE/B,Y6B78QD,SAASquC,YAAWvJ,GAClBzjC,KAAKid,IAAM,MACXjd,KAAKkD,KAAOugC,EAAOvgC,KACnBlD,KAAKyjC,OAASA,EAGdzjC,KAAKqqC,KAAO,GAAIC,SAChBtqC,KAAKqqC,KAAKhqC,MAAMojC,EAAON,MAUzB,QAASmH,SAAQ1E,GACf/lC,EAAK8lC,KAAKjiC,KAAK1D,KAAM,MAAO4lC,GAmH9B,QAASzmB,KAAI/d,GACX,MAAIA,GAAM,GACD,IAAMA,EAENA,EA4HX,QAAS6rC,WAAUlH,EAAKoD,EAAWG,EAAKzF,GACtC,GAAI97B,EAOJ,IALY,UAARg+B,EACFA,EAAM,MACS,UAARA,IACPA,EAAM,OAEJjT,EAAIoa,UAAUrhB,eAAeka,GAC/Bh+B,EAAM+qB,EAAIoa,UAAUnH,OACjB,IAAmB,gBAARA,KAA2B,EAANA,KAAaA,EAGhD,MAAOlC,GAASoB,MAAM,gBAAkBc,EAFxCh+B,GAAMg+B,EAIR,MAAIh+B,IAAO,GACF87B,EAASoB,MAAM,yCAEnBkE,IACHphC,GAAO,IAETA,GAAQ+qB,EAAIqa,eAAe7D,GAAO,cAAgB,GAnSpD,GAAIhqC,GAAWX,EAAQ,KACnBqG,EAASrG,EAAQ,KAAUqG,OAE3B69B,EAAOlkC,EAAQ,MACfkB,EAAOgjC,EAAKhjC,KAGZizB,EAAM+P,EAAKkI,UAAUjY,GAWzBr0B,GAAOC,QAAUsuC,WAEjBA,WAAW/tC,UAAU0f,OAAS,SAAgBsR,EAAM4T,GAClD,MAAO7jC,MAAKqqC,KAAKtoB,QAAQkO,EAAM4T,GAAUtH,QAQ3Cj9B,EAASgrC,QAASzqC,EAAK8lC,MAEvB2E,QAAQrrC,UAAUsqC,iBAAmB,SAAyBxD,EACAoD,EACAG,EACAJ,GAC5D,GAAIkE,GAAaH,UAAUlH,EAAKoD,EAAWG,EAAKtpC,KAAK6jC,SAGrD,IAAIqF,EAAQ/oC,OAAS,IAAM,CACzB,GAAIktC,GAAS,GAAIroC,GAAO,EAGxB,OAFAqoC,GAAO,GAAKD,EACZC,EAAO,GAAKnE,EAAQ/oC,OACbH,KAAK+oC,sBAAuBsE,EAAQnE,IAM7C,IAAK,GADDoE,GAAY,EACPxsC,EAAIooC,EAAQ/oC,OAAQW,GAAK,IAAOA,IAAM,EAC7CwsC,GAEF,IAAID,GAAS,GAAIroC,GAAO,EAAQsoC,EAChCD,GAAO,GAAKD,EACZC,EAAO,GAAK,IAAOC,CAEnB,KAAK,GAAIxsC,GAAI,EAAIwsC,EAAWhrC,EAAI4mC,EAAQ/oC,OAAQmC,EAAI,EAAGxB,IAAKwB,IAAM,EAChE+qC,EAAOvsC,GAAS,IAAJwB,CAEd,OAAOtC,MAAK+oC,sBAAuBsE,EAAQnE,KAG7CoB,QAAQrrC,UAAUuqC,WAAa,SAAmBjpC,EAAKwlC,GACrD,GAAY,WAARA,EACF,MAAO/lC,MAAK+oC,sBAAoC,EAAbxoC,EAAI+qC,OAAY/qC,EAAI0vB,MAClD,IAAY,WAAR8V,EAAkB,CAE3B,IAAK,GADDtW,GAAM,GAAIzqB,GAAoB,EAAbzE,EAAIJ,QAChBW,EAAI,EAAGA,EAAIP,EAAIJ,OAAQW,IAC9B2uB,EAAI8d,cAAchtC,EAAIS,WAAWF,GAAQ,EAAJA,EAEvC,OAAOd,MAAK+oC,qBAAqBtZ,GAC5B,MAAY,WAARsW,EACJ/lC,KAAK8pC,UAAUvpC,GAIbP,KAAK+oC,qBAAqBxoC,GAHxBP,KAAK6jC,SAASoB,MAAM,kEAIZ,aAARc,EACJ/lC,KAAK+pC,YAAYxpC,GAQfP,KAAK+oC,qBAAqBxoC,GAPxBP,KAAK6jC,SAASoB,MAAM,qNAQpB,OAAOpoB,KAAKkpB,GACd/lC,KAAK+oC,qBAAqBxoC,GAChB,YAARwlC,EACF/lC,KAAK+oC,qBAAqBxoC,GAE1BP,KAAK6jC,SAASoB,MAAM,4BAA8Bc,EAC9B,iBAI/BuE,QAAQrrC,UAAUwqC,aAAe,SAAqB3J,EAAI8L,EAAQC,GAChE,GAAkB,gBAAP/L,GAAiB,CAC1B,IAAK8L,EACH,MAAO5rC,MAAK6jC,SAASoB,MAAM,8CAC7B,KAAK2G,EAAO/f,eAAeiU,GACzB,MAAO9/B,MAAK6jC,SAASoB,MAAM,gCAC7BnF,GAAK8L,EAAO9L,GAAI5nB,MAAM,WACtB,KAAK,GAAIpX,GAAI,EAAGA,EAAIg/B,EAAG3/B,OAAQW,IAC7Bg/B,EAAGh/B,IAAM,MACN,IAAIQ,MAAM4D,QAAQ46B,GAAK,CAC5BA,EAAKA,EAAG5iB,OACR,KAAK,GAAIpc,GAAI,EAAGA,EAAIg/B,EAAG3/B,OAAQW,IAC7Bg/B,EAAGh/B,IAAM,EAGb,IAAKQ,MAAM4D,QAAQ46B,GACjB,MAAO9/B,MAAK6jC,SAASoB,MAAM,kDACUnf,KAAKsf,UAAUtF,GAGtD,KAAK+L,EAAU,CACb,GAAI/L,EAAG,IAAM,GACX,MAAO9/B,MAAK6jC,SAASoB,MAAM,8BAC7BnF,GAAG0N,OAAO,EAAG,EAAW,GAAR1N,EAAG,GAAUA,EAAG,IAKlC,IAAK,GADDp5B,GAAO,EACF5F,EAAI,EAAGA,EAAIg/B,EAAG3/B,OAAQW,IAAK,CAClC,GAAIirC,GAAQjM,EAAGh/B,EACf,KAAK4F,IAAQqlC,GAAS,IAAMA,IAAU,EACpCrlC,IAKJ,IAAK,GAFD+mC,GAAQ,GAAIzoC,GAAO0B,GACnBuhC,EAASwF,EAAMttC,OAAS,EACnBW,EAAIg/B,EAAG3/B,OAAS,EAAGW,GAAK,EAAGA,IAAK,CACvC,GAAIirC,GAAQjM,EAAGh/B,EAEf,KADA2sC,EAAMxF,KAAoB,IAAR8D,GACVA,IAAU,GAAK,GACrB0B,EAAMxF,KAAY,IAAgB,IAAR8D,EAG9B,MAAO/rC,MAAK+oC,qBAAqB0E,IAUnCnD,QAAQrrC,UAAUyqC,YAAc,SAAoBgE,EAAM3H,GACxD,GAAIxlC,GACAotC,EAAO,GAAIpB,MAAKmB,EA0BpB,OAxBY,YAAR3H,EACFxlC,GACE4e,IAAIwuB,EAAKC,eACTzuB,IAAIwuB,EAAKE,cAAgB,GACzB1uB,IAAIwuB,EAAKG,cACT3uB,IAAIwuB,EAAKI,eACT5uB,IAAIwuB,EAAKK,iBACT7uB,IAAIwuB,EAAKM,iBACT,KACA1R,KAAK,IACU,YAARwJ,EACTxlC,GACE4e,IAAIwuB,EAAKC,cAAgB,KACzBzuB,IAAIwuB,EAAKE,cAAgB,GACzB1uB,IAAIwuB,EAAKG,cACT3uB,IAAIwuB,EAAKI,eACT5uB,IAAIwuB,EAAKK,iBACT7uB,IAAIwuB,EAAKM,iBACT,KACA1R,KAAK,IAEPv8B,KAAK6jC,SAASoB,MAAM,YAAcc,EAAM,8BAGnC/lC,KAAKwpC,WAAWjpC,EAAK,WAG9B+pC,QAAQrrC,UAAU0qC,YAAc,WAC9B,MAAO3pC,MAAK+oC,qBAAqB,KAGnCuB,QAAQrrC,UAAU2qC,WAAa,SAAmBxoC,EAAKwqC,GACrD,GAAmB,gBAARxqC,GAAkB,CAC3B,IAAKwqC,EACH,MAAO5rC,MAAK6jC,SAASoB,MAAM,8CAC7B,KAAK2G,EAAO/f,eAAezqB,GACzB,MAAOpB,MAAK6jC,SAASoB,MAAM,+BACAnf,KAAKsf,UAAUhkC,GAE5CA,GAAMwqC,EAAOxqC,GAIf,GAAmB,gBAARA,KAAqB4D,EAAOkuB,SAAS9xB,GAAM,CACpD,GAAI8sC,GAAW9sC,EAAIwE,WACdxE,EAAIksB,MAAsB,IAAd4gB,EAAS,IACxBA,EAASC,QAAQ,GAEnB/sC,EAAM,GAAI4D,GAAOkpC,GAGnB,GAAIlpC,EAAOkuB,SAAS9xB,GAAM,CACxB,GAAIsF,GAAOtF,EAAIjB,MACI,KAAfiB,EAAIjB,QACNuG,GAEF,IAAI7E,GAAM,GAAImD,GAAO0B,EAIrB,OAHAtF,GAAIkF,KAAKzE,GACU,IAAfT,EAAIjB,SACN0B,EAAI,GAAK,GACJ7B,KAAK+oC,qBAAqBlnC,GAGnC,GAAIT,EAAM,IACR,MAAOpB,MAAK+oC,qBAAqB3nC,EAEnC,IAAIA,EAAM,IACR,MAAOpB,MAAK+oC,sBAAsB,EAAG3nC,GAGvC,KAAK,GADDsF,GAAO,EACF5F,EAAIM,EAAKN,GAAK,IAAOA,IAAM,EAClC4F,GAGF,KAAK,GADD7E,GAAM,GAAIP,OAAMoF,GACX5F,EAAIe,EAAI1B,OAAS,EAAGW,GAAK,EAAGA,IACnCe,EAAIf,GAAW,IAANM,EACTA,IAAQ,CAMV,OAJY,KAATS,EAAI,IACLA,EAAIssC,QAAQ,GAGPnuC,KAAK+oC,qBAAqB,GAAI/jC,GAAOnD,KAG9CyoC,QAAQrrC,UAAU4qC,YAAc,SAAoBpX,GAClD,MAAOzyB,MAAK+oC,qBAAqBtW,EAAQ,IAAO,IAGlD6X,QAAQrrC,UAAU0pC,KAAO,SAAalF,EAAQ1kC,GAG5C,MAFsB,kBAAX0kC,KACTA,EAASA,EAAO1kC,IACX0kC,EAAOG,YAAY,OAAOyG,MAGnCC,QAAQrrC,UAAUgqC,aAAe,SAAqBmF,EAAYvK,EAAU+B,GAC1E,GACI9kC,GADA0jC,EAAQxkC,KAAK6lC,UAEjB,IAAyB,OAArBrB,EAAM,WACR,OAAO,CAET,IAAIvU,GAAOme,EAAW7R,MAItB,IAH4BljB,SAAxBmrB,EAAM6J,gBACR7J,EAAM6J,cAAgBruC,KAAKgpC,aAAaxE,EAAM,WAAYX,EAAU+B,GAAQrJ,QAE1EtM,EAAK9vB,SAAWqkC,EAAM6J,cAAcluC,OACtC,OAAO,CAET,KAAKW,EAAE,EAAGA,EAAImvB,EAAK9vB,OAAQW,IACzB,GAAImvB,EAAKnvB,KAAO0jC,EAAM6J,cAAcvtC,GAClC,OAAO,CAEX,QAAO,I7Bm8QHwtC,KACA,SAAS7vC,EAAQC,EAASC,GAE/B,Y8B3sRD,SAAS4vC,YAAW9K,GAClBuJ,EAAWtpC,KAAK1D,KAAMyjC,GACtBzjC,KAAKid,IAAM,MANb,GAAI3d,GAAWX,EAAQ,KAEnBquC,EAAaruC,EAAQ,KAMzBW,GAASivC,WAAYvB,GACrBvuC,EAAOC,QAAU6vC,WAEjBA,WAAWtvC,UAAU0f,OAAS,SAAgBsR,EAAMtE,GAKlD,IAAK,GAJD8D,GAAMud,EAAW/tC,UAAU0f,OAAOjb,KAAK1D,KAAMiwB,GAE7C9sB,EAAIssB,EAAIjqB,SAAS,UACjB3D,GAAQ,cAAgB8pB,EAAQihB,MAAQ,SACnC9rC,EAAI,EAAGA,EAAIqC,EAAEhD,OAAQW,GAAK,GACjCe,EAAIsb,KAAKha,EAAE+Z,MAAMpc,EAAGA,EAAI,IAE1B,OADAe,GAAIsb,KAAK,YAAcwO,EAAQihB,MAAQ,SAChC/qC,EAAI06B,KAAK,Q9BstRZiS,KACA,SAAS/vC,EAAQC,EAASC,I+B1uRhC,SAAAwhC,EAAAn7B,GAAA,YAiBA,SAASypC,YAAY3uB,GACnB,MAAOma,GAAOwU,WAAW7iB,EAAO9L,IAAUA,GAa5C,QAAS4uB,SAASxP,GAChB,MAAOyP,GAAQzP,EAAKpf,QAAU8uB,EAwBhC,QAASC,eAAe3P,GACtBA,EAAOA,KACP,IAAM54B,KACN,KAAK,GAAInD,KAAK+7B,GAAM54B,EAAKnD,GAAK+7B,EAAK/7B,EAInC,OAFKmD,GAAKwZ,QAAOxZ,EAAKwZ,MAAQphB,EAAQ4gC,eAE/Bh5B,EAGT,QAASy6B,SAAS7B,GAChB,GAAMpf,GAAQof,EAAKpf,MACb8O,EAAK6f,WAAW3uB,EAEtB,OADA8O,GAAGkgB,eACIF,EAAKlpB,UACV5F,MAAOA,EACPuM,KAAMuC,EAAGmgB,kBAIb,QAAS/P,KAAKE,EAAM9U,GAClB+V,EAAQyB,SAAS,iBAAMxX,GAAG,KAAM2W,QAAQ7B,MAG1C,QAASxZ,UAAUwZ,GAiCjB,QAAS8P,kBACP,MAAOC,KAAYA,EAAUC,EAAQC,cAAc9iB,EAAM,MAAO,QAGlE,QAAS+iB,iBACP,MAAOC,KAAWA,EAASH,EAAQI,aAAa9iB,EAAK,MAAO,QAG9D,QAAS+iB,UAAUtf,EAAMoL,GACvB,GAAIhP,GAAO2iB,gBAEX,OADA3T,GAAYA,GAAa38B,EAAQ+7B,kBAC1BR,EAAOuV,WAAWnU,GAAWjK,OAAOnB,GAAM3C,KAAKjB,EAAM,OAG9D,QAASojB,YAAYxf,EAAMoL,EAAW9J,GACpC,GAAI/E,GAAM4iB,eAQV,OAPmB,mBAAR7d,KACTA,EAAM8J,EACNA,EAAY38B,EAAQ+7B,mBAGH,gBAARlJ,KAAkBA,EAAM,GAAIvsB,GAAOusB,EAAK,QAE5C0I,EAAOyV,aAAarU,GAAWjK,OAAOnB,GAAMjC,OAAOxB,EAAK+E,GAGjE,QAAS/pB,QAAQm1B,GACf,GAAM59B,IACJ+a,OACAgG,QACA0M,IAAKgQ,EACLC,cAKF,OAFIE,KAAkB59B,EAAIstB,KAAOA,EAAK7mB,SAAS,QAExCzG,EApET,IAAMmgC,EAAK7S,OAAQ6S,EAAK1S,IACtB,KAAM,IAAIntB,OAAM,2BAGlB,KAAK6/B,EAAKpf,MAAO,KAAM,IAAIzgB,OAAM,mBAEjC,IAAMygB,GAAQof,EAAKpf,MACb8O,EAAK6f,WAAW3uB,GAChBuM,EAA4B,gBAAd6S,GAAK7S,KAAoB,GAAIrnB,GAAOk6B,EAAK7S,KAAM,OAAS6S,EAAK7S,IAC7EA,IAAMuC,EAAG+gB,cAActjB,EAE3B,IAAIG,GAA0B,gBAAb0S,GAAK1S,IAAmB,GAAIxnB,GAAOk6B,EAAK1S,IAAK,OAAS0S,EAAK1S,GACvEA,KAAKA,EAAMoC,EAAGghB,eAEnB,IAAMpT,GAAehQ,EAAIhnB,SAAS,OAC5Bi3B,EAAcxC,EAAOZ,WAAW,UAAUjI,OAAO5E,GAAK6E,OAAO,OAC7D6d,EAAU,GAAIW,GAAW/vB,GAC3BmvB,SACAI,QAEJ,OAAOpT,GAAKC,cACVpiB,OACAy1B,kBACAE,sBACAK,qBAAqB,EACrBtT,eACAC,cACAjQ,MACAH,OACA7kB,gBA5GJ,GAAMyyB,GAASt7B,EAAQ,KAEjBkxC,GADSlxC,EAAQ,KACJA,EAAQ,OACrBs9B,EAAOt9B,EAAQ,MACfgwC,GACJ5b,UAAWp0B,EAAQ,OAGfitB,GACJ9T,KAAM,aACNi4B,KAAM,aACNC,KAAM,YACNC,KAAM,aAQFn2B,EAAO,KAEP80B,EAAO3S,EAAK4E,SAChB/mB,OACAklB,QACA+B,gBACArb,mBAOFjnB,GAAOC,QAAUA,EAAUu9B,EAAK4E,SAC9B7B,IAAK,SAAUE,EAAM9U,GAEnB,MADA8U,GAAO2P,cAAc3P,GACdwP,QAAQxP,GAAMF,IAAIE,EAAM9U,IAEjC2W,QAAS,SAAU7B,GAEjB,MADAA,GAAO2P,cAAc3P,GACdwP,QAAQxP,GAAM6B,QAAQ7B,IAE/BxZ,SAAU,SAAUkV,GAElB,MADAA,GAAOiU,cAAcjU,GACd8T,QAAQ9T,GAAMlV,SAASkV,MAIlCl8B,EAAQ+7B,kBAAoB,SAC5B/7B,EAAQ4gC,cAAgB,OACxB5gC,EAAQwxC,0BAA4B,SAAUpwB,EAAO8uB,GACnDD,EAAQ7uB,GAAS8uB,K/Bi1RWlrC,KAAKhF,EAASC,EAAoB,KAAMA,EAAoB,KAAKqG,SAIzFmrC,KACA,SAAS1xC,EAAQC,EAASC,GgC34RhC,YAEAF,GAAOC,QAAUC,EAAQ,OhCi5RnByxC,KACA,SAAS3xC,EAAQC,EAASC,IiCp5RhC,SAAAqG,GAAA,YAyBA,SAAS9F,QAAOC,EAAKC,GACjB,IAAKD,EACD,KAAM,IAAIE,OAAMD,GAAO,oBAI/B,QAASywC,YAAWlkB,GACO,gBAAZA,KACPzsB,OAAO0sB,EAAOC,eAAeF,GAAU,iBAAmBA,GAC1DA,EAAUC,EAAOD,IAErB3rB,KAAK2rB,QAAUA,EACf3rB,KAAKqwC,aAAe,EAAG,EAAG,IAAK,MAAO,EAAG,GjCm3R5C,GAAIzxC,GAA4B,kBAAXC,SAAoD,gBAApBA,QAAOC,SAAwB,SAAUC,GAAO,aAAcA,IAAS,SAAUA,GAAO,MAAOA,IAAyB,kBAAXF,SAAyBE,EAAIC,cAAgBH,QAAUE,IAAQF,OAAOI,UAAY,eAAkBF,IiCt5RnQ8jC,EAAOlkC,EAAQ,MACfgB,EAAKhB,EAAQ,KACbitB,EAASjtB,EAAQ,MAEjB2xC,EAAkBzN,EAAKC,OAAO,eAAgB,WAC9C9iC,KAAK+iC,MAAMhkC,IACPiB,KAAKse,IAAI,WAATte,SACAA,KAAKse,IAAI,cAAciyB,SACvBvwC,KAAKse,IAAI,cAAcgoB,SAAS,GAAGmH,QAAQvH,WAC3ClmC,KAAKse,IAAI,aAAagoB,SAAS,GAAGkK,SAAStK,cAI/CuK,EAA0B5N,EAAKC,OAAO,uBAAwB,WAC9D9iC,KAAK+iC,MAAMhkC,IACPiB,KAAKse,IAAI,aAAaykB,MAAMhkC,IACxBiB,KAAKse,IAAI,MAAMmvB,QACfztC,KAAKse,IAAI,SAASmvB,SAEtBztC,KAAKse,IAAI,OAAOkyB,WAmBxBX,YAAWS,gBAAkBA,EAC7BT,WAAWY,wBAA0BA,EAErCZ,WAAW5wC,UAAUyxC,iBAAmB,SAASC,EAAeC,GAC5D,GAAIF,IACA3zB,QAAS,GAAIpd,GAAG,GAChBszB,WAAY,GAAIjuB,GAAO2rC,EAAe,OACtCE,WAAY7wC,KAAK2rB,QAAQmlB,gBAU7B,OAPIF,KACAF,EAAiBld,WACb8X,OAAQ,EACRrb,KAAM,GAAIjrB,GAAO4rC,EAAc,SAIhCF,GAGXb,WAAW5wC,UAAU8xC,gBAAkB,SAASH,GAC5C,OACIvV,WACIyE,GAAI9/B,KAAKqwC,YACTvwB,MAAO9f,KAAK2rB,QAAQmlB,iBAExBtkB,KACI8e,OAAQ,EACRrb,KAAM,GAAIjrB,GAAO4rC,EAAc,UAK3Cf,WAAW5wC,UAAUkwC,cAAgB,SAASlc,EAAY+d,EAAgBC,GACtE,GAAIP,EAGJ,IAAuB,QAAnBM,EAA0B,CAC1B,GAA2B,aAAvB,mBAAQ/d,GAAR,YAAAr0B,EAAQq0B,IACR,KAAM,8BAEV,IAAIyd,GAAmB1wC,KAAK2rB,QAAQ7L,MAAMsM,eAAe6G,EAAY,OACjE2d,EAAeF,EAAiBviB,UAAU,MAC9CuiB,GAAmB1wC,KAAK0wC,iBAAiBzd,EAAY2d,OAClD,IAAuB,QAAnBI,EAA0B,CACjC,GAAIhsC,EAAOkuB,SAASD,QAEb,IAA0B,gBAAfA,GAGd,KAAM,0CAFNA,GAAa,GAAIjuB,GAAOiuB,EAAY,OAIxCyd,EAAmBJ,EAAgB/Y,OAAOtE,EAAY,WACnD,IAAuB,QAAnB+d,EAMP,KAAM,4BALN,IAA2B,aAAvB,mBAAQ/d,GAAR,YAAAr0B,EAAQq0B,IACR,KAAM,8BAEVyd,GAAmBJ,EAAgB/Y,OAAOtE,EAAY,MAAOjzB,KAAK2rB,QAAQulB,mBAM9E,GAA0B,QAAtBD,EACA,MAAOP,GAAiBzd,WAAWztB,SAAS,MACzC,IAA0B,QAAtByrC,EACP,MAAOX,GAAgB3xB,OAAO+xB,EAAkB,OAAOlrC,SAAS,MAC7D,IAA0B,QAAtByrC,EACP,MAAOX,GAAgB3xB,OAAO+xB,EAAkB,MAAO1wC,KAAK2rB,QAAQulB,kBAEpE,MAAM,8CAIdrB,WAAW5wC,UAAUqwC,aAAe,SAAS9b,EAAWwd,EAAgBC,GACpE,GAAIF,EAGJ,IAAuB,QAAnBC,EAA0B,CAC1B,GAA0B,aAAtB,mBAAQxd,GAAR,YAAA50B,EAAQ40B,IACR,KAAM,6BAEVud,GAAkB/wC,KAAK+wC,gBAAgBvd,OACpC,IAAuB,QAAnBwd,EAA0B,CACjC,GAAIhsC,EAAOkuB,SAASM,QAEb,IAAyB,gBAAdA,GAGd,KAAM,yCAFNA,GAAY,GAAIxuB,GAAOwuB,EAAW,OAItCud,EAAkBN,EAAwBlZ,OAAO/D,EAAW,WACzD,IAAuB,QAAnBwd,EAMP,KAAM,2BALN,IAA0B,aAAtB,mBAAQxd,GAAR,YAAA50B,EAAQ40B,IACR,KAAM,6BAEVud,GAAkBN,EAAwBlZ,OAAO/D,EAAW,MAAOxzB,KAAK2rB,QAAQwlB,kBAMpF,GAA0B,QAAtBF,EACA,MAAOF,GAAgBvkB,IAAIyD,KAAKzqB,SAAS,MACtC,IAA0B,QAAtByrC,EACP,MAAOR,GAAwB9xB,OAAOoyB,EAAiB,OAAOvrC,SAAS,MACpE,IAA0B,QAAtByrC,EACP,MAAOR,GAAwB9xB,OAAOoyB,EAAiB,MAAO/wC,KAAK2rB,QAAQwlB,iBAE3E,MAAM,6CAId1yC,EAAOC,QAAUmxC,ajC84RansC,KAAKhF,EAASC,EAAoB,KAAKqG,SAI/DosC,MACL,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAE/BC,KACA,SAAS5yC,EAAQC,EAASC,IAEH,SAASF,GAAS,YAE9C,IAAIG,GAA4B,kBAAXC,SAAoD,gBAApBA,QAAOC,SAAwB,SAAUC,GAAO,aAAcA,IAAS,SAAUA,GAAO,MAAOA,IAAyB,kBAAXF,SAAyBE,EAAIC,cAAgBH,QAAUE,IAAQF,OAAOI,UAAY,eAAkBF,KkCnjSvQ,SAAWN,EAAQC,GAMnB,QAASQ,QAAOC,EAAKC,GACnB,IAAKD,EACH,KAAM,IAAIE,OAAMD,GAAO,oBAK3B,QAASE,UAASC,EAAMC,GACtBD,EAAKE,OAASD,CACd,IAAIE,GAAW,YACfA,GAAST,UAAYO,EAAUP,UAC/BM,EAAKN,UAAY,GAAIS,GACrBH,EAAKN,UAAUD,YAAcO,EAK/B,QAASI,IAAGC,EAAQC,EAAMC,GAExB,MAAe,QAAXF,GACkB,YAAlB,mBAAOA,GAAP,YAAAhB,EAAOgB,KACP0B,MAAM4D,QAAQtF,EAAOM,OAChBN,GAGTI,KAAKstB,MAAO,EACZttB,KAAKE,MAAQ,KACbF,KAAKG,OAAS,EAGdH,KAAKI,IAAM,KAEE,OAATP,GAA0B,OAATA,IACnBC,EAASD,EACTA,EAAO,SAGM,OAAXD,GACFI,KAAKK,MAAMT,GAAU,EAAGC,GAAQ,GAAIC,GAAU,QAiHlD,QAASQ,UAASC,EAAKC,EAAOC,GAG5B,IAAK,GAFDC,GAAI,EACJC,EAAMC,KAAKC,IAAIN,EAAIJ,OAAQM,GACtBK,EAAIN,EAAOM,EAAIH,EAAKG,IAAK,CAChC,GAAIC,GAAIR,EAAIS,WAAWF,GAAK,EAE5BJ,KAAM,EAIJA,GADEK,GAAK,IAAMA,GAAK,GACbA,EAAI,GAAK,GAGPA,GAAK,IAAMA,GAAK,GAClBA,EAAI,GAAK,GAIL,GAAJA,EAET,MAAOL,GA8BT,QAASO,WAAUV,EAAKC,EAAOC,EAAKS,GAGlC,IAAK,GAFDR,GAAI,EACJC,EAAMC,KAAKC,IAAIN,EAAIJ,OAAQM,GACtBK,EAAIN,EAAOM,EAAIH,EAAKG,IAAK,CAChC,GAAIC,GAAIR,EAAIS,WAAWF,GAAK,EAE5BJ,IAAKQ,EAIHR,GADEK,GAAK,GACFA,EAAI,GAAK,GAGPA,GAAK,GACPA,EAAI,GAAK,GAITA,EAET,MAAOL,GA8lDT,QAASuC,QAAOC,EAAMC,GAEpBnD,KAAKkD,KAAOA,EACZlD,KAAKmD,EAAI,GAAIxD,IAAGwD,EAAG,IACnBnD,KAAKoD,EAAIpD,KAAKmD,EAAE5B,YAChBvB,KAAKkC,EAAI,GAAIvC,IAAG,GAAG6S,MAAMxS,KAAKoD,GAAGE,KAAKtD,KAAKmD,GAE3CnD,KAAKuD,IAAMvD,KAAKwD,OA2ClB,QAASC,QACPR,OAAOS,KACL1D,KACA,OACA,2EA8DJ,QAAS2D,QACPV,OAAOS,KACL1D,KACA,OACA,kEAIJ,QAAS4D,QACPX,OAAOS,KACL1D,KACA,OACA,yDAIJ,QAAS6D,UAEPZ,OAAOS,KACL1D,KACA,QACA;CA6CJ,QAAS8D,KAAIC,GACX,GAAiB,gBAANA,GAAgB,CACzB,GAAIC,GAAQrE,GAAGsE,OAAOF,EACtB/D,MAAK+D,EAAIC,EAAMb,EACfnD,KAAKgE,MAAQA,MAEbhE,MAAK+D,EAAIA,EACT/D,KAAKgE,MAAQ,KA4MjB,QAASG,MAAKJ,GACZD,IAAIJ,KAAK1D,KAAM+D,GAEf/D,KAAKoE,MAAQpE,KAAK+D,EAAExC,YAChBvB,KAAKoE,MAAQ,KAAO,IACtBpE,KAAKoE,OAAS,GAAMpE,KAAKoE,MAAQ,IACnCpE,KAAKU,EAAI,GAAIf,IAAG,GAAG6S,MAAMxS,KAAKoE,OAC9BpE,KAAKqE,GAAKrE,KAAKsE,KAAKtE,KAAKU,EAAE6D,OAC3BvE,KAAKwE,KAAOxE,KAAKU,EAAE+D,OAAOzE,KAAK+D,GAE/B/D,KAAK0E,KAAO1E,KAAKwE,KAAKtD,IAAIlB,KAAKU,GAAGiE,MAAM,GAAGC,IAAI5E,KAAK+D,GACpD/D,KAAK0E,KAAK4oB,MAAO,EACjBttB,KAAK0E,KAAO1E,KAAK0E,KAAKuB,IAAIjG,KAAKU,GAxqEX,YAAlB,mBAAOjC,GAAP,YAAAG,EAAOH,IACTA,EAAOC,QAAUiB,GAEjBjB,EAAQiB,GAAKA,GAEfA,GAAGA,GAAKA,GACRA,GAAGoF,SAAW,GAEdpF,GAAGV,UAAUoB,MAAQ,SAAcT,EAAQC,EAAMC,GAC/C,GAAsB,gBAAXF,GACT,MAAOI,MAAKsF,YAAY1F,EAAQC,EAAMC,EACjC,IAAsB,YAAlB,mBAAOF,GAAP,YAAAhB,EAAOgB,IAChB,MAAOI,MAAKuF,WAAW3F,EAAQC,EAAMC,EAE1B,SAATD,IACFA,EAAO,IACTX,OAAOW,KAAiB,EAAPA,IAAaA,GAAQ,GAAKA,GAAQ,IAEnDD,EAASA,EAAO4F,WAAWC,QAAQ,OAAQ,GAC3C,IAAIjF,GAAQ,CACM,OAAdZ,EAAO,IACTY,IAEW,KAATX,EACFG,KAAK0F,UAAU9F,EAAQY,GAEvBR,KAAK2F,WAAW/F,EAAQC,EAAMW,GAEd,MAAdZ,EAAO,KACTI,KAAKstB,MAAO,GAEdttB,KAAKwC,QAEU,OAAX1C,GAGJE,KAAKuF,WAAWvF,KAAK4F,UAAW/F,EAAMC,IAGxCH,GAAGV,UAAUqG,YAAc,SAAqB1F,EAAQC,EAAMC,GACxDF,EAAS,IACXI,KAAKstB,MAAO,EACZ1tB,GAAUA,GAERA,EAAS,UACXI,KAAKE,OAAmB,SAATN,GACfI,KAAKG,OAAS,GACLP,EAAS,kBAClBI,KAAKE,OACM,SAATN,EACCA,EAAS,SAAa,UAEzBI,KAAKG,OAAS,IAEdjB,OAAOU,EAAS,kBAChBI,KAAKE,OACM,SAATN,EACCA,EAAS,SAAa,SACvB,GAEFI,KAAKG,OAAS,GAGD,OAAXL,GAIJE,KAAKuF,WAAWvF,KAAK4F,UAAW/F,EAAMC,IAGxCH,GAAGV,UAAUsG,WAAa,SAAoB3F,EAAQC,EAAMC,GAG1D,GADAZ,OAAgC,gBAAlBU,GAAOO,QACjBP,EAAOO,QAAU,EAGnB,MAFAH,MAAKE,OAAU,GACfF,KAAKG,OAAS,EACPH,IAGTA,MAAKG,OAASS,KAAKiF,KAAKjG,EAAOO,OAAS,GACxCH,KAAKE,MAAQ,GAAIoB,OAAMtB,KAAKG,OAC5B,KAAK,GAAIW,GAAI,EAAGA,EAAId,KAAKG,OAAQW,IAC/Bd,KAAKE,MAAMY,GAAK,CAElB,IAAIW,GAAM,CACV,IAAe,OAAX3B,EACF,IAAK,GAAIgB,GAAIlB,EAAOO,OAAS,EAAGmC,EAAI,EAAGxB,GAAK,EAAGA,GAAK,EAAG,CACrD,GAAIO,GAAIzB,EAAOkB,GAAMlB,EAAOkB,EAAI,IAAM,EAAMlB,EAAOkB,EAAI,IAAM,EAC7Dd,MAAKE,MAAMoC,IAAOjB,GAAKI,EAAO,SAC9BzB,KAAKE,MAAMoC,EAAI,GAAMjB,IAAO,GAAKI,EAAQ,SACzCA,GAAO,GACHA,GAAO,KACTA,GAAO,GACPa,SAGC,IAAe,OAAXxC,EACT,IAAK,GAAIgB,GAAI,EAAGwB,EAAI,EAAGxB,EAAIlB,EAAOO,OAAQW,GAAK,EAAG,CAChD,GAAIO,GAAIzB,EAAOkB,GAAMlB,EAAOkB,EAAI,IAAM,EAAMlB,EAAOkB,EAAI,IAAM,EAC7Dd,MAAKE,MAAMoC,IAAOjB,GAAKI,EAAO,SAC9BzB,KAAKE,MAAMoC,EAAI,GAAMjB,IAAO,GAAKI,EAAQ,SACzCA,GAAO,GACHA,GAAO,KACTA,GAAO,GACPa,KAIN,MAAOtC,MAAKwC,SA0Bd7C,GAAGV,UAAUyG,UAAY,SAAmB9F,EAAQY,GAElDR,KAAKG,OAASS,KAAKiF,MAAMjG,EAAOO,OAASK,GAAS,GAClDR,KAAKE,MAAQ,GAAIoB,OAAMtB,KAAKG,OAC5B,KAAK,GAAIW,GAAI,EAAGA,EAAId,KAAKG,OAAQW,IAC/Bd,KAAKE,MAAMY,GAAK,CAIlB,KAAK,GADDW,GAAM,EACDX,EAAIlB,EAAOO,OAAS,EAAGmC,EAAI,EAAGxB,GAAKN,EAAOM,GAAK,EAAG,CACzD,GAAIO,GAAIf,SAASV,EAAQkB,EAAGA,EAAI,EAChCd,MAAKE,MAAMoC,IAAOjB,GAAKI,EAAO,SAC9BzB,KAAKE,MAAMoC,EAAI,IAAMjB,IAAO,GAAKI,EAAO,QACxCA,GAAO,GACHA,GAAO,KACTA,GAAO,GACPa,KAGJ,GAAIxB,EAAI,IAAMN,EAAO,CACnB,GAAIa,GAAIf,SAASV,EAAQY,EAAOM,EAAI,EACpCd,MAAKE,MAAMoC,IAAOjB,GAAKI,EAAO,SAC9BzB,KAAKE,MAAMoC,EAAI,IAAMjB,IAAO,GAAKI,EAAO,QAE1CzB,KAAKwC,SA0BP7C,GAAGV,UAAU0G,WAAa,SAAoB/F,EAAQC,EAAMW,GAE1DR,KAAKE,OAAU,GACfF,KAAKG,OAAS,CAGd,KAAK,GAAI2F,GAAU,EAAGC,EAAU,EAAGA,GAAW,SAAWA,GAAWlG,EAClEiG,GACFA,KACAC,EAAWA,EAAUlG,EAAQ,CAO7B,KAAK,GALDmG,GAAQpG,EAAOO,OAASK,EACxByF,EAAMD,EAAQF,EACdrF,EAAMG,KAAKC,IAAImF,EAAOA,EAAQC,GAAOzF,EAErC0F,EAAO,EACFpF,EAAIN,EAAOM,EAAIL,EAAKK,GAAKgF,EAChCI,EAAOjF,UAAUrB,EAAQkB,EAAGA,EAAIgF,EAASjG,GAEzCG,KAAKmG,MAAMJ,GACP/F,KAAKE,MAAM,GAAKgG,EAAO,SACzBlG,KAAKE,MAAM,IAAMgG,EAEjBlG,KAAKoG,OAAOF,EAGhB,IAAY,IAARD,EAAW,CAIb,IAAK,GAHDI,GAAM,EACNH,EAAOjF,UAAUrB,EAAQkB,EAAGlB,EAAOO,OAAQN,GAEtCiB,EAAI,EAAGA,EAAImF,EAAKnF,IACvBuF,GAAOxG,CACTG,MAAKmG,MAAME,GACPrG,KAAKE,MAAM,GAAKgG,EAAO,SACzBlG,KAAKE,MAAM,IAAMgG,EAEjBlG,KAAKoG,OAAOF,KAIlBvG,GAAGV,UAAUqH,KAAO,SAAcC,GAChCA,EAAKrG,MAAQ,GAAIoB,OAAMtB,KAAKG,OAC5B,KAAK,GAAIW,GAAI,EAAGA,EAAId,KAAKG,OAAQW,IAC/ByF,EAAKrG,MAAMY,GAAKd,KAAKE,MAAMY,EAC7ByF,GAAKpG,OAASH,KAAKG,OACnBoG,EAAK+mB,KAAOttB,KAAKstB,KACjB/mB,EAAKnG,IAAMJ,KAAKI,KAGlBT,GAAGV,UAAUuH,MAAQ,WACnB,GAAI9F,GAAI,GAAIf,IAAG,KAEf,OADAK,MAAKsG,KAAK5F,GACHA,GAITf,GAAGV,UAAUuD,MAAQ,WACnB,KAAOxC,KAAKG,OAAS,GAAqC,IAAhCH,KAAKE,MAAMF,KAAKG,OAAS,IACjDH,KAAKG,QACP,OAAOH,MAAK2G,aAGdhH,GAAGV,UAAU0H,UAAY,WAIvB,MAFoB,KAAhB3G,KAAKG,QAAkC,IAAlBH,KAAKE,MAAM,KAClCF,KAAKstB,MAAO,GACPttB,MAGTL,GAAGV,UAAU2H,QAAU,WACrB,OAAQ5G,KAAKI,IAAM,UAAY,SAAWJ,KAAKwF,SAAS,IAAM,IAiChE,IAAIqB,IACF,GACA,IACA,KACA,MACA,OACA,QACA,SACA,UACA,WACA,YACA,aACA,cACA,eACA,gBACA,iBACA,kBACA,mBACA,oBACA,qBACA,sBACA,uBACA,wBACA,yBACA,0BACA,2BACA,6BAGEC,GACF,EAAG,EACH,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EACvB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAClB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAClB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAClB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAGhBC,GACF,EAAG,EACH,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAC5D,SAAU,IAAU,SAAU,SAAU,SAAU,QAAS,SAC3D,SAAU,SAAU,SAAU,SAAU,KAAU,QAAS,QAC3D,QAAS,QAAS,QAAS,SAAU,SAAU,SAAU,SACzD,MAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAG9DpH,IAAGV,UAAUuG,SAAW,SAAkB3F,EAAMmH,GAE9C,GADAnH,EAAOA,GAAQ,GACF,KAATA,GAAwB,QAATA,EAAgB,CAKjC,IAAK,GAJDgC,GAAM,GACNJ,EAAM,EACNuF,EAAoB,EAAVA,GAAe,EACzB/E,EAAQ,EACHnB,EAAI,EAAGA,EAAId,KAAKG,OAAQW,IAAK,CACpC,GAAIO,GAAIrB,KAAKE,MAAMY,GACfoF,GAA+B,UAArB7E,GAAKI,EAAOQ,IAAmBuD,SAAS,GACtDvD,GAASZ,IAAO,GAAKI,EAAQ,SAE3BI,EADY,IAAVI,GAAenB,IAAMd,KAAKG,OAAS,EAC/B0G,EAAM,EAAIX,EAAK/F,QAAU+F,EAAOrE,EAEhCqE,EAAOrE,EACfJ,GAAO,EACHA,GAAO,KACTA,GAAO,GACPX,KAKJ,IAFc,IAAVmB,IACFJ,EAAMI,EAAMuD,SAAS,IAAM3D,GACtBA,EAAI1B,OAAS6G,IAAY,GAC9BnF,EAAM,IAAMA,CAGd,OAFI7B,MAAKstB,OACPzrB,EAAM,IAAMA,GACPA,EACF,GAAIhC,KAAiB,EAAPA,IAAaA,GAAQ,GAAKA,GAAQ,GAAI,CAEzD,GAAIoH,GAAYH,EAAWjH,GAEvBqH,EAAYH,EAAWlH,GACvBgC,EAAM,GACNd,EAAIf,KAAKwG,OAEb,KADAzF,EAAEusB,MAAO,EACY,IAAdvsB,EAAEuU,KAAK,IAAU,CACtB,GAAI5U,GAAIK,EAAEqG,KAAKF,GAAW1B,SAAS3F,EACnCkB,GAAIA,EAAEsG,MAAMH,GAGVrF,EADgB,IAAdd,EAAEuU,KAAK,GACHzO,EAAMI,EAAYvG,EAAEP,QAAUO,EAAImB,EAElCnB,EAAImB,EAMd,MAJqB,KAAjB7B,KAAKsV,KAAK,KACZzT,EAAM,IAAMA,GACV7B,KAAKstB,OACPzrB,EAAM,IAAMA,GACPA,EAEP3C,QAAO,EAAO,oCAIlBS,GAAGV,UAAUuI,OAAS,WACpB,MAAOxH,MAAKwF,SAAS,KAGvB7F,GAAGV,UAAU2G,QAAU,SAAiB9F,GACtCE,KAAKwC,OACL,IAAIuF,GAAM,GAAIzG,OAAMtB,KAAK4H,aACzBG,GAAI,GAAK,CAET,IAAIC,GAAIhI,KAAKwG,OACb,IAAe,OAAX1G,EAEF,IAAK,GAAIgB,GAAI,EAAiB,IAAdkH,EAAEsN,KAAK,GAAUxU,IAAK,CACpC,GAAIiB,GAAIiG,EAAEC,MAAM,IAChBD,GAAE8K,MAAM,GAER/K,EAAIA,EAAI5H,OAASW,EAAI,GAAKiB,MAI5B,KAAK,GAAIjB,GAAI,EAAiB,IAAdkH,EAAEsN,KAAK,GAAUxU,IAAK,CACpC,GAAIiB,GAAIiG,EAAEC,MAAM,IAChBD,GAAE8K,MAAM,GAER/K,EAAIjH,GAAKiB,EAIb,MAAOgG,IAGLnH,KAAKuH,MACPxI,GAAGV,UAAUmJ,WAAa,SAAoB/G,GAC5C,MAAO,IAAKT,KAAKuH,MAAM9G,IAGzB1B,GAAGV,UAAUmJ,WAAa,SAAoB/G,GAC5C,GAAIgH,GAAIhH,EACJX,EAAI,CAiBR,OAhBI2H,IAAK,OACP3H,GAAK,GACL2H,KAAO,IAELA,GAAK,KACP3H,GAAK,EACL2H,KAAO,GAELA,GAAK,IACP3H,GAAK,EACL2H,KAAO,GAELA,GAAK,IACP3H,GAAK,EACL2H,KAAO,GAEF3H,EAAI2H,GAIf1I,GAAGV,UAAUqJ,UAAY,SAAmBjH,GAE1C,GAAU,IAANA,EACF,MAAO,GAET,IAAIgH,GAAIhH,EACJX,EAAI,CAmBR,OAlBqB,MAAZ,KAAJ2H,KACH3H,GAAK,GACL2H,KAAO,IAEU,KAAV,IAAJA,KACH3H,GAAK,EACL2H,KAAO,GAES,KAAT,GAAJA,KACH3H,GAAK,EACL2H,KAAO,GAES,KAAT,EAAJA,KACH3H,GAAK,EACL2H,KAAO,GAES,KAAT,EAAJA,IACH3H,IACKA,GAITf,GAAGV,UAAUsC,UAAY,WACvB,GAAIgH,GAAK,EACLlH,EAAIrB,KAAKE,MAAMF,KAAKG,OAAS,GAC7BoI,EAAKvI,KAAKoI,WAAW/G,EACzB,OAA2B,KAAnBrB,KAAKG,OAAS,GAAUoI,GAIlC5I,GAAGV,UAAUuJ,SAAW,WACtB,GAAqB,IAAjBxI,KAAKsV,KAAK,GACZ,MAAO,EAGT,KAAK,GADD5U,GAAI,EACCI,EAAI,EAAGA,EAAId,KAAKG,OAAQW,IAAK,CACpC,GAAIiB,GAAI/B,KAAKsI,UAAUtI,KAAKE,MAAMY,GAElC,IADAJ,GAAKqB,EACK,KAANA,EACF,MAEJ,MAAOrB,IAGTf,GAAGV,UAAU2I,WAAa,WACxB,MAAOhH,MAAKiF,KAAK7F,KAAKuB,YAAc,IAItC5B,GAAGV,UAAUkK,IAAM,WACjB,GAAqB,IAAjBnJ,KAAKsV,KAAK,GACZ,MAAOtV,MAAKwG,OAEd,IAAI9F,GAAIV,KAAKwG,OAEb,OADA9F,GAAE4sB,MAAQttB,KAAKstB,KACR5sB,GAKTf,GAAGV,UAAUoK,IAAM,SAAajI,GAG9B,IAFApB,KAAKstB,KAAOttB,KAAKstB,MAAQlsB,EAAIksB,KAEtBttB,KAAKG,OAASiB,EAAIjB,QACvBH,KAAKE,MAAMF,KAAKG,UAAY,CAE9B,KAAK,GAAIW,GAAI,EAAGA,EAAIM,EAAIjB,OAAQW,IAC9Bd,KAAKE,MAAMY,GAAKd,KAAKE,MAAMY,GAAKM,EAAIlB,MAAMY,EAE5C,OAAOd,MAAKwC,SAKd7C,GAAGV,UAAUqK,GAAK,SAAYlI,GAC5B,MAAIpB,MAAKG,OAASiB,EAAIjB,OACbH,KAAKwG,QAAQ6C,IAAIjI,GAEjBA,EAAIoF,QAAQ6C,IAAIrJ,OAK3BL,GAAGV,UAAUwK,KAAO,SAAcrI,GAChCpB,KAAKstB,KAAOttB,KAAKstB,MAAQlsB,EAAIksB,IAG7B,IAAIvrB,EAEFA,GADE/B,KAAKG,OAASiB,EAAIjB,OAChBiB,EAEApB,IAEN,KAAK,GAAIc,GAAI,EAAGA,EAAIiB,EAAE5B,OAAQW,IAC5Bd,KAAKE,MAAMY,GAAKd,KAAKE,MAAMY,GAAKM,EAAIlB,MAAMY,EAI5C,OAFAd,MAAKG,OAAS4B,EAAE5B,OAETH,KAAKwC,SAKd7C,GAAGV,UAAUyK,IAAM,SAAatI,GAC9B,MAAIpB,MAAKG,OAASiB,EAAIjB,OACbH,KAAKwG,QAAQiD,KAAKrI,GAElBA,EAAIoF,QAAQiD,KAAKzJ,OAK5BL,GAAGV,UAAU4K,KAAO,SAAczI,GAChCpB,KAAKstB,KAAOttB,KAAKstB,MAAQlsB,EAAIksB,IAG7B,IAAIxrB,GACAC,CACA/B,MAAKG,OAASiB,EAAIjB,QACpB2B,EAAI9B,KACJ+B,EAAIX,IAEJU,EAAIV,EACJW,EAAI/B,KAGN,KAAK,GAAIc,GAAI,EAAGA,EAAIiB,EAAE5B,OAAQW,IAC5Bd,KAAKE,MAAMY,GAAKgB,EAAE5B,MAAMY,GAAKiB,EAAE7B,MAAMY,EAEvC,IAAId,OAAS8B,EACX,KAAOhB,EAAIgB,EAAE3B,OAAQW,IACnBd,KAAKE,MAAMY,GAAKgB,EAAE5B,MAAMY,EAI5B,OAFAd,MAAKG,OAAS2B,EAAE3B,OAETH,KAAKwC,SAKd7C,GAAGV,UAAU6K,IAAM,SAAa1I,GAC9B,MAAIpB,MAAKG,OAASiB,EAAIjB,OACbH,KAAKwG,QAAQqD,KAAKzI,GAElBA,EAAIoF,QAAQqD,KAAK7J,OAK5BL,GAAGV,UAAUiL,KAAO,SAAc1I,EAAKrC,GACrCD,OAAsB,gBAARsC,IAAoBA,GAAO,EAKzC,KAHA,GAAIC,GAAOD,EAAM,GAAM,EACnBE,EAAOF,EAAM,GAEVxB,KAAKG,QAAUsB,GACpBzB,KAAKE,MAAMF,KAAKG,UAAY,CAO9B,OALIhB,GACFa,KAAKE,MAAMuB,GAAOzB,KAAKE,MAAMuB,GAAQ,GAAKC,EAE1C1B,KAAKE,MAAMuB,GAAOzB,KAAKE,MAAMuB,KAAS,GAAKC,GAEtC1B,KAAKwC,SAKd7C,GAAGV,UAAUkL,KAAO,SAAc/I,GAEhC,GAAIpB,KAAKstB,OAASlsB,EAAIksB,KAAM,CAC1BttB,KAAKstB,MAAO,CACZ,IAAI5sB,GAAIV,KAAKsD,KAAKlC,EAElB,OADApB,MAAKstB,MAAQttB,KAAKstB,KACXttB,KAAK2G,YAGP,IAAK3G,KAAKstB,MAAQlsB,EAAIksB,KAAM,CACjClsB,EAAIksB,MAAO,CACX,IAAI5sB,GAAIV,KAAKsD,KAAKlC,EAElB,OADAA,GAAIksB,MAAO,EACJ5sB,EAAEiG,YAIX,GAAI7E,GACAC,CACA/B,MAAKG,OAASiB,EAAIjB,QACpB2B,EAAI9B,KACJ+B,EAAIX,IAEJU,EAAIV,EACJW,EAAI/B,KAIN,KAAK,GADDiC,GAAQ,EACHnB,EAAI,EAAGA,EAAIiB,EAAE5B,OAAQW,IAAK,CACjC,GAAIJ,GAAIoB,EAAE5B,MAAMY,GAAKiB,EAAE7B,MAAMY,GAAKmB,CAClCjC,MAAKE,MAAMY,GAAS,SAAJJ,EAChBuB,EAAQvB,IAAM,GAEhB,KAAiB,IAAVuB,GAAenB,EAAIgB,EAAE3B,OAAQW,IAAK,CACvC,GAAIJ,GAAIoB,EAAE5B,MAAMY,GAAKmB,CACrBjC,MAAKE,MAAMY,GAAS,SAAJJ,EAChBuB,EAAQvB,IAAM,GAIhB,GADAV,KAAKG,OAAS2B,EAAE3B,OACF,IAAV8B,EACFjC,KAAKE,MAAMF,KAAKG,QAAU8B,EAC1BjC,KAAKG,aAEA,IAAI2B,IAAM9B,KACf,KAAOc,EAAIgB,EAAE3B,OAAQW,IACnBd,KAAKE,MAAMY,GAAKgB,EAAE5B,MAAMY,EAG5B,OAAOd,OAITL,GAAGV,UAAUmL,IAAM,SAAahJ,GAC9B,GAAIA,EAAIksB,OAASttB,KAAKstB,KAAM,CAC1BlsB,EAAIksB,MAAO,CACX,IAAIvlB,GAAM/H,KAAK8E,IAAI1D,EAEnB,OADAA,GAAIksB,MAAO,EACJvlB,EACF,IAAK3G,EAAIksB,MAAQttB,KAAKstB,KAAM,CACjCttB,KAAKstB,MAAO,CACZ,IAAIvlB,GAAM3G,EAAI0D,IAAI9E,KAElB,OADAA,MAAKstB,MAAO,EACLvlB,EAGT,MAAI/H,MAAKG,OAASiB,EAAIjB,OACbH,KAAKwG,QAAQ2D,KAAK/I,GAElBA,EAAIoF,QAAQ2D,KAAKnK,OAI5BL,GAAGV,UAAUqE,KAAO,SAAclC,GAEhC,GAAIA,EAAIksB,KAAM,CACZlsB,EAAIksB,MAAO,CACX,IAAI5sB,GAAIV,KAAKmK,KAAK/I,EAElB,OADAA,GAAIksB,MAAO,EACJ5sB,EAAEiG,YAGJ,GAAI3G,KAAKstB,KAId,MAHAttB,MAAKstB,MAAO,EACZttB,KAAKmK,KAAK/I,GACVpB,KAAKstB,MAAO,EACLttB,KAAK2G,WAId,IAAItB,GAAMrF,KAAKqF,IAAIjE,EAGnB,IAAY,IAARiE,EAIF,MAHArF,MAAKstB,MAAO,EACZttB,KAAKG,OAAS,EACdH,KAAKE,MAAM,GAAK,EACTF,IAIT,IAAI8B,GACAC,CACAsD,GAAM,GACRvD,EAAI9B,KACJ+B,EAAIX,IAEJU,EAAIV,EACJW,EAAI/B,KAIN,KAAK,GADDiC,GAAQ,EACHnB,EAAI,EAAGA,EAAIiB,EAAE5B,OAAQW,IAAK,CACjC,GAAIJ,GAAIoB,EAAE5B,MAAMY,GAAKiB,EAAE7B,MAAMY,GAAKmB,CAClCA,GAAQvB,GAAK,GACbV,KAAKE,MAAMY,GAAS,SAAJJ,EAElB,KAAiB,IAAVuB,GAAenB,EAAIgB,EAAE3B,OAAQW,IAAK,CACvC,GAAIJ,GAAIoB,EAAE5B,MAAMY,GAAKmB,CACrBA,GAAQvB,GAAK,GACbV,KAAKE,MAAMY,GAAS,SAAJJ,EAIlB,GAAc,IAAVuB,GAAenB,EAAIgB,EAAE3B,QAAU2B,IAAM9B,KACvC,KAAOc,EAAIgB,EAAE3B,OAAQW,IACnBd,KAAKE,MAAMY,GAAKgB,EAAE5B,MAAMY,EAM5B,OALAd,MAAKG,OAASS,KAAK2B,IAAIvC,KAAKG,OAAQW,GAEhCgB,IAAM9B,OACRA,KAAKstB,MAAO,GAEPttB,KAAKwC,SAId7C,GAAGV,UAAU6F,IAAM,SAAa1D,GAC9B,MAAOpB,MAAKwG,QAAQlD,KAAKlC,IAyC3BzB,GAAGV,UAAUqyC,YAAc,SAAqBlwC,EAAKS,GACnDA,EAAIyrB,KAAOlsB,EAAIksB,OAASttB,KAAKstB,KAC7BzrB,EAAI1B,OAASH,KAAKG,OAASiB,EAAIjB,MAG/B,KAAK,GADD8B,GAAQ,EACHC,EAAI,EAAGA,EAAIL,EAAI1B,OAAS,EAAG+B,IAAK,CAMvC,IAAK,GAHDC,GAASF,IAAU,GACnBG,EAAgB,SAARH,EACRI,EAAOzB,KAAKC,IAAIqB,EAAGd,EAAIjB,OAAS,GAC3BmC,EAAI1B,KAAK2B,IAAI,EAAGL,EAAIlC,KAAKG,OAAS,GAAImC,GAAKD,EAAMC,IAAK,CAC7D,GAAIxB,GAAIoB,EAAII,EACRR,EAAoB,EAAhB9B,KAAKE,MAAMY,GACfiB,EAAmB,EAAfX,EAAIlB,MAAMoC,GACd5B,EAAIoB,EAAIC,EAERC,EAAS,SAAJtB,CACTyB,GAAUA,GAAWzB,EAAI,SAAa,GAAM,EAC5CsB,EAAMA,EAAKI,EAAS,EACpBA,EAAa,SAALJ,EACRG,EAAUA,GAAUH,IAAO,IAAO,EAEpCH,EAAI3B,MAAMgC,GAAKE,EACfH,EAAQE,EAQV,MANc,KAAVF,EACFJ,EAAI3B,MAAMgC,GAAKD,EAEfJ,EAAI1B,SAGC0B,EAAIW,SAGb7C,GAAGV,UAAUsyC,UAAY,SAAmBnwC,EAAKS,GAC/CA,EAAIyrB,KAAOlsB,EAAIksB,OAASttB,KAAKstB,KAC7BzrB,EAAI1B,OAASH,KAAKG,OAASiB,EAAIjB,MAI/B,KAAK,GAFD8B,GAAQ,EACRS,EAAU,EACLR,EAAI,EAAGA,EAAIL,EAAI1B,OAAS,EAAG+B,IAAK,CAGvC,GAAIC,GAASO,CACbA,GAAU,CAGV,KAAK,GAFDN,GAAgB,SAARH,EACRI,EAAOzB,KAAKC,IAAIqB,EAAGd,EAAIjB,OAAS,GAC3BmC,EAAI1B,KAAK2B,IAAI,EAAGL,EAAIlC,KAAKG,OAAS,GAAImC,GAAKD,EAAMC,IAAK,CAC7D,GAAIxB,GAAIoB,EAAII,EACRR,EAAoB,EAAhB9B,KAAKE,MAAMY,GACfiB,EAAmB,EAAfX,EAAIlB,MAAMoC,GACd5B,EAAIoB,EAAIC,EAERC,EAAS,SAAJtB,CACTyB,GAAUA,GAAWzB,EAAI,SAAa,GAAM,EAC5CsB,EAAMA,EAAKI,EAAS,EACpBA,EAAa,SAALJ,EACRG,EAAUA,GAAUH,IAAO,IAAO,EAElCU,GAAWP,IAAW,GACtBA,GAAU,SAEZN,EAAI3B,MAAMgC,GAAKE,EACfH,EAAQE,EACRA,EAASO,EAQX,MANc,KAAVT,EACFJ,EAAI3B,MAAMgC,GAAKD,EAEfJ,EAAI1B,SAGC0B,EAAIW,SAGb7C,GAAGV,UAAUuQ,MAAQ,SAAepO,EAAKS,GACvC,GAAIkG,EAKJ,OAHEA,GADE/H,KAAKG,OAASiB,EAAIjB,OAAS,GACvBH,KAAKsxC,YAAYlwC,EAAKS,GAEtB7B,KAAKuxC,UAAUnwC,EAAKS,IAK9BlC,GAAGV,UAAUiC,IAAM,SAAaE,GAC9B,GAAIS,GAAM,GAAIlC,IAAG,KAEjB,OADAkC,GAAI3B,MAAQ,GAAIoB,OAAMtB,KAAKG,OAASiB,EAAIjB,QACjCH,KAAKwP,MAAMpO,EAAKS,IAIzBlC,GAAGV,UAAUmP,KAAO,SAAchN,GAChC,GAAqB,IAAjBpB,KAAKsV,KAAK,IAA4B,IAAhBlU,EAAIkU,KAAK,GAGjC,MAFAtV,MAAKE,MAAM,GAAK,EAChBF,KAAKG,OAAS,EACPH,IAGT,IAAIwxC,GAAOxxC,KAAKG,OACZsxC,EAAOrwC,EAAIjB,MAEfH,MAAKstB,KAAOlsB,EAAIksB,OAASttB,KAAKstB,KAC9BttB,KAAKG,OAASH,KAAKG,OAASiB,EAAIjB,OAChCH,KAAKE,MAAMF,KAAKG,OAAS,GAAK,CAE9B,KAAK,GAAI+B,GAAIlC,KAAKG,OAAS,EAAG+B,GAAK,EAAGA,IAAK,CAMzC,IAAK,GAHDD,GAAQ,EACRG,EAAQ,EACRC,EAAOzB,KAAKC,IAAIqB,EAAGuvC,EAAO,GACrBnvC,EAAI1B,KAAK2B,IAAI,EAAGL,EAAIsvC,EAAO,GAAIlvC,GAAKD,EAAMC,IAAK,CACtD,GAAIxB,GAAIoB,EAAII,EACRR,EAAI9B,KAAKE,MAAMY,GACfiB,EAAIX,EAAIlB,MAAMoC,GACd5B,EAAIoB,EAAIC,EAERC,EAAS,SAAJtB,CACTuB,IAAUvB,EAAI,SAAa,EAC3BsB,GAAMI,EACNA,EAAa,SAALJ,EACRC,GAASD,IAAO,GAElBhC,KAAKE,MAAMgC,GAAKE,EAChBpC,KAAKE,MAAMgC,EAAI,IAAMD,EACrBA,EAAQ,EAKV,IAAK,GADDA,GAAQ,EACHnB,EAAI,EAAGA,EAAId,KAAKG,OAAQW,IAAK,CACpC,GAAIO,GAAIrB,KAAKE,MAAMY,GAAKmB,CACxBjC,MAAKE,MAAMY,GAAS,SAAJO,EAChBY,EAAQZ,IAAM,GAGhB,MAAOrB,MAAKwC,SAGd7C,GAAGV,UAAUkH,MAAQ,SAAe/E,GAClClC,OAAsB,gBAARkC,GAId,KAAK,GADDa,GAAQ,EACHnB,EAAI,EAAGA,EAAId,KAAKG,OAAQW,IAAK,CACpC,GAAIO,GAAIrB,KAAKE,MAAMY,GAAKM,EACpBY,GAAU,SAAJX,IAA0B,SAARY,EAC5BA,KAAU,GACVA,GAAUZ,EAAI,SAAa,EAE3BY,GAASD,IAAO,GAChBhC,KAAKE,MAAMY,GAAU,SAALkB,EAQlB,MALc,KAAVC,IACFjC,KAAKE,MAAMY,GAAKmB,EAChBjC,KAAKG,UAGAH,MAGTL,GAAGV,UAAUkT,KAAO,SAAc/Q,GAChC,MAAOpB,MAAKwG,QAAQL,MAAM/E,IAI5BzB,GAAGV,UAAUsF,IAAM,WACjB,MAAOvE,MAAKkB,IAAIlB,OAIlBL,GAAGV,UAAUmT,KAAO,WAClB,MAAOpS,MAAKkB,IAAIlB,OAIlBL,GAAGV,UAAUuT,MAAQ,SAAeH,GAClCnT,OAAuB,gBAATmT,IAAqBA,GAAQ,EAC3C,IAAI3R,GAAI2R,EAAO,GACXhC,GAAKgC,EAAO3R,GAAK,GACjB4R,EAAa,WAAe,GAAK5R,GAAQ,GAAKA,CAElD,IAAU,IAANA,EAAS,CAEX,IAAK,GADDuB,GAAQ,EACHnB,EAAI,EAAGA,EAAId,KAAKG,OAAQW,IAAK,CACpC,GAAIyR,GAAWvS,KAAKE,MAAMY,GAAKwR,EAC3BvR,EAAKf,KAAKE,MAAMY,GAAKyR,GAAa7R,CACtCV,MAAKE,MAAMY,GAAKC,EAAIkB,EACpBA,EAAQsQ,IAAc,GAAK7R,EAEzBuB,IACFjC,KAAKE,MAAMY,GAAKmB,EAChBjC,KAAKG,UAIT,GAAU,IAANkQ,EAAS,CACX,IAAK,GAAIvP,GAAId,KAAKG,OAAS,EAAGW,GAAK,EAAGA,IACpCd,KAAKE,MAAMY,EAAIuP,GAAKrQ,KAAKE,MAAMY,EACjC,KAAK,GAAIA,GAAI,EAAGA,EAAIuP,EAAGvP,IACrBd,KAAKE,MAAMY,GAAK,CAClBd,MAAKG,QAAUkQ,EAGjB,MAAOrQ,MAAKwC,SAMd7C,GAAGV,UAAU6T,MAAQ,SAAeT,EAAMI,EAAMC,GAC9CxT,OAAuB,gBAATmT,IAAqBA,GAAQ,EAC3C,IAAIM,EAEFA,GADEF,GACGA,EAAQA,EAAO,IAAO,GAEvB,CAEN,IAAI/R,GAAI2R,EAAO,GACXhC,EAAIzP,KAAKC,KAAKwR,EAAO3R,GAAK,GAAIV,KAAKG,QACnCyS,EAAO,SAAc,WAAclS,GAAMA,EACzCmS,EAAcH,CAMlB,IAJAC,GAAKtC,EACLsC,EAAI/R,KAAK2B,IAAI,EAAGoQ,GAGZE,EAAa,CACf,IAAK,GAAI/R,GAAI,EAAGA,EAAIuP,EAAGvP,IACrB+R,EAAY3S,MAAMY,GAAKd,KAAKE,MAAMY,EACpC+R,GAAY1S,OAASkQ,EAGvB,GAAU,IAANA,OAEG,IAAIrQ,KAAKG,OAASkQ,EAAG,CAC1BrQ,KAAKG,QAAUkQ,CACf,KAAK,GAAIvP,GAAI,EAAGA,EAAId,KAAKG,OAAQW,IAC/Bd,KAAKE,MAAMY,GAAKd,KAAKE,MAAMY,EAAIuP,OAEjCrQ,MAAKE,MAAM,GAAK,EAChBF,KAAKG,OAAS,CAIhB,KAAK,GADD8B,GAAQ,EACHnB,EAAId,KAAKG,OAAS,EAAGW,GAAK,IAAgB,IAAVmB,GAAenB,GAAK6R,GAAI7R,IAAK,CACpE,GAAIoF,GAAOlG,KAAKE,MAAMY,EACtBd,MAAKE,MAAMY,GAAMmB,GAAU,GAAKvB,EAAOwF,IAASxF,EAChDuB,EAAQiE,EAAO0M,EAcjB,MAVIC,IAAyB,IAAV5Q,IACjB4Q,EAAY3S,MAAM2S,EAAY1S,UAAY8B,GAExB,IAAhBjC,KAAKG,SACPH,KAAKE,MAAM,GAAK,EAChBF,KAAKG,OAAS,GAGhBH,KAAKwC,QAEExC,MAITL,GAAGV,UAAU8T,KAAO,SAAcV,GAChC,MAAOrS,MAAKwG,QAAQgM,MAAMH,IAI5B1S,GAAGV,UAAUgU,KAAO,SAAcZ,GAChC,MAAOrS,MAAKwG,QAAQsM,MAAMT,IAI5B1S,GAAGV,UAAU8J,MAAQ,SAAevH,GAClCtC,OAAsB,gBAARsC,IAAoBA,GAAO,EACzC,IAAId,GAAIc,EAAM,GACV6O,GAAK7O,EAAMd,GAAK,GAChBsH,EAAI,GAAKtH,CAGb,IAAIV,KAAKG,QAAUkQ,EACjB,OAAO,CAIT,IAAIhP,GAAIrB,KAAKE,MAAMmQ,EAEnB,UAAUhP,EAAI2G,IAIhBrI,GAAGV,UAAUkU,OAAS,SAAgBd,GACpCnT,OAAuB,gBAATmT,IAAqBA,GAAQ,EAC3C,IAAI3R,GAAI2R,EAAO,GACXhC,GAAKgC,EAAO3R,GAAK,EAQrB,IANAxB,QAAQc,KAAKstB,KAAM,2CAET,IAAN5sB,GACF2P,IACFrQ,KAAKG,OAASS,KAAKC,IAAIwP,EAAGrQ,KAAKG,QAErB,IAANO,EAAS,CACX,GAAIkS,GAAO,SAAc,WAAclS,GAAMA,CAC7CV,MAAKE,MAAMF,KAAKG,OAAS,IAAMyS,EAGjC,MAAO5S,MAAKwC,SAId7C,GAAGV,UAAUmU,MAAQ,SAAef,GAClC,MAAOrS,MAAKwG,QAAQ2M,OAAOd,IAI7B1S,GAAGV,UAAU4J,MAAQ,SAAezH,GAElC,MADAlC,QAAsB,gBAARkC,IACVA,EAAM,EACDpB,KAAK2E,OAAOvD,GAGjBpB,KAAKstB,KACa,IAAhBttB,KAAKG,QAAgBH,KAAKE,MAAM,GAAKkB,GACvCpB,KAAKE,MAAM,GAAKkB,EAAMpB,KAAKE,MAAM,GACjCF,KAAKstB,MAAO,EACLttB,OAGTA,KAAKstB,MAAO,EACZttB,KAAK2E,MAAMvD,GACXpB,KAAKstB,MAAO,EACLttB,MAIFA,KAAKoG,OAAOhF,IAGrBzB,GAAGV,UAAUmH,OAAS,SAAgBhF,GACpCpB,KAAKE,MAAM,IAAMkB,CAGjB,KAAK,GAAIN,GAAI,EAAGA,EAAId,KAAKG,QAAUH,KAAKE,MAAMY,IAAM,SAAWA,IAC7Dd,KAAKE,MAAMY,IAAM,SACbA,IAAMd,KAAKG,OAAS,EACtBH,KAAKE,MAAMY,EAAI,GAAK,EAEpBd,KAAKE,MAAMY,EAAI,IAInB,OAFAd,MAAKG,OAASS,KAAK2B,IAAIvC,KAAKG,OAAQW,EAAI,GAEjCd,MAITL,GAAGV,UAAU0F,MAAQ,SAAevD,GAElC,GADAlC,OAAsB,gBAARkC,IACVA,EAAM,EACR,MAAOpB,MAAK6I,OAAOzH,EAErB,IAAIpB,KAAKstB,KAIP,MAHAttB,MAAKstB,MAAO,EACZttB,KAAK6I,MAAMzH,GACXpB,KAAKstB,MAAO,EACLttB,IAGTA,MAAKE,MAAM,IAAMkB,CAGjB,KAAK,GAAIN,GAAI,EAAGA,EAAId,KAAKG,QAAUH,KAAKE,MAAMY,GAAK,EAAGA,IACpDd,KAAKE,MAAMY,IAAM,SACjBd,KAAKE,MAAMY,EAAI,IAAM,CAGvB,OAAOd,MAAKwC,SAGd7C,GAAGV,UAAUoU,KAAO,SAAcjS,GAChC,MAAOpB,MAAKwG,QAAQqC,MAAMzH,IAG5BzB,GAAGV,UAAUqU,KAAO,SAAclS,GAChC,MAAOpB,MAAKwG,QAAQ7B,MAAMvD,IAG5BzB,GAAGV,UAAUsU,KAAO,WAGlB,MAFAvT,MAAKstB,MAAO,EAELttB,MAGTL,GAAGV,UAAU0J,IAAM,WACjB,MAAO3I,MAAKwG,QAAQ+M,QAGtB5T,GAAGV,UAAUuU,aAAe,SAAsBpS,EAAKF,EAAKkD,GAE1D,GACItD,GADAH,EAAMS,EAAIjB,OAASiE,CAEvB,IAAIpE,KAAKE,MAAMC,OAASQ,EAAK,CAE3B,IAAK,GADD0H,GAAI,GAAI/G,OAAMX,GACTG,EAAI,EAAGA,EAAId,KAAKG,OAAQW,IAC/BuH,EAAEvH,GAAKd,KAAKE,MAAMY,EACpBd,MAAKE,MAAQmI,MAEbvH,GAAId,KAAKG,MAKX,KADAH,KAAKG,OAASS,KAAK2B,IAAIvC,KAAKG,OAAQQ,GAC7BG,EAAId,KAAKG,OAAQW,IACtBd,KAAKE,MAAMY,GAAK,CAGlB,KAAK,GADDmB,GAAQ,EACHnB,EAAI,EAAGA,EAAIM,EAAIjB,OAAQW,IAAK,CACnC,GAAIO,GAAIrB,KAAKE,MAAMY,EAAIsD,GAASnC,EAC5BmD,EAAQhE,EAAIlB,MAAMY,GAAKI,CAC3BG,IAAa,SAAR+D,EACLnD,GAASZ,GAAK,KAAQ+D,EAAQ,SAAa,GAC3CpF,KAAKE,MAAMY,EAAIsD,GAAa,SAAJ/C,EAE1B,KAAOP,EAAId,KAAKG,OAASiE,EAAOtD,IAAK,CACnC,GAAIO,GAAIrB,KAAKE,MAAMY,EAAIsD,GAASnC,CAChCA,GAAQZ,GAAK,GACbrB,KAAKE,MAAMY,EAAIsD,GAAa,SAAJ/C,EAG1B,GAAc,IAAVY,EACF,MAAOjC,MAAKwC,OAGdtD,QAAO+C,QACPA,EAAQ,CACR,KAAK,GAAInB,GAAI,EAAGA,EAAId,KAAKG,OAAQW,IAAK,CACpC,GAAIO,IAAKrB,KAAKE,MAAMY,GAAKmB,CACzBA,GAAQZ,GAAK,GACbrB,KAAKE,MAAMY,GAAS,SAAJO,EAIlB,MAFArB,MAAKstB,MAAO,EAELttB,KAAKwC,SAGd7C,GAAGV,UAAUwU,SAAW,SAAkBrS,EAAKsS,GAC7C,GAAItP,GAAQpE,KAAKG,OAASiB,EAAIjB,OAE1B2B,EAAI9B,KAAKwG,QACTzE,EAAIX,EAGJuS,EAAM5R,EAAE7B,MAAM6B,EAAE5B,OAAS,GACzByT,EAAU5T,KAAKoI,WAAWuL,EAC9BvP,GAAQ,GAAKwP,EACC,IAAVxP,IACFrC,EAAIA,EAAEgR,KAAK3O,GACXtC,EAAE0Q,MAAMpO,GACRuP,EAAM5R,EAAE7B,MAAM6B,EAAE5B,OAAS,GAI3B,IACI6H,GADAjE,EAAIjC,EAAE3B,OAAS4B,EAAE5B,MAGrB,IAAa,QAATuT,EAAgB,CAClB1L,EAAI,GAAIrI,IAAG,MACXqI,EAAE7H,OAAS4D,EAAI,EACfiE,EAAE9H,MAAQ,GAAIoB,OAAM0G,EAAE7H,OACtB,KAAK,GAAIW,GAAI,EAAGA,EAAIkH,EAAE7H,OAAQW,IAC5BkH,EAAE9H,MAAMY,GAAK,EAGjB,GAAI+S,GAAO/R,EAAE0E,QAAQgN,aAAazR,EAAG,EAAGgC,EACnC8P,GAAKyZ,OACRxrB,EAAI+R,EACA7L,IACFA,EAAE9H,MAAM6D,GAAK,GAGjB,KAAK,GAAIzB,GAAIyB,EAAI,EAAGzB,GAAK,EAAGA,IAAK,CAC/B,GAAIwR,GAA6B,SAAxBhS,EAAE5B,MAAM6B,EAAE5B,OAASmC,GAAiBR,EAAE5B,MAAM6B,EAAE5B,OAASmC,EAAI,EAOpE,KAHAwR,EAAKlT,KAAKC,IAAKiT,EAAKH,EAAO,EAAG,UAE9B7R,EAAE0R,aAAazR,EAAG+R,EAAIxR,GACfR,EAAEwrB,MACPxZ,IACAhS,EAAEwrB,MAAO,EACTxrB,EAAE0R,aAAazR,EAAG,EAAGO,GACH,IAAdR,EAAEwT,KAAK,KACTxT,EAAEwrB,MAAQxrB,EAAEwrB,KAEZtlB,KACFA,EAAE9H,MAAMoC,GAAKwR,GASjB,MAPI9L,IACFA,EAAExF,QACJV,EAAEU,QAGW,QAATkR,GAA4B,IAAVtP,GACpBtC,EAAEgR,MAAM1O,IACDQ,IAAKoD,EAAIA,EAAI,KAAM/B,IAAKnE,IAGnCnC,GAAGV,UAAU8U,OAAS,SAAgB3S,EAAKsS,GAGzC,GAFAxU,OAAuB,IAAhBkC,EAAIkU,KAAK,IAEZtV,KAAKstB,OAASlsB,EAAIksB,KAAM,CAC1B,GACI1oB,GACAqB,EAFA8B,EAAM/H,KAAKmJ,MAAM4K,OAAO3S,EAAKsS,EAOjC,OAJa,QAATA,IACF9O,EAAMmD,EAAInD,IAAIuE,OACH,QAATuK,IACFzN,EAA0B,IAApB8B,EAAI9B,IAAIqP,KAAK,GAAWvN,EAAI9B,IAAM7E,EAAI0D,IAAIiD,EAAI9B,OAEpDrB,IAAKA,EACLqB,IAAKA,GAEF,IAAKjG,KAAKstB,MAAQlsB,EAAIksB,KAAM,CACjC,GACI1oB,GADAmD,EAAM/H,KAAK+T,OAAO3S,EAAI+H,MAAOuK,EAIjC,OAFa,QAATA,IACF9O,EAAMmD,EAAInD,IAAIuE,QACPvE,IAAKA,EAAKqB,IAAK8B,EAAI9B,KACvB,MAAIjG,MAAKstB,MAAQlsB,EAAIksB,KACnBttB,KAAKmJ,MAAM4K,OAAO3S,EAAI+H,MAAOuK,GAMlCtS,EAAIjB,OAASH,KAAKG,QAAUH,KAAKqF,IAAIjE,GAAO,GACrCwD,IAAK,GAAIjF,IAAG,GAAIsG,IAAKjG,MAGb,IAAfoB,EAAIjB,OACO,QAATuT,GACO9O,IAAK5E,KAAKiU,KAAK7S,EAAIlB,MAAM,IAAK+F,IAAK,MAC5B,QAATyN,GACE9O,IAAK,KAAMqB,IAAK,GAAItG,IAAGK,KAAKoH,KAAKhG,EAAIlB,MAAM,OAEpD0E,IAAK5E,KAAKiU,KAAK7S,EAAIlB,MAAM,IACzB+F,IAAK,GAAItG,IAAGK,KAAKoH,KAAKhG,EAAIlB,MAAM,MAI7BF,KAAKyT,SAASrS,EAAKsS,IAI5B/T,GAAGV,UAAU2F,IAAM,SAAaxD,GAC9B,MAAOpB,MAAK+T,OAAO3S,EAAK,OAAOwD,KAIjCjF,GAAGV,UAAUgH,IAAM,SAAa7E,GAC9B,MAAOpB,MAAK+T,OAAO3S,EAAK,OAAO6E,KAIjCtG,GAAGV,UAAUiV,SAAW,SAAkB9S,GACxC,GAAI+S,GAAKnU,KAAK+T,OAAO3S,EAGrB,IAAuB,IAAnB+S,EAAGlO,IAAIqP,KAAK,GACd,MAAOnB,GAAGvP,GAEZ,IAAIqB,GAAMkO,EAAGvP,IAAI0oB,KAAOnZ,EAAGlO,IAAI3C,KAAKlC,GAAO+S,EAAGlO,IAE1CmO,EAAOhT,EAAI6R,KAAK,GAChB5O,EAAKjD,EAAI6G,MAAM,GACf5C,EAAMY,EAAIZ,IAAI+O,EAGlB,OAAI/O,GAAM,GAAY,IAAPhB,GAAoB,IAARgB,EAClB8O,EAAGvP,IAGLuP,EAAGvP,IAAI0oB,KAAOnZ,EAAGvP,IAAID,MAAM,GAAKwP,EAAGvP,IAAIiE,MAAM,IAGtDlJ,GAAGV,UAAUmI,KAAO,SAAchG,GAChClC,OAAOkC,GAAO,SAId,KAAK,GAHD+B,IAAK,GAAK,IAAM/B,EAEhBiT,EAAM,EACDvT,EAAId,KAAKG,OAAS,EAAGW,GAAK,EAAGA,IACpCuT,GAAOlR,EAAIkR,EAAMrU,KAAKE,MAAMY,IAAMM,CAEpC,OAAOiT,IAIT1U,GAAGV,UAAUoI,MAAQ,SAAejG,GAClClC,OAAOkC,GAAO,SAGd,KAAK,GADDa,GAAQ,EACHnB,EAAId,KAAKG,OAAS,EAAGW,GAAK,EAAGA,IAAK,CACzC,GAAIO,GAAIrB,KAAKE,MAAMY,GAAa,SAARmB,CACxBjC,MAAKE,MAAMY,GAAMO,EAAID,EAAO,EAC5Ba,EAAQZ,EAAID,EAGd,MAAOpB,MAAKwC,SAGd7C,GAAGV,UAAUgV,KAAO,SAAc7S,GAChC,MAAOpB,MAAKwG,QAAQa,MAAMjG,IAG5BzB,GAAGV,UAAUqV,KAAO,SAAcnR,GAChCjE,QAAQiE,EAAEmqB,MACVpuB,OAAqB,IAAdiE,EAAEmS,KAAK,GAEd,IAAIvS,GAAI/C,KACJgD,EAAIG,EAAEqD,OAGRzD,GADEA,EAAEuqB,KACAvqB,EAAEkD,IAAI9C,GAENJ,EAAEyD,OAYR,KATA,GAAI+N,GAAI,GAAI5U,IAAG,GACX6U,EAAI,GAAI7U,IAAG,GAGX8U,EAAI,GAAI9U,IAAG,GACX+U,EAAI,GAAI/U,IAAG,GAEXgV,EAAI,EAED5R,EAAE6R,UAAY5R,EAAE4R,UACrB7R,EAAE+P,MAAM,GACR9P,EAAE8P,MAAM,KACN6B,CAMJ,KAHA,GAAIE,GAAK7R,EAAEwD,QACPsO,EAAK/R,EAAEyD,QAEU,IAAdzD,EAAEuS,KAAK,IAAU,CACtB,KAAOvS,EAAE6R,UACP7R,EAAE+P,MAAM,GACJyB,EAAEK,UAAYJ,EAAEI,UAClBL,EAAEzB,MAAM,GACR0B,EAAE1B,MAAM,KAERyB,EAAEpK,KAAK0K,GAAI/B,MAAM,GACjB0B,EAAElR,KAAKwR,GAAIhC,MAAM,GAIrB,MAAO9P,EAAE4R,UACP5R,EAAE8P,MAAM,GACJ2B,EAAEG,UAAYF,EAAEE,UAClBH,EAAE3B,MAAM,GACR4B,EAAE5B,MAAM,KAER2B,EAAEtK,KAAK0K,GAAI/B,MAAM,GACjB4B,EAAEpR,KAAKwR,GAAIhC,MAAM,GAIjB/P,GAAEsC,IAAIrC,IAAM,GACdD,EAAEO,KAAKN,GACPuR,EAAEjR,KAAKmR,GACPD,EAAElR,KAAKoR,KAEP1R,EAAEM,KAAKP,GACP0R,EAAEnR,KAAKiR,GACPG,EAAEpR,KAAKkR,IAIX,OACE1S,EAAG2S,EACH1S,EAAG2S,EACHQ,IAAKlS,EAAEwP,MAAMmC,KAOjBhV,GAAGV,UAAUwF,OAAS,SAAgBtB,GACpCjE,QAAQiE,EAAEmqB,MACVpuB,OAAqB,IAAdiE,EAAEmS,KAAK,GAEd,IAAIxT,GAAI9B,KACJ+B,EAAIoB,EAAEqD,OAGR1E,GADEA,EAAEwrB,KACAxrB,EAAEmE,IAAI9C,GAENrB,EAAE0E,OAOR,KALA,GAAI2O,GAAK,GAAIxV,IAAG,GACZyV,EAAK,GAAIzV,IAAG,GAEZ0V,EAAQtT,EAAEyE,QAEP1E,EAAEwT,KAAK,GAAK,GAAKvT,EAAEuT,KAAK,GAAK,GAAG,CACrC,KAAOxT,EAAE8S,UACP9S,EAAEgR,MAAM,GACJqC,EAAGP,SACLO,EAAGrC,MAAM,GAETqC,EAAGhL,KAAKkL,GAAOvC,MAAM,EAEzB,MAAO/Q,EAAE6S,UACP7S,EAAE+Q,MAAM,GACJsC,EAAGR,SACLQ,EAAGtC,MAAM,GAETsC,EAAGjL,KAAKkL,GAAOvC,MAAM,EAErBhR,GAAEuD,IAAItD,IAAM,GACdD,EAAEwB,KAAKvB,GACPoT,EAAG7R,KAAK8R,KAERrT,EAAEuB,KAAKxB,GACPsT,EAAG9R,KAAK6R,IAGZ,MAAkB,KAAdrT,EAAEwT,KAAK,GACFH,EAEAC,GAGXzV,GAAGV,UAAUiW,IAAM,SAAa9T,GAC9B,GAAqB,IAAjBpB,KAAKsV,KAAK,GACZ,MAAOlU,GAAIoF,OACb,IAAoB,IAAhBpF,EAAIkU,KAAK,GACX,MAAOtV,MAAKwG,OAEd,IAAI1E,GAAI9B,KAAKwG,QACTzE,EAAIX,EAAIoF,OACZ1E,GAAEwrB,MAAO,EACTvrB,EAAEurB,MAAO,CAGT,KAAK,GAAIlpB,GAAQ,EAAGtC,EAAE8S,UAAY7S,EAAE6S,SAAUxQ,IAC5CtC,EAAEgR,MAAM,GACR/Q,EAAE+Q,MAAM,EAGV,QAAG,CACD,KAAOhR,EAAE8S,UACP9S,EAAEgR,MAAM,EACV,MAAO/Q,EAAE6S,UACP7S,EAAE+Q,MAAM,EAEV,IAAIpS,GAAIoB,EAAEuD,IAAItD,EACd,IAAIrB,EAAI,EAAG,CAET,GAAI2H,GAAIvG,CACRA,GAAIC,EACJA,EAAIsG,MACC,IAAU,IAAN3H,GAAyB,IAAdqB,EAAEuT,KAAK,GAC3B,KAGFxT,GAAEwB,KAAKvB,GAGT,MAAOA,GAAEyQ,MAAMpO,IAIjBzE,GAAGV,UAAUsW,KAAO,SAAcnU,GAChC,MAAOpB,MAAKsU,KAAKlT,GAAKU,EAAEmE,IAAI7E,IAG9BzB,GAAGV,UAAU2V,OAAS,WACpB,MAA+B,MAAP,EAAhB5U,KAAKE,MAAM,KAGrBP,GAAGV,UAAU+V,MAAQ,WACnB,MAA+B,MAAP,EAAhBhV,KAAKE,MAAM,KAIrBP,GAAGV,UAAUgJ,MAAQ,SAAe7G,GAClC,MAAOpB,MAAKE,MAAM,GAAKkB,GAIzBzB,GAAGV,UAAUuW,MAAQ,SAAehU,GAClCtC,OAAsB,gBAARsC,GACd,IAAId,GAAIc,EAAM,GACV6O,GAAK7O,EAAMd,GAAK,GAChBsH,EAAI,GAAKtH,CAGb,IAAIV,KAAKG,QAAUkQ,EAAG,CACpB,IAAK,GAAIvP,GAAId,KAAKG,OAAQW,EAAIuP,EAAI,EAAGvP,IACnCd,KAAKE,MAAMY,GAAK,CAGlB,OAFAd,MAAKE,MAAMmQ,IAAMrI,EACjBhI,KAAKG,OAASkQ,EAAI,EACXrQ,KAKT,IAAK,GADDiC,GAAQ+F,EACHlH,EAAIuP,EAAa,IAAVpO,GAAenB,EAAId,KAAKG,OAAQW,IAAK,CACnD,GAAIO,GAAIrB,KAAKE,MAAMY,EACnBO,IAAKY,EACLA,EAAQZ,IAAM,GACdA,GAAK,SACLrB,KAAKE,MAAMY,GAAKO,EAMlB,MAJc,KAAVY,IACFjC,KAAKE,MAAMY,GAAKmB,EAChBjC,KAAKG,UAEAH,MAGTL,GAAGV,UAAUqW,KAAO,SAAclU,GAChC,GAAIksB,GAAOlsB,EAAM,CAIjB,IAHIksB,IACFlsB,GAAOA,GAELpB,KAAKstB,OAASA,EAChB,QACG,KAAKttB,KAAKstB,MAAQA,EACrB,MAAO,EAETlsB,IAAO,SACPpB,KAAKwC,OAEL,IAAIuF,EACJ,IAAI/H,KAAKG,OAAS,EAChB4H,EAAM,MACD,CACL,GAAI1G,GAAIrB,KAAKE,MAAM,EACnB6H,GAAM1G,IAAMD,EAAM,EAAIC,EAAID,KAAW,EAIvC,MAFIpB,MAAKstB,OACPvlB,GAAOA,GACFA,GAOTpI,GAAGV,UAAUoG,IAAM,SAAajE,GAC9B,GAAIpB,KAAKstB,OAASlsB,EAAIksB,KACpB,QACG,KAAKttB,KAAKstB,MAAQlsB,EAAIksB,KACzB,MAAO,EAET,IAAIvlB,GAAM/H,KAAKyV,KAAKrU,EACpB,OAAIpB,MAAKstB,MACCvlB,EAEDA,GAIXpI,GAAGV,UAAUwW,KAAO,SAAcrU,GAEhC,GAAIpB,KAAKG,OAASiB,EAAIjB,OACpB,MAAO,EACJ,IAAIH,KAAKG,OAASiB,EAAIjB,OACzB,QAGF,KAAK,GADD4H,GAAM,EACDjH,EAAId,KAAKG,OAAS,EAAGW,GAAK,EAAGA,IAAK,CACzC,GAAIgB,GAAI9B,KAAKE,MAAMY,GACfiB,EAAIX,EAAIlB,MAAMY,EAElB,IAAIgB,IAAMC,EAAV,CAEID,EAAIC,EACNgG,KACOjG,EAAIC,IACXgG,EAAM,EACR,QAEF,MAAOA,IAOTpI,GAAGS,IAAM,SAAagB,GACpB,MAAO,IAAI0C,KAAI1C,IAGjBzB,GAAGV,UAAUkX,MAAQ,SAAeC,GAGlC,MAFAlX,SAAQc,KAAKI,IAAK,yCAClBlB,QAAQc,KAAKstB,KAAM,iCACZlX,EAAIC,UAAUrW,MAAMsW,UAAUF,IAGvCzW,GAAGV,UAAUsX,QAAU,WAErB,MADArX,QAAOc,KAAKI,IAAK,wDACVJ,KAAKI,IAAIoW,YAAYxW,OAG9BL,GAAGV,UAAUqX,UAAY,SAAmBF,GAE1C,MADApW,MAAKI,IAAMgW,EACJpW,MAGTL,GAAGV,UAAUwX,SAAW,SAAkBL,GAExC,MADAlX,SAAQc,KAAKI,IAAK,yCACXJ,KAAKsW,UAAUF,IAGxBzW,GAAGV,UAAUyX,OAAS,SAAgBtV,GAEpC,MADAlC,QAAOc,KAAKI,IAAK,sCACVJ,KAAKI,IAAIgK,IAAIpK,KAAMoB,IAG5BzB,GAAGV,UAAU0X,QAAU,SAAiBvV,GAEtC,MADAlC,QAAOc,KAAKI,IAAK,uCACVJ,KAAKI,IAAI+J,KAAKnK,KAAMoB,IAG7BzB,GAAGV,UAAU2X,OAAS,SAAgBxV,GAEpC,MADAlC,QAAOc,KAAKI,IAAK,sCACVJ,KAAKI,IAAI0E,IAAI9E,KAAMoB,IAG5BzB,GAAGV,UAAU4X,QAAU,SAAiBzV,GAEtC,MADAlC,QAAOc,KAAKI,IAAK,uCACVJ,KAAKI,IAAIkD,KAAKtD,KAAMoB,IAG7BzB,GAAGV,UAAU6X,OAAS,SAAgB1V,GAEpC,MADAlC,QAAOc,KAAKI,IAAK,sCACVJ,KAAKI,IAAI2W,IAAI/W,KAAMoB,IAG5BzB,GAAGV,UAAU+X,OAAS,SAAgB5V,GAGpC,MAFAlC,QAAOc,KAAKI,IAAK,sCACjBJ,KAAKI,IAAI6W,SAASjX,KAAMoB,GACjBpB,KAAKI,IAAIc,IAAIlB,KAAMoB,IAG5BzB,GAAGV,UAAUiY,QAAU,SAAiB9V,GAGtC,MAFAlC,QAAOc,KAAKI,IAAK,sCACjBJ,KAAKI,IAAI6W,SAASjX,KAAMoB,GACjBpB,KAAKI,IAAIgO,KAAKpO,KAAMoB,IAG7BzB,GAAGV,UAAUkY,OAAS,WAGpB,MAFAjY,QAAOc,KAAKI,IAAK,sCACjBJ,KAAKI,IAAIgX,SAASpX,MACXA,KAAKI,IAAImE,IAAIvE,OAGtBL,GAAGV,UAAUoY,QAAU,WAGrB,MAFAnY,QAAOc,KAAKI,IAAK,uCACjBJ,KAAKI,IAAIgX,SAASpX,MACXA,KAAKI,IAAIgS,KAAKpS,OAIvBL,GAAGV,UAAUqY,QAAU,WAGrB,MAFApY,QAAOc,KAAKI,IAAK,uCACjBJ,KAAKI,IAAIgX,SAASpX,MACXA,KAAKI,IAAImX,KAAKvX,OAGvBL,GAAGV,UAAUuY,QAAU,WAGrB,MAFAtY,QAAOc,KAAKI,IAAK,uCACjBJ,KAAKI,IAAIgX,SAASpX,MACXA,KAAKI,IAAImV,KAAKvV,OAIvBL,GAAGV,UAAUwY,OAAS,WAGpB,MAFAvY,QAAOc,KAAKI,IAAK,sCACjBJ,KAAKI,IAAIgX,SAASpX,MACXA,KAAKI,IAAI+I,IAAInJ,OAGtBL,GAAGV,UAAUyY,OAAS,SAAgBtW,GAGpC,MAFAlC,QAAOc,KAAKI,MAAQgB,EAAIhB,IAAK,qBAC7BJ,KAAKI,IAAIgX,SAASpX,MACXA,KAAKI,IAAIiG,IAAIrG,KAAMoB,GAI5B,IAAIuW,IACFC,KAAM,KACNC,KAAM,KACNC,KAAM,KACNC,OAAQ,KAcV9U,QAAOhE,UAAUuE,KAAO,WACtB,GAAID,GAAM,GAAI5D,IAAG,KAEjB,OADA4D,GAAIrD,MAAQ,GAAIoB,OAAMV,KAAKiF,KAAK7F,KAAKoD,EAAI,KAClCG,GAGTN,OAAOhE,UAAU+Y,QAAU,SAAiB5W,GAG1C,GACI6W,GADAvX,EAAIU,CAGR,GACEpB,MAAKkY,MAAMxX,EAAGV,KAAKuD,KACnB7C,EAAIV,KAAKmY,MAAMzX,GACfA,EAAIA,EAAEyJ,KAAKnK,KAAKuD,KAChB0U,EAAOvX,EAAEa,kBACF0W,EAAOjY,KAAKoD,EAErB,IAAIiC,GAAM4S,EAAOjY,KAAKoD,KAAS1C,EAAE+U,KAAKzV,KAAKmD,EAU3C,OATY,KAARkC,GACF3E,EAAER,MAAM,GAAK,EACbQ,EAAEP,OAAS,GACFkF,EAAM,EACf3E,EAAE4C,KAAKtD,KAAKmD,GAEZzC,EAAE8B,QAGG9B,GAGTuC,OAAOhE,UAAUiZ,MAAQ,SAAeE,EAAOvW,GAC7CuW,EAAMtF,MAAM9S,KAAKoD,EAAG,EAAGvB,IAGzBoB,OAAOhE,UAAUkZ,MAAQ,SAAe/W,GACtC,MAAOA,GAAIgN,KAAKpO,KAAKkC,IASvB5C,SAASmE,KAAMR,QAEfQ,KAAKxE,UAAUiZ,MAAQ,SAAeE,EAAOC,GAK3C,IAAK,GAHDzF,GAAO,QAEP0F,EAAS1X,KAAKC,IAAIuX,EAAMjY,OAAQ,GAC3BW,EAAI,EAAGA,EAAIwX,EAAQxX,IAC1BuX,EAAOnY,MAAMY,GAAKsX,EAAMlY,MAAMY,EAGhC,IAFAuX,EAAOlY,OAASmY,EAEZF,EAAMjY,QAAU,EAGlB,MAFAiY,GAAMlY,MAAM,GAAK,OACjBkY,EAAMjY,OAAS,EAKjB,IAAIoY,GAAOH,EAAMlY,MAAM,EACvBmY,GAAOnY,MAAMmY,EAAOlY,UAAYoY,EAAO3F,CAEvC,KAAK,GAAI9R,GAAI,GAAIA,EAAIsX,EAAMjY,OAAQW,IAAK,CACtC,GAAI0X,GAAOJ,EAAMlY,MAAMY,EACvBsX,GAAMlY,MAAMY,EAAI,KAAQ0X,EAAO5F,IAAS,EAAM2F,IAAS,GACvDA,EAAOC,EAETJ,EAAMlY,MAAMY,EAAI,IAAMyX,IAAS,GAC/BH,EAAMjY,QAAU,GAGlBsD,KAAKxE,UAAUkZ,MAAQ,SAAe/W,GAEpCA,EAAIlB,MAAMkB,EAAIjB,QAAU,EACxBiB,EAAIlB,MAAMkB,EAAIjB,OAAS,GAAK,EAC5BiB,EAAIjB,QAAU,CAKd,KAAK,GAFDoI,GACAvG,EAAK,EACAlB,EAAI,EAAGA,EAAIM,EAAIjB,OAAQW,IAAK,CACnC,GAAIO,GAAID,EAAIlB,MAAMY,EAClByH,GAAS,GAAJlH,EACLW,GAAU,IAAJX,EACNkH,GAAOvG,EAAK,SAAa,EACzBA,GAAM,SAENZ,EAAIlB,MAAMY,GAAKkB,EAEfA,EAAKuG,EASP,MALkC,KAA9BnH,EAAIlB,MAAMkB,EAAIjB,OAAS,KACzBiB,EAAIjB,SAC8B,IAA9BiB,EAAIlB,MAAMkB,EAAIjB,OAAS,IACzBiB,EAAIjB,UAEDiB,GAST9B,SAASqE,KAAMV,QAQf3D,SAASsE,KAAMX,QASf3D,SAASuE,OAAQZ,QAEjBY,OAAO5E,UAAUkZ,MAAQ,SAAe/W,GAGtC,IAAK,GADDa,GAAQ,EACHnB,EAAI,EAAGA,EAAIM,EAAIjB,OAAQW,IAAK,CACnC,GAAIyH,GAAoB,GAAfnH,EAAIlB,MAAMY,GAAYmB,EAC3BD,EAAU,SAALuG,CACTA,MAAQ,GAERnH,EAAIlB,MAAMY,GAAKkB,EACfC,EAAQsG,EAIV,MAFc,KAAVtG,IACFb,EAAIlB,MAAMkB,EAAIjB,UAAY8B,GACrBb,GAITzB,GAAGsE,OAAS,QAASD,OAAMd,GAEzB,GAAIyU,EAAOzU,GACT,MAAOyU,GAAOzU,EAEhB,IAAIc,MACJ,IAAa,SAATd,EACFc,MAAQ,GAAIP,UACT,IAAa,SAATP,EACPc,MAAQ,GAAIL,UACT,IAAa,SAATT,EACPc,MAAQ,GAAIJ,UACT,IAAa,WAATV,EAGP,KAAM,IAAI7D,OAAM,iBAAmB6D,EAFnCc,OAAQ,GAAIH,QAKd,MAFA8T,GAAOzU,GAAQc,MAERA,OAiBTF,IAAI7E,UAAUmY,SAAW,SAAkBtV,GACzC5C,QAAQ4C,EAAEwrB,KAAM,iCAChBpuB,OAAO4C,EAAE1B,IAAK,oCAGhB0D,IAAI7E,UAAUgY,SAAW,SAAkBnV,EAAGC,GAC5C7C,QAAQ4C,EAAEwrB,OAASvrB,EAAEurB,KAAM,iCAC3BpuB,OAAO4C,EAAE1B,KAAO0B,EAAE1B,MAAQ2B,EAAE3B,IACrB,oCAGT0D,IAAI7E,UAAUqF,KAAO,SAAcxC,GACjC,MAAI9B,MAAKgE,MACAhE,KAAKgE,MAAMgU,QAAQlW,GAAGwU,UAAUtW,MAClC8B,EAAEmE,IAAIjG,KAAK+D,GAAGuS,UAAUtW,OAGjC8D,IAAI7E,UAAUkK,IAAM,SAAarH,GAC/B,GAAIpB,GAAIoB,EAAE0E,OAEV,OADA9F,GAAE4sB,MAAQ5sB,EAAE4sB,KACL5sB,EAAEyJ,KAAKnK,KAAK+D,GAAGuS,UAAUtW,OAGlC8D,IAAI7E,UAAUmL,IAAM,SAAatI,EAAGC,GAClC/B,KAAKiX,SAASnV,EAAGC,EAEjB,IAAIgG,GAAMjG,EAAEsI,IAAIrI,EAGhB,OAFIgG,GAAI1C,IAAIrF,KAAK+D,IAAM,GACrBgE,EAAIzE,KAAKtD,KAAK+D,GACTgE,EAAIuO,UAAUtW,OAGvB8D,IAAI7E,UAAUkL,KAAO,SAAcrI,EAAGC,GACpC/B,KAAKiX,SAASnV,EAAGC,EAEjB,IAAIgG,GAAMjG,EAAEqI,KAAKpI,EAGjB,OAFIgG,GAAI1C,IAAIrF,KAAK+D,IAAM,GACrBgE,EAAIzE,KAAKtD,KAAK+D,GACTgE,GAGTjE,IAAI7E,UAAU6F,IAAM,SAAahD,EAAGC,GAClC/B,KAAKiX,SAASnV,EAAGC,EAEjB,IAAIgG,GAAMjG,EAAEgD,IAAI/C,EAGhB,OAFIgG,GAAIuN,KAAK,GAAK,GAChBvN,EAAIoC,KAAKnK,KAAK+D,GACTgE,EAAIuO,UAAUtW,OAGvB8D,IAAI7E,UAAUqE,KAAO,SAAcxB,EAAGC,GACpC/B,KAAKiX,SAASnV,EAAGC,EAEjB,IAAIgG,GAAMjG,EAAEwB,KAAKvB,EAGjB,OAFIgG,GAAIuN,KAAK,GAAK,GAChBvN,EAAIoC,KAAKnK,KAAK+D,GACTgE,GAGTjE,IAAI7E,UAAU8X,IAAM,SAAajV,EAAGV,GAElC,MADApB,MAAKoX,SAAStV,GACP9B,KAAKsE,KAAKxC,EAAEiR,KAAK3R,KAG1B0C,IAAI7E,UAAUmP,KAAO,SAActM,EAAGC,GAEpC,MADA/B,MAAKiX,SAASnV,EAAGC,GACV/B,KAAKsE,KAAKxC,EAAEsM,KAAKrM,KAG1B+B,IAAI7E,UAAUiC,IAAM,SAAaY,EAAGC,GAElC,MADA/B,MAAKiX,SAASnV,EAAGC,GACV/B,KAAKsE,KAAKxC,EAAEZ,IAAIa,KAGzB+B,IAAI7E,UAAUmT,KAAO,SAActQ,GACjC,MAAO9B,MAAKoO,KAAKtM,EAAGA,IAGtBgC,IAAI7E,UAAUsF,IAAM,SAAazC,GAC/B,MAAO9B,MAAKkB,IAAIY,EAAGA,IAGrBgC,IAAI7E,UAAUsY,KAAO,SAAczV,GACjC,GAAkB,IAAdA,EAAEwT,KAAK,GACT,MAAOxT,GAAE0E,OAEX,IAAIiS,GAAOzY,KAAK+D,EAAEkE,MAAM,EAIxB,IAHA/I,OAAOuZ,EAAO,IAAM,GAGP,IAATA,EAAY,CACd,GAAIpS,GAAMrG,KAAK+D,EAAEqG,IAAI,GAAIzK,IAAG,IAAImT,MAAM,GAClCpS,EAAIV,KAAKqG,IAAIvE,EAAGuE,EACpB,OAAO3F,GAQT,IAFA,GAAIsH,GAAIhI,KAAK+D,EAAEuP,KAAK,GAChBjD,EAAI,EACa,IAAdrI,EAAEsN,KAAK,IAA2B,IAAftN,EAAEC,MAAM,IAChCoI,IACArI,EAAE8K,MAAM,EAEV5T,QAAqB,IAAd8I,EAAEsN,KAAK,GAEd,IAAIoD,GAAM,GAAI/Y,IAAG,GAAGwW,MAAMnW,MACtB2Y,EAAOD,EAAIjB,SAIXmB,EAAO5Y,KAAK+D,EAAEuP,KAAK,GAAGR,MAAM,GAC5B+F,EAAI7Y,KAAK+D,EAAExC,WAEf,KADAsX,EAAI,GAAIlZ,IAAG,EAAIkZ,EAAIA,GAAG1C,MAAMnW,MACW,IAAhCA,KAAKqG,IAAIwS,EAAGD,GAAMvT,IAAIsT,IAC3BE,EAAElC,QAAQgC,EAMZ,KAJA,GAAI5X,GAAIf,KAAKqG,IAAIwS,EAAG7Q,GAChBtH,EAAIV,KAAKqG,IAAIvE,EAAGkG,EAAEqL,KAAK,GAAGP,MAAM,IAChCzK,EAAIrI,KAAKqG,IAAIvE,EAAGkG,GAChBjE,EAAIsM,EACc,IAAfhI,EAAEhD,IAAIqT,IAAY,CAEvB,IAAK,GADDnV,GAAM8E,EACDvH,EAAI,EAAoB,IAAjByC,EAAI8B,IAAIqT,GAAY5X,IAClCyC,EAAMA,EAAI4T,QACZjY,QAAO4B,EAAIiD,EACX,IAAIhC,GAAI/B,KAAKqG,IAAItF,EAAG,GAAIpB,IAAG,GAAG6S,MAAMzO,EAAIjD,EAAI,GAE5CJ,GAAIA,EAAEsW,OAAOjV,GACbhB,EAAIgB,EAAEoV,SACN9O,EAAIA,EAAE2O,OAAOjW,GACbgD,EAAIjD,EAGN,MAAOJ,IAGToD,IAAI7E,UAAUsW,KAAO,SAAczT,GACjC,GAAIgX,GAAMhX,EAAE2C,OAAOzE,KAAK+D,EACxB,OAAI+U,GAAIwU,MACNxU,EAAIwU,MAAO,EACJttB,KAAKsE,KAAKwU,GAAKrB,UAEfzX,KAAKsE,KAAKwU,IAIrBhV,IAAI7E,UAAUoH,IAAM,SAAavE,EAAGV,GAClC,GAAIC,KAEJ,IAAoB,IAAhBD,EAAIkU,KAAK,GACX,MAAO,IAAI3V,IAAG,EAIhB,KAFA,GAAIqI,GAAI5G,EAAIoF,QAES,IAAdwB,EAAEsN,KAAK,IACZjU,EAAE8b,KAAKnV,EAAEC,MAAM,IACfD,EAAE8K,MAAM,EAKV,KAAK,GADD/K,GAAMjG,EACDhB,EAAI,EAAGA,EAAIO,EAAElB,QACP,IAATkB,EAAEP,GADsBA,IAAKiH,EAAM/H,KAAKuE,IAAIwD,IAIlD,KAAMjH,EAAIO,EAAElB,OACV,IAAK,GAAI6H,GAAIhI,KAAKuE,IAAIwD,GAAMjH,EAAIO,EAAElB,OAAQW,IAAKkH,EAAIhI,KAAKuE,IAAIyD,GAC7C,IAAT3G,EAAEP,KAENiH,EAAM/H,KAAKkB,IAAI6G,EAAKC,GAIxB,OAAOD,IAGTjE,IAAI7E,UAAUoX,UAAY,SAAmBjV,GAC3C,GAAIV,GAAIU,EAAI6E,IAAIjG,KAAK+D,EACrB,OAAIrD,KAAMU,EACDV,EAAE8F,QAEF9F,GAGXoD,IAAI7E,UAAUuX,YAAc,SAAqBpV,GAC/C,GAAI2G,GAAM3G,EAAIoF,OAEd,OADAuB,GAAI3H,IAAM,KACH2H,GAOTpI,GAAGwZ,KAAO,SAAc/X,GACtB,MAAO,IAAI+C,MAAK/C,IAiBlB9B,SAAS6E,KAAML,KAEfK,KAAKlF,UAAUoX,UAAY,SAAmBjV,GAC5C,MAAOpB,MAAKsE,KAAKlD,EAAI2R,KAAK/S,KAAKoE,SAGjCD,KAAKlF,UAAUuX,YAAc,SAAqBpV,GAChD,GAAIV,GAAIV,KAAKsE,KAAKlD,EAAIF,IAAIlB,KAAKwE,MAE/B,OADA9D,GAAEN,IAAM,KACDM,GAGTyD,KAAKlF,UAAUmP,KAAO,SAActM,EAAGC,GACrC,GAAkB,IAAdD,EAAEwT,KAAK,IAA0B,IAAdvT,EAAEuT,KAAK,GAG5B,MAFAxT,GAAE5B,MAAM,GAAK,EACb4B,EAAE3B,OAAS,EACJ2B,CAGT,IAAIuG,GAAIvG,EAAEsM,KAAKrM,GACXhB,EAAIsH,EAAE+K,MAAMpT,KAAKoE,OAAOlD,IAAIlB,KAAK0E,MAAMyO,OAAOnT,KAAKoE,OAAOlD,IAAIlB,KAAK+D,GACnEqV,EAAI/Q,EAAE/E,KAAKvC,GAAG+R,MAAM9S,KAAKoE,OACzB2D,EAAMqR,CAMV,OALIA,GAAE/T,IAAIrF,KAAK+D,IAAM,EACnBgE,EAAMqR,EAAE9V,KAAKtD,KAAK+D,GACXqV,EAAE9D,KAAK,GAAK,IACnBvN,EAAMqR,EAAEjP,KAAKnK,KAAK+D,IAEbgE,EAAIuO,UAAUtW,OAGvBmE,KAAKlF,UAAUiC,IAAM,SAAaY,EAAGC,GACnC,GAAkB,IAAdD,EAAEwT,KAAK,IAA0B,IAAdvT,EAAEuT,KAAK,GAC5B,MAAO,IAAI3V,IAAG,GAAG2W,UAAUtW,KAE7B,IAAIqI,GAAIvG,EAAEZ,IAAIa,GACVhB,EAAIsH,EAAE+K,MAAMpT,KAAKoE,OAAOlD,IAAIlB,KAAK0E,MAAMyO,OAAOnT,KAAKoE,OAAOlD,IAAIlB,KAAK+D,GACnEqV,EAAI/Q,EAAE/E,KAAKvC,GAAG+R,MAAM9S,KAAKoE,OACzB2D,EAAMqR,CAMV,OALIA,GAAE/T,IAAIrF,KAAK+D,IAAM,EACnBgE,EAAMqR,EAAE9V,KAAKtD,KAAK+D,GACXqV,EAAE9D,KAAK,GAAK,IACnBvN,EAAMqR,EAAEjP,KAAKnK,KAAK+D,IAEbgE,EAAIuO,UAAUtW,OAGvBmE,KAAKlF,UAAUsW,KAAO,SAAczT,GAElC,GAAIiG,GAAM/H,KAAKsE,KAAKxC,EAAE2C,OAAOzE,KAAK+D,GAAG7C,IAAIlB,KAAKqE,IAC9C,OAAO0D,GAAIuO,UAAUtW,QAGF,mBAAXvB,IAA0BA,EA7wEpC4a,UlColW8B3V,KAAKhF,EAASC,EAAoB,KAAKF,KAI/DizC,KACA,SAASjzC,EAAQC,EAASC,GAE/B,YmCllWD,SAASukC,QAAOhgC,EAAMigC,GACpBnjC,KAAKkD,KAAOA,EACZlD,KAAKmjC,KAAOA,EAEZnjC,KAAKojC,YACLpjC,KAAKqjC,YAdP,GAAIR,GAAOlkC,EAAQ,MACfW,EAAWX,EAAQ,KAEnBm8B,EAAMp8B,CAEVo8B,GAAIgI,OAAS,SAAgB5/B,EAAMigC,GACjC,MAAO,IAAID,QAAOhgC,EAAMigC,IAW1BD,OAAOjkC,UAAUqkC,aAAe,SAAqBzjC,GACnD,GAAI0jC,EACJ,KACEA,EAAQ5kC,EAAQ,KAAM6kC,iBACpB,aAAexjC,KAAKkD,KAAO,8CAI7B,MAAO+B,GACPs+B,EAAQ,SAAUE,GAChBzjC,KAAK0jC,WAAWD,IAQpB,MALAnkC,GAASikC,EAAO1jC,GAChB0jC,EAAMtkC,UAAUykC,WAAa,SAAmBD,GAC9C5jC,EAAK6D,KAAK1D,KAAMyjC,IAGX,GAAIF,GAAMvjC,OAGnBkjC,OAAOjkC,UAAU0kC,YAAc,SAAqB1mB,GAIlD,MAFKjd,MAAKojC,SAASvX,eAAe5O,KAChCjd,KAAKojC,SAASnmB,GAAOjd,KAAKsjC,aAAaT,EAAKO,SAASnmB,KAChDjd,KAAKojC,SAASnmB,IAGvBimB,OAAOjkC,UAAUs4B,OAAS,SAAgBtH,EAAMhT,EAAK0O,GACnD,MAAO3rB,MAAK2jC,YAAY1mB,GAAKsa,OAAOtH,EAAMtE,IAG5CuX,OAAOjkC,UAAU2kC,YAAc,SAAqB3mB,GAIlD,MAFKjd,MAAKqjC,SAASxX,eAAe5O,KAChCjd,KAAKqjC,SAASpmB,GAAOjd,KAAKsjC,aAAaT,EAAKQ,SAASpmB,KAChDjd,KAAKqjC,SAASpmB,IAGvBimB,OAAOjkC,UAAU0f,OAAS,SAAgBsR,EAAMhT,EAAoB4mB,GAClE,MAAO7jC,MAAK4jC,YAAY3mB,GAAK0B,OAAOsR,EAAM4T,KnC4lWtC8N,MACL,KAAM,KAAM,KAAM,KAAM,MAEnBC,KACA,SAASnzC,EAAQC,EAASC,GAE/B,YoCzpWD,SAASqlC,UAASrY,GAChB3rB,KAAKikC,gBACHllC,IAAK,KACLmlC,QACAvY,QAASA,MACTwY,WAmFJ,QAASC,eAAcF,EAAM9kC,GAC3BY,KAAKkkC,KAAOA,EACZlkC,KAAKqkC,QAAQjlC,GA5Ff,GAAIE,GAAWX,EAAQ,IAUvBD,GAAQslC,SAAWA,SAEnBA,SAAS/kC,UAAUqlC,QAAU,SAAiBvlC,GAC5C,MAAOA,aAAeqlC,gBAGxBJ,SAAS/kC,UAAUslC,KAAO,WACxB,GAAIC,GAAQxkC,KAAKikC,cAEjB,QAASllC,IAAKylC,EAAMzlC,IAAK0lC,QAASD,EAAMN,KAAK/jC,SAG/C6jC,SAAS/kC,UAAUylC,QAAU,SAAiBzU,GAC5C,GAAIuU,GAAQxkC,KAAKikC,cAEjBO,GAAMzlC,IAAMkxB,EAAKlxB,IACjBylC,EAAMN,KAAOM,EAAMN,KAAKhnB,MAAM,EAAG+S,EAAKwU,UAGxCT,SAAS/kC,UAAU0lC,SAAW,SAAkBrmB,GAC9C,MAAOte,MAAKikC,eAAeC,KAAK/mB,KAAKmB,IAGvC0lB,SAAS/kC,UAAU4lC,SAAW,SAAkBpjB,EAAOnD,EAAKmU,GAC1D,GAAI+R,GAAQxkC,KAAKikC,cAEjBO,GAAMN,KAAOM,EAAMN,KAAKhnB,MAAM,EAAGuE,EAAQ,GACvB,OAAd+iB,EAAMzlC,MACRylC,EAAMzlC,IAAIuf,GAAOmU,IAGrBuR,SAAS/kC,UAAU6lC,YAAc,WAC/B,GAAIN,GAAQxkC,KAAKikC,eAEb1rB,EAAOisB,EAAMzlC,GAEjB,OADAylC,GAAMzlC,OACCwZ,GAGTyrB,SAAS/kC,UAAU8lC,YAAc,SAAqBxsB,GACpD,GAAIisB,GAAQxkC,KAAKikC,eAEbe,EAAMR,EAAMzlC,GAEhB,OADAylC,GAAMzlC,IAAMwZ,EACLysB,GAGThB,SAAS/kC,UAAUgmC,MAAQ,SAAe7lC,GACxC,GAAIo4B,GACAgN,EAAQxkC,KAAKikC,eAEbiB,EAAY9lC,YAAeglC,cAS/B,IAPE5M,EADE0N,EACI9lC,EAEA,GAAIglC,eAAcI,EAAMN,KAAKpgB,IAAI,SAASqhB,GAC9C,MAAO,IAAMrf,KAAKsf,UAAUD,GAAQ,MACnC5I,KAAK,IAAKn9B,EAAIkyB,SAAWlyB,EAAKA,EAAIimC,QAGlCb,EAAM7Y,QAAQ2Z,QACjB,KAAM9N,EAKR,OAHK0N,IACHV,EAAML,OAAOhnB,KAAKqa,GAEbA,GAGTwM,SAAS/kC,UAAUsmC,WAAa,SAAoBtW,GAClD,GAAIuV,GAAQxkC,KAAKikC,cACjB,OAAKO,GAAM7Y,QAAQ2Z,SAIjBrW,OAAQjvB,KAAKskC,QAAQrV,GAAU,KAAOA,EACtCkV,OAAQK,EAAML,QAJPlV,GAYX3vB,EAAS8kC,cAAe/kC,OAExB+kC,cAAcnlC,UAAUolC,QAAU,SAAiBjlC,GAIjD,MAHAY,MAAKsxB,QAAUlyB,EAAM,SAAWY,KAAKkkC,MAAQ,aAC7C7kC,MAAMmmC,kBAAkBxlC,KAAMokC,eAEvBpkC,OpC8pWH6xC,MACL,KAAM,MAEDC,KACA,SAASrzC,EAAQC,EAASC,GAE/B,YqC9uWD,SAASgnC,MAAK1oB,EAAK2oB,GACjB,GAAIpB,KACJxkC,MAAK6lC,WAAarB,EAElBA,EAAMvnB,IAAMA,EAEZunB,EAAMoB,OAASA,GAAU,KACzBpB,EAAMsB,SAAW,KAGjBtB,EAAMuB,IAAM,KACZvB,EAAM9C,KAAO,KACb8C,EAAMwB,YAAc,KACpBxB,EAAMyB,OAAS,KACfzB,EAAM0B,UAAW,EACjB1B,EAAM2B,KAAM,EACZ3B,EAAMzlC,KAAM,EACZylC,EAAM4B,IAAM,KACZ5B,EAAM6B,WAAa,KACnB7B,EAAMlmB,IAAM,KACZkmB,EAAM,WAAa,KACnBA,EAAM8B,SAAW,KACjB9B,EAAM+B,SAAW,KAGZ/B,EAAMoB,SACTpB,EAAMsB,YACN9lC,KAAKymC,SrCqtWR,GAAI7nC,GAA4B,kBAAXC,SAAoD,gBAApBA,QAAOC,SAAwB,SAAUC,GAAO,aAAcA,IAAS,SAAUA,GAAO,MAAOA,IAAyB,kBAAXF,SAAyBE,EAAIC,cAAgBH,QAAUE,IAAQF,OAAOI,UAAY,eAAkBF,IqC1wWnQilC,EAAWrlC,EAAQ,MAAWqlC,SAC9B0C,EAAgB/nC,EAAQ,MAAW+nC,cACnCxnC,EAASP,EAAQ,KAGjBioC,GACF,MAAO,QAAS,MAAO,QAAS,SAAU,SAAU,QAAS,OAC7D,UAAW,UAAW,QAAS,OAAQ,MAAO,SAAU,WAItDC,GACF,MAAO,MAAO,MAAO,WAAY,WAAY,WAAY,MAAO,SAChE,OACA1kB,OAAOykB,GAGLE,GACF,WAAY,aAAc,OAC1B,aAAc,eAAgB,cAC9B,cAAe,aAAc,cAAe,cAE5C,mBAAoB,aAAc,eAAgB,cAClD,cAAe,aAAc,cAiC/BroC,GAAOC,QAAUinC,IAEjB,IAAIoB,IACF,MAAO,SAAU,WAAY,MAAO,OAAQ,cAAe,SAC3D,WAAY,MAAO,MAAO,MAAO,aAAc,MAAO,UAAW,WACjE,WAGFpB,MAAK1mC,UAAUuH,MAAQ,WACrB,GAAIg+B,GAAQxkC,KAAK6lC,WACbmB,IACJD,GAAWhJ,QAAQ,SAASC,GAC1BgJ,EAAOhJ,GAAQwG,EAAMxG,IAEvB,IAAIj2B,GAAM,GAAI/H,MAAKhB,YAAYgoC,EAAOpB,OAEtC,OADA79B,GAAI89B,WAAamB,EACVj/B,GAGT49B,KAAK1mC,UAAUwnC,MAAQ,WACrB,GAAIjC,GAAQxkC,KAAK6lC,UACjBgB,GAAQ9I,QAAQ,SAASI,GACvBn+B,KAAKm+B,GAAU,WACb,GAAI33B,GAAQ,GAAIxG,MAAKhB,YAAYgB,KAEjC,OADAwkC,GAAMsB,SAAS3oB,KAAK3W,GACbA,EAAM23B,GAAQK,MAAMh4B,EAAO83B,aAEnCt+B,OAGL2lC,KAAK1mC,UAAUoB,MAAQ,SAAc8iC,GACnC,GAAIqB,GAAQxkC,KAAK6lC,UAEjB3mC,GAAwB,OAAjBslC,EAAMoB,QACbzC,EAAKz/B,KAAK1D,MAGVwkC,EAAMsB,SAAWtB,EAAMsB,SAASmB,OAAO,SAASC,GAC9C,MAAOA,GAAMrB,WAAWD,SAAW5lC,MAClCA,MACHd,EAAOioC,MAAM3C,EAAMsB,SAAS3lC,OAAQ,EAAG,sCAGzCwlC,KAAK1mC,UAAUmoC,SAAW,SAAiB1F,GACzC,GAAI8C,GAAQxkC,KAAK6lC,WAGbC,EAAWpE,EAAKuF,OAAO,SAASI,GAClC,MAAOA,aAAernC,MAAKhB,aAC1BgB,KACH0hC,GAAOA,EAAKuF,OAAO,SAASI,GAC1B,QAASA,YAAernC,MAAKhB,cAC5BgB,MAEqB,IAApB8lC,EAAS3lC,SACXjB,EAA0B,OAAnBslC,EAAMsB,UACbtB,EAAMsB,SAAWA,EAGjBA,EAAS/H,QAAQ,SAASmJ,GACxBA,EAAMrB,WAAWD,OAAS5lC,MACzBA,OAEe,IAAhB0hC,EAAKvhC,SACPjB,EAAsB,OAAfslC,EAAM9C,MACb8C,EAAM9C,KAAOA,EACb8C,EAAMwB,YAActE,EAAK5d,IAAI,SAASujB,GACpC,GAAmB,YAAf,mBAAOA,GAAP,YAAAzoC,EAAOyoC,KAAoBA,EAAIroC,cAAgBu3B,OACjD,MAAO8Q,EAET,IAAIt/B,KAOJ,OANAwuB,QAAO+F,KAAK+K,GAAKtJ,QAAQ,SAASzf,GAC5BA,IAAc,EAANA,KACVA,GAAO,EACT,IAAImU,GAAQ4U,EAAI/oB,EAChBvW,GAAI0qB,GAASnU,IAERvW,MASb++B,EAAU/I,QAAQ,SAASI,GACzBwH,KAAK1mC,UAAUk/B,GAAU,WACvB,GAAIqG,GAAQxkC,KAAK6lC,UACjB,MAAM,IAAIxmC,OAAM8+B,EAAS,kCAAoCqG,EAAMvnB,QAQvE2pB,EAAK7I,QAAQ,SAASgI,GACpBJ,KAAK1mC,UAAU8mC,GAAO,WACpB,GAAIvB,GAAQxkC,KAAK6lC,WACbnE,EAAOpgC,MAAMrC,UAAUie,MAAMxZ,KAAK46B,UAOtC,OALAp/B,GAAqB,OAAdslC,EAAMuB,KACbvB,EAAMuB,IAAMA,EAEZ/lC,KAAKonC,SAAS1F,GAEP1hC,QAIX2lC,KAAK1mC,UAAUmnC,IAAM,SAAakB,GAChC,GAAI9C,GAAQxkC,KAAK6lC,UAKjB,OAHA3mC,GAAqB,OAAdslC,EAAM4B,KACb5B,EAAM4B,IAAMkB,EAELtnC,MAGT2lC,KAAK1mC,UAAUinC,SAAW,WACxB,GAAI1B,GAAQxkC,KAAK6lC,UAIjB,OAFArB,GAAM0B,UAAW,EAEVlmC,MAGT2lC,KAAK1mC,UAAUsoC,IAAM,SAAapoC,GAChC,GAAIqlC,GAAQxkC,KAAK6lC,UAMjB,OAJA3mC,GAA4B,OAArBslC,EAAM,YACbA,EAAM,WAAarlC,EACnBqlC,EAAM0B,UAAW,EAEVlmC,MAGT2lC,KAAK1mC,UAAUqnC,SAAW,SAAkBllC,GAC1C,GAAIojC,GAAQxkC,KAAK6lC,UAKjB,OAHA3mC,GAA0B,OAAnBslC,EAAM8B,UAAwC,OAAnB9B,EAAM+B,UACxC/B,EAAM8B,SAAWllC,EAEVpB,MAGT2lC,KAAK1mC,UAAUsnC,SAAW,SAAkBnlC,GAC1C,GAAIojC,GAAQxkC,KAAK6lC,UAKjB,OAHA3mC,GAA0B,OAAnBslC,EAAM8B,UAAwC,OAAnB9B,EAAM+B,UACxC/B,EAAM+B,SAAWnlC,EAEVpB,MAGT2lC,KAAK1mC,UAAUF,IAAM,WACnB,GAAIylC,GAAQxkC,KAAK6lC,WACbnE,EAAOpgC,MAAMrC,UAAUie,MAAMxZ,KAAK46B,UAOtC,OALAkG,GAAMzlC,KAAM,EAEQ,IAAhB2iC,EAAKvhC,QACPH,KAAKonC,SAAS1F,GAET1hC,MAGT2lC,KAAK1mC,UAAUqf,IAAM,SAAakpB,GAChC,GAAIhD,GAAQxkC,KAAK6lC,UAKjB,OAHA3mC,GAAqB,OAAdslC,EAAMlmB,KACbkmB,EAAMlmB,IAAMkpB,EAELxnC,MAGT2lC,KAAK1mC,UAAUknC,IAAM,WACnB,GAAI3B,GAAQxkC,KAAK6lC,UAIjB,OAFArB,GAAM2B,KAAM,EAELnmC,MAGT2lC,KAAK1mC,UAAUgnC,OAAS,SAAgBlnC,GACtC,GAAIylC,GAAQxkC,KAAK6lC;AAQjB,MANA3mC,GAAwB,OAAjBslC,EAAMyB,QACbzB,EAAMyB,OAASlnC,EACfiB,KAAKonC,SAAS7Q,OAAO+F,KAAKv9B,GAAK+kB,IAAI,SAASxF,GAC1C,MAAOvf,GAAIuf,MAGNte,MAOT2lC,KAAK1mC,UAAUwoC,QAAU,SAAgBrvB,GACvC,GAAIosB,GAAQxkC,KAAK6lC,UAGjB,IAAqB,OAAjBrB,EAAMoB,OACR,MAAOxtB,GAAMmtB,WAAWf,EAAMsB,SAAS,GAAG2B,QAAQrvB,GAEpD,IAGIuvB,GAHA1Y,EAASuV,EAAM,WACfkD,GAAU,CAOd,IAJkB,OAAdlD,EAAMlmB,MACRqpB,EAAUvvB,EAAMusB,SAASH,EAAMlmB,MAG7BkmB,EAAM0B,SAAU,CAClB,GAAIH,GAAM,IAQV,IAPuB,OAAnBvB,EAAM8B,SACRP,EAAMvB,EAAM8B,SACc,OAAnB9B,EAAM+B,SACbR,EAAMvB,EAAM+B,SACS,OAAd/B,EAAMuB,MACbA,EAAMvB,EAAMuB,KAEF,OAARA,GAAiBvB,EAAM2B,KAgBzB,GAFAuB,EAAU1nC,KAAK4nC,SAASxvB,EAAO2tB,EAAKvB,EAAM2B,KAEtC/tB,EAAMksB,QAAQoD,GAChB,MAAOA,OAjBqB,CAE9B,GAAInD,GAAOnsB,EAAMmsB,MACjB,KACuB,OAAjBC,EAAMyB,OACRjmC,KAAK6nC,eAAerD,EAAMuB,IAAK3tB,GAE/BpY,KAAK8nC,cAAc1vB,GACrBsvB,GAAU,EACV,MAAOziC,GACPyiC,GAAU,EAEZtvB,EAAMssB,QAAQH,IAUlB,GAAIwD,EAIJ,IAHIvD,EAAMzlC,KAAO2oC,IACfK,EAAU3vB,EAAM0sB,eAEd4C,EAAS,CAEX,GAAuB,OAAnBlD,EAAM8B,SAAmB,CAC3B,GAAIA,GAAWtmC,KAAKgoC,WAAW5vB,EAAOosB,EAAM8B,SAC5C,IAAIluB,EAAMksB,QAAQgC,GAChB,MAAOA,EACTluB,GAAQkuB,EAIV,GAAkB,OAAd9B,EAAM4B,KAAiC,OAAjB5B,EAAMyB,OAAiB,CAC/C,GAAIzB,EAAM2B,IACR,GAAI5B,GAAOnsB,EAAMmsB,MACnB,IAAIpB,GAAOnjC,KAAKgoC,WACd5vB,EACmB,OAAnBosB,EAAM+B,SAAoB/B,EAAM+B,SAAW/B,EAAMuB,IACjDvB,EAAM2B,IAER,IAAI/tB,EAAMksB,QAAQnB,GAChB,MAAOA,EAELqB,GAAM2B,IACRlX,EAAS7W,EAAMqB,IAAI8qB,GAEnBnsB,EAAQ+qB,EAWZ,GANElU,EADEuV,EAAM2B,IACClX,EACe,OAAjBuV,EAAMyB,OACJjmC,KAAK6nC,eAAerD,EAAMuB,IAAK3tB,GAE/BpY,KAAK8nC,cAAc1vB,GAE1BA,EAAMksB,QAAQrV,GAChB,MAAOA,EAGT,KAAKuV,EAAM2B,KAAwB,OAAjB3B,EAAMyB,QAAsC,OAAnBzB,EAAMsB,SAAmB,CAClE,GAAI0E,GAAOhG,EAAMsB,SAAS+C,KAAK,SAAwB3B,GAGrDA,EAAMO,QAAQrvB,IAEhB,IAAIoyB,EACF,MAAOhT,MAYb,MAPIgN,GAAMzlC,KAAO2oC,IACfzY,EAAS7W,EAAM2sB,YAAYgD,IAGX,OAAdvD,EAAMlmB,KAA4B,OAAX2Q,GAAmByY,KAAY,GACxDtvB,EAAMysB,SAAS8C,EAASnD,EAAMlmB,IAAK2Q,GAE9BA,GAGT0W,KAAK1mC,UAAU4oC,eAAiB,SAAuB9B,EAAK3tB,GAC1D,GAAIosB,GAAQxkC,KAAK6lC,UAEjB,OAAY,QAARE,GAAyB,QAARA,EACZ,KACG,UAARA,GAA2B,UAARA,EACd/lC,KAAKooC,YAAYhwB,EAAO2tB,EAAKvB,EAAM9C,KAAK,IAChC,WAARqE,GAA4B,WAARA,EACpB/lC,KAAKqoC,WAAWjwB,EAAO2tB,GACf,WAARA,GAA4B,YAARA,EACpB/lC,KAAKqoC,WAAWjwB,EAAO2tB,GACf,UAARA,GAAmBvB,EAAM9C,KACzB1hC,KAAKsoC,aAAalwB,EAAOosB,EAAM9C,KAAK,GAAI8C,EAAM9C,KAAK,IAC3C,UAARqE,EACA/lC,KAAKsoC,aAAalwB,EAAO,KAAM,MACvB,YAAR2tB,GAA6B,YAARA,EACrB/lC,KAAKuoC,YAAYnwB,EAAO2tB,GAChB,UAARA,EACA/lC,KAAKwoC,YAAYpwB,GACT,SAAR2tB,EACA/lC,KAAKyoC,YAAYrwB,GACT,QAAR2tB,GAAyB,SAARA,EACjB/lC,KAAK0oC,WAAWtwB,EAAOosB,EAAM9C,MAAQ8C,EAAM9C,KAAK,IAClC,OAAd8C,EAAM4B,IACNpmC,KAAKmoC,QAAQ3D,EAAM4B,IAAKhuB,EAAM6rB,eAAellC,KAAK0oC,QAAQrvB,GAE1DA,EAAM6sB,MAAM,gBAAkBc,IAKzCJ,KAAK1mC,UAAUkpC,QAAU,SAAiB1E,EAAQ1kC,GAEhD,GAAIylC,GAAQxkC,KAAK6lC,UASjB,OAPArB,GAAM6B,WAAarmC,KAAK2oC,KAAKlF,EAAQ1kC,GACrCG,EAA8C,OAAvCslC,EAAM6B,WAAWR,WAAWD,QACnCpB,EAAM6B,WAAa7B,EAAM6B,WAAWR,WAAWC,SAAS,GACpDtB,EAAM+B,WAAa/B,EAAM6B,WAAWR,WAAWU,WACjD/B,EAAM6B,WAAa7B,EAAM6B,WAAW7/B,QACpCg+B,EAAM6B,WAAWR,WAAWU,SAAW/B,EAAM+B,UAExC/B,EAAM6B,YAGfV,KAAK1mC,UAAU6oC,cAAgB,SAAsB1vB,GACnD,GAAIosB,GAAQxkC,KAAK6lC,WACb5W,EAAS,KACT2Z,GAAQ,CAmBZ,OAjBArS,QAAO+F,KAAKkI,EAAMyB,QAAQ4C,KAAK,SAASvqB,GACtC,GAAIimB,GAAOnsB,EAAMmsB,OACbuE,EAAOtE,EAAMyB,OAAO3nB,EACxB,KACE,GAAImU,GAAQqW,EAAKrB,QAAQrvB,EACzB,IAAIA,EAAMksB,QAAQ7R,GAChB,OAAO,CAETxD,IAAWnV,KAAMwE,EAAKmU,MAAOA,GAC7BmW,GAAQ,EACR,MAAO3jC,GAEP,MADAmT,GAAMssB,QAAQH,IACP,EAET,OAAO,GACNvkC,MAEE4oC,EAGE3Z,EAFE7W,EAAM6sB,MAAM,uBASvBU,KAAK1mC,UAAU8pC,qBAAuB,SAA6B9Y,GACjE,MAAO,IAAIyW,GAAczW,EAAMjwB,KAAK6jC,WAGtC8B,KAAK1mC,UAAU8iB,QAAU,SAAgBkO,EAAM4T,EAAU+B,GACvD,GAAIpB,GAAQxkC,KAAK6lC,UACjB,IAAyB,OAArBrB,EAAM,YAAuBA,EAAM,aAAevU,EAAtD,CAGA,GAAIhB,GAASjvB,KAAKgpC,aAAa/Y,EAAM4T,EAAU+B,EAC/C,IAAevsB,SAAX4V,IAGAjvB,KAAKipC,aAAaha,EAAQ4U,EAAU+B,GAGxC,MAAO3W,KAGT0W,KAAK1mC,UAAU+pC,aAAe,SAAgB/Y,EAAM4T,EAAU+B,GAC5D,GAAIpB,GAAQxkC,KAAK6lC,UAGjB,IAAqB,OAAjBrB,EAAMoB,OACR,MAAOpB,GAAMsB,SAAS,GAAG/jB,QAAQkO,EAAM4T,GAAY,GAAIG,GAEzD,IAAI/U,GAAS,IAOb,IAHAjvB,KAAK6jC,SAAWA,EAGZW,EAAM0B,UAAqB7sB,SAAT4W,EAAoB,CACxC,GAAyB,OAArBuU,EAAM,WAGR,MAFAvU,GAAOuU,EAAM,WAMjB,GAGI0E,GAAU,KACVC,GAAY,CAChB,IAAI3E,EAAM2B,IAERlX,EAASjvB,KAAK+oC,qBAAqB9Y,OAC9B,IAAIuU,EAAMyB,OACfhX,EAASjvB,KAAKopC,cAAcnZ,EAAM4T,OAC7B,IAAIW,EAAMsB,SACfoD,EAAU1E,EAAMsB,SAAShiB,IAAI,SAASojB,GACpC,GAA6B,UAAzBA,EAAMrB,WAAWE,IACnB,MAAOmB,GAAMnlB,QAAQ,KAAM8hB,EAAU5T,EAEvC,IAA6B,OAAzBiX,EAAMrB,WAAWvnB,IACnB,MAAOulB,GAASoB,MAAM,0BACxB,IAAI0C,GAAU9D,EAASc,SAASuC,EAAMrB,WAAWvnB,IAEjD,IAAoB,YAAhB,mBAAO2R,GAAP,YAAArxB,EAAOqxB,IACT,MAAO4T,GAASoB,MAAM,0CAExB,IAAIl9B,GAAMm/B,EAAMnlB,QAAQkO,EAAKiX,EAAMrB,WAAWvnB,KAAMulB,EAAU5T,EAG9D,OAFA4T,GAASgB,SAAS8C,GAEX5/B,GACN/H,MAAMinC,OAAO,SAASC,GACvB,MAAOA,KAGTgC,EAAUlpC,KAAK+oC,qBAAqBG,OAEpC,IAAkB,UAAd1E,EAAMuB,KAAiC,UAAdvB,EAAMuB,IAAiB,CAElD,IAAMvB,EAAM9C,MAA8B,IAAtB8C,EAAM9C,KAAKvhC,OAC7B,MAAO0jC,GAASoB,MAAM,uBAAyBT,EAAMuB,IAEvD,KAAKzkC,MAAM4D,QAAQ+qB,GACjB,MAAO4T,GAASoB,MAAM,qCAExB,IAAIiC,GAAQlnC,KAAKwG,OACjB0gC,GAAMrB,WAAWU,SAAW,KAC5B2C,EAAUlpC,KAAK+oC,qBAAqB9Y,EAAKnM,IAAI,SAASwjB,GACpD,GAAI9C,GAAQxkC,KAAK6lC,UAEjB,OAAO7lC,MAAKmoC,QAAQ3D,EAAM9C,KAAK,GAAIzR,GAAMlO,QAAQulB,EAAMzD,IACtDqD,QACoB,QAAd1C,EAAM4B,IACfnX,EAASjvB,KAAKmoC,QAAQ3D,EAAM4B,IAAKR,GAAQ7jB,QAAQkO,EAAM4T,IAEvDqF,EAAUlpC,KAAKqpC,iBAAiB7E,EAAMuB,IAAK9V,GAC3CkZ,GAAY,EAKhB,IAAIla,EACJ,KAAKuV,EAAM2B,KAAwB,OAAjB3B,EAAMyB,OAAiB,CACvC,GAAIF,GAAyB,OAAnBvB,EAAM+B,SAAoB/B,EAAM+B,SAAW/B,EAAMuB,IACvDuD,EAAyB,OAAnB9E,EAAM+B,SAAoB,YAAc,SAEtC,QAARR,EACgB,OAAdvB,EAAM4B,KACRvC,EAASoB,MAAM,wCAEC,OAAdT,EAAM4B,MACRnX,EAASjvB,KAAKupC,iBAAiBxD,EAAKoD,EAAWG,EAAKJ,IAQ1D,MAHuB,QAAnB1E,EAAM8B,WACRrX,EAASjvB,KAAKupC,iBAAiB/E,EAAM8B,UAAU,EAAO,UAAWrX,IAE5DA,GAGT0W,KAAK1mC,UAAUmqC,cAAgB,SAAsBnZ,EAAM4T,GACzD,GAAIW,GAAQxkC,KAAK6lC,WAEbiD,EAAOtE,EAAMyB,OAAOhW,EAAKnW,KAO7B,OANKgvB,IACH5pC,GACI,EACA+wB,EAAKnW,KAAO,iBACRgM,KAAKsf,UAAU7O,OAAO+F,KAAKkI,EAAMyB,UAEpC6C,EAAK/mB,QAAQkO,EAAKwC,MAAOoR,IAGlC8B,KAAK1mC,UAAUoqC,iBAAmB,SAAyBtD,EAAK9V,GAC9D,GAAIuU,GAAQxkC,KAAK6lC,UAEjB,IAAY,WAARE,GAA4B,WAARA,GAA4B,WAARA,EAC1C,MAAO/lC,MAAKwpC,WAAWvZ,EAAM8V,EAC1B,IAAY,YAARA,EACP,MAAO/lC,MAAKwpC,WAAWvZ,EAAM8V,EAC1B,IAAY,UAARA,GAAmBvB,EAAM9C,KAChC,MAAO1hC,MAAKypC,aAAaxZ,EAAMuU,EAAMwB,YAAY,GAAIxB,EAAM9C,KAAK,GAC7D,IAAY,UAARqE,EACP,MAAO/lC,MAAKypC,aAAaxZ,EAAM,KAAM,KAClC,IAAY,YAAR8V,GAA6B,YAARA,EAC5B,MAAO/lC,MAAK0pC,YAAYzZ,EAAM8V,EAC3B,IAAY,UAARA,EACP,MAAO/lC,MAAK2pC,aACT,IAAY,QAAR5D,GAAyB,SAARA,EACxB,MAAO/lC,MAAK4pC,WAAW3Z,EAAMuU,EAAM9C,MAAQ8C,EAAMwB,YAAY,GAC1D,IAAY,SAARD,EACP,MAAO/lC,MAAK6pC,YAAY5Z,EAExB,MAAM,IAAI5wB,OAAM,oBAAsB0mC,KrCmqWpCgM,MACL,KAAM,MAEDC,MACL,KAAM,MAEDC,MACL,KAAM,KAAM,MAEPC,KACA,SAASzzC,EAAQC,EAASC,GAE/B,YsC1vXD,SAASyrC,YAAW3G,GAClBzjC,KAAKid,IAAM,MACXjd,KAAKkD,KAAOugC,EAAOvgC,KACnBlD,KAAKyjC,OAASA,EAGdzjC,KAAKqqC,KAAO,GAAIC,SAChBtqC,KAAKqqC,KAAKhqC,MAAMojC,EAAON,MAazB,QAASmH,SAAQ1E,GACf/lC,EAAK8lC,KAAKjiC,KAAK1D,KAAM,MAAO4lC,GAqM9B,QAAS2E,cAAa9a,EAAK+a,GACzB,GAAIzE,GAAMtW,EAAIgb,UAAUD,EACxB,IAAI/a,EAAI6U,QAAQyB,GACd,MAAOA,EAET,IAAIuD,GAAMxW,EAAI4X,SAAS3E,GAAO,GAC1BoD,EAA6B,KAAV,GAANpD,EAGjB,IAAqB,MAAV,GAANA,GAAsB,CACzB,GAAI4E,GAAM5E,CAEV,KADAA,EAAM,EACkB,OAAV,IAAN4E,IAAsB,CAE5B,GADAA,EAAMlb,EAAIgb,UAAUD,GAChB/a,EAAI6U,QAAQqG,GACd,MAAOA,EAET5E,KAAQ,EACRA,GAAa,IAAN4E,OAGT5E,IAAO,EAET,IAAI6E,GAAS9X,EAAIiT,IAAIA,EAErB,QACEuD,IAAKA,EACLH,UAAWA,EACXpD,IAAKA,EACL6E,OAAQA,GAIZ,QAASC,cAAapb,EAAK0Z,EAAWqB,GACpC,GAAI7pC,GAAM8uB,EAAIgb,UAAUD,EACxB,IAAI/a,EAAI6U,QAAQ3jC,GACd,MAAOA,EAGT,KAAKwoC,GAAqB,MAARxoC,EAChB,MAAO,KAGT,IAAqB,KAAV,IAANA,GAEH,MAAOA,EAIT,IAAIS,GAAY,IAANT,CACV,IAAIS,GAAO,EACT,MAAOquB,GAAIwV,MAAM,4BAEnBtkC,GAAM,CACN,KAAK,GAAIG,GAAI,EAAGA,EAAIM,EAAKN,IAAK,CAC5BH,IAAQ,CACR,IAAI2B,GAAImtB,EAAIgb,UAAUD,EACtB,IAAI/a,EAAI6U,QAAQhiC,GACd,MAAOA,EACT3B,IAAO2B,EAGT,MAAO3B,GAjST,GAAIrB,GAAWX,EAAQ,KAEnBkkC,EAAOlkC,EAAQ,MACfkB,EAAOgjC,EAAKhjC,KACZirC,EAASjI,EAAKiI,OAGdhY,EAAM+P,EAAKkI,UAAUjY,GAWzBr0B,GAAOC,QAAU0rC,WAEjBA,WAAWnrC,UAAUs4B,OAAS,SAAgBtH,EAAMtE,GAIlD,MAHMsE,aAAgBpwB,GAAK8mC,gBACzB1W,EAAO,GAAIpwB,GAAK8mC,cAAc1W,EAAMtE,IAE/B3rB,KAAKqqC,KAAK5C,QAAQxX,EAAMtE,IAQjCrsB,EAASgrC,QAASzqC,EAAK8lC,MAEvB2E,QAAQrrC,UAAU2oC,SAAW,SAAiBnR,EAAQsP,EAAKI,GACzD,GAAI1P,EAAOuU,UACT,OAAO,CAET,IAAIxG,GAAQ/N,EAAO8N,OACf0G,EAAaV,aAAa9T,EAAQ,wBAA0BsP,EAAM,IACtE,OAAItP,GAAO6N,QAAQ2G,GACVA,GAETxU,EAAOiO,QAAQF,GAERyG,EAAWlF,MAAQA,GAAOkF,EAAWL,SAAW7E,GAAOI,IAGhEmE,QAAQrrC,UAAU+oC,WAAa,SAAmBvR,EAAQsP,EAAKI,GAC7D,GAAI8E,GAAaV,aAAa9T,EACA,4BAA8BsP,EAAM,IAClE,IAAItP,EAAO6N,QAAQ2G,GACjB,MAAOA,EAET,IAAItqC,GAAMkqC,aAAapU,EACAwU,EAAW9B,UACX,4BAA8BpD,EAAM,IAG3D,IAAItP,EAAO6N,QAAQ3jC,GACjB,MAAOA,EAET,KAAKwlC,GACD8E,EAAWlF,MAAQA,GACnBkF,EAAWL,SAAW7E,GACtBkF,EAAWL,OAAS,OAAS7E,EAC/B,MAAOtP,GAAOwO,MAAM,yBAA2Bc,EAAM,IAGvD,IAAIkF,EAAW9B,WAAqB,OAARxoC,EAC1B,MAAO81B,GAAOyU,KAAKvqC,EAAK,6BAA+BolC,EAAM,IAG/D,IAAIvB,GAAQ/N,EAAO8N,OACfx8B,EAAM/H,KAAKmrC,cACX1U,EACA,2CAA6Cz2B,KAAK+lC,IAAM,IAC5D,OAAItP,GAAO6N,QAAQv8B,GACVA,GAETpH,EAAM81B,EAAOwR,OAASzD,EAAMyD,OAC5BxR,EAAOiO,QAAQF,GACR/N,EAAOyU,KAAKvqC,EAAK,6BAA+BolC,EAAM,OAG/DuE,QAAQrrC,UAAUksC,cAAgB,SAAsB1U,EAAQ+T,GAC9D,OAAa,CACX,GAAIzE,GAAMwE,aAAa9T,EAAQ+T,EAC/B,IAAI/T,EAAO6N,QAAQyB,GACjB,MAAOA,EACT,IAAIplC,GAAMkqC,aAAapU,EAAQsP,EAAIoD,UAAWqB,EAC9C,IAAI/T,EAAO6N,QAAQ3jC,GACjB,MAAOA,EAET,IAAIoH,EAOJ,IALEA,EADEg+B,EAAIoD,WAAqB,OAARxoC,EACb81B,EAAOyU,KAAKvqC,GAEZX,KAAKmrC,cAAc1U,EAAQ+T,GAG/B/T,EAAO6N,QAAQv8B,GACjB,MAAOA,EAET,IAAmB,QAAfg+B,EAAI6E,OACN,QAINN,QAAQrrC,UAAUmpC,YAAc,SAAoB3R,EAAQsP,EAAKqF,GAE/D,IADA,GAAInc,OACIwH,EAAOuU,WAAW,CACxB,GAAIK,GAAcrrC,KAAK4nC,SAASnR,EAAQ,MACxC,IAAIA,EAAO6N,QAAQ+G,GACjB,MAAOA,EAET,IAAItjC,GAAMqjC,EAAQ7T,OAAOd,EAAQ,MACjC,IAAIA,EAAO6N,QAAQv8B,IAAQsjC,EACzB,KACFpc,GAAO9R,KAAKpV,GAEd,MAAOknB,IAGTqb,QAAQrrC,UAAUopC,WAAa,SAAmB5R,EAAQsP,GACxD,GAAY,WAARA,EACF,MAAOtP,GAAOhd,KACT,IAAY,WAARssB,EAAkB,CAC3B,GAAIuF,GAAS7U,EAAOgU,WACpB,OAAIhU,GAAO6N,QAAQgH,GACVA,GAEAA,OAAQA,EAAQrb,KAAMwG,EAAOhd,OACjC,MAAY,WAARssB,GAA4B,YAARA,EACtBtP,EAAOhd,MAAMjU,WAEbxF,KAAKilC,MAAM,4BAA8Bc,EAAM,iBAI1DuE,QAAQrrC,UAAUqpC,aAAe,SAAqB7R,EAAQmV,EAAQC,GAGpE,IAFA,GAAIC,MACAC,EAAQ,GACJtV,EAAOuU,WAAW,CACxB,GAAIgB,GAAWvV,EAAOgU,WACtBsB,KAAU,EACVA,GAAoB,IAAXC,EACiB,KAAV,IAAXA,KACHF,EAAY3uB,KAAK4uB,GACjBA,EAAQ,GAGG,IAAXC,GACFF,EAAY3uB,KAAK4uB,EAEnB,IAAIjT,GAASgT,EAAY,GAAK,GAAM,EAChCG,EAASH,EAAY,GAAK,EAU9B,OARID,GACF5c,OAAS6c,EAET7c,QAAU6J,EAAOmT,GAAQ9pB,OAAO2pB,EAAY5uB,MAAM,IAEhD0uB,IACF3c,OAAS2c,EAAO3c,OAAOsN,KAAK,OAEvBtN,QAGTqb,QAAQrrC,UAAUspC,YAAc,SAAoB9R,EAAQsP,GAC1D,GAAIxlC,GAAMk2B,EAAOhd,MAAMjU,UACvB,IAAY,YAARugC,EACF,GAAImG,GAAyB,EAAlB3rC,EAAI2c,MAAM,EAAG,GACpBivB,EAAwB,EAAlB5rC,EAAI2c,MAAM,EAAG,GACnBkvB,EAAwB,EAAlB7rC,EAAI2c,MAAM,EAAG,GACnBmvB,EAA0B,EAAnB9rC,EAAI2c,MAAM,EAAG,IACpBrc,EAA0B,EAApBN,EAAI2c,MAAM,GAAI,IACpBovB,EAA0B,EAApB/rC,EAAI2c,MAAM,GAAI,QACnB,IAAY,YAAR6oB,EAYT,MAAO/lC,MAAKilC,MAAM,YAAcc,EAAM,6BAXtC,IAAImG,GAAyB,EAAlB3rC,EAAI2c,MAAM,EAAG,GACpBivB,EAAwB,EAAlB5rC,EAAI2c,MAAM,EAAG,GACnBkvB,EAAwB,EAAlB7rC,EAAI2c,MAAM,EAAG,GACnBmvB,EAAyB,EAAlB9rC,EAAI2c,MAAM,EAAG,GACpBrc,EAAyB,EAAnBN,EAAI2c,MAAM,EAAG,IACnBovB,EAA0B,EAApB/rC,EAAI2c,MAAM,GAAI,GAEtBgvB,GADEA,EAAO,GACF,IAAOA,EAEP,KAAOA,EAKlB,MAAOK,MAAKC,IAAIN,EAAMC,EAAM,EAAGC,EAAKC,EAAMxrC,EAAKyrC,EAAK,IAGtDhC,QAAQrrC,UAAUupC,YAAc,SAAoB/R,GAClD,MAAO,OAGT6T,QAAQrrC,UAAUwpC,YAAc,SAAoBhS,GAClD,GAAI1uB,GAAM0uB,EAAOgU,WACjB,OAAIhU,GAAO6N,QAAQv8B,GACVA,EAEQ,IAARA,GAGXuiC,QAAQrrC,UAAUypC,WAAa,SAAmBjS,EAAQmV,GAExD,GAAInyB,GAAMgd,EAAOhd,MACb1R,EAAM,GAAI+iC,GAAOrxB,EAKrB,OAHImyB,KACF7jC,EAAM6jC,EAAO7jC,EAAIvC,SAAS,MAAQuC,GAE7BA,GAGTuiC,QAAQrrC,UAAU0pC,KAAO,SAAalF,EAAQ1kC,GAG5C,MAFsB,kBAAX0kC,KACTA,EAASA,EAAO1kC,IACX0kC,EAAOE,YAAY,OAAO0G,OtCiyX7B8H,KACA,SAAS1zC,EAAQC,EAASC,GAE/B,YuC5/XD,SAAS+tC,YAAWjJ,GAClB2G,EAAW1mC,KAAK1D,KAAMyjC,GACtBzjC,KAAKid,IAAM,MARb,GAAI3d,GAAWX,EAAQ,KACnBqG,EAASrG,EAAQ,KAAUqG,OAG3BolC,GADOzrC,EAAQ,MACFA,EAAQ,MAMzBW,GAASotC,WAAYtC,GACrB3rC,EAAOC,QAAUguC,WAEjBA,WAAWztC,UAAUs4B,OAAS,SAAgBtH,EAAMtE,GAQlD,IAAK,GAPDghB,GAAQ1c,EAAKzqB,WAAW0S,MAAM,YAE9B00B,EAAQjhB,EAAQihB,MAAMva,cAEtBxhB,EAAK,kCACLrQ,KACAC,KACKK,EAAI,EAAGA,EAAI6rC,EAAMxsC,OAAQW,IAAK,CACrC,GAAI8nC,GAAQ+D,EAAM7rC,GAAG8nC,MAAM/3B,EAC3B,IAAc,OAAV+3B,GAGAA,EAAM,KAAOgE,EAAjB,CAGA,GAAIpsC,OAIG,CACL,GAAiB,QAAbooC,EAAM,GACR,KACFnoC,GAAMK,CACN,OAPA,GAAiB,UAAb8nC,EAAM,GACR,KACFpoC,GAAQM,GAQZ,GAAIN,QAAgBC,OAClB,KAAM,IAAIpB,OAAM,8BAAgCutC,EAElD,IAAIC,GAASF,EAAMzvB,MAAM1c,EAAQ,EAAGC,GAAK87B,KAAK,GAE9CsQ,GAAOpnC,QAAQ,oBAAqB,GAEpC,IAAI2S,GAAQ,GAAIpT,GAAO6nC,EAAQ,SAC/B,OAAOzC,GAAWnrC,UAAUs4B,OAAO7zB,KAAK1D,KAAMoY,EAAOuT,KvCogYjDymB,MACL,KAAM,KAAM,MAEPC,KACA,SAAS5zC,EAAQC,EAASC,GAE/B,YwChjYD,SAASquC,YAAWvJ,GAClBzjC,KAAKid,IAAM,MACXjd,KAAKkD,KAAOugC,EAAOvgC,KACnBlD,KAAKyjC,OAASA,EAGdzjC,KAAKqqC,KAAO,GAAIC,SAChBtqC,KAAKqqC,KAAKhqC,MAAMojC,EAAON,MAUzB,QAASmH,SAAQ1E,GACf/lC,EAAK8lC,KAAKjiC,KAAK1D,KAAM,MAAO4lC,GA2F9B,QAASzmB,KAAI/d,GACX,MAAIA,GAAM,GACD,IAAMA,EAENA,EA4HX,QAAS6rC,WAAUlH,EAAKoD,EAAWG,EAAKzF,GACtC,GAAI97B,EAOJ,IALY,UAARg+B,EACFA,EAAM,MACS,UAARA,IACPA,EAAM,OAEJjT,EAAIoa,UAAUrhB,eAAeka,GAC/Bh+B,EAAM+qB,EAAIoa,UAAUnH,OACjB,IAAmB,gBAARA,KAA2B,EAANA,KAAaA,EAGhD,MAAOlC,GAASoB,MAAM,gBAAkBc,EAFxCh+B,GAAMg+B,EAIR,MAAIh+B,IAAO,GACF87B,EAASoB,MAAM,yCAEnBkE,IACHphC,GAAO,IAETA,GAAQ+qB,EAAIqa,eAAe7D,GAAO,cAAgB,GA5QpD,GAAIhqC,GAAWX,EAAQ,KACnBqG,EAASrG,EAAQ,KAAUqG,OAE3B69B,EAAOlkC,EAAQ,MACfkB,EAAOgjC,EAAKhjC,KAIZizB,GAHS+P,EAAKiI,OAGRjI,EAAKkI,UAAUjY,IAWzBr0B,GAAOC,QAAUsuC,WAEjBA,WAAW/tC,UAAU0f,OAAS,SAAgBsR,EAAM4T,GAClD,MAAO7jC,MAAKqqC,KAAKtoB,QAAQkO,EAAM4T,GAAUtH,QAQ3Cj9B,EAASgrC,QAASzqC,EAAK8lC,MAEvB2E,QAAQrrC,UAAUsqC,iBAAmB,SAAyBxD,EACAoD,EACAG,EACAJ,GAC5D,GAAIkE,GAAaH,UAAUlH,EAAKoD,EAAWG,EAAKtpC,KAAK6jC,SAGrD,IAAIqF,EAAQ/oC,OAAS,IAAM,CACzB,GAAIktC,GAAS,GAAIroC,GAAO,EAGxB,OAFAqoC,GAAO,GAAKD,EACZC,EAAO,GAAKnE,EAAQ/oC,OACbH,KAAK+oC,sBAAuBsE,EAAQnE,IAM7C,IAAK,GADDoE,GAAY,EACPxsC,EAAIooC,EAAQ/oC,OAAQW,GAAK,IAAOA,IAAM,EAC7CwsC,GAEF,IAAID,GAAS,GAAIroC,GAAO,EAAQsoC,EAChCD,GAAO,GAAKD,EACZC,EAAO,GAAK,IAAOC,CAEnB,KAAK,GAAIxsC,GAAI,EAAIwsC,EAAWhrC,EAAI4mC,EAAQ/oC,OAAQmC,EAAI,EAAGxB,IAAKwB,IAAM,EAChE+qC,EAAOvsC,GAAS,IAAJwB,CAEd,OAAOtC,MAAK+oC,sBAAuBsE,EAAQnE,KAG7CoB,QAAQrrC,UAAUuqC,WAAa,SAAmBjpC,EAAKwlC,GACrD,MAAY,WAARA,EACK/lC,KAAK+oC,qBAAqBxoC,GAClB,WAARwlC,EACA/lC,KAAK+oC,sBAAoC,EAAbxoC,EAAI+qC,OAAY/qC,EAAI0vB,OACxC,WAAR8V,GAA4B,YAARA,EACpB/lC,KAAK+oC,qBAAqBxoC,GAC5BP,KAAK6jC,SAASoB,MAAM,4BAA8Bc,EAC9B,iBAG7BuE,QAAQrrC,UAAUwqC,aAAe,SAAqB3J,EAAI8L,EAAQC,GAChE,GAAkB,gBAAP/L,GAAiB,CAC1B,IAAK8L,EACH,MAAO5rC,MAAK6jC,SAASoB,MAAM,8CAC7B,KAAK2G,EAAO/f,eAAeiU,GACzB,MAAO9/B,MAAK6jC,SAASoB,MAAM,gCAC7BnF,GAAK8L,EAAO9L,GAAI5nB,MAAM,WACtB,KAAK,GAAIpX,GAAI,EAAGA,EAAIg/B,EAAG3/B,OAAQW,IAC7Bg/B,EAAGh/B,IAAM,MACN,IAAIQ,MAAM4D,QAAQ46B,GAAK,CAC5BA,EAAKA,EAAG5iB,OACR,KAAK,GAAIpc,GAAI,EAAGA,EAAIg/B,EAAG3/B,OAAQW,IAC7Bg/B,EAAGh/B,IAAM,EAGb,IAAKQ,MAAM4D,QAAQ46B,GACjB,MAAO9/B,MAAK6jC,SAASoB,MAAM,kDACUnf,KAAKsf,UAAUtF,GAGtD,KAAK+L,EAAU,CACb,GAAI/L,EAAG,IAAM,GACX,MAAO9/B,MAAK6jC,SAASoB,MAAM,8BAC7BnF,GAAG0N,OAAO,EAAG,EAAW,GAAR1N,EAAG,GAAUA,EAAG,IAKlC,IAAK,GADDp5B,GAAO,EACF5F,EAAI,EAAGA,EAAIg/B,EAAG3/B,OAAQW,IAAK,CAClC,GAAIirC,GAAQjM,EAAGh/B,EACf,KAAK4F,IAAQqlC,GAAS,IAAMA,IAAU,EACpCrlC,IAKJ,IAAK,GAFD+mC,GAAQ,GAAIzoC,GAAO0B,GACnBuhC,EAASwF,EAAMttC,OAAS,EACnBW,EAAIg/B,EAAG3/B,OAAS,EAAGW,GAAK,EAAGA,IAAK,CACvC,GAAIirC,GAAQjM,EAAGh/B,EAEf,KADA2sC,EAAMxF,KAAoB,IAAR8D,GACVA,IAAU,GAAK,GACrB0B,EAAMxF,KAAY,IAAgB,IAAR8D,EAG9B,MAAO/rC,MAAK+oC,qBAAqB0E,IAUnCnD,QAAQrrC,UAAUyqC,YAAc,SAAoBgE,EAAM3H,GACxD,GAAIxlC,GACAotC,EAAO,GAAIpB,MAAKmB,EA0BpB,OAxBY,YAAR3H,EACFxlC,GACE4e,IAAIwuB,EAAKC,eACTzuB,IAAIwuB,EAAKE,cAAgB,GACzB1uB,IAAIwuB,EAAKG,cACT3uB,IAAIwuB,EAAKI,eACT5uB,IAAIwuB,EAAKK,iBACT7uB,IAAIwuB,EAAKM,iBACT,KACA1R,KAAK,IACU,YAARwJ,EACTxlC,GACE4e,IAAIwuB,EAAKC,cAAgB,KACzBzuB,IAAIwuB,EAAKE,cAAgB,GACzB1uB,IAAIwuB,EAAKG,cACT3uB,IAAIwuB,EAAKI,eACT5uB,IAAIwuB,EAAKK,iBACT7uB,IAAIwuB,EAAKM,iBACT,KACA1R,KAAK,IAEPv8B,KAAK6jC,SAASoB,MAAM,YAAcc,EAAM,8BAGnC/lC,KAAKwpC,WAAWjpC,EAAK,WAG9B+pC,QAAQrrC,UAAU0qC,YAAc,WAC9B,MAAO3pC,MAAK+oC,qBAAqB,KAGnCuB,QAAQrrC,UAAU2qC,WAAa,SAAmBxoC,EAAKwqC,GACrD,GAAmB,gBAARxqC,GAAkB,CAC3B,IAAKwqC,EACH,MAAO5rC,MAAK6jC,SAASoB,MAAM,8CAC7B,KAAK2G,EAAO/f,eAAezqB,GACzB,MAAOpB,MAAK6jC,SAASoB,MAAM,+BACAnf,KAAKsf,UAAUhkC,GAE5CA,GAAMwqC,EAAOxqC,GAIf,GAAmB,gBAARA,KAAqB4D,EAAOkuB,SAAS9xB,GAAM,CACpD,GAAI8sC,GAAW9sC,EAAIwE,SACfxE,GAAIksB,QAAS,GAAuB,IAAd4gB,EAAS,IACjCA,EAASC,QAAQ,GAEnB/sC,EAAM,GAAI4D,GAAOkpC,GAGnB,GAAIlpC,EAAOkuB,SAAS9xB,GAAM,CACxB,GAAIsF,GAAOtF,EAAIjB,MACI,KAAfiB,EAAIjB,QACNuG,GAEF,IAAI7E,GAAM,GAAImD,GAAO0B,EAIrB,OAHAtF,GAAIkF,KAAKzE,GACU,IAAfT,EAAIjB,SACN0B,EAAI,GAAK,GACJ7B,KAAK+oC,qBAAqBlnC,GAGnC,GAAIT,EAAM,IACR,MAAOpB,MAAK+oC,qBAAqB3nC,EAEnC,IAAIA,EAAM,IACR,MAAOpB,MAAK+oC,sBAAsB,EAAG3nC,GAGvC,KAAK,GADDsF,GAAO,EACF5F,EAAIM,EAAKN,GAAK,IAAOA,IAAM,EAClC4F,GAGF,KAAK,GADD7E,GAAM,GAAIP,OAAMoF,GACX5F,EAAIe,EAAI1B,OAAS,EAAGW,GAAK,EAAGA,IACnCe,EAAIf,GAAW,IAANM,EACTA,IAAQ,CAMV,OAJY,KAATS,EAAI,IACLA,EAAIssC,QAAQ,GAGPnuC,KAAK+oC,qBAAqB,GAAI/jC,GAAOnD,KAG9CyoC,QAAQrrC,UAAU4qC,YAAc,SAAoBpX,GAClD,MAAOzyB,MAAK+oC,qBAAqBtW,EAAQ,IAAO,IAGlD6X,QAAQrrC,UAAU0pC,KAAO,SAAalF,EAAQ1kC,GAG5C,MAFsB,kBAAX0kC,KACTA,EAASA,EAAO1kC,IACX0kC,EAAOG,YAAY,OAAOyG,MAGnCC,QAAQrrC,UAAUgqC,aAAe,SAAqBmF,EAAYvK,EAAU+B,GAC1E,GACI9kC,GADA0jC,EAAQxkC,KAAK6lC,UAEjB,IAAyB,OAArBrB,EAAM,WACR,OAAO,CAET,IAAIvU,GAAOme,EAAW7R,MAItB,IAH4BljB,SAAxBmrB,EAAM6J,gBACR7J,EAAM6J,cAAgBruC,KAAKgpC,aAAaxE,EAAM,WAAYX,EAAU+B,GAAQrJ,QAE1EtM,EAAK9vB,SAAWqkC,EAAM6J,cAAcluC,OACtC,OAAO,CAET,KAAKW,EAAE,EAAGA,EAAImvB,EAAK9vB,OAAQW,IACzB,GAAImvB,EAAKnvB,KAAO0jC,EAAM6J,cAAcvtC,GAClC,OAAO,CAEX,QAAO,IxCwiYHwxC,KACA,SAAS7zC,EAAQC,EAASC,GAE/B,YyCvxYD,SAAS4vC,YAAW9K,GAClBuJ,EAAWtpC,KAAK1D,KAAMyjC,GACtBzjC,KAAKid,IAAM,MARb,GAAI3d,GAAWX,EAAQ,KAInBquC,GAHSruC,EAAQ,KAAUqG,OAEpBrG,EAAQ,MACFA,EAAQ,MAMzBW,GAASivC,WAAYvB,GACrBvuC,EAAOC,QAAU6vC,WAEjBA,WAAWtvC,UAAU0f,OAAS,SAAgBsR,EAAMtE,GAKlD,IAAK,GAJD8D,GAAMud,EAAW/tC,UAAU0f,OAAOjb,KAAK1D,KAAMiwB,GAE7C9sB,EAAIssB,EAAIjqB,SAAS,UACjB3D,GAAQ,cAAgB8pB,EAAQihB,MAAQ,SACnC9rC,EAAI,EAAGA,EAAIqC,EAAEhD,OAAQW,GAAK,GACjCe,EAAIsb,KAAKha,EAAE+Z,MAAMpc,EAAGA,EAAI,IAE1B,OADAe,GAAIsb,KAAK,YAAcwO,EAAQihB,MAAQ,SAChC/qC,EAAI06B,KAAK,QzCoyYZgW,KACA,SAAS9zC,EAAQC,EAASC,GAE/B,Y0ChzYD,SAAS6zC,UAAU3B,GACjB,GAAIjlB,KA4BJ,OA3BA2K,QAAO+F,KAAKuU,GAAY9S,QAAQ,SAAUje,GACxC,GAAI2yB,EAEJlc,QAAO0H,eAAerS,EAAQ9L,GAC5Boe,IAAK,WAUH,MATKuU,KACHA,GACE3B,gBAAiBD,EAAW/wB,GAC5BoxB,mBAAoBtE,MAAO,kBAC3BuE,kBAAmBvE,MAAO,cAC1B9sB,MAAO,GAAI4L,GAAG5L,KAIX2yB,KAIPC,EAAQ5yB,IACVyW,OAAO0H,eAAerS,EAAQ8mB,EAAQ5yB,IACpCoe,IAAK,WACH,MAAOtS,GAAO9L,QAMf8L,EAxCT,GAAIF,GAAK/sB,EAAQ,MAAYiwB,GACzB8jB,EAAU/zC,EAAQ,MAClBkyC,GACA9d,WAAY,EAAG,EAAG,IAAK,EAAG,IAC1Bjb,MAAO,EAAG,EAAG,IAAK,MAAO,EAAG,EAAG,GAC/BD,MAAO,EAAG,EAAG,IAAK,EAAG,IACrBk4B,MAAO,EAAG,EAAG,IAAK,MAAO,EAAG,EAAG,GAC/BC,MAAO,EAAG,EAAG,IAAK,EAAG,IACrBC,MAAO,EAAG,EAAG,IAAK,EAAG,IAmCzBxxC,GAAOC,QAAU8zC,SAAS3B,I1Ci0YpB8B,MACL,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAErCC,KACA,SAASn0C,EAAQC,G2Cj3YvBD,EAAAC,SACA8a,SAGAC,IAAA,kBACAC,MAAA,KACAC,YAAA,WACAzW,KAAA,WACA0W,QAAA,SACAC,KAAA,iBACAC,KAAA,SAEA,4FAGAC,MAAA,0BACAC,IAAA,iBACAC,UAAA,EACA44B,cAAA,EACA34B,UAAA,uBACA44B,aAAA,QACAC,UACA7vC,KAAA,UACA0X,MAAA,qBAEAo4B,YAAA,SACA74B,oBACAC,YACAX,IAAA,kBACAC,MAAA,KACAC,YAAA,WACAzW,KAAA,WACA0W,QAAA,SACAC,KAAA,iBACAC,KAAA,SAEAO,aACA,2BAEAC,UAAA,2DACAC,QAAA,2CACAC,YAAA,KACAC,MAAA,kBACAC,OAAA,0FACAC,QACAzX,KAAA,gBACA0X,MAAA,qBAEAC,MACAC,IAAA,8CAEAC,cACAC,QAAA,SACAC,QAAA,SACAC,UAAA,SACA5b,SAAA,UAEA6b,YAAA,kBACAC,iBACA63B,WAAA,UACA33B,UAAA,UACAQ,SAAA,UACAC,KAAA,UACAC,OAAA,SACAC,MAAA,SACAi3B,YAAA,WAEAC,eACAC,MACAC,OAAA,2CACAC,QAAA,4DAEAC,QAAA,2CACAp3B,SAAA,sCACAC,UACA,KACA,WACA,QACA,gBAEAC,QAAA,MACAC,KAAA,kBACAk3B,cAEAtwC,KAAA,UACA0X,MAAA,sBAGA1X,KAAA,WACAqZ,wBACAC,OAAA,+BACAE,YACA5C,KAAA,MACAgB,IAAA,iDAEA6B,SACArB,UAAA,uCACAuB,KAAA,oEAEAE,QAAA,U3Cw3YM02B,KACA,SAASh1C,EAAQC,EAASC,G4C59YhC,YAUA,SAASiH,SAAQxG,EAAK6d,GACpB,GAAI3b,MAAM4D,QAAQ9F,GAChB,MAAOA,GAAI8d,OACb,KAAK9d,EACH,QACF,IAAI2I,KACJ,IAAmB,gBAAR3I,GAAkB,CAC3B,IAAK,GAAI0B,GAAI,EAAGA,EAAI1B,EAAIe,OAAQW,IAC9BiH,EAAIjH,GAAc,EAAT1B,EAAI0B,EACf,OAAOiH,GAET,GAAKkV,GAUE,GAAY,QAARA,EAAe,CACxB7d,EAAMA,EAAIqG,QAAQ,eAAgB,IAC9BrG,EAAIe,OAAS,IAAM,IACrBf,EAAM,IAAMA,EACd,KAAK,GAAI0B,GAAI,EAAGA,EAAI1B,EAAIe,OAAQW,GAAK,EACnCiH,EAAIoV,KAAKC,SAAShe,EAAI0B,GAAK1B,EAAI0B,EAAI,GAAI,UAdzC,KAAK,GAAIA,GAAI,EAAGA,EAAI1B,EAAIe,OAAQW,IAAK,CACnC,GAAIC,GAAI3B,EAAI4B,WAAWF,GACnByH,EAAKxH,GAAK,EACViB,EAAS,IAAJjB,CACLwH,GACFR,EAAIoV,KAAK5U,EAAIvG,GAEb+F,EAAIoV,KAAKnb,GASf,MAAO+F,GAIT,QAASsV,OAAMnX,GACb,MAAoB,KAAhBA,EAAK/F,OACA,IAAM+F,EAENA,EAIX,QAASoX,OAAMle,GAEb,IAAK,GADD2I,GAAM,GACDjH,EAAI,EAAGA,EAAI1B,EAAIe,OAAQW,IAC9BiH,GAAOsV,MAAMje,EAAI0B,GAAG0E,SAAS,IAC/B,OAAOuC,GAYT,QAASwV,QAAOnc,EAAKC,GAInB,IAHA,GAAImc,MACAlM,EAAK,GAAMjQ,EAAI,EACfa,EAAId,EAAIoF,QACLtE,EAAEoT,KAAK,IAAM,GAAG,CACrB,GAAIuD,EACJ,IAAI3W,EAAE8S,QAAS,CACb,GAAI/O,GAAM/D,EAAE+F,MAAMqJ,EAAK,EAErBuH,GADE5S,GAAOqL,GAAM,GAAK,GACfA,GAAM,GAAKrL,EAEZA,EACN/D,EAAEyC,MAAMkU,OAERA,GAAI,CAEN2E,GAAIL,KAAKtE,EAIT,KAAK,GADDzU,GAAuB,IAAdlC,EAAEoT,KAAK,IAAgC,IAApBpT,EAAE+F,MAAMqJ,EAAK,GAAajQ,EAAI,EAAK,EAC1DP,EAAI,EAAGA,EAAIsD,EAAOtD,IACzB0c,EAAIL,KAAK,EACXjb,GAAEgG,OAAO9D,GAGX,MAAOoZ,GAKT,QAASC,QAAOC,EAAIC,GAClB,GAAIC,UAKJF,GAAKA,EAAGlX,QACRmX,EAAKA,EAAGnX,OAGR,KAFA,GAAIqX,GAAK,EACLC,EAAK,EACFJ,EAAGpI,MAAMuI,GAAM,GAAKF,EAAGrI,MAAMwI,GAAM,GAAG,CAG3C,GAAIC,GAAOL,EAAGzV,MAAM,GAAK4V,EAAM,EAC3BG,EAAOL,EAAG1V,MAAM,GAAK6V,EAAM,CACnB,KAARC,IACFA,MACU,IAARC,IACFA,KACF,IAAIC,EACJ,IAAkB,KAAP,EAANF,GACHE,EAAK,MACA,CACL,GAAIC,GAAMR,EAAGzV,MAAM,GAAK4V,EAAM,CAI5BI,GAHU,IAAPC,GAAmB,IAAPA,GAAqB,IAARF,EAGvBD,GAFCA,EAIVH,EAAI,GAAGT,KAAKc,EAEZ,IAAIE,EACJ,IAAkB,KAAP,EAANH,GACHG,EAAK,MACA,CACL,GAAID,GAAMP,EAAG1V,MAAM,GAAK6V,EAAM,CAI5BK,GAHU,IAAPD,GAAmB,IAAPA,GAAqB,IAARH,EAGvBC,GAFCA,EAIVJ,EAAI,GAAGT,KAAKgB,GAGR,EAAIN,IAAOI,EAAK,IAClBJ,EAAK,EAAIA,GACP,EAAIC,IAAOK,EAAK,IAClBL,EAAK,EAAIA,GACXJ,EAAGxV,OAAO,GACVyV,EAAGzV,OAAO,GAGZ,MAAO0V,GAIT,QAASQ,gBAAerf,EAAKsf,GAC3B,GAAInb,GAAOmb,EAASnb,KAChBob,EAAM,IAAMpb,CAChBnE,GAAIE,UAAUiE,GAAQ,WACpB,MAAqBmW,UAAdrZ,KAAKse,GAAqBte,KAAKse,GAC/Bte,KAAKse,GAAOD,EAAS3a,KAAK1D,OAKrC,QAASue,YAAWC,GAClB,MAAwB,gBAAVA,GAAqBC,EAAM7Y,QAAQ4Y,EAAO,OACrBA,EAIrC,QAASE,WAAUF,GACjB,MAAO,IAAI8a,GAAG9a,EAAO,MAAO,MAvK9B,GAAIC,GAAQ/f,EACR46B,EAAK36B,EAAQ,KAEjB8f,GAAMvf,OAAS,SAAgBC,EAAKC,GAClC,IAAKD,EACH,KAAM,IAAIE,OAAMD,GAAO,qBAiC3Bqf,EAAM7Y,QAAUA,QAQhB6Y,EAAMpB,MAAQA,MAQdoB,EAAMnB,MAAQA,MAEdmB,EAAME,OAAS,SAAgBC,EAAK3B,GAClC,MAAY,QAARA,EACKK,MAAMsB,GAENA,GA+BXH,EAAMlB,OAASA,OAyDfkB,EAAMhB,OAASA,OAUfgB,EAAML,eAAiBA,eAMvBK,EAAMF,WAAaA,WAKnBE,EAAMC,UAAYA,W5Co8YZg1B,KACA,SAASj1C,EAAQC,EAASC,IAEH,SAASF,GAAS,YAE9C,IAAIG,GAA4B,kBAAXC,SAAoD,gBAApBA,QAAOC,SAAwB,SAAUC,GAAO,aAAcA,IAAS,SAAUA,GAAO,MAAOA,IAAyB,kBAAXF,SAAyBE,EAAIC,cAAgBH,QAAUE,IAAQF,OAAOI,UAAY,eAAkBF,K6CpnZvQ,SAAWN,EAAQC,GAMnB,QAASQ,QAAOC,EAAKC,GACnB,IAAKD,EACH,KAAM,IAAIE,OAAMD,GAAO,oBAK3B,QAASE,UAASC,EAAMC,GACtBD,EAAKE,OAASD,CACd,IAAIE,GAAW,YACfA,GAAST,UAAYO,EAAUP,UAC/BM,EAAKN,UAAY,GAAIS,GACrBH,EAAKN,UAAUD,YAAcO,EAK/B,QAASI,IAAGC,EAAQC,EAAMC,GAExB,MAAe,QAAXF,GACkB,YAAlB,mBAAOA,GAAP,YAAAhB,EAAOgB,KACP0B,MAAM4D,QAAQtF,EAAOM,OAChBN,GAGTI,KAAKstB,MAAO,EACZttB,KAAKE,MAAQ,KACbF,KAAKG,OAAS,EAGdH,KAAKI,IAAM,KAEE,OAATP,GAA0B,OAATA,IACnBC,EAASD,EACTA,EAAO,SAGM,OAAXD,GACFI,KAAKK,MAAMT,GAAU,EAAGC,GAAQ,GAAIC,GAAU,QA+HlD,QAASQ,UAASC,EAAKC,EAAOC,GAG5B,IAAK,GAFDC,GAAI,EACJC,EAAMC,KAAKC,IAAIN,EAAIJ,OAAQM,GACtBK,EAAIN,EAAOM,EAAIH,EAAKG,IAAK,CAChC,GAAIC,GAAIR,EAAIS,WAAWF,GAAK,EAE5BJ,KAAM,EAIJA,GADEK,GAAK,IAAMA,GAAK,GACbA,EAAI,GAAK,GAGPA,GAAK,IAAMA,GAAK,GAClBA,EAAI,GAAK,GAIL,GAAJA,EAET,MAAOL,GA8BT,QAASO,WAAUV,EAAKC,EAAOC,EAAKS,GAGlC,IAAK,GAFDR,GAAI,EACJC,EAAMC,KAAKC,IAAIN,EAAIJ,OAAQM,GACtBK,EAAIN,EAAOM,EAAIH,EAAKG,IAAK,CAChC,GAAIC,GAAIR,EAAIS,WAAWF,GAAK,EAE5BJ,IAAKQ,EAIHR,GADEK,GAAK,GACFA,EAAI,GAAK,GAGPA,GAAK,GACPA,EAAI,GAAK,GAITA,EAET,MAAOL,GA4TT,QAASS,YAAWC,GAGlB,IAAK,GAFDC,GAAI,GAAIC,OAAMF,EAAIG,aAEbC,EAAM,EAAGA,EAAMH,EAAElB,OAAQqB,IAAO,CACvC,GAAIC,GAAOD,EAAM,GAAM,EACnBE,EAAOF,EAAM,EAEjBH,GAAEG,IAAQJ,EAAIlB,MAAMuB,GAAQ,GAAKC,KAAWA,EAG9C,MAAOL,GAm5CT,QAAS4B,QAAOC,EAAMC,GAEpBnD,KAAKkD,KAAOA,EACZlD,KAAKmD,EAAI,GAAIxD,IAAGwD,EAAG,IACnBnD,KAAKoD,EAAIpD,KAAKmD,EAAE5B,YAChBvB,KAAKkC,EAAI,GAAIvC,IAAG,GAAG0D,OAAOrD,KAAKoD,GAAGE,KAAKtD,KAAKmD,GAE5CnD,KAAKuD,IAAMvD,KAAKwD,OA2ClB,QAASC,QACPR,OAAOS,KACL1D,KACA,OACA,2EA8DJ,QAAS2D,QACPV,OAAOS,KACL1D,KACA,OACA,kEAIJ,QAAS4D,QACPX,OAAOS,KACL1D,KACA,OACA,yDAIJ,QAAS6D,UAEPZ,OAAOS,KACL1D,KACA,QACA,uEA6CJ,QAAS8D,KAAIC,GACX,GAAiB,gBAANA,GAAgB,CACzB,GAAIC,GAAQrE,GAAGsE,OAAOF,EACtB/D,MAAK+D,EAAIC,EAAMb,EACfnD,KAAKgE,MAAQA,MAEbhE,MAAK+D,EAAIA,EACT/D,KAAKgE,MAAQ,KAoMjB,QAASG,MAAKJ,GACZD,IAAIJ,KAAK1D,KAAM+D,GAEf/D,KAAKoE,MAAQpE,KAAK+D,EAAExC,YAChBvB,KAAKoE,MAAQ,KAAO,IACtBpE,KAAKoE,OAAS,GAAMpE,KAAKoE,MAAQ,IACnCpE,KAAKU,EAAI,GAAIf,IAAG,GAAG0D,OAAOrD,KAAKoE,OAC/BpE,KAAKqE,GAAKrE,KAAKsE,KAAKtE,KAAKU,EAAE6D,OAC3BvE,KAAKwE,KAAOxE,KAAKU,EAAE+D,OAAOzE,KAAK+D,GAE/B/D,KAAK0E,KAAO1E,KAAKwE,KAAKtD,IAAIlB,KAAKU,GAAGiE,MAAM,GAAGC,IAAI5E,KAAK+D,GACpD/D,KAAK0E,KAAO1E,KAAK0E,KAAKG,KAAK7E,KAAKU,GAChCV,KAAK0E,KAAO1E,KAAKU,EAAEoE,IAAI9E,KAAK0E,MAzyER,YAAlB,mBAAOjG,GAAP,YAAAG,EAAOH,IACTA,EAAOC,QAAUiB,GAEjBjB,EAAQiB,GAAKA,GAEfA,GAAGA,GAAKA,GACRA,GAAGoF,SAAW,GAEdpF,GAAG4C,IAAM,SAAa4C,EAAMC,GAC1B,MAAID,GAAKE,IAAID,GAAS,EACbD,EAEAC,GAGXzF,GAAGkB,IAAM,SAAasE,EAAMC,GAC1B,MAAID,GAAKE,IAAID,GAAS,EACbD,EAEAC,GAGXzF,GAAGV,UAAUoB,MAAQ,SAAcT,EAAQC,EAAMC,GAC/C,GAAsB,gBAAXF,GACT,MAAOI,MAAKsF,YAAY1F,EAAQC,EAAMC,EACjC,IAAsB,YAAlB,mBAAOF,GAAP,YAAAhB,EAAOgB,IAChB,MAAOI,MAAKuF,WAAW3F,EAAQC,EAAMC,EAE1B,SAATD,IACFA,EAAO,IACTX,OAAOW,KAAiB,EAAPA,IAAaA,GAAQ,GAAKA,GAAQ,IAEnDD,EAASA,EAAO4F,WAAWC,QAAQ,OAAQ,GAC3C,IAAIjF,GAAQ,CACM,OAAdZ,EAAO,IACTY,IAEW,KAATX,EACFG,KAAK0F,UAAU9F,EAAQY,GAEvBR,KAAK2F,WAAW/F,EAAQC,EAAMW,GAEd,MAAdZ,EAAO,KACTI,KAAKstB,MAAO,GAEdttB,KAAKwC,QAEU,OAAX1C,GAGJE,KAAKuF,WAAWvF,KAAK4F,UAAW/F,EAAMC,IAGxCH,GAAGV,UAAUqG,YAAc,SAAqB1F,EAAQC,EAAMC,GACxDF,EAAS,IACXI,KAAKstB,MAAO,EACZ1tB,GAAUA,GAERA,EAAS,UACXI,KAAKE,OAAmB,SAATN,GACfI,KAAKG,OAAS,GACLP,EAAS,kBAClBI,KAAKE,OACM,SAATN,EACCA,EAAS,SAAa,UAEzBI,KAAKG,OAAS,IAEdjB,OAAOU,EAAS,kBAChBI,KAAKE,OACM,SAATN,EACCA,EAAS,SAAa,SACvB,GAEFI,KAAKG,OAAS,GAGD,OAAXL,GAIJE,KAAKuF,WAAWvF,KAAK4F,UAAW/F,EAAMC,IAGxCH,GAAGV,UAAUsG,WAAa,SAAoB3F,EAAQC,EAAMC,GAG1D,GADAZ,OAAgC,gBAAlBU,GAAOO,QACjBP,EAAOO,QAAU,EAGnB,MAFAH,MAAKE,OAAU,GACfF,KAAKG,OAAS,EACPH,IAGTA,MAAKG,OAASS,KAAKiF,KAAKjG,EAAOO,OAAS,GACxCH,KAAKE,MAAQ,GAAIoB,OAAMtB,KAAKG,OAC5B,KAAK,GAAIW,GAAI,EAAGA,EAAId,KAAKG,OAAQW,IAC/Bd,KAAKE,MAAMY,GAAK,CAElB,IAAIW,GAAM,CACV,IAAe,OAAX3B,EACF,IAAK,GAAIgB,GAAIlB,EAAOO,OAAS,EAAGmC,EAAI,EAAGxB,GAAK,EAAGA,GAAK,EAAG,CACrD,GAAIO,GAAIzB,EAAOkB,GAAMlB,EAAOkB,EAAI,IAAM,EAAMlB,EAAOkB,EAAI,IAAM,EAC7Dd,MAAKE,MAAMoC,IAAOjB,GAAKI,EAAO,SAC9BzB,KAAKE,MAAMoC,EAAI,GAAMjB,IAAO,GAAKI,EAAQ,SACzCA,GAAO,GACHA,GAAO,KACTA,GAAO,GACPa,SAGC,IAAe,OAAXxC,EACT,IAAK,GAAIgB,GAAI,EAAGwB,EAAI,EAAGxB,EAAIlB,EAAOO,OAAQW,GAAK,EAAG,CAChD,GAAIO,GAAIzB,EAAOkB,GAAMlB,EAAOkB,EAAI,IAAM,EAAMlB,EAAOkB,EAAI,IAAM,EAC7Dd,MAAKE,MAAMoC,IAAOjB,GAAKI,EAAO,SAC9BzB,KAAKE,MAAMoC,EAAI,GAAMjB,IAAO,GAAKI,EAAQ,SACzCA,GAAO,GACHA,GAAO,KACTA,GAAO,GACPa,KAIN,MAAOtC,MAAKwC,SA0Bd7C,GAAGV,UAAUyG,UAAY,SAAmB9F,EAAQY,GAElDR,KAAKG,OAASS,KAAKiF,MAAMjG,EAAOO,OAASK,GAAS,GAClDR,KAAKE,MAAQ,GAAIoB,OAAMtB,KAAKG,OAC5B,KAAK,GAAIW,GAAI,EAAGA,EAAId,KAAKG,OAAQW,IAC/Bd,KAAKE,MAAMY,GAAK,CAIlB,KAAK,GADDW,GAAM,EACDX,EAAIlB,EAAOO,OAAS,EAAGmC,EAAI,EAAGxB,GAAKN,EAAOM,GAAK,EAAG,CACzD,GAAIO,GAAIf,SAASV,EAAQkB,EAAGA,EAAI,EAChCd,MAAKE,MAAMoC,IAAOjB,GAAKI,EAAO,SAC9BzB,KAAKE,MAAMoC,EAAI,IAAMjB,IAAO,GAAKI,EAAO,QACxCA,GAAO,GACHA,GAAO,KACTA,GAAO,GACPa,KAGJ,GAAIxB,EAAI,IAAMN,EAAO,CACnB,GAAIa,GAAIf,SAASV,EAAQY,EAAOM,EAAI,EACpCd,MAAKE,MAAMoC,IAAOjB,GAAKI,EAAO,SAC9BzB,KAAKE,MAAMoC,EAAI,IAAMjB,IAAO,GAAKI,EAAO,QAE1CzB,KAAKwC,SA0BP7C,GAAGV,UAAU0G,WAAa,SAAoB/F,EAAQC,EAAMW,GAE1DR,KAAKE,OAAU,GACfF,KAAKG,OAAS,CAGd,KAAK,GAAI2F,GAAU,EAAGC,EAAU,EAAGA,GAAW,SAAWA,GAAWlG,EAClEiG,GACFA,KACAC,EAAWA,EAAUlG,EAAQ,CAO7B,KAAK,GALDmG,GAAQpG,EAAOO,OAASK,EACxByF,EAAMD,EAAQF,EACdrF,EAAMG,KAAKC,IAAImF,EAAOA,EAAQC,GAAOzF,EAErC0F,EAAO,EACFpF,EAAIN,EAAOM,EAAIL,EAAKK,GAAKgF,EAChCI,EAAOjF,UAAUrB,EAAQkB,EAAGA,EAAIgF,EAASjG,GAEzCG,KAAKmG,MAAMJ,GACP/F,KAAKE,MAAM,GAAKgG,EAAO,SACzBlG,KAAKE,MAAM,IAAMgG,EAEjBlG,KAAKoG,OAAOF,EAGhB,IAAY,IAARD,EAAW,CAIb,IAAK,GAHDI,GAAM,EACNH,EAAOjF,UAAUrB,EAAQkB,EAAGlB,EAAOO,OAAQN,GAEtCiB,EAAI,EAAGA,EAAImF,EAAKnF,IACvBuF,GAAOxG,CACTG,MAAKmG,MAAME,GACPrG,KAAKE,MAAM,GAAKgG,EAAO,SACzBlG,KAAKE,MAAM,IAAMgG,EAEjBlG,KAAKoG,OAAOF,KAIlBvG,GAAGV,UAAUqH,KAAO,SAAcC,GAChCA,EAAKrG,MAAQ,GAAIoB,OAAMtB,KAAKG,OAC5B,KAAK,GAAIW,GAAI,EAAGA,EAAId,KAAKG,OAAQW,IAC/ByF,EAAKrG,MAAMY,GAAKd,KAAKE,MAAMY,EAC7ByF,GAAKpG,OAASH,KAAKG,OACnBoG,EAAK+mB,KAAOttB,KAAKstB,KACjB/mB,EAAKnG,IAAMJ,KAAKI,KAGlBT,GAAGV,UAAUuH,MAAQ,WACnB,GAAI9F,GAAI,GAAIf,IAAG,KAEf,OADAK,MAAKsG,KAAK5F,GACHA,GAITf,GAAGV,UAAUuD,MAAQ,WACnB,KAAOxC,KAAKG,OAAS,GAAqC,IAAhCH,KAAKE,MAAMF,KAAKG,OAAS,IACjDH,KAAKG,QACP,OAAOH,MAAK2G,aAGdhH,GAAGV,UAAU0H,UAAY,WAIvB,MAFoB,KAAhB3G,KAAKG,QAAkC,IAAlBH,KAAKE,MAAM,KAClCF,KAAKstB,MAAO,GACPttB,MAGTL,GAAGV,UAAU2H,QAAU,WACrB,OAAQ5G,KAAKI,IAAM,UAAY,SAAWJ,KAAKwF,SAAS,IAAM,IAiChE,IAAIqB,IACF,GACA,IACA,KACA,MACA,OACA,QACA,SACA,UACA,WACA,YACA,aACA,cACA,eACA,gBACA,iBACA,kBACA,mBACA,oBACA,qBACA,sBACA,uBACA,wBACA,yBACA,0BACA,2BACA,6BAGEC,GACF,EAAG,EACH,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EACvB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAClB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAClB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAClB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAGhBC,GACF,EAAG,EACH,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAC5D,SAAU,IAAU,SAAU,SAAU,SAAU,QAAS,SAC3D,SAAU,SAAU,SAAU,SAAU,KAAU,QAAS,QAC3D,QAAS,QAAS,QAAS,SAAU,SAAU,SAAU,SACzD,MAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAG9DpH,IAAGV,UAAUuG,SAAW,SAAkB3F,EAAMmH,GAC9CnH,EAAOA,GAAQ,EACf,IAAImH,GAAoB,EAAVA,GAAe,CAC7B,IAAa,KAATnH,GAAwB,QAATA,EAAgB,CAIjC,IAAK,GAHDgC,GAAM,GACNJ,EAAM,EACNQ,EAAQ,EACHnB,EAAI,EAAGA,EAAId,KAAKG,OAAQW,IAAK,CACpC,GAAIO,GAAIrB,KAAKE,MAAMY,GACfoF,GAA+B,UAArB7E,GAAKI,EAAOQ,IAAmBuD,SAAS,GACtDvD,GAASZ,IAAO,GAAKI,EAAQ,SAE3BI,EADY,IAAVI,GAAenB,IAAMd,KAAKG,OAAS,EAC/B0G,EAAM,EAAIX,EAAK/F,QAAU+F,EAAOrE,EAEhCqE,EAAOrE,EACfJ,GAAO,EACHA,GAAO,KACTA,GAAO,GACPX,KAKJ,IAFc,IAAVmB,IACFJ,EAAMI,EAAMuD,SAAS,IAAM3D,GACtBA,EAAI1B,OAAS6G,IAAY,GAC9BnF,EAAM,IAAMA,CAGd,OAFI7B,MAAKstB,OACPzrB,EAAM,IAAMA,GACPA,EACF,GAAIhC,KAAiB,EAAPA,IAAaA,GAAQ,GAAKA,GAAQ,GAAI,CAEzD,GAAIoH,GAAYH,EAAWjH,GAEvBqH,EAAYH,EAAWlH,GACvBgC,EAAM,GACNd,EAAIf,KAAKwG,OAEb,KADAzF,EAAEusB,MAAO,EACY,IAAdvsB,EAAEuU,KAAK,IAAU,CACtB,GAAI5U,GAAIK,EAAEqG,KAAKF,GAAW1B,SAAS3F,EACnCkB,GAAIA,EAAEsG,MAAMH,GAGVrF,EADgB,IAAdd,EAAEuU,KAAK,GACHzO,EAAMI,EAAYvG,EAAEP,QAAUO,EAAImB,EAElCnB,EAAImB,EAId,IAFqB,IAAjB7B,KAAKsV,KAAK,KACZzT,EAAM,IAAMA,GACPA,EAAI1B,OAAS6G,IAAY,GAC9BnF,EAAM,IAAMA,CAGd,OAFI7B,MAAKstB,OACPzrB,EAAM,IAAMA,GACPA,EAEP3C,QAAO,EAAO,oCAIlBS,GAAGV,UAAUuI,OAAS,WACpB,MAAOxH,MAAKwF,SAAS,KAGvB7F,GAAGV,UAAU2G,QAAU,SAAiB9F,EAAQK,GAC9CH,KAAKwC,OACL,IAAIsF,GAA0B,OAAXhI,EACfiI,EAAM,GAAIzG,OAAMtB,KAAK4H,aACzBG,GAAI,GAAK,CAET,IAAIC,GAAIhI,KAAKwG,OACb,IAAKsB,EASH,IAAK,GAAIhH,GAAI,EAAiB,IAAdkH,EAAEsN,KAAK,GAAUxU,IAAK,CACpC,GAAIiB,GAAIiG,EAAEC,MAAM,IAChBD,GAAEE,OAAO,GAETH,EAAIjH,GAAKiB,MAXX,KAAK,GAAIjB,GAAI,EAAiB,IAAdkH,EAAEsN,KAAK,GAAUxU,IAAK,CACpC,GAAIiB,GAAIiG,EAAEC,MAAM,IAChBD,GAAEE,OAAO,GAETH,EAAIA,EAAI5H,OAASW,EAAI,GAAKiB,EAW9B,GAAI5B,EAGF,IAFAjB,OAAO6I,EAAI5H,QAAUA,EAAQ,yCAEtB4H,EAAI5H,OAASA,GACd2H,EACFC,EAAIoV,KAAK,GAETpV,EAAIomC,QAAQ,EAIlB,OAAOpmC,IAGLnH,KAAKuH,MACPxI,GAAGV,UAAUmJ,WAAa,SAAoB/G,GAC5C,MAAO,IAAKT,KAAKuH,MAAM9G,IAGzB1B,GAAGV,UAAUmJ,WAAa,SAAoB/G,GAC5C,GAAIgH,GAAIhH,EACJX,EAAI,CAiBR,OAhBI2H,IAAK,OACP3H,GAAK,GACL2H,KAAO,IAELA,GAAK,KACP3H,GAAK,EACL2H,KAAO,GAELA,GAAK,IACP3H,GAAK,EACL2H,KAAO,GAELA,GAAK,IACP3H,GAAK,EACL2H,KAAO,GAEF3H,EAAI2H,GAIf1I,GAAGV,UAAUqJ,UAAY,SAAmBjH,GAE1C,GAAU,IAANA,EACF,MAAO,GAET,IAAIgH,GAAIhH,EACJX,EAAI,CAmBR,OAlBqB,MAAZ,KAAJ2H,KACH3H,GAAK,GACL2H,KAAO,IAEU,KAAV,IAAJA,KACH3H,GAAK,EACL2H,KAAO,GAES,KAAT,GAAJA,KACH3H,GAAK,EACL2H,KAAO,GAES,KAAT,EAAJA,KACH3H,GAAK,EACL2H,KAAO,GAES,KAAT,EAAJA,IACH3H,IACKA,GAITf,GAAGV,UAAUsC,UAAY,WACvB,GAAIgH,GAAK,EACLlH,EAAIrB,KAAKE,MAAMF,KAAKG,OAAS,GAC7BoI,EAAKvI,KAAKoI,WAAW/G,EACzB,OAA2B,KAAnBrB,KAAKG,OAAS,GAAUoI,GAiBlC5I,GAAGV,UAAUuJ,SAAW,WACtB,GAAqB,IAAjBxI,KAAKsV,KAAK,GACZ,MAAO,EAGT,KAAK,GADD5U,GAAI,EACCI,EAAI,EAAGA,EAAId,KAAKG,OAAQW,IAAK,CACpC,GAAIiB,GAAI/B,KAAKsI,UAAUtI,KAAKE,MAAMY,GAElC,IADAJ,GAAKqB,EACK,KAANA,EACF,MAEJ,MAAOrB,IAGTf,GAAGV,UAAU2I,WAAa,WACxB,MAAOhH,MAAKiF,KAAK7F,KAAKuB,YAAc,IAItC5B,GAAGV,UAAUkK,IAAM,WACjB,GAAqB,IAAjBnJ,KAAKsV,KAAK,GACZ,MAAOtV,MAAKwG,OAEd,IAAI9F,GAAIV,KAAKwG,OAEb,OADA9F,GAAE4sB,MAAQttB,KAAKstB,KACR5sB,GAKTf,GAAGV,UAAUmK,KAAO,SAAchI,GAChC,KAAOpB,KAAKG,OAASiB,EAAIjB,QACvBH,KAAKE,MAAMF,KAAKG,UAAY,CAE9B,KAAK,GAAIW,GAAI,EAAGA,EAAIM,EAAIjB,OAAQW,IAC9Bd,KAAKE,MAAMY,GAAKd,KAAKE,MAAMY,GAAKM,EAAIlB,MAAMY,EAE5C,OAAOd,MAAKwC,SAGd7C,GAAGV,UAAUoK,IAAM,SAAajI,GAE9B,MADAlC,SAAQc,KAAKstB,OAASlsB,EAAIksB,MACnBttB,KAAKoJ,KAAKhI,IAKnBzB,GAAGV,UAAUqK,GAAK,SAAYlI,GAC5B,MAAIpB,MAAKG,OAASiB,EAAIjB,OACbH,KAAKwG,QAAQ6C,IAAIjI,GAEjBA,EAAIoF,QAAQ6C,IAAIrJ,OAG3BL,GAAGV,UAAUsK,IAAM,SAAanI,GAC9B,MAAIpB,MAAKG,OAASiB,EAAIjB,OACbH,KAAKwG,QAAQ4C,KAAKhI,GAElBA,EAAIoF,QAAQ4C,KAAKpJ,OAK5BL,GAAGV,UAAUuK,MAAQ,SAAepI,GAElC,GAAIW,EAEFA,GADE/B,KAAKG,OAASiB,EAAIjB,OAChBiB,EAEApB,IAEN,KAAK,GAAIc,GAAI,EAAGA,EAAIiB,EAAE5B,OAAQW,IAC5Bd,KAAKE,MAAMY,GAAKd,KAAKE,MAAMY,GAAKM,EAAIlB,MAAMY,EAI5C,OAFAd,MAAKG,OAAS4B,EAAE5B,OAETH,KAAKwC,SAGd7C,GAAGV,UAAUwK,KAAO,SAAcrI,GAEhC,MADAlC,SAAQc,KAAKstB,OAASlsB,EAAIksB,MACnBttB,KAAKwJ,MAAMpI,IAKpBzB,GAAGV,UAAUyK,IAAM,SAAatI,GAC9B,MAAIpB,MAAKG,OAASiB,EAAIjB,OACbH,KAAKwG,QAAQiD,KAAKrI,GAElBA,EAAIoF,QAAQiD,KAAKzJ,OAG5BL,GAAGV,UAAU0K,KAAO,SAAcvI,GAChC,MAAIpB,MAAKG,OAASiB,EAAIjB,OACbH,KAAKwG,QAAQgD,MAAMpI,GAEnBA,EAAIoF,QAAQgD,MAAMxJ,OAK7BL,GAAGV,UAAU2K,MAAQ,SAAexI,GAElC,GAAIU,GACAC,CACA/B,MAAKG,OAASiB,EAAIjB,QACpB2B,EAAI9B,KACJ+B,EAAIX,IAEJU,EAAIV,EACJW,EAAI/B,KAGN,KAAK,GAAIc,GAAI,EAAGA,EAAIiB,EAAE5B,OAAQW,IAC5Bd,KAAKE,MAAMY,GAAKgB,EAAE5B,MAAMY,GAAKiB,EAAE7B,MAAMY,EAEvC,IAAId,OAAS8B,EACX,KAAOhB,EAAIgB,EAAE3B,OAAQW,IACnBd,KAAKE,MAAMY,GAAKgB,EAAE5B,MAAMY,EAI5B,OAFAd,MAAKG,OAAS2B,EAAE3B,OAETH,KAAKwC,SAGd7C,GAAGV,UAAU4K,KAAO,SAAczI,GAEhC,MADAlC,SAAQc,KAAKstB,OAASlsB,EAAIksB,MACnBttB,KAAK4J,MAAMxI,IAKpBzB,GAAGV,UAAU6K,IAAM,SAAa1I,GAC9B,MAAIpB,MAAKG,OAASiB,EAAIjB,OACbH,KAAKwG,QAAQqD,KAAKzI,GAElBA,EAAIoF,QAAQqD,KAAK7J,OAG5BL,GAAGV,UAAU8K,KAAO,SAAc3I,GAChC,MAAIpB,MAAKG,OAASiB,EAAIjB,OACbH,KAAKwG,QAAQoD,MAAMxI,GAEnBA,EAAIoF,QAAQoD,MAAM5J,OAK7BL,GAAGV,UAAUiL,KAAO,SAAc1I,EAAKrC,GACrCD,OAAsB,gBAARsC,IAAoBA,GAAO,EAKzC,KAHA,GAAIC,GAAOD,EAAM,GAAM,EACnBE,EAAOF,EAAM,GAEVxB,KAAKG,QAAUsB,GACpBzB,KAAKE,MAAMF,KAAKG,UAAY,CAO9B,OALIhB,GACFa,KAAKE,MAAMuB,GAAOzB,KAAKE,MAAMuB,GAAQ,GAAKC,EAE1C1B,KAAKE,MAAMuB,GAAOzB,KAAKE,MAAMuB,KAAS,GAAKC,GAEtC1B,KAAKwC,SAKd7C,GAAGV,UAAUkL,KAAO,SAAc/I,GAEhC,GAAIpB,KAAKstB,OAASlsB,EAAIksB,KAAM,CAC1BttB,KAAKstB,MAAO,CACZ,IAAI5sB,GAAIV,KAAKsD,KAAKlC,EAElB,OADApB,MAAKstB,MAAQttB,KAAKstB,KACXttB,KAAK2G,YAGP,IAAK3G,KAAKstB,MAAQlsB,EAAIksB,KAAM,CACjClsB,EAAIksB,MAAO,CACX,IAAI5sB,GAAIV,KAAKsD,KAAKlC,EAElB,OADAA,GAAIksB,MAAO,EACJ5sB,EAAEiG,YAIX,GAAI7E,GACAC,CACA/B,MAAKG,OAASiB,EAAIjB,QACpB2B,EAAI9B,KACJ+B,EAAIX,IAEJU,EAAIV,EACJW,EAAI/B,KAIN,KAAK,GADDiC,GAAQ,EACHnB,EAAI,EAAGA,EAAIiB,EAAE5B,OAAQW,IAAK,CACjC,GAAIJ,GAAIoB,EAAE5B,MAAMY,GAAKiB,EAAE7B,MAAMY,GAAKmB,CAClCjC,MAAKE,MAAMY,GAAS,SAAJJ,EAChBuB,EAAQvB,IAAM,GAEhB,KAAiB,IAAVuB,GAAenB,EAAIgB,EAAE3B,OAAQW,IAAK,CACvC,GAAIJ,GAAIoB,EAAE5B,MAAMY,GAAKmB,CACrBjC,MAAKE,MAAMY,GAAS,SAAJJ,EAChBuB,EAAQvB,IAAM,GAIhB,GADAV,KAAKG,OAAS2B,EAAE3B,OACF,IAAV8B,EACFjC,KAAKE,MAAMF,KAAKG,QAAU8B,EAC1BjC,KAAKG,aAEA,IAAI2B,IAAM9B,KACf,KAAOc,EAAIgB,EAAE3B,OAAQW,IACnBd,KAAKE,MAAMY,GAAKgB,EAAE5B,MAAMY,EAG5B,OAAOd,OAITL,GAAGV,UAAUmL,IAAM,SAAahJ,GAC9B,GAAIA,EAAIksB,OAASttB,KAAKstB,KAAM,CAC1BlsB,EAAIksB,MAAO,CACX,IAAIvlB,GAAM/H,KAAK8E,IAAI1D,EAEnB,OADAA,GAAIksB,MAAO,EACJvlB,EACF,IAAK3G,EAAIksB,MAAQttB,KAAKstB,KAAM,CACjCttB,KAAKstB,MAAO,CACZ,IAAIvlB,GAAM3G,EAAI0D,IAAI9E,KAElB,OADAA,MAAKstB,MAAO,EACLvlB,EAGT,MAAI/H,MAAKG,OAASiB,EAAIjB,OACbH,KAAKwG,QAAQ2D,KAAK/I,GAElBA,EAAIoF,QAAQ2D,KAAKnK,OAI5BL,GAAGV,UAAUqE,KAAO,SAAclC,GAEhC,GAAIA,EAAIksB,KAAM,CACZlsB,EAAIksB,MAAO,CACX,IAAI5sB,GAAIV,KAAKmK,KAAK/I,EAElB,OADAA,GAAIksB,MAAO,EACJ5sB,EAAEiG,YAGJ,GAAI3G,KAAKstB,KAId,MAHAttB,MAAKstB,MAAO,EACZttB,KAAKmK,KAAK/I,GACVpB,KAAKstB,MAAO,EACLttB,KAAK2G,WAId,IAAItB,GAAMrF,KAAKqF,IAAIjE,EAGnB,IAAY,IAARiE,EAIF,MAHArF,MAAKstB,MAAO,EACZttB,KAAKG,OAAS,EACdH,KAAKE,MAAM,GAAK,EACTF,IAIT,IAAI8B,GACAC,CACAsD,GAAM,GACRvD,EAAI9B,KACJ+B,EAAIX,IAEJU,EAAIV,EACJW,EAAI/B,KAIN,KAAK,GADDiC,GAAQ,EACHnB,EAAI,EAAGA,EAAIiB,EAAE5B,OAAQW,IAAK,CACjC,GAAIJ,GAAIoB,EAAE5B,MAAMY,GAAKiB,EAAE7B,MAAMY,GAAKmB,CAClCA,GAAQvB,GAAK,GACbV,KAAKE,MAAMY,GAAS,SAAJJ,EAElB,KAAiB,IAAVuB,GAAenB,EAAIgB,EAAE3B,OAAQW,IAAK,CACvC,GAAIJ,GAAIoB,EAAE5B,MAAMY,GAAKmB,CACrBA,GAAQvB,GAAK,GACbV,KAAKE,MAAMY,GAAS,SAAJJ,EAIlB,GAAc,IAAVuB,GAAenB,EAAIgB,EAAE3B,QAAU2B,IAAM9B,KACvC,KAAOc,EAAIgB,EAAE3B,OAAQW,IACnBd,KAAKE,MAAMY,GAAKgB,EAAE5B,MAAMY,EAM5B,OALAd,MAAKG,OAASS,KAAK2B,IAAIvC,KAAKG,OAAQW,GAEhCgB,IAAM9B,OACRA,KAAKstB,MAAO,GAEPttB,KAAKwC,SAId7C,GAAGV,UAAU6F,IAAM,SAAa1D,GAC9B,MAAOpB,MAAKwG,QAAQlD,KAAKlC,IAyC3BzB,GAAGV,UAAUqyC,YAAc,SAAqBlwC,EAAKS,GACnDA,EAAIyrB,KAAOlsB,EAAIksB,OAASttB,KAAKstB,KAC7BzrB,EAAI1B,OAASH,KAAKG,OAASiB,EAAIjB,MAG/B,KAAK,GADD8B,GAAQ,EACHC,EAAI,EAAGA,EAAIL,EAAI1B,OAAS,EAAG+B,IAAK,CAMvC,IAAK,GAHDC,GAASF,IAAU,GACnBG,EAAgB,SAARH,EACRI,EAAOzB,KAAKC,IAAIqB,EAAGd,EAAIjB,OAAS,GAC3BmC,EAAI1B,KAAK2B,IAAI,EAAGL,EAAIlC,KAAKG,OAAS,GAAImC,GAAKD,EAAMC,IAAK,CAC7D,GAAIxB,GAAIoB,EAAII,EACRR,EAAoB,EAAhB9B,KAAKE,MAAMY,GACfiB,EAAmB,EAAfX,EAAIlB,MAAMoC,GACd5B,EAAIoB,EAAIC,EAERC,EAAS,SAAJtB,CACTyB,GAAUA,GAAWzB,EAAI,SAAa,GAAM,EAC5CsB,EAAMA,EAAKI,EAAS,EACpBA,EAAa,SAALJ,EACRG,EAAUA,GAAUH,IAAO,IAAO,EAEpCH,EAAI3B,MAAMgC,GAAKE,EACfH,EAAQE,EAQV,MANc,KAAVF,EACFJ,EAAI3B,MAAMgC,GAAKD,EAEfJ,EAAI1B,SAGC0B,EAAIW,SAGb7C,GAAGV,UAAUsyC,UAAY,SAAmBnwC,EAAKS,GAC/CA,EAAIyrB,KAAOlsB,EAAIksB,OAASttB,KAAKstB,KAC7BzrB,EAAI1B,OAASH,KAAKG,OAASiB,EAAIjB,MAI/B,KAAK,GAFD8B,GAAQ,EACRS,EAAU,EACLR,EAAI,EAAGA,EAAIL,EAAI1B,OAAS,EAAG+B,IAAK,CAGvC,GAAIC,GAASO,CACbA,GAAU,CAGV,KAAK,GAFDN,GAAgB,SAARH,EACRI,EAAOzB,KAAKC,IAAIqB,EAAGd,EAAIjB,OAAS,GAC3BmC,EAAI1B,KAAK2B,IAAI,EAAGL,EAAIlC,KAAKG,OAAS,GAAImC,GAAKD,EAAMC,IAAK,CAC7D,GAAIxB,GAAIoB,EAAII,EACRR,EAAoB,EAAhB9B,KAAKE,MAAMY,GACfiB,EAAmB,EAAfX,EAAIlB,MAAMoC,GACd5B,EAAIoB,EAAIC,EAERC,EAAS,SAAJtB,CACTyB,GAAUA,GAAWzB,EAAI,SAAa,GAAM,EAC5CsB,EAAMA,EAAKI,EAAS,EACpBA,EAAa,SAALJ,EACRG,EAAUA,GAAUH,IAAO,IAAO,EAElCU,GAAWP,IAAW,GACtBA,GAAU,SAEZN,EAAI3B,MAAMgC,GAAKE,EACfH,EAAQE,EACRA,EAASO,EAQX,MANc,KAAVT,EACFJ,EAAI3B,MAAMgC,GAAKD,EAEfJ,EAAI1B,SAGC0B,EAAIW,SAGb7C,GAAGV,UAAUuQ,MAAQ,SAAepO,EAAKS,GACvC,GAAIkG,EAKJ,OAHEA,GADE/H,KAAKG,OAASiB,EAAIjB,OAAS,GACvBH,KAAKsxC,YAAYlwC,EAAKS,GAEtB7B,KAAKuxC,UAAUnwC,EAAKS,IAK9BlC,GAAGV,UAAUiC,IAAM,SAAaE,GAC9B,GAAIS,GAAM,GAAIlC,IAAG,KAEjB,OADAkC,GAAI3B,MAAQ,GAAIoB,OAAMtB,KAAKG,OAASiB,EAAIjB,QACjCH,KAAKwP,MAAMpO,EAAKS,IAIzBlC,GAAGV,UAAUmP,KAAO,SAAchN,GAChC,GAAqB,IAAjBpB,KAAKsV,KAAK,IAA4B,IAAhBlU,EAAIkU,KAAK,GAGjC,MAFAtV,MAAKE,MAAM,GAAK,EAChBF,KAAKG,OAAS,EACPH,IAGT,IAAIwxC,GAAOxxC,KAAKG,OACZsxC,EAAOrwC,EAAIjB,MAEfH,MAAKstB,KAAOlsB,EAAIksB,OAASttB,KAAKstB,KAC9BttB,KAAKG,OAASH,KAAKG,OAASiB,EAAIjB,OAChCH,KAAKE,MAAMF,KAAKG,OAAS,GAAK,CAE9B,KAAK,GAAI+B,GAAIlC,KAAKG,OAAS,EAAG+B,GAAK,EAAGA,IAAK,CAMzC,IAAK,GAHDD,GAAQ,EACRG,EAAQ,EACRC,EAAOzB,KAAKC,IAAIqB,EAAGuvC,EAAO,GACrBnvC,EAAI1B,KAAK2B,IAAI,EAAGL,EAAIsvC,EAAO,GAAIlvC,GAAKD,EAAMC,IAAK,CACtD,GAAIxB,GAAIoB,EAAII,EACRR,EAAI9B,KAAKE,MAAMY,GACfiB,EAAIX,EAAIlB,MAAMoC,GACd5B,EAAIoB,EAAIC,EAERC,EAAS,SAAJtB,CACTuB,IAAUvB,EAAI,SAAa,EAC3BsB,GAAMI,EACNA,EAAa,SAALJ,EACRC,GAASD,IAAO,GAElBhC,KAAKE,MAAMgC,GAAKE,EAChBpC,KAAKE,MAAMgC,EAAI,IAAMD,EACrBA,EAAQ,EAKV,IAAK,GADDA,GAAQ,EACHnB,EAAI,EAAGA,EAAId,KAAKG,OAAQW,IAAK,CACpC,GAAIO,GAAIrB,KAAKE,MAAMY,GAAKmB,CACxBjC,MAAKE,MAAMY,GAAS,SAAJO,EAChBY,EAAQZ,IAAM,GAGhB,MAAOrB,MAAKwC,SAGd7C,GAAGV,UAAUkH,MAAQ,SAAe/E,GAClClC,OAAsB,gBAARkC,GAId,KAAK,GADDa,GAAQ,EACHnB,EAAI,EAAGA,EAAId,KAAKG,OAAQW,IAAK,CACpC,GAAIO,GAAIrB,KAAKE,MAAMY,GAAKM,EACpBY,GAAU,SAAJX,IAA0B,SAARY,EAC5BA,KAAU,GACVA,GAAUZ,EAAI,SAAa,EAE3BY,GAASD,IAAO,GAChBhC,KAAKE,MAAMY,GAAU,SAALkB,EAQlB,MALc,KAAVC,IACFjC,KAAKE,MAAMY,GAAKmB,EAChBjC,KAAKG,UAGAH,MAGTL,GAAGV,UAAUkT,KAAO,SAAc/Q,GAChC,MAAOpB,MAAKwG,QAAQL,MAAM/E,IAI5BzB,GAAGV,UAAUsF,IAAM,WACjB,MAAOvE,MAAKkB,IAAIlB,OAIlBL,GAAGV,UAAUmT,KAAO,WAClB,MAAOpS,MAAKkB,IAAIlB,OAIlBL,GAAGV,UAAUoH,IAAM,SAAajF,GAC9B,GAAIC,GAAIF,WAAWC,EACnB,IAAiB,IAAbC,EAAElB,OACJ,MAAO,IAAIR,IAAG,EAIhB,KAAK,GADDoI,GAAM/H,KACDc,EAAI,EAAGA,EAAIO,EAAElB,QACP,IAATkB,EAAEP,GADsBA,IAAKiH,EAAMA,EAAIxD,OAI7C,KAAMzD,EAAIO,EAAElB,OACV,IAAK,GAAI6H,GAAID,EAAIxD,MAAOzD,EAAIO,EAAElB,OAAQW,IAAKkH,EAAIA,EAAEzD,MAClC,IAATlD,EAAEP,KAENiH,EAAMA,EAAI7G,IAAI8G,GAIlB,OAAOD,IAITpI,GAAGV,UAAUoE,OAAS,SAAgBgP,GACpCnT,OAAuB,gBAATmT,IAAqBA,GAAQ,EAC3C,IAAI3R,GAAI2R,EAAO,GACXhC,GAAKgC,EAAO3R,GAAK,GACjB4R,EAAa,WAAe,GAAK5R,GAAQ,GAAKA,CAElD,IAAU,IAANA,EAAS,CAEX,IAAK,GADDuB,GAAQ,EACHnB,EAAI,EAAGA,EAAId,KAAKG,OAAQW,IAAK,CACpC,GAAIyR,GAAWvS,KAAKE,MAAMY,GAAKwR,EAC3BvR,EAAKf,KAAKE,MAAMY,GAAKyR,GAAa7R,CACtCV,MAAKE,MAAMY,GAAKC,EAAIkB,EACpBA,EAAQsQ,IAAc,GAAK7R,EAEzBuB,IACFjC,KAAKE,MAAMY,GAAKmB,EAChBjC,KAAKG,UAIT,GAAU,IAANkQ,EAAS,CACX,IAAK,GAAIvP,GAAId,KAAKG,OAAS,EAAGW,GAAK,EAAGA,IACpCd,KAAKE,MAAMY,EAAIuP,GAAKrQ,KAAKE,MAAMY,EACjC,KAAK,GAAIA,GAAI,EAAGA,EAAIuP,EAAGvP,IACrBd,KAAKE,MAAMY,GAAK,CAClBd,MAAKG,QAAUkQ,EAGjB,MAAOrQ,MAAKwC,SAGd7C,GAAGV,UAAUuT,MAAQ,SAAeH,GAGlC,MADAnT,SAAQc,KAAKstB,MACNttB,KAAKqD,OAAOgP;EAMrB1S,GAAGV,UAAUiJ,OAAS,SAAgBmK,EAAMI,EAAMC,GAChDxT,OAAuB,gBAATmT,IAAqBA,GAAQ,EAC3C,IAAIM,EAEFA,GADEF,GACGA,EAAQA,EAAO,IAAO,GAEvB,CAEN,IAAI/R,GAAI2R,EAAO,GACXhC,EAAIzP,KAAKC,KAAKwR,EAAO3R,GAAK,GAAIV,KAAKG,QACnCyS,EAAO,SAAc,WAAclS,GAAMA,EACzCmS,EAAcH,CAMlB,IAJAC,GAAKtC,EACLsC,EAAI/R,KAAK2B,IAAI,EAAGoQ,GAGZE,EAAa,CACf,IAAK,GAAI/R,GAAI,EAAGA,EAAIuP,EAAGvP,IACrB+R,EAAY3S,MAAMY,GAAKd,KAAKE,MAAMY,EACpC+R,GAAY1S,OAASkQ,EAGvB,GAAU,IAANA,OAEG,IAAIrQ,KAAKG,OAASkQ,EAAG,CAC1BrQ,KAAKG,QAAUkQ,CACf,KAAK,GAAIvP,GAAI,EAAGA,EAAId,KAAKG,OAAQW,IAC/Bd,KAAKE,MAAMY,GAAKd,KAAKE,MAAMY,EAAIuP,OAEjCrQ,MAAKE,MAAM,GAAK,EAChBF,KAAKG,OAAS,CAIhB,KAAK,GADD8B,GAAQ,EACHnB,EAAId,KAAKG,OAAS,EAAGW,GAAK,IAAgB,IAAVmB,GAAenB,GAAK6R,GAAI7R,IAAK,CACpE,GAAIoF,GAAOlG,KAAKE,MAAMY,EACtBd,MAAKE,MAAMY,GAAMmB,GAAU,GAAKvB,EAAOwF,IAASxF,EAChDuB,EAAQiE,EAAO0M,EAcjB,MAVIC,IAAyB,IAAV5Q,IACjB4Q,EAAY3S,MAAM2S,EAAY1S,UAAY8B,GAExB,IAAhBjC,KAAKG,SACPH,KAAKE,MAAM,GAAK,EAChBF,KAAKG,OAAS,GAGhBH,KAAKwC,QAEExC,MAGTL,GAAGV,UAAU6T,MAAQ,SAAeT,EAAMI,EAAMC,GAG9C,MADAxT,SAAQc,KAAKstB,MACNttB,KAAKkI,OAAOmK,EAAMI,EAAMC,IAIjC/S,GAAGV,UAAU8T,KAAO,SAAcV,GAChC,MAAOrS,MAAKwG,QAAQgM,MAAMH,IAG5B1S,GAAGV,UAAU+T,MAAQ,SAAeX,GAClC,MAAOrS,MAAKwG,QAAQnD,OAAOgP,IAI7B1S,GAAGV,UAAUgU,KAAO,SAAcZ,GAChC,MAAOrS,MAAKwG,QAAQsM,MAAMT,IAG5B1S,GAAGV,UAAUiU,MAAQ,SAAeb,GAClC,MAAOrS,MAAKwG,QAAQ0B,OAAOmK,IAI7B1S,GAAGV,UAAU8J,MAAQ,SAAevH,GAClCtC,OAAsB,gBAARsC,IAAoBA,GAAO,EACzC,IAAId,GAAIc,EAAM,GACV6O,GAAK7O,EAAMd,GAAK,GAChBsH,EAAI,GAAKtH,CAGb,IAAIV,KAAKG,QAAUkQ,EACjB,OAAO,CAIT,IAAIhP,GAAIrB,KAAKE,MAAMmQ,EAEnB,UAAUhP,EAAI2G,IAIhBrI,GAAGV,UAAUkU,OAAS,SAAgBd,GACpCnT,OAAuB,gBAATmT,IAAqBA,GAAQ,EAC3C,IAAI3R,GAAI2R,EAAO,GACXhC,GAAKgC,EAAO3R,GAAK,EAQrB,IANAxB,QAAQc,KAAKstB,KAAM,2CAET,IAAN5sB,GACF2P,IACFrQ,KAAKG,OAASS,KAAKC,IAAIwP,EAAGrQ,KAAKG,QAErB,IAANO,EAAS,CACX,GAAIkS,GAAO,SAAc,WAAclS,GAAMA,CAC7CV,MAAKE,MAAMF,KAAKG,OAAS,IAAMyS,EAGjC,MAAO5S,MAAKwC,SAId7C,GAAGV,UAAUmU,MAAQ,SAAef,GAClC,MAAOrS,MAAKwG,QAAQ2M,OAAOd,IAI7B1S,GAAGV,UAAU4J,MAAQ,SAAezH,GAElC,MADAlC,QAAsB,gBAARkC,IACVA,EAAM,EACDpB,KAAK2E,OAAOvD,GAGjBpB,KAAKstB,KACa,IAAhBttB,KAAKG,QAAgBH,KAAKE,MAAM,GAAKkB,GACvCpB,KAAKE,MAAM,GAAKkB,EAAMpB,KAAKE,MAAM,GACjCF,KAAKstB,MAAO,EACLttB,OAGTA,KAAKstB,MAAO,EACZttB,KAAK2E,MAAMvD,GACXpB,KAAKstB,MAAO,EACLttB,MAIFA,KAAKoG,OAAOhF,IAGrBzB,GAAGV,UAAUmH,OAAS,SAAgBhF,GACpCpB,KAAKE,MAAM,IAAMkB,CAGjB,KAAK,GAAIN,GAAI,EAAGA,EAAId,KAAKG,QAAUH,KAAKE,MAAMY,IAAM,SAAWA,IAC7Dd,KAAKE,MAAMY,IAAM,SACbA,IAAMd,KAAKG,OAAS,EACtBH,KAAKE,MAAMY,EAAI,GAAK,EAEpBd,KAAKE,MAAMY,EAAI,IAInB,OAFAd,MAAKG,OAASS,KAAK2B,IAAIvC,KAAKG,OAAQW,EAAI,GAEjCd,MAITL,GAAGV,UAAU0F,MAAQ,SAAevD,GAElC,GADAlC,OAAsB,gBAARkC,IACVA,EAAM,EACR,MAAOpB,MAAK6I,OAAOzH,EAErB,IAAIpB,KAAKstB,KAIP,MAHAttB,MAAKstB,MAAO,EACZttB,KAAK6I,MAAMzH,GACXpB,KAAKstB,MAAO,EACLttB,IAGTA,MAAKE,MAAM,IAAMkB,CAGjB,KAAK,GAAIN,GAAI,EAAGA,EAAId,KAAKG,QAAUH,KAAKE,MAAMY,GAAK,EAAGA,IACpDd,KAAKE,MAAMY,IAAM,SACjBd,KAAKE,MAAMY,EAAI,IAAM,CAGvB,OAAOd,MAAKwC,SAGd7C,GAAGV,UAAUoU,KAAO,SAAcjS,GAChC,MAAOpB,MAAKwG,QAAQqC,MAAMzH,IAG5BzB,GAAGV,UAAUqU,KAAO,SAAclS,GAChC,MAAOpB,MAAKwG,QAAQ7B,MAAMvD,IAG5BzB,GAAGV,UAAUsU,KAAO,WAGlB,MAFAvT,MAAKstB,MAAO,EAELttB,MAGTL,GAAGV,UAAU0J,IAAM,WACjB,MAAO3I,MAAKwG,QAAQ+M,QAGtB5T,GAAGV,UAAUuU,aAAe,SAAsBpS,EAAKF,EAAKkD,GAE1D,GACItD,GADAH,EAAMS,EAAIjB,OAASiE,CAEvB,IAAIpE,KAAKE,MAAMC,OAASQ,EAAK,CAE3B,IAAK,GADD0H,GAAI,GAAI/G,OAAMX,GACTG,EAAI,EAAGA,EAAId,KAAKG,OAAQW,IAC/BuH,EAAEvH,GAAKd,KAAKE,MAAMY,EACpBd,MAAKE,MAAQmI,MAEbvH,GAAId,KAAKG,MAKX,KADAH,KAAKG,OAASS,KAAK2B,IAAIvC,KAAKG,OAAQQ,GAC7BG,EAAId,KAAKG,OAAQW,IACtBd,KAAKE,MAAMY,GAAK,CAGlB,KAAK,GADDmB,GAAQ,EACHnB,EAAI,EAAGA,EAAIM,EAAIjB,OAAQW,IAAK,CACnC,GAAIO,GAAIrB,KAAKE,MAAMY,EAAIsD,GAASnC,EAC5BmD,EAAQhE,EAAIlB,MAAMY,GAAKI,CAC3BG,IAAa,SAAR+D,EACLnD,GAASZ,GAAK,KAAQ+D,EAAQ,SAAa,GAC3CpF,KAAKE,MAAMY,EAAIsD,GAAa,SAAJ/C,EAE1B,KAAOP,EAAId,KAAKG,OAASiE,EAAOtD,IAAK,CACnC,GAAIO,GAAIrB,KAAKE,MAAMY,EAAIsD,GAASnC,CAChCA,GAAQZ,GAAK,GACbrB,KAAKE,MAAMY,EAAIsD,GAAa,SAAJ/C,EAG1B,GAAc,IAAVY,EACF,MAAOjC,MAAKwC,OAGdtD,QAAO+C,QACPA,EAAQ,CACR,KAAK,GAAInB,GAAI,EAAGA,EAAId,KAAKG,OAAQW,IAAK,CACpC,GAAIO,IAAKrB,KAAKE,MAAMY,GAAKmB,CACzBA,GAAQZ,GAAK,GACbrB,KAAKE,MAAMY,GAAS,SAAJO,EAIlB,MAFArB,MAAKstB,MAAO,EAELttB,KAAKwC,SAGd7C,GAAGV,UAAUwU,SAAW,SAAkBrS,EAAKsS,GAC7C,GAAItP,GAAQpE,KAAKG,OAASiB,EAAIjB,OAE1B2B,EAAI9B,KAAKwG,QACTzE,EAAIX,EAGJuS,EAAM5R,EAAE7B,MAAM6B,EAAE5B,OAAS,GACzByT,EAAU5T,KAAKoI,WAAWuL,EAC9BvP,GAAQ,GAAKwP,EACC,IAAVxP,IACFrC,EAAIA,EAAEiR,MAAM5O,GACZtC,EAAEuB,OAAOe,GACTuP,EAAM5R,EAAE7B,MAAM6B,EAAE5B,OAAS,GAI3B,IACI6H,GADAjE,EAAIjC,EAAE3B,OAAS4B,EAAE5B,MAGrB,IAAa,QAATuT,EAAgB,CAClB1L,EAAI,GAAIrI,IAAG,MACXqI,EAAE7H,OAAS4D,EAAI,EACfiE,EAAE9H,MAAQ,GAAIoB,OAAM0G,EAAE7H,OACtB,KAAK,GAAIW,GAAI,EAAGA,EAAIkH,EAAE7H,OAAQW,IAC5BkH,EAAE9H,MAAMY,GAAK,EAGjB,GAAI+S,GAAO/R,EAAE0E,QAAQgN,aAAazR,EAAG,EAAGgC,EACnC8P,GAAKyZ,OACRxrB,EAAI+R,EACA7L,IACFA,EAAE9H,MAAM6D,GAAK,GAGjB,KAAK,GAAIzB,GAAIyB,EAAI,EAAGzB,GAAK,EAAGA,IAAK,CAC/B,GAAIwR,GAA6B,SAAxBhS,EAAE5B,MAAM6B,EAAE5B,OAASmC,GAAiBR,EAAE5B,MAAM6B,EAAE5B,OAASmC,EAAI,EAOpE,KAHAwR,EAAKlT,KAAKC,IAAKiT,EAAKH,EAAO,EAAG,UAE9B7R,EAAE0R,aAAazR,EAAG+R,EAAIxR,GACfR,EAAEwrB,MACPxZ,IACAhS,EAAEwrB,MAAO,EACTxrB,EAAE0R,aAAazR,EAAG,EAAGO,GACH,IAAdR,EAAEwT,KAAK,KACTxT,EAAEwrB,MAAQxrB,EAAEwrB,KAEZtlB,KACFA,EAAE9H,MAAMoC,GAAKwR,GASjB,MAPI9L,IACFA,EAAExF,QACJV,EAAEU,QAGW,QAATkR,GAA4B,IAAVtP,GACpBtC,EAAEoG,OAAO9D,IACFQ,IAAKoD,EAAIA,EAAI,KAAM/B,IAAKnE,IAGnCnC,GAAGV,UAAU8U,OAAS,SAAgB3S,EAAKsS,EAAMM,GAG/C,GAFA9U,OAAuB,IAAhBkC,EAAIkU,KAAK,IAEZtV,KAAKstB,OAASlsB,EAAIksB,KAAM,CAC1B,GACI1oB,GACAqB,EAFA8B,EAAM/H,KAAKmJ,MAAM4K,OAAO3S,EAAKsS,EAUjC,OAPa,QAATA,IACF9O,EAAMmD,EAAInD,IAAIuE,OACH,QAATuK,IACFzN,EAAM8B,EAAI9B,IAAIkD,MACV6K,GAAY/N,EAAIkD,MAClBlD,EAAMA,EAAImE,IAAIhJ,MAGhBwD,IAAKA,EACLqB,IAAKA,GAEF,IAAKjG,KAAKstB,MAAQlsB,EAAIksB,KAAM,CACjC,GACI1oB,GADAmD,EAAM/H,KAAK+T,OAAO3S,EAAI+H,MAAOuK,EAIjC,OAFa,QAATA,IACF9O,EAAMmD,EAAInD,IAAIuE,QACPvE,IAAKA,EAAKqB,IAAK8B,EAAI9B,KACvB,GAAIjG,KAAKstB,MAAQlsB,EAAIksB,KAAM,CAChC,GACIrnB,GADA8B,EAAM/H,KAAKmJ,MAAM4K,OAAO3S,EAAI+H,MAAOuK,EAOvC,OALa,QAATA,IACFzN,EAAM8B,EAAI9B,IAAIkD,MACV6K,GAAY/N,EAAIkD,MAClBlD,EAAMA,EAAI3C,KAAKlC,MAGjBwD,IAAKmD,EAAInD,IACTqB,IAAKA,GAOT,MAAI7E,GAAIjB,OAASH,KAAKG,QAAUH,KAAKqF,IAAIjE,GAAO,GACrCwD,IAAK,GAAIjF,IAAG,GAAIsG,IAAKjG,MAGb,IAAfoB,EAAIjB,OACO,QAATuT,GACO9O,IAAK5E,KAAKiU,KAAK7S,EAAIlB,MAAM,IAAK+F,IAAK,MAC5B,QAATyN,GACE9O,IAAK,KAAMqB,IAAK,GAAItG,IAAGK,KAAKoH,KAAKhG,EAAIlB,MAAM,OAEpD0E,IAAK5E,KAAKiU,KAAK7S,EAAIlB,MAAM,IACzB+F,IAAK,GAAItG,IAAGK,KAAKoH,KAAKhG,EAAIlB,MAAM,MAI7BF,KAAKyT,SAASrS,EAAKsS,IAI5B/T,GAAGV,UAAU2F,IAAM,SAAaxD,GAC9B,MAAOpB,MAAK+T,OAAO3S,EAAK,OAAO,GAAOwD,KAIxCjF,GAAGV,UAAUgH,IAAM,SAAa7E,GAC9B,MAAOpB,MAAK+T,OAAO3S,EAAK,OAAO,GAAO6E,KAGxCtG,GAAGV,UAAU4F,KAAO,SAAczD,GAChC,MAAOpB,MAAK+T,OAAO3S,EAAK,OAAO,GAAM6E,KAIvCtG,GAAGV,UAAUiV,SAAW,SAAkB9S,GACxC,GAAI+S,GAAKnU,KAAK+T,OAAO3S,EAGrB,IAAuB,IAAnB+S,EAAGlO,IAAIqP,KAAK,GACd,MAAOnB,GAAGvP,GAEZ,IAAIqB,GAAMkO,EAAGvP,IAAI0oB,KAAOnZ,EAAGlO,IAAI3C,KAAKlC,GAAO+S,EAAGlO,IAE1CmO,EAAOhT,EAAI8R,MAAM,GACjB7O,EAAKjD,EAAI6G,MAAM,GACf5C,EAAMY,EAAIZ,IAAI+O,EAGlB,OAAI/O,GAAM,GAAY,IAAPhB,GAAoB,IAARgB,EAClB8O,EAAGvP,IAGLuP,EAAGvP,IAAI0oB,KAAOnZ,EAAGvP,IAAID,MAAM,GAAKwP,EAAGvP,IAAIiE,MAAM,IAGtDlJ,GAAGV,UAAUmI,KAAO,SAAchG,GAChClC,OAAOkC,GAAO,SAId,KAAK,GAHD+B,IAAK,GAAK,IAAM/B,EAEhBiT,EAAM,EACDvT,EAAId,KAAKG,OAAS,EAAGW,GAAK,EAAGA,IACpCuT,GAAOlR,EAAIkR,EAAMrU,KAAKE,MAAMY,IAAMM,CAEpC,OAAOiT,IAIT1U,GAAGV,UAAUoI,MAAQ,SAAejG,GAClClC,OAAOkC,GAAO,SAGd,KAAK,GADDa,GAAQ,EACHnB,EAAId,KAAKG,OAAS,EAAGW,GAAK,EAAGA,IAAK,CACzC,GAAIO,GAAIrB,KAAKE,MAAMY,GAAa,SAARmB,CACxBjC,MAAKE,MAAMY,GAAMO,EAAID,EAAO,EAC5Ba,EAAQZ,EAAID,EAGd,MAAOpB,MAAKwC,SAGd7C,GAAGV,UAAUgV,KAAO,SAAc7S,GAChC,MAAOpB,MAAKwG,QAAQa,MAAMjG,IAG5BzB,GAAGV,UAAUqV,KAAO,SAAcnR,GAChCjE,QAAQiE,EAAEmqB,MACVpuB,OAAqB,IAAdiE,EAAEmS,KAAK,GAEd,IAAIvS,GAAI/C,KACJgD,EAAIG,EAAEqD,OAGRzD,GADEA,EAAEuqB,KACAvqB,EAAE8B,KAAK1B,GAEPJ,EAAEyD,OAYR,KATA,GAAI+N,GAAI,GAAI5U,IAAG,GACX6U,EAAI,GAAI7U,IAAG,GAGX8U,EAAI,GAAI9U,IAAG,GACX+U,EAAI,GAAI/U,IAAG,GAEXgV,EAAI,EAED5R,EAAE6R,UAAY5R,EAAE4R,UACrB7R,EAAEmF,OAAO,GACTlF,EAAEkF,OAAO,KACPyM,CAMJ,KAHA,GAAIE,GAAK7R,EAAEwD,QACPsO,EAAK/R,EAAEyD,QAEU,IAAdzD,EAAEuS,KAAK,IAAU,CACtB,KAAOvS,EAAE6R,UACP7R,EAAEmF,OAAO,GACLqM,EAAEK,UAAYJ,EAAEI,UAClBL,EAAErM,OAAO,GACTsM,EAAEtM,OAAO,KAETqM,EAAEpK,KAAK0K,GAAI3M,OAAO,GAClBsM,EAAElR,KAAKwR,GAAI5M,OAAO,GAItB,MAAOlF,EAAE4R,UACP5R,EAAEkF,OAAO,GACLuM,EAAEG,UAAYF,EAAEE,UAClBH,EAAEvM,OAAO,GACTwM,EAAExM,OAAO,KAETuM,EAAEtK,KAAK0K,GAAI3M,OAAO,GAClBwM,EAAEpR,KAAKwR,GAAI5M,OAAO,GAIlBnF,GAAEsC,IAAIrC,IAAM,GACdD,EAAEO,KAAKN,GACPuR,EAAEjR,KAAKmR,GACPD,EAAElR,KAAKoR,KAEP1R,EAAEM,KAAKP,GACP0R,EAAEnR,KAAKiR,GACPG,EAAEpR,KAAKkR,IAIX,OACE1S,EAAG2S,EACH1S,EAAG2S,EACHQ,IAAKlS,EAAEK,OAAOsR,KAOlBhV,GAAGV,UAAUwF,OAAS,SAAgBtB,GACpCjE,QAAQiE,EAAEmqB,MACVpuB,OAAqB,IAAdiE,EAAEmS,KAAK,GAEd,IAAIxT,GAAI9B,KACJ+B,EAAIoB,EAAEqD,OAGR1E,GADEA,EAAEwrB,KACAxrB,EAAE+C,KAAK1B,GAEPrB,EAAE0E,OAOR,KALA,GAAI2O,GAAK,GAAIxV,IAAG,GACZyV,EAAK,GAAIzV,IAAG,GAEZ0V,EAAQtT,EAAEyE,QAEP1E,EAAEwT,KAAK,GAAK,GAAKvT,EAAEuT,KAAK,GAAK,GAAG,CACrC,KAAOxT,EAAE8S,UACP9S,EAAEoG,OAAO,GACLiN,EAAGP,SACLO,EAAGjN,OAAO,GAEViN,EAAGhL,KAAKkL,GAAOnN,OAAO,EAE1B,MAAOnG,EAAE6S,UACP7S,EAAEmG,OAAO,GACLkN,EAAGR,SACLQ,EAAGlN,OAAO,GAEVkN,EAAGjL,KAAKkL,GAAOnN,OAAO,EAEtBpG,GAAEuD,IAAItD,IAAM,GACdD,EAAEwB,KAAKvB,GACPoT,EAAG7R,KAAK8R,KAERrT,EAAEuB,KAAKxB,GACPsT,EAAG9R,KAAK6R,IAIZ,GAAIpN,EASJ,OAPEA,GADgB,IAAdjG,EAAEwT,KAAK,GACHH,EAEAC,EAEJrN,EAAIuN,KAAK,GAAK,GAChBvN,EAAIoC,KAAKhH,GAEJ4E,GAGTpI,GAAGV,UAAUiW,IAAM,SAAa9T,GAC9B,GAAqB,IAAjBpB,KAAKsV,KAAK,GACZ,MAAOlU,GAAIoF,OACb,IAAoB,IAAhBpF,EAAIkU,KAAK,GACX,MAAOtV,MAAKwG,OAEd,IAAI1E,GAAI9B,KAAKwG,QACTzE,EAAIX,EAAIoF,OACZ1E,GAAEwrB,MAAO,EACTvrB,EAAEurB,MAAO,CAGT,KAAK,GAAIlpB,GAAQ,EAAGtC,EAAE8S,UAAY7S,EAAE6S,SAAUxQ,IAC5CtC,EAAEoG,OAAO,GACTnG,EAAEmG,OAAO,EAGX,QAAG,CACD,KAAOpG,EAAE8S,UACP9S,EAAEoG,OAAO,EACX,MAAOnG,EAAE6S,UACP7S,EAAEmG,OAAO,EAEX,IAAIxH,GAAIoB,EAAEuD,IAAItD,EACd,IAAIrB,EAAI,EAAG,CAET,GAAI2H,GAAIvG,CACRA,GAAIC,EACJA,EAAIsG,MACC,IAAU,IAAN3H,GAAyB,IAAdqB,EAAEuT,KAAK,GAC3B,KAGFxT,GAAEwB,KAAKvB,GAGT,MAAOA,GAAEsB,OAAOe,IAIlBzE,GAAGV,UAAUsW,KAAO,SAAcnU,GAChC,MAAOpB,MAAKsU,KAAKlT,GAAKU,EAAE+C,KAAKzD,IAG/BzB,GAAGV,UAAU2V,OAAS,WACpB,MAA+B,MAAP,EAAhB5U,KAAKE,MAAM,KAGrBP,GAAGV,UAAU+V,MAAQ,WACnB,MAA+B,MAAP,EAAhBhV,KAAKE,MAAM,KAIrBP,GAAGV,UAAUgJ,MAAQ,SAAe7G,GAClC,MAAOpB,MAAKE,MAAM,GAAKkB,GAIzBzB,GAAGV,UAAUuW,MAAQ,SAAehU,GAClCtC,OAAsB,gBAARsC,GACd,IAAId,GAAIc,EAAM,GACV6O,GAAK7O,EAAMd,GAAK,GAChBsH,EAAI,GAAKtH,CAGb,IAAIV,KAAKG,QAAUkQ,EAAG,CACpB,IAAK,GAAIvP,GAAId,KAAKG,OAAQW,EAAIuP,EAAI,EAAGvP,IACnCd,KAAKE,MAAMY,GAAK,CAGlB,OAFAd,MAAKE,MAAMmQ,IAAMrI,EACjBhI,KAAKG,OAASkQ,EAAI,EACXrQ,KAKT,IAAK,GADDiC,GAAQ+F,EACHlH,EAAIuP,EAAa,IAAVpO,GAAenB,EAAId,KAAKG,OAAQW,IAAK,CACnD,GAAIO,GAAIrB,KAAKE,MAAMY,EACnBO,IAAKY,EACLA,EAAQZ,IAAM,GACdA,GAAK,SACLrB,KAAKE,MAAMY,GAAKO,EAMlB,MAJc,KAAVY,IACFjC,KAAKE,MAAMY,GAAKmB,EAChBjC,KAAKG,UAEAH,MAGTL,GAAGV,UAAUqW,KAAO,SAAclU,GAChC,GAAIksB,GAAOlsB,EAAM,CAIjB,IAHIksB,IACFlsB,GAAOA,GAELpB,KAAKstB,OAASA,EAChB,QACG,KAAKttB,KAAKstB,MAAQA,EACrB,MAAO,EAETlsB,IAAO,SACPpB,KAAKwC,OAEL,IAAIuF,EACJ,IAAI/H,KAAKG,OAAS,EAChB4H,EAAM,MACD,CACL,GAAI1G,GAAIrB,KAAKE,MAAM,EACnB6H,GAAM1G,IAAMD,EAAM,EAAIC,EAAID,KAAW,EAIvC,MAFIpB,MAAKstB,OACPvlB,GAAOA,GACFA,GAOTpI,GAAGV,UAAUoG,IAAM,SAAajE,GAC9B,GAAIpB,KAAKstB,OAASlsB,EAAIksB,KACpB,QACG,KAAKttB,KAAKstB,MAAQlsB,EAAIksB,KACzB,MAAO,EAET,IAAIvlB,GAAM/H,KAAKyV,KAAKrU,EACpB,OAAIpB,MAAKstB,MACCvlB,EAEDA,GAIXpI,GAAGV,UAAUwW,KAAO,SAAcrU,GAEhC,GAAIpB,KAAKG,OAASiB,EAAIjB,OACpB,MAAO,EACJ,IAAIH,KAAKG,OAASiB,EAAIjB,OACzB,QAGF,KAAK,GADD4H,GAAM,EACDjH,EAAId,KAAKG,OAAS,EAAGW,GAAK,EAAGA,IAAK,CACzC,GAAIgB,GAAI9B,KAAKE,MAAMY,GACfiB,EAAIX,EAAIlB,MAAMY,EAElB,IAAIgB,IAAMC,EAAV,CAEID,EAAIC,EACNgG,KACOjG,EAAIC,IACXgG,EAAM,EACR,QAEF,MAAOA,IAOTpI,GAAGS,IAAM,SAAagB,GACpB,MAAO,IAAI0C,KAAI1C,IAGjBzB,GAAGV,UAAUkX,MAAQ,SAAeC,GAGlC,MAFAlX,SAAQc,KAAKI,IAAK,yCAClBlB,QAAQc,KAAKstB,KAAM,iCACZlX,EAAIC,UAAUrW,MAAMsW,UAAUF,IAGvCzW,GAAGV,UAAUsX,QAAU,WAErB,MADArX,QAAOc,KAAKI,IAAK,wDACVJ,KAAKI,IAAIoW,YAAYxW,OAG9BL,GAAGV,UAAUqX,UAAY,SAAmBF,GAE1C,MADApW,MAAKI,IAAMgW,EACJpW,MAGTL,GAAGV,UAAUwX,SAAW,SAAkBL,GAExC,MADAlX,SAAQc,KAAKI,IAAK,yCACXJ,KAAKsW,UAAUF,IAGxBzW,GAAGV,UAAUyX,OAAS,SAAgBtV,GAEpC,MADAlC,QAAOc,KAAKI,IAAK,sCACVJ,KAAKI,IAAIgK,IAAIpK,KAAMoB,IAG5BzB,GAAGV,UAAU0X,QAAU,SAAiBvV,GAEtC,MADAlC,QAAOc,KAAKI,IAAK,uCACVJ,KAAKI,IAAI+J,KAAKnK,KAAMoB,IAG7BzB,GAAGV,UAAU2X,OAAS,SAAgBxV,GAEpC,MADAlC,QAAOc,KAAKI,IAAK,sCACVJ,KAAKI,IAAI0E,IAAI9E,KAAMoB,IAG5BzB,GAAGV,UAAU4X,QAAU,SAAiBzV,GAEtC,MADAlC,QAAOc,KAAKI,IAAK,uCACVJ,KAAKI,IAAIkD,KAAKtD,KAAMoB,IAG7BzB,GAAGV,UAAU6X,OAAS,SAAgB1V,GAEpC,MADAlC,QAAOc,KAAKI,IAAK,sCACVJ,KAAKI,IAAIuzC,KAAK3zC,KAAMoB,IAG7BzB,GAAGV,UAAU+X,OAAS,SAAgB5V,GAGpC,MAFAlC,QAAOc,KAAKI,IAAK,sCACjBJ,KAAKI,IAAI6W,SAASjX,KAAMoB,GACjBpB,KAAKI,IAAIc,IAAIlB,KAAMoB,IAG5BzB,GAAGV,UAAUiY,QAAU,SAAiB9V,GAGtC,MAFAlC,QAAOc,KAAKI,IAAK,sCACjBJ,KAAKI,IAAI6W,SAASjX,KAAMoB,GACjBpB,KAAKI,IAAIgO,KAAKpO,KAAMoB,IAG7BzB,GAAGV,UAAUkY,OAAS,WAGpB,MAFAjY,QAAOc,KAAKI,IAAK,sCACjBJ,KAAKI,IAAIgX,SAASpX,MACXA,KAAKI,IAAImE,IAAIvE,OAGtBL,GAAGV,UAAUoY,QAAU,WAGrB,MAFAnY,QAAOc,KAAKI,IAAK,uCACjBJ,KAAKI,IAAIgX,SAASpX,MACXA,KAAKI,IAAIgS,KAAKpS,OAIvBL,GAAGV,UAAUqY,QAAU,WAGrB,MAFApY,QAAOc,KAAKI,IAAK,uCACjBJ,KAAKI,IAAIgX,SAASpX,MACXA,KAAKI,IAAImX,KAAKvX,OAGvBL,GAAGV,UAAUuY,QAAU,WAGrB,MAFAtY,QAAOc,KAAKI,IAAK,uCACjBJ,KAAKI,IAAIgX,SAASpX,MACXA,KAAKI,IAAImV,KAAKvV,OAIvBL,GAAGV,UAAUwY,OAAS,WAGpB,MAFAvY,QAAOc,KAAKI,IAAK,sCACjBJ,KAAKI,IAAIgX,SAASpX,MACXA,KAAKI,IAAI+I,IAAInJ,OAGtBL,GAAGV,UAAUyY,OAAS,SAAgBtW,GAGpC,MAFAlC,QAAOc,KAAKI,MAAQgB,EAAIhB,IAAK,qBAC7BJ,KAAKI,IAAIgX,SAASpX,MACXA,KAAKI,IAAIiG,IAAIrG,KAAMoB,GAI5B,IAAIuW,IACFC,KAAM,KACNC,KAAM,KACNC,KAAM,KACNC,OAAQ,KAcV9U,QAAOhE,UAAUuE,KAAO,WACtB,GAAID,GAAM,GAAI5D,IAAG,KAEjB,OADA4D,GAAIrD,MAAQ,GAAIoB,OAAMV,KAAKiF,KAAK7F,KAAKoD,EAAI,KAClCG,GAGTN,OAAOhE,UAAU+Y,QAAU,SAAiB5W,GAG1C,GACI6W,GADAvX,EAAIU,CAGR,GACEpB,MAAKkY,MAAMxX,EAAGV,KAAKuD,KACnB7C,EAAIV,KAAKmY,MAAMzX,GACfA,EAAIA,EAAEyJ,KAAKnK,KAAKuD,KAChB0U,EAAOvX,EAAEa,kBACF0W,EAAOjY,KAAKoD,EAErB,IAAIiC,GAAM4S,EAAOjY,KAAKoD,KAAS1C,EAAE+U,KAAKzV,KAAKmD,EAU3C,OATY,KAARkC,GACF3E,EAAER,MAAM,GAAK,EACbQ,EAAEP,OAAS,GACFkF,EAAM,EACf3E,EAAE4C,KAAKtD,KAAKmD,GAEZzC,EAAE8B,QAGG9B,GAGTuC,OAAOhE,UAAUiZ,MAAQ,SAAeE,EAAOvW,GAC7CuW,EAAMlQ,OAAOlI,KAAKoD,EAAG,EAAGvB,IAG1BoB,OAAOhE,UAAUkZ,MAAQ,SAAe/W,GACtC,MAAOA,GAAIgN,KAAKpO,KAAKkC,IASvB5C,SAASmE,KAAMR,QAEfQ,KAAKxE,UAAUiZ,MAAQ,SAAeE,EAAOC,GAK3C,IAAK,GAHDzF,GAAO,QAEP0F,EAAS1X,KAAKC,IAAIuX,EAAMjY,OAAQ,GAC3BW,EAAI,EAAGA,EAAIwX,EAAQxX,IAC1BuX,EAAOnY,MAAMY,GAAKsX,EAAMlY,MAAMY,EAGhC,IAFAuX,EAAOlY,OAASmY,EAEZF,EAAMjY,QAAU,EAGlB,MAFAiY,GAAMlY,MAAM,GAAK,OACjBkY,EAAMjY,OAAS,EAKjB,IAAIoY,GAAOH,EAAMlY,MAAM,EACvBmY,GAAOnY,MAAMmY,EAAOlY,UAAYoY,EAAO3F,CAEvC,KAAK,GAAI9R,GAAI,GAAIA,EAAIsX,EAAMjY,OAAQW,IAAK,CACtC,GAAI0X,GAAOJ,EAAMlY,MAAMY,EACvBsX,GAAMlY,MAAMY,EAAI,KAAQ0X,EAAO5F,IAAS,EAAM2F,IAAS,GACvDA,EAAOC,EAETJ,EAAMlY,MAAMY,EAAI,IAAMyX,IAAS,GAC/BH,EAAMjY,QAAU,GAGlBsD,KAAKxE,UAAUkZ,MAAQ,SAAe/W,GAEpCA,EAAIlB,MAAMkB,EAAIjB,QAAU,EACxBiB,EAAIlB,MAAMkB,EAAIjB,OAAS,GAAK,EAC5BiB,EAAIjB,QAAU,CAKd,KAAK,GAFDoI,GACAvG,EAAK,EACAlB,EAAI,EAAGA,EAAIM,EAAIjB,OAAQW,IAAK,CACnC,GAAIO,GAAID,EAAIlB,MAAMY,EAClByH,GAAS,GAAJlH,EACLW,GAAU,IAAJX,EACNkH,GAAOvG,EAAK,SAAa,EACzBA,GAAM,SAENZ,EAAIlB,MAAMY,GAAKkB,EAEfA,EAAKuG,EASP,MALkC,KAA9BnH,EAAIlB,MAAMkB,EAAIjB,OAAS,KACzBiB,EAAIjB,SAC8B,IAA9BiB,EAAIlB,MAAMkB,EAAIjB,OAAS,IACzBiB,EAAIjB,UAEDiB,GAST9B,SAASqE,KAAMV,QAQf3D,SAASsE,KAAMX,QASf3D,SAASuE,OAAQZ,QAEjBY,OAAO5E,UAAUkZ,MAAQ,SAAe/W,GAGtC,IAAK,GADDa,GAAQ,EACHnB,EAAI,EAAGA,EAAIM,EAAIjB,OAAQW,IAAK,CACnC,GAAIyH,GAAoB,GAAfnH,EAAIlB,MAAMY,GAAYmB,EAC3BD,EAAU,SAALuG,CACTA,MAAQ,GAERnH,EAAIlB,MAAMY,GAAKkB,EACfC,EAAQsG,EAIV,MAFc,KAAVtG,IACFb,EAAIlB,MAAMkB,EAAIjB,UAAY8B,GACrBb,GAITzB,GAAGsE,OAAS,QAASD,OAAMd,GAEzB,GAAIyU,EAAOzU,GACT,MAAOyU,GAAOzU,EAEhB,IAAIc,MACJ,IAAa,SAATd,EACFc,MAAQ,GAAIP,UACT,IAAa,SAATP,EACPc,MAAQ,GAAIL,UACT,IAAa,SAATT,EACPc,MAAQ,GAAIJ,UACT,IAAa,WAATV,EAGP,KAAM,IAAI7D,OAAM,iBAAmB6D,EAFnCc,OAAQ,GAAIH,QAKd,MAFA8T,GAAOzU,GAAQc,MAERA,OAiBTF,IAAI7E,UAAUmY,SAAW,SAAkBtV,GACzC5C,QAAQ4C,EAAEwrB,KAAM,iCAChBpuB,OAAO4C,EAAE1B,IAAK,oCAGhB0D,IAAI7E,UAAUgY,SAAW,SAAkBnV,EAAGC,GAC5C7C,QAAQ4C,EAAEwrB,OAASvrB,EAAEurB,KAAM,iCAC3BpuB,OAAO4C,EAAE1B,KAAO0B,EAAE1B,MAAQ2B,EAAE3B,IACrB,oCAGT0D,IAAI7E,UAAUqF,KAAO,SAAcxC,GACjC,MAAI9B,MAAKgE,MACAhE,KAAKgE,MAAMgU,QAAQlW,GAAGwU,UAAUtW,MAClC8B,EAAE+C,KAAK7E,KAAK+D,GAAGuS,UAAUtW,OAGlC8D,IAAI7E,UAAUkK,IAAM,SAAarH,GAC/B,GAAIpB,GAAIoB,EAAE0E,OAEV,OADA9F,GAAE4sB,MAAQ5sB,EAAE4sB,KACL5sB,EAAEyJ,KAAKnK,KAAK+D,GAAGuS,UAAUtW,OAGlC8D,IAAI7E,UAAUmL,IAAM,SAAatI,EAAGC,GAClC/B,KAAKiX,SAASnV,EAAGC,EAEjB,IAAIgG,GAAMjG,EAAEsI,IAAIrI,EAGhB,OAFIgG,GAAI1C,IAAIrF,KAAK+D,IAAM,GACrBgE,EAAIzE,KAAKtD,KAAK+D,GACTgE,EAAIuO,UAAUtW,OAGvB8D,IAAI7E,UAAUkL,KAAO,SAAcrI,EAAGC,GACpC/B,KAAKiX,SAASnV,EAAGC,EAEjB,IAAIgG,GAAMjG,EAAEqI,KAAKpI,EAGjB,OAFIgG,GAAI1C,IAAIrF,KAAK+D,IAAM,GACrBgE,EAAIzE,KAAKtD,KAAK+D,GACTgE,GAGTjE,IAAI7E,UAAU6F,IAAM,SAAahD,EAAGC,GAClC/B,KAAKiX,SAASnV,EAAGC,EAEjB,IAAIgG,GAAMjG,EAAEgD,IAAI/C,EAGhB,OAFIgG,GAAIuN,KAAK,GAAK,GAChBvN,EAAIoC,KAAKnK,KAAK+D,GACTgE,EAAIuO,UAAUtW,OAGvB8D,IAAI7E,UAAUqE,KAAO,SAAcxB,EAAGC,GACpC/B,KAAKiX,SAASnV,EAAGC,EAEjB,IAAIgG,GAAMjG,EAAEwB,KAAKvB,EAGjB,OAFIgG,GAAIuN,KAAK,GAAK,GAChBvN,EAAIoC,KAAKnK,KAAK+D,GACTgE,GAGTjE,IAAI7E,UAAU8X,IAAM,SAAajV,EAAGV,GAElC,MADApB,MAAKoX,SAAStV,GACP9B,KAAKsE,KAAKxC,EAAEkR,MAAM5R,KAG3B0C,IAAI7E,UAAUmP,KAAO,SAActM,EAAGC,GAEpC,MADA/B,MAAKiX,SAASnV,EAAGC,GACV/B,KAAKsE,KAAKxC,EAAEsM,KAAKrM,KAG1B+B,IAAI7E,UAAUiC,IAAM,SAAaY,EAAGC,GAElC,MADA/B,MAAKiX,SAASnV,EAAGC,GACV/B,KAAKsE,KAAKxC,EAAEZ,IAAIa,KAGzB+B,IAAI7E,UAAUmT,KAAO,SAActQ,GACjC,MAAO9B,MAAKoO,KAAKtM,EAAGA,IAGtBgC,IAAI7E,UAAUsF,IAAM,SAAazC,GAC/B,MAAO9B,MAAKkB,IAAIY,EAAGA,IAGrBgC,IAAI7E,UAAUsY,KAAO,SAAczV,GACjC,GAAkB,IAAdA,EAAEwT,KAAK,GACT,MAAOxT,GAAE0E,OAEX,IAAIiS,GAAOzY,KAAK+D,EAAEkE,MAAM,EAIxB,IAHA/I,OAAOuZ,EAAO,IAAM,GAGP,IAATA,EAAY,CACd,GAAIpS,GAAMrG,KAAK+D,EAAEqG,IAAI,GAAIzK,IAAG,IAAIuI,OAAO,GACnCxH,EAAIV,KAAKqG,IAAIvE,EAAGuE,EACpB,OAAO3F,GAQT,IAFA,GAAIsH,GAAIhI,KAAK+D,EAAEuP,KAAK,GAChBjD,EAAI,EACa,IAAdrI,EAAEsN,KAAK,IAA2B,IAAftN,EAAEC,MAAM,IAChCoI,IACArI,EAAEE,OAAO,EAEXhJ,QAAqB,IAAd8I,EAAEsN,KAAK,GAEd,IAAIoD,GAAM,GAAI/Y,IAAG,GAAGwW,MAAMnW,MACtB2Y,EAAOD,EAAIjB,SAIXmB,EAAO5Y,KAAK+D,EAAEuP,KAAK,GAAGpL,OAAO,GAC7B2Q,EAAI7Y,KAAK+D,EAAExC,WAEf,KADAsX,EAAI,GAAIlZ,IAAG,EAAIkZ,EAAIA,GAAG1C,MAAMnW,MACW,IAAhCA,KAAKqG,IAAIwS,EAAGD,GAAMvT,IAAIsT,IAC3BE,EAAElC,QAAQgC,EAMZ,KAJA,GAAI5X,GAAIf,KAAKqG,IAAIwS,EAAG7Q,GAChBtH,EAAIV,KAAKqG,IAAIvE,EAAGkG,EAAEqL,KAAK,GAAGnL,OAAO,IACjCG,EAAIrI,KAAKqG,IAAIvE,EAAGkG,GAChBjE,EAAIsM,EACc,IAAfhI,EAAEhD,IAAIqT,IAAY,CAEvB,IAAK,GADDnV,GAAM8E,EACDvH,EAAI,EAAoB,IAAjByC,EAAI8B,IAAIqT,GAAY5X,IAClCyC,EAAMA,EAAI4T,QACZjY,QAAO4B,EAAIiD,EACX,IAAIhC,GAAI/B,KAAKqG,IAAItF,EAAG,GAAIpB,IAAG,GAAG0D,OAAOU,EAAIjD,EAAI,GAE7CJ,GAAIA,EAAEsW,OAAOjV,GACbhB,EAAIgB,EAAEoV,SACN9O,EAAIA,EAAE2O,OAAOjW,GACbgD,EAAIjD,EAGN,MAAOJ,IAGToD,IAAI7E,UAAUsW,KAAO,SAAczT,GACjC,GAAIgX,GAAMhX,EAAE2C,OAAOzE,KAAK+D,EACxB,OAAI+U,GAAIwU,MACNxU,EAAIwU,MAAO,EACJttB,KAAKsE,KAAKwU,GAAKrB,UAEfzX,KAAKsE,KAAKwU,IAIrBhV,IAAI7E,UAAUoH,IAAM,SAAavE,EAAGV,GAClC,GAAIC,GAAIF,WAAWC,EACnB,IAAiB,IAAbC,EAAElB,OACJ,MAAO,IAAIR,IAAG,EAIhB,KAAK,GADDoI,GAAMjG,EACDhB,EAAI,EAAGA,EAAIO,EAAElB,QACP,IAATkB,EAAEP,GADsBA,IAAKiH,EAAM/H,KAAKuE,IAAIwD,IAIlD,KAAMjH,EAAIO,EAAElB,OACV,IAAK,GAAI6H,GAAIhI,KAAKuE,IAAIwD,GAAMjH,EAAIO,EAAElB,OAAQW,IAAKkH,EAAIhI,KAAKuE,IAAIyD,GAC7C,IAAT3G,EAAEP,KAENiH,EAAM/H,KAAKkB,IAAI6G,EAAKC,GAIxB,OAAOD,IAGTjE,IAAI7E,UAAUoX,UAAY,SAAmBjV,GAC3C,GAAIV,GAAIU,EAAIyD,KAAK7E,KAAK+D,EACtB,OAAIrD,KAAMU,EACDV,EAAE8F,QAEF9F,GAGXoD,IAAI7E,UAAUuX,YAAc,SAAqBpV,GAC/C,GAAI2G,GAAM3G,EAAIoF,OAEd,OADAuB,GAAI3H,IAAM,KACH2H,GAOTpI,GAAGwZ,KAAO,SAAc/X,GACtB,MAAO,IAAI+C,MAAK/C,IAiBlB9B,SAAS6E,KAAML,KAEfK,KAAKlF,UAAUoX,UAAY,SAAmBjV,GAC5C,MAAOpB,MAAKsE,KAAKlD,EAAI4R,MAAMhT,KAAKoE,SAGlCD,KAAKlF,UAAUuX,YAAc,SAAqBpV,GAChD,GAAIV,GAAIV,KAAKsE,KAAKlD,EAAIF,IAAIlB,KAAKwE,MAE/B,OADA9D,GAAEN,IAAM,KACDM,GAGTyD,KAAKlF,UAAUmP,KAAO,SAActM,EAAGC,GACrC,GAAkB,IAAdD,EAAEwT,KAAK,IAA0B,IAAdvT,EAAEuT,KAAK,GAG5B,MAFAxT,GAAE5B,MAAM,GAAK,EACb4B,EAAE3B,OAAS,EACJ2B,CAGT,IAAIuG,GAAIvG,EAAEsM,KAAKrM,GACXhB,EAAIsH,EAAE+K,MAAMpT,KAAKoE,OAAOlD,IAAIlB,KAAK0E,MAAMyO,OAAOnT,KAAKoE,OAAOlD,IAAIlB,KAAK+D,GACnEqV,EAAI/Q,EAAE/E,KAAKvC,GAAGmH,OAAOlI,KAAKoE,OAC1B2D,EAAMqR,CAMV,OALIA,GAAE/T,IAAIrF,KAAK+D,IAAM,EACnBgE,EAAMqR,EAAE9V,KAAKtD,KAAK+D,GACXqV,EAAE9D,KAAK,GAAK,IACnBvN,EAAMqR,EAAEjP,KAAKnK,KAAK+D,IAEbgE,EAAIuO,UAAUtW,OAGvBmE,KAAKlF,UAAUiC,IAAM,SAAaY,EAAGC,GACnC,GAAkB,IAAdD,EAAEwT,KAAK,IAA0B,IAAdvT,EAAEuT,KAAK,GAC5B,MAAO,IAAI3V,IAAG,GAAG2W,UAAUtW,KAE7B,IAAIqI,GAAIvG,EAAEZ,IAAIa,GACVhB,EAAIsH,EAAE+K,MAAMpT,KAAKoE,OAAOlD,IAAIlB,KAAK0E,MAAMyO,OAAOnT,KAAKoE,OAAOlD,IAAIlB,KAAK+D,GACnEqV,EAAI/Q,EAAE/E,KAAKvC,GAAGmH,OAAOlI,KAAKoE,OAC1B2D,EAAMqR,CAMV,OALIA,GAAE/T,IAAIrF,KAAK+D,IAAM,EACnBgE,EAAMqR,EAAE9V,KAAKtD,KAAK+D,GACXqV,EAAE9D,KAAK,GAAK,IACnBvN,EAAMqR,EAAEjP,KAAKnK,KAAK+D,IAEbgE,EAAIuO,UAAUtW,OAGvBmE,KAAKlF,UAAUsW,KAAO,SAAczT,GAElC,GAAIiG,GAAM/H,KAAKsE,KAAKxC,EAAE2C,OAAOzE,KAAK+D,GAAG7C,IAAIlB,KAAKqE,IAC9C,OAAO0D,GAAIuO,UAAUtW,QAGF,mBAAXvB,IAA0BA,EA94EpC4a,U7C8vd8B3V,KAAKhF,EAASC,EAAoB,KAAKF,KAI/Dm1C,MACL,KAAM,MAEDC,MACL,KAAM,KAAM,KAAM,KAAM,MAEnBC,KACA,SAASr1C,EAAQC,EAASC,G8CzwdhC,YASA,SAASqgB,WAAUlF,EAAMmF,GACvBjf,KAAK8Z,KAAOA,EACZ9Z,KAAKmD,EAAI,GAAIm2B,GAAGra,EAAK9b,EAAG,IAGxBnD,KAAKI,IAAM6e,EAAKjb,MAAQs1B,EAAGl5B,IAAI6e,EAAKjb,OAASs1B,EAAGngB,KAAKnZ,KAAKmD,GAG1DnD,KAAKkf,KAAO,GAAIoa,GAAG,GAAGnjB,MAAMnW,KAAKI,KACjCJ,KAAK0Y,IAAM,GAAI4gB,GAAG,GAAGnjB,MAAMnW,KAAKI,KAChCJ,KAAKmf,IAAM,GAAIma,GAAG,GAAGnjB,MAAMnW,KAAKI,KAGhCJ,KAAKoD,EAAI6b,EAAK7b,GAAK,GAAIk2B,GAAGra,EAAK7b,EAAG,IAClCpD,KAAK2U,EAAIsK,EAAKtK,GAAK3U,KAAKof,cAAcH,EAAKtK,EAAGsK,EAAKI,MAGnDrf,KAAKsf,QAAU,GAAIhe,OAAM,GACzBtB,KAAKuf,QAAU,GAAIje,OAAM,GACzBtB,KAAKwf,QAAU,GAAIle,OAAM,GACzBtB,KAAKyf,QAAU,GAAIne,OAAM,GA6M3B,QAASue,WAAUC,EAAOhG,GACxB9Z,KAAK8f,MAAQA,EACb9f,KAAK8Z,KAAOA,EACZ9Z,KAAK+f,YAAc,KA3OrB,GAAIuZ,GAAK36B,EAAQ,MACbqhB,EAAWrhB,EAAQ,MACnB8f,EAAQuB,EAASvB,MACjBlB,EAASkB,EAAMlB,OACfE,EAASgB,EAAMhB,OACfve,EAASuf,EAAMvf,MAwBnBT,GAAOC,QAAUsgB,UAEjBA,UAAU/f,UAAUghB,MAAQ,WAC1B,KAAM,IAAI5gB,OAAM,oBAGlB2f,UAAU/f,UAAUihB,SAAW,WAC7B,KAAM,IAAI7gB,OAAM,oBAGlB2f,UAAU/f,UAAUkhB,aAAe,SAAsBhd,EAAGjB,GAC1DhD,EAAOiE,EAAE4c,YACT,IAAIK,GAAUjd,EAAEkd,cAEZ7C,EAAMD,EAAOrb,EAAG,GAChBoe,GAAK,GAAMF,EAAQG,KAAO,IAAOH,EAAQG,KAAO,IAAM,EAAI,EAAI,EAClED,IAAK,CAIL,KAAK,GADDE,MACKle,EAAI,EAAGA,EAAIkb,EAAIrd,OAAQmC,GAAK8d,EAAQG,KAAM,CAEjD,IAAK,GADDE,GAAO,EACFve,EAAII,EAAI8d,EAAQG,KAAO,EAAGre,GAAKI,EAAGJ,IACzCue,GAAQA,GAAQ,GAAKjD,EAAItb,EAC3Bse,GAAKrD,KAAKsD,GAKZ,IAAK,GAFD3e,GAAI9B,KAAK0gB,OAAO,KAAM,KAAM,MAC5B3e,EAAI/B,KAAK0gB,OAAO,KAAM,KAAM,MACvB5f,EAAIwf,EAAGxf,EAAI,EAAGA,IAAK,CAC1B,IAAK,GAAIwB,GAAI,EAAGA,EAAIke,EAAKrgB,OAAQmC,IAAK,CACpC,GAAIme,GAAOD,EAAKle,EACZme,KAAS3f,EACXiB,EAAIA,EAAE4e,SAASP,EAAQQ,OAAOte,IACvBme,KAAU3f,IACjBiB,EAAIA,EAAE4e,SAASP,EAAQQ,OAAOte,GAAG6G,QAErCrH,EAAIA,EAAEsI,IAAIrI,GAEZ,MAAOD,GAAE+e,OAGX7B,UAAU/f,UAAU6hB,SAAW,SAAkB3d,EAAGjB,GAClD,GAAIb,GAAI,EAGJ0f,EAAY5d,EAAE6d,cAAc3f,EAChCA,GAAI0f,EAAU/H,GAQd,KAAK,GAPDA,GAAM+H,EAAUH,OAGhBpD,EAAMD,EAAOrb,EAAGb,GAGhBgT,EAAMrU,KAAK0gB,OAAO,KAAM,KAAM,MACzB5f,EAAI0c,EAAIrd,OAAS,EAAGW,GAAK,EAAGA,IAAK,CAExC,IAAK,GAAIoB,GAAI,EAAGpB,GAAK,GAAgB,IAAX0c,EAAI1c,GAAUA,IACtCoB,GAKF,IAJIpB,GAAK,GACPoB,IACFmS,EAAMA,EAAI4M,KAAK/e,GAEXpB,EAAI,EACN,KACF,IAAI+X,GAAI2E,EAAI1c,EACZ5B,GAAa,IAAN2Z,GAIHxE,EAHW,WAAXlR,EAAE2W,KAEAjB,EAAI,EACAxE,EAAIsM,SAAS3H,EAAKH,EAAI,GAAM,IAE5BxE,EAAIsM,SAAS3H,GAAMH,EAAI,GAAM,GAAG1P,OAGpC0P,EAAI,EACAxE,EAAIjK,IAAI4O,EAAKH,EAAI,GAAM,IAEvBxE,EAAIjK,IAAI4O,GAAMH,EAAI,GAAM,GAAG1P,OAGvC,MAAkB,WAAXhG,EAAE2W,KAAoBzF,EAAIwM,MAAQxM,GAG3C2K,UAAU/f,UAAUiiB,YAAc,SAAqBC,EACAP,EACAQ,EACAzgB,GAOrD,IAAK,GAND2gB,GAAWthB,KAAKsf,QAChBtG,EAAMhZ,KAAKuf,QACX/B,EAAMxd,KAAKwf,QAGXjd,EAAM,EACDzB,EAAI,EAAGA,EAAIH,EAAKG,IAAK,CAC5B,GAAIqC,GAAIyd,EAAO9f,GACXigB,EAAY5d,EAAE6d,cAAcG,EAChCG,GAASxgB,GAAKigB,EAAU/H,IACxBA,EAAIlY,GAAKigB,EAAUH,OAIrB,IAAK,GAAI9f,GAAIH,EAAM,EAAGG,GAAK,EAAGA,GAAK,EAAG,CACpC,GAAIgB,GAAIhB,EAAI,EACRiB,EAAIjB,CACR,IAAoB,IAAhBwgB,EAASxf,IAA4B,IAAhBwf,EAASvf,GAAlC,CAQA,GAAIwf,IACFX,EAAO9e,GACP,KACA,KACA8e,EAAO7e,GAI4B,KAAjC6e,EAAO9e,GAAGkB,EAAEqC,IAAIub,EAAO7e,GAAGiB,IAC5Bue,EAAK,GAAKX,EAAO9e,GAAGsI,IAAIwW,EAAO7e,IAC/Bwf,EAAK,GAAKX,EAAO9e,GAAG0f,MAAMb,SAASC,EAAO7e,GAAGoH,QACM,IAA1CyX,EAAO9e,GAAGkB,EAAEqC,IAAIub,EAAO7e,GAAGiB,EAAEyU,WACrC8J,EAAK,GAAKX,EAAO9e,GAAG0f,MAAMb,SAASC,EAAO7e,IAC1Cwf,EAAK,GAAKX,EAAO9e,GAAGsI,IAAIwW,EAAO7e,GAAGoH,SAElCoY,EAAK,GAAKX,EAAO9e,GAAG0f,MAAMb,SAASC,EAAO7e,IAC1Cwf,EAAK,GAAKX,EAAO9e,GAAG0f,MAAMb,SAASC,EAAO7e,GAAGoH,OAG/C,IAAIsY,gBAKF,EACA,EACA,EACA,EACA,GAGE7D,EAAMH,EAAO2D,EAAOtf,GAAIsf,EAAOrf,GACnCQ,GAAM3B,KAAK2B,IAAIqb,EAAI,GAAGzd,OAAQoC,GAC9Bib,EAAI1b,GAAK,GAAIR,OAAMiB,GACnBib,EAAIzb,GAAK,GAAIT,OAAMiB,EACnB,KAAK,GAAID,GAAI,EAAGA,EAAIC,EAAKD,IAAK,CAC5B,GAAIof,GAAiB,EAAZ9D,EAAI,GAAGtb,GACZqf,EAAiB,EAAZ/D,EAAI,GAAGtb,EAEhBkb,GAAI1b,GAAGQ,GAAKmf,EAAiB,GAAVC,EAAK,IAAUC,EAAK,IACvCnE,EAAIzb,GAAGO,GAAK,EACZ0W,EAAIlX,GAAKyf,OAhDT/D,GAAI1b,GAAKyb,EAAO6D,EAAOtf,GAAIwf,EAASxf,IACpC0b,EAAIzb,GAAKwb,EAAO6D,EAAOrf,GAAIuf,EAASvf,IACpCQ,EAAM3B,KAAK2B,IAAIib,EAAI1b,GAAG3B,OAAQoC,GAC9BA,EAAM3B,KAAK2B,IAAIib,EAAIzb,GAAG5B,OAAQoC,GAmDlC,IAAK,GAFD8R,GAAMrU,KAAK0gB,OAAO,KAAM,KAAM,MAC9Bnd,EAAMvD,KAAKyf,QACN3e,EAAIyB,EAAKzB,GAAK,EAAGA,IAAK,CAG7B,IAFA,GAAIoB,GAAI,EAEDpB,GAAK,GAAG,CAEb,IAAK,GADDoe,IAAO,EACF5c,EAAI,EAAGA,EAAI3B,EAAK2B,IACvBiB,EAAIjB,GAAiB,EAAZkb,EAAIlb,GAAGxB,GACD,IAAXyC,EAAIjB,KACN4c,GAAO,EAEX,KAAKA,EACH,KACFhd,KACApB,IAKF,GAHIA,GAAK,GACPoB,IACFmS,EAAMA,EAAI4M,KAAK/e,GACXpB,EAAI,EACN,KAEF,KAAK,GAAIwB,GAAI,EAAGA,EAAI3B,EAAK2B,IAAK,CAC5B,GACIa,GADA0V,EAAItV,EAAIjB,EAEF,KAANuW,IAEKA,EAAI,EACX1V,EAAI6V,EAAI1W,GAAIuW,EAAI,GAAM,GACfA,EAAI,IACX1V,EAAI6V,EAAI1W,IAAKuW,EAAI,GAAM,GAAG1P,OAG1BkL,EADa,WAAXlR,EAAE2W,KACEzF,EAAIsM,SAASxd,GAEbkR,EAAIjK,IAAIjH,KAIpB,IAAK,GAAIrC,GAAI,EAAGA,EAAIH,EAAKG,IACvBkY,EAAIlY,GAAK,IACX,OAAOuT,GAAIwM,OAQb7B,UAAUa,UAAYA,UAEtBA,UAAU5gB,UAAUiX,GAAK,WACvB,KAAM,IAAI7W,OAAM,oBAGlBwgB,UAAU5gB,UAAUihB,SAAW,WAC7B,MAAOlgB,MAAK8f,MAAMI,SAASlgB,OAG7Bgf,UAAU/f,UAAU2iB,YAAc,SAAqBpD,EAAOvB,GAC5DuB,EAAQC,EAAM7Y,QAAQ4Y,EAAOvB,EAE7B,IAAItc,GAAMX,KAAKmD,EAAEyE,YACjB,IAAiB,IAAb4W,EAAM,IAAeA,EAAMre,OAAS,IAAM,EAAIQ,EAChD,MAAOX,MAAKigB,MAAMzB,EAAMtB,MAAM,EAAG,EAAIvc,GACnB6d,EAAMtB,MAAM,EAAIvc,EAAK,EAAI,EAAIA,GAC1C,KAAkB,IAAb6d,EAAM,IAA4B,IAAbA,EAAM,KAC3BA,EAAMre,OAAS,IAAMQ,EAC/B,MAAOX,MAAK6hB,WAAWrD,EAAMtB,MAAM,EAAG,EAAIvc,GAAmB,IAAb6d,EAAM,GAExD,MAAM,IAAInf,OAAM,yBAGlBwgB,UAAU5gB,UAAU6iB,iBAAmB,SAA0B7E,GAC/D,MAAOjd,MAAK2e,OAAO1B,GAAK,IAG1B4C,UAAU5gB,UAAU8iB,QAAU,SAAiBC,GAC7C,GAAIrhB,GAAMX,KAAK8f,MAAM3c,EAAEyE,aACnB7E,EAAI/C,KAAKiiB,OAAOrc,QAAQ,KAAMjF,EAElC,OAAIqhB,IACOhiB,KAAKkiB,OAAOtN,SAAW,EAAO,GAAOuN,OAAOpf,IAE9C,GAAOof,OAAOpf,EAAG/C,KAAKkiB,OAAOtc,QAAQ,KAAMjF,KAGtDkf,UAAU5gB,UAAU0f,OAAS,SAAgB1B,EAAK+E,GAChD,MAAOvD,GAAME,OAAO3e,KAAK+hB,QAAQC,GAAU/E,IAG7C4C,UAAU5gB,UAAUmjB,WAAa,SAAoBC,GACnD,GAAIriB,KAAK+f,YACP,MAAO/f,KAET,IAAI+f,IACFK,QAAS,KACT5C,IAAK,KACL8E,KAAM,KAOR,OALAvC,GAAYvC,IAAMxd,KAAKghB,cAAc,GACrCjB,EAAYK,QAAUpgB,KAAKqgB,YAAY,EAAGgC,GAC1CtC,EAAYuC,KAAOtiB,KAAKuiB,WACxBviB,KAAK+f,YAAcA,EAEZ/f,MAGT6f,UAAU5gB,UAAUujB,YAAc,SAAqBtgB,GACrD,IAAKlC,KAAK+f,YACR,OAAO,CAET,IAAIK,GAAUpgB,KAAK+f,YAAYK,OAC/B,SAAKA,GAGEA,EAAQQ,OAAOzgB,QAAUS,KAAKiF,MAAM3D,EAAEX,YAAc,GAAK6e,EAAQG,OAG1EV,UAAU5gB,UAAUohB,YAAc,SAAqBE,EAAM8B,GAC3D,GAAIriB,KAAK+f,aAAe/f,KAAK+f,YAAYK,QACvC,MAAOpgB,MAAK+f,YAAYK,OAI1B,KAAK,GAFDA,IAAYpgB,MACZqU,EAAMrU,KACDc,EAAI,EAAGA,EAAIuhB,EAAOvhB,GAAKyf,EAAM,CACpC,IAAK,GAAIje,GAAI,EAAGA,EAAIie,EAAMje,IACxB+R,EAAMA,EAAIoO,KACZrC,GAAQjD,KAAK9I,GAEf,OACEkM,KAAMA,EACNK,OAAQR,IAIZP,UAAU5gB,UAAU+hB,cAAgB,SAAuBhI,GACzD,GAAIhZ,KAAK+f,aAAe/f,KAAK+f,YAAYvC,IACvC,MAAOxd,MAAK+f,YAAYvC,GAK1B,KAAK,GAHDzV,IAAQ/H,MACRuC,GAAO,GAAKyW,GAAO,EACnByJ,EAAc,IAARlgB,EAAY,KAAOvC,KAAKyiB,MACzB3hB,EAAI,EAAGA,EAAIyB,EAAKzB,IACvBiH,EAAIjH,GAAKiH,EAAIjH,EAAI,GAAGsJ,IAAIqY,EAC1B,QACEzJ,IAAKA,EACL4H,OAAQ7Y,IAIZ8X,UAAU5gB,UAAUsjB,SAAW,WAC7B,MAAO,OAGT1C,UAAU5gB,UAAUgiB,KAAO,SAAc/e,GAEvC,IAAK,GADDxB,GAAIV,KACCc,EAAI,EAAGA,EAAIoB,EAAGpB,IACrBJ,EAAIA,EAAE+hB,KACR,OAAO/hB,K9C4udHqzC,KACA,SAASt1C,EAAQC,EAASC,G+C1kehC,YAUA,SAASgkB,YAAW1D,GAClB2D,EAAKlf,KAAK1D,KAAM,QAASif,GAEzBjf,KAAK8B,EAAI,GAAIw3B,GAAGra,EAAKnd,EAAG,IAAIqU,MAAMnW,KAAKI,KACvCJ,KAAK+B,EAAI,GAAIu3B,GAAGra,EAAKld,EAAG,IAAIoU,MAAMnW,KAAKI,KACvCJ,KAAK6iB,KAAO7iB,KAAKmf,IAAI3H,UAErBxX,KAAK8iB,MAAqC,IAA7B9iB,KAAK8B,EAAEyU,UAAUjB,KAAK,GACnCtV,KAAK+iB,OAAmD,IAA1C/iB,KAAK8B,EAAEyU,UAAUzR,IAAI9E,KAAKmD,GAAGmS,SAG3CtV,KAAKgjB,KAAOhjB,KAAKijB,iBAAiBhE,GAClCjf,KAAKkjB,YAAc,GAAI5hB,OAAM,GAC7BtB,KAAKmjB,YAAc,GAAI7hB,OAAM,GAkO/B,QAAS8hB,OAAMtD,EAAO/c,EAAGC,EAAGqgB,GAC1BT,EAAK/C,UAAUnc,KAAK1D,KAAM8f,EAAO,UACvB,OAAN/c,GAAoB,OAANC,GAChBhD,KAAK+C,EAAI,KACT/C,KAAKgD,EAAI,KACThD,KAAKsjB,KAAM,IAEXtjB,KAAK+C,EAAI,GAAIu2B,GAAGv2B,EAAG,IACnB/C,KAAKgD,EAAI,GAAIs2B,GAAGt2B,EAAG,IAEfqgB,IACFrjB,KAAK+C,EAAE0T,SAASzW,KAAK8f,MAAM1f,KAC3BJ,KAAKgD,EAAEyT,SAASzW,KAAK8f,MAAM1f,MAExBJ,KAAK+C,EAAE3C,MACVJ,KAAK+C,EAAI/C,KAAK+C,EAAEoT,MAAMnW,KAAK8f,MAAM1f,MAC9BJ,KAAKgD,EAAE5C,MACVJ,KAAKgD,EAAIhD,KAAKgD,EAAEmT,MAAMnW,KAAK8f,MAAM1f,MACnCJ,KAAKsjB,KAAM,GAmNf,QAASC,QAAOzD,EAAO/c,EAAGC,EAAG6V,GAC3B+J,EAAK/C,UAAUnc,KAAK1D,KAAM8f,EAAO,YACvB,OAAN/c,GAAoB,OAANC,GAAoB,OAAN6V,GAC9B7Y,KAAK+C,EAAI/C,KAAK8f,MAAMpH,IACpB1Y,KAAKgD,EAAIhD,KAAK8f,MAAMpH,IACpB1Y,KAAK6Y,EAAI,GAAIygB,GAAG,KAEhBt5B,KAAK+C,EAAI,GAAIu2B,GAAGv2B,EAAG,IACnB/C,KAAKgD,EAAI,GAAIs2B,GAAGt2B,EAAG,IACnBhD,KAAK6Y,EAAI,GAAIygB,GAAGzgB,EAAG,KAEhB7Y,KAAK+C,EAAE3C,MACVJ,KAAK+C,EAAI/C,KAAK+C,EAAEoT,MAAMnW,KAAK8f,MAAM1f,MAC9BJ,KAAKgD,EAAE5C,MACVJ,KAAKgD,EAAIhD,KAAKgD,EAAEmT,MAAMnW,KAAK8f,MAAM1f,MAC9BJ,KAAK6Y,EAAEzY,MACVJ,KAAK6Y,EAAI7Y,KAAK6Y,EAAE1C,MAAMnW,KAAK8f,MAAM1f,MAEnCJ,KAAKwjB,KAAOxjB,KAAK6Y,IAAM7Y,KAAK8f,MAAMpH,IA9epC,GAAIoH,GAAQnhB,EAAQ,MAChBqhB,EAAWrhB,EAAQ,MACnB26B,EAAK36B,EAAQ,MACbW,EAAWX,EAAQ,KACnBikB,EAAO9C,EAAMjgB,KAEbX,EAAS8gB,EAASvB,MAAMvf,MAiB5BI,GAASqjB,WAAYC,GACrBnkB,EAAOC,QAAUikB,WAEjBA,WAAW1jB,UAAUgkB,iBAAmB,SAA0BhE,GAEhE,GAAKjf,KAAK8iB,OAAU9iB,KAAK2U,GAAM3U,KAAKoD,GAAwB,IAAnBpD,KAAKmD,EAAEiE,KAAK,GAArD,CAIA,GAAIkb,GACAmB,CACJ,IAAIxE,EAAKqD,KACPA,EAAO,GAAIgX,GAAGra,EAAKqD,KAAM,IAAInM,MAAMnW,KAAKI,SACnC,CACL,GAAIsjB,GAAQ1jB,KAAK2jB,cAAc3jB,KAAKmD,EAEpCmf,GAAOoB,EAAM,GAAGre,IAAIqe,EAAM,IAAM,EAAIA,EAAM,GAAKA,EAAM,GACrDpB,EAAOA,EAAKnM,MAAMnW,KAAKI,KAEzB,GAAI6e,EAAKwE,OACPA,EAAS,GAAI6V,GAAGra,EAAKwE,OAAQ,QACxB,CAEL,GAAIG,GAAU5jB,KAAK2jB,cAAc3jB,KAAKoD,EACsB,KAAxDpD,KAAK2U,EAAEzT,IAAI0iB,EAAQ,IAAI7gB,EAAEsC,IAAIrF,KAAK2U,EAAE5R,EAAEiU,OAAOsL,IAC/CmB,EAASG,EAAQ,IAEjBH,EAASG,EAAQ,GACjB1kB,EAA2D,IAApDc,KAAK2U,EAAEzT,IAAIuiB,GAAQ1gB,EAAEsC,IAAIrF,KAAK2U,EAAE5R,EAAEiU,OAAOsL,MAKpD,GAAIuB,EAYJ,OAVEA,GADE5E,EAAK4E,MACC5E,EAAK4E,MAAMC,IAAI,SAASC,GAC9B,OACEjiB,EAAG,GAAIw3B,GAAGvV,EAAIjiB,EAAG,IACjBC,EAAG,GAAIu3B,GAAGvV,EAAIhiB,EAAG,OAIb/B,KAAKgkB,cAAcP,IAI3BnB,KAAMA,EACNmB,OAAQA,EACRI,MAAOA,KAIXlB,WAAW1jB,UAAU0kB,cAAgB,SAAuBviB,GAI1D,GAAIhB,GAAMgB,IAAQpB,KAAKmD,EAAInD,KAAKI,IAAMk5B,EAAGngB,KAAK/X,GAC1CyhB,EAAO,GAAIyW,GAAG,GAAGnjB,MAAM/V,GAAKoX,UAC5ByM,EAAQpB,EAAKpL,SAEbpH,EAAI,GAAIipB,GAAG,GAAGnjB,MAAM/V,GAAKqX,SAASH,UAAUN,OAAO6L,GAEnDqB,EAAKD,EAAMvN,OAAOrG,GAAGkG,UACrB4N,EAAKF,EAAMrN,OAAOvG,GAAGkG,SACzB,QAAS2N,EAAIC,IAGfxB,WAAW1jB,UAAU+kB,cAAgB,SAAuBP,GA2B1D,IAzBA,GAYIjZ,GACA8B,EAEA3B,EACA8B,EAEA3B,EACA8B,EAEAwX,EAEA1jB,EACAqC,EAxBAshB,EAAWrkB,KAAKoD,EAAE8P,MAAMtS,KAAK0jB,MAAMtkB,KAAKoD,EAAE7B,YAAc,IAIxD6X,EAAIqK,EACJc,EAAIvkB,KAAKoD,EAAEoD,QACX2O,EAAK,GAAImkB,GAAG,GACZ9U,EAAK,GAAI8U,GAAG,GACZlkB,EAAK,GAAIkkB,GAAG,GACZ7U,EAAK,GAAI6U,GAAG,GAaZx4B,EAAI,EAGa,IAAdsY,EAAE9D,KAAK,IAAU,CACtB,GAAItN,GAAIuc,EAAE3f,IAAIwU,EACd1Y,GAAI6jB,EAAEzf,IAAIkD,EAAE9G,IAAIkY,IAChBrW,EAAIqS,EAAGtQ,IAAIkD,EAAE9G,IAAIiU,GACjB,IAAInS,GAAIyhB,EAAG3f,IAAIkD,EAAE9G,IAAIsjB,GAErB,KAAK7Z,GAAMjK,EAAE2E,IAAIgf,GAAY,EAC3B7Z,EAAK4Z,EAAMjb,MACXmD,EAAK6I,EACLxK,EAAKjK,EAAEyI,MACPsD,EAAK1J,MACA,IAAI4H,GAAc,MAAN7J,EACjB,KAEFsjB,GAAQ1jB,EAER6jB,EAAInL,EACJA,EAAI1Y,EACJ0U,EAAKD,EACLA,EAAKpS,EACL0hB,EAAKD,EACLA,EAAKxhB,EAEP8H,EAAKpK,EAAEyI,MACPyD,EAAK7J,CAEL,IAAI2hB,GAAO/Z,EAAGpG,MAAM6F,IAAIqC,EAAGlI,OACvBogB,EAAO7Z,EAAGvG,MAAM6F,IAAIwC,EAAGrI,MAgB3B,OAfIogB,GAAKtf,IAAIqf,IAAS,IACpB5Z,EAAKN,EACLoC,EAAKN,GAIH3B,EAAG2iB,OACL3iB,EAAKA,EAAGxB,MACRsD,EAAKA,EAAGtD,OAEN2B,EAAGwiB,OACLxiB,EAAKA,EAAG3B,MACRyD,EAAKA,EAAGzD,SAINrH,EAAG6I,EAAI5I,EAAG0K,IACV3K,EAAGgJ,EAAI/I,EAAG6K,KAIhB+V,WAAW1jB,UAAU2lB,WAAa,SAAoB1iB,GACpD,GAAI2hB,GAAQ7jB,KAAKgjB,KAAKa,MAClBgB,EAAKhB,EAAM,GACXiB,EAAKjB,EAAM,GAEXkB,EAAKD,EAAG/iB,EAAEb,IAAIgB,GAAGgS,SAASlU,KAAKoD,GAC/B4hB,EAAKH,EAAG9iB,EAAEoH,MAAMjI,IAAIgB,GAAGgS,SAASlU,KAAKoD,GAErC6hB,EAAKF,EAAG7jB,IAAI2jB,EAAG/iB,GACfojB,EAAKF,EAAG9jB,IAAI4jB,EAAGhjB,GACfqjB,EAAKJ,EAAG7jB,IAAI2jB,EAAG9iB,GACfqjB,EAAKJ,EAAG9jB,IAAI4jB,EAAG/iB,GAGf2b,EAAKxb,EAAE4C,IAAImgB,GAAIngB,IAAIogB,GACnBvH,EAAKwH,EAAG/a,IAAIgb,GAAIjc,KACpB,QAASuU,GAAIA,EAAIC,GAAIA,IAGvBgF,WAAW1jB,UAAU4iB,WAAa,SAAoB9e,EAAGoO,GACvDpO,EAAI,GAAIu2B,GAAGv2B,EAAG,IACTA,EAAE3C,MACL2C,EAAIA,EAAEoT,MAAMnW,KAAKI,KAEnB,IAAIqkB,GAAK1hB,EAAEoU,SAASH,OAAOjU,GAAG4T,QAAQ5T,EAAEiU,OAAOhX,KAAK8B,IAAI6U,QAAQ3W,KAAK+B,GACjEiB,EAAIyhB,EAAGnN,UAIPtC,EAAQhS,EAAEuT,UAAUvB,OAIxB,QAHI7D,IAAQ6D,IAAU7D,GAAO6D,KAC3BhS,EAAIA,EAAEyU,UAEDzX,KAAKigB,MAAMld,EAAGC,IAGvB2f,WAAW1jB,UAAUihB,SAAW,SAAkBD,GAChD,GAAIA,EAAMqD,IACR,OAAO,CAET,IAAIvgB,GAAIkd,EAAMld,EACVC,EAAIid,EAAMjd,EAEVqiB,EAAKrlB,KAAK8B,EAAEkV,OAAOjU,GACnBuiB,EAAMviB,EAAEoU,SAASH,OAAOjU,GAAG4T,QAAQ0O,GAAI1O,QAAQ3W,KAAK+B,EACxD,OAA2C,KAApCiB,EAAEmU,SAASN,QAAQyO,GAAKhQ,KAAK,IAGtCqN,WAAW1jB,UAAUsmB,gBACjB,SAAyB3E,EAAQQ,GAGnC,IAAK,GAFDoE,GAAUxlB,KAAKkjB,YACfuC,EAAUzlB,KAAKmjB,YACVriB,EAAI,EAAGA,EAAI8f,EAAOzgB,OAAQW,IAAK,CACtC,GAAIoX,GAAQlY,KAAK4kB,WAAWxD,EAAOtgB,IAC/BqC,EAAIyd,EAAO9f,GACXwhB,EAAOnf,EAAEof,UAETrK,GAAMwF,GAAG4P,OACXpV,EAAMwF,GAAG4P,MAAQpV,EAAMwF,GAAG4P,KAC1BnqB,EAAIA,EAAEgG,KAAI,IAER+O,EAAMyF,GAAG2P,OACXpV,EAAMyF,GAAG2P,MAAQpV,EAAMyF,GAAG2P,KAC1BhL,EAAOA,EAAKnZ,KAAI,IAGlBqc,EAAY,EAAJ1kB,GAASqC,EACjBqiB,EAAY,EAAJ1kB,EAAQ,GAAKwhB,EACrBmD,EAAY,EAAJ3kB,GAASoX,EAAMwF,GACvB+H,EAAY,EAAJ3kB,EAAQ,GAAKoX,EAAMyF,GAK7B,IAAK,GAHD5V,GAAM/H,KAAKkhB,YAAY,EAAGsE,EAASC,EAAa,EAAJ3kB,GAGvCwB,EAAI,EAAGA,EAAQ,EAAJxB,EAAOwB,IACzBkjB,EAAQljB,GAAK,KACbmjB,EAAQnjB,GAAK,IAEf,OAAOyF,IAwBTzI,EAAS8jB,MAAOR,EAAK/C,WAErB8C,WAAW1jB,UAAUghB,MAAQ,SAAeld,EAAGC,EAAGqgB,GAChD,MAAO,IAAID,OAAMpjB,KAAM+C,EAAGC,EAAGqgB,IAG/BV,WAAW1jB,UAAUmgB,cAAgB,SAAuBrgB,EAAKqB,GAC/D,MAAOgjB,OAAMsC,SAAS1lB,KAAMjB,EAAKqB,IAGnCgjB,MAAMnkB,UAAUsjB,SAAW,WACzB,GAAKviB,KAAK8f,MAAMkD,KAAhB,CAGA,GAAI2C,GAAM3lB,KAAK+f,WACf,IAAI4F,GAAOA,EAAIrD,KACb,MAAOqD,GAAIrD,IAEb,IAAIA,GAAOtiB,KAAK8f,MAAMG,MAAMjgB,KAAK+C,EAAEiU,OAAOhX,KAAK8f,MAAMkD,KAAKV,MAAOtiB,KAAKgD,EACtE,IAAI2iB,EAAK,CACP,GAAI7F,GAAQ9f,KAAK8f,MACb8F,EAAU,SAASziB,GACrB,MAAO2c,GAAMG,MAAM9c,EAAEJ,EAAEiU,OAAO8I,EAAMkD,KAAKV,MAAOnf,EAAEH,GAEpD2iB,GAAIrD,KAAOA,EACXA,EAAKvC,aACHuC,KAAM,KACN9E,IAAKmI,EAAInI,MACPxE,IAAK2M,EAAInI,IAAIxE,IACb4H,OAAQ+E,EAAInI,IAAIoD,OAAOkD,IAAI8B,IAE7BxF,QAASuF,EAAIvF,UACXG,KAAMoF,EAAIvF,QAAQG,KAClBK,OAAQ+E,EAAIvF,QAAQQ,OAAOkD,IAAI8B,KAIrC,MAAOtD,KAGTc,MAAMnkB,UAAUuI,OAAS,WACvB,MAAKxH,MAAK+f,aAGD/f,KAAK+C,EAAG/C,KAAKgD,EAAGhD,KAAK+f,cAC5BK,QAASpgB,KAAK+f,YAAYK,UACxBG,KAAMvgB,KAAK+f,YAAYK,QAAQG,KAC/BK,OAAQ5gB,KAAK+f,YAAYK,QAAQQ,OAAO1D,MAAM,IAEhDM,IAAKxd,KAAK+f,YAAYvC,MACpBxE,IAAKhZ,KAAK+f,YAAYvC,IAAIxE,IAC1B4H,OAAQ5gB,KAAK+f,YAAYvC,IAAIoD,OAAO1D,MAAM,OATnCld,KAAK+C,EAAG/C,KAAKgD,IAc1BogB,MAAMsC,SAAW,SAAkB5F,EAAO/gB,EAAKqB,GAO7C,QAASylB,WAAU9mB,GACjB,MAAO+gB,GAAMG,MAAMlhB,EAAI,GAAIA,EAAI,GAAIqB,GAPlB,gBAARrB,KACTA,EAAM+mB,KAAKC,MAAMhnB,GACnB,IAAIgJ,GAAM+X,EAAMG,MAAMlhB,EAAI,GAAIA,EAAI,GAAIqB,EACtC,KAAKrB,EAAI,GACP,MAAOgJ,EAMT,IAAI4d,GAAM5mB,EAAI,EAYd,OAXAgJ,GAAIgY,aACFuC,KAAM,KACNlC,QAASuF,EAAIvF,UACXG,KAAMoF,EAAIvF,QAAQG,KAClBK,QAAU7Y,GAAMoa,OAAOwD,EAAIvF,QAAQQ,OAAOkD,IAAI+B,aAEhDrI,IAAKmI,EAAInI,MACPxE,IAAK2M,EAAInI,IAAIxE,IACb4H,QAAU7Y,GAAMoa,OAAOwD,EAAInI,IAAIoD,OAAOkD,IAAI+B,cAGvC9d,GAGTqb,MAAMnkB,UAAU2H,QAAU,WACxB,MAAI5G,MAAKgmB,aACA,sBACF,gBAAkBhmB,KAAK+C,EAAEwT,UAAU/Q,SAAS,GAAI,GACnD,OAASxF,KAAKgD,EAAEuT,UAAU/Q,SAAS,GAAI,GAAK,KAGlD4d,MAAMnkB,UAAU+mB,WAAa,WAC3B,MAAOhmB,MAAKsjB,KAGdF,MAAMnkB,UAAUmL,IAAM,SAAajH,GAEjC,GAAInD,KAAKsjB,IACP,MAAOngB,EAGT,IAAIA,EAAEmgB,IACJ,MAAOtjB,KAGT,IAAIA,KAAKkW,GAAG/S,GACV,MAAOnD,MAAKyiB,KAGd,IAAIziB,KAAKmJ,MAAM+M,GAAG/S,GAChB,MAAOnD,MAAK8f,MAAMG,MAAM,KAAM,KAGhC,IAAwB,IAApBjgB,KAAK+C,EAAEsC,IAAIlC,EAAEJ,GACf,MAAO/C,MAAK8f,MAAMG,MAAM,KAAM,KAEhC,IAAIlf,GAAIf,KAAKgD,EAAE4T,OAAOzT,EAAEH,EACN,KAAdjC,EAAEuU,KAAK,KACTvU,EAAIA,EAAEiW,OAAOhX,KAAK+C,EAAE6T,OAAOzT,EAAEJ,GAAGyU,WAClC,IAAIyO,GAAKllB,EAAEoW,SAASN,QAAQ7W,KAAK+C,GAAG8T,QAAQ1T,EAAEJ,GAC1CmjB,EAAKnlB,EAAEiW,OAAOhX,KAAK+C,EAAE6T,OAAOqP,IAAKpP,QAAQ7W,KAAKgD,EAClD,OAAOhD,MAAK8f,MAAMG,MAAMgG,EAAIC,IAG9B9C,MAAMnkB,UAAUwjB,IAAM,WACpB,GAAIziB,KAAKsjB,IACP,MAAOtjB,KAGT,IAAImmB,GAAMnmB,KAAKgD,EAAE0T,OAAO1W,KAAKgD,EAC7B,IAAoB,IAAhBmjB,EAAI7Q,KAAK,GACX,MAAOtV,MAAK8f,MAAMG,MAAM,KAAM,KAEhC,IAAIne,GAAI9B,KAAK8f,MAAMhe,EAEfsT,EAAKpV,KAAK+C,EAAEoU,SACZiP,EAAQD,EAAI3O,UACZzW,EAAIqU,EAAGsB,OAAOtB,GAAIuB,QAAQvB,GAAIuB,QAAQ7U,GAAGkV,OAAOoP,GAEhDH,EAAKllB,EAAEoW,SAASN,QAAQ7W,KAAK+C,EAAE2T,OAAO1W,KAAK+C,IAC3CmjB,EAAKnlB,EAAEiW,OAAOhX,KAAK+C,EAAE6T,OAAOqP,IAAKpP,QAAQ7W,KAAKgD,EAClD,OAAOhD,MAAK8f,MAAMG,MAAMgG,EAAIC,IAG9B9C,MAAMnkB,UAAUgjB,KAAO,WACrB,MAAOjiB,MAAK+C,EAAEwT,WAGhB6M,MAAMnkB,UAAUijB,KAAO,WACrB,MAAOliB,MAAKgD,EAAEuT,WAGhB6M,MAAMnkB,UAAUiC,IAAM,SAAagB,GAGjC,MAFAA,GAAI,GAAIo3B,GAAGp3B,EAAG,IAEVlC,KAAKwiB,YAAYtgB,GACZlC,KAAK8f,MAAMK,aAAangB,KAAMkC,GAC9BlC,KAAK8f,MAAMkD,KACXhjB,KAAK8f,MAAMyF,iBAAkBvlB,OAAUkC,IAEvClC,KAAK8f,MAAMgB,SAAS9gB,KAAMkC,IAGrCkhB,MAAMnkB,UAAUonB,OAAS,SAAgB3I,EAAIwH,EAAIvH,GAC/C,GAAIiD,IAAW5gB,KAAMklB,GACjB9D,GAAW1D,EAAIC,EACnB,OAAI3d,MAAK8f,MAAMkD,KACNhjB,KAAK8f,MAAMyF,gBAAgB3E,EAAQQ,GAEnCphB,KAAK8f,MAAMoB,YAAY,EAAGN,EAAQQ,EAAQ,IAGrDgC,MAAMnkB,UAAUiX,GAAK,SAAY/S,GAC/B,MAAOnD,QAASmD,GACTnD,KAAKsjB,MAAQngB,EAAEmgB,MACVtjB,KAAKsjB,KAA2B,IAApBtjB,KAAK+C,EAAEsC,IAAIlC,EAAEJ,IAAgC,IAApB/C,KAAKgD,EAAEqC,IAAIlC,EAAEH,KAGhEogB,MAAMnkB,UAAUkK,IAAM,SAAaod,GACjC,GAAIvmB,KAAKsjB,IACP,MAAOtjB,KAET,IAAI+H,GAAM/H,KAAK8f,MAAMG,MAAMjgB,KAAK+C,EAAG/C,KAAKgD,EAAEyU,SAC1C,IAAI8O,GAAevmB,KAAK+f,YAAa,CACnC,GAAI4F,GAAM3lB,KAAK+f,YACXyG,EAAS,SAASrjB,GACpB,MAAOA,GAAEgG,MAEXpB,GAAIgY,aACFvC,IAAKmI,EAAInI,MACPxE,IAAK2M,EAAInI,IAAIxE,IACb4H,OAAQ+E,EAAInI,IAAIoD,OAAOkD,IAAI0C,IAE7BpG,QAASuF,EAAIvF,UACXG,KAAMoF,EAAIvF,QAAQG,KAClBK,OAAQ+E,EAAIvF,QAAQQ,OAAOkD,IAAI0C,KAIrC,MAAOze,IAGTqb,MAAMnkB,UAAUuiB,IAAM,WACpB,GAAIxhB,KAAKsjB,IACP,MAAOtjB,MAAK8f,MAAMY,OAAO,KAAM,KAAM,KAEvC,IAAI3Y,GAAM/H,KAAK8f,MAAMY,OAAO1gB,KAAK+C,EAAG/C,KAAKgD,EAAGhD,KAAK8f,MAAMpH,IACvD,OAAO3Q,IAuBTzI,EAASikB,OAAQX,EAAK/C,WAEtB8C,WAAW1jB,UAAUyhB,OAAS,SAAgB3d,EAAGC,EAAG6V,GAClD,MAAO,IAAI0K,QAAOvjB,KAAM+C,EAAGC,EAAG6V,IAGhC0K,OAAOtkB,UAAU4hB,IAAM,WACrB,GAAI7gB,KAAKgmB,aACP,MAAOhmB,MAAK8f,MAAMG,MAAM,KAAM,KAEhC,IAAIwG,GAAOzmB,KAAK6Y,EAAErB,UACdkP,EAAQD,EAAKtP,SACbkO,EAAKrlB,KAAK+C,EAAEiU,OAAO0P,GACnBC,EAAK3mB,KAAKgD,EAAEgU,OAAO0P,GAAO1P,OAAOyP,EAErC,OAAOzmB,MAAK8f,MAAMG,MAAMoF,EAAIsB,IAG9BpD,OAAOtkB,UAAUkK,IAAM,WACrB,MAAOnJ,MAAK8f,MAAMY,OAAO1gB,KAAK+C,EAAG/C,KAAKgD,EAAEyU,SAAUzX,KAAK6Y,IAGzD0K,OAAOtkB,UAAUmL,IAAM,SAAajH,GAElC,GAAInD,KAAKgmB,aACP,MAAO7iB,EAGT,IAAIA,EAAE6iB,aACJ,MAAOhmB,KAGT,IAAI4mB,GAAMzjB,EAAE0V,EAAE1B,SACV0P,EAAK7mB,KAAK6Y,EAAE1B,SACZ8G,EAAKje,KAAK+C,EAAEiU,OAAO4P,GACnBzI,EAAKhb,EAAEJ,EAAEiU,OAAO6P,GAChBC,EAAK9mB,KAAKgD,EAAEgU,OAAO4P,EAAI5P,OAAO7T,EAAE0V,IAChCkO,EAAK5jB,EAAEH,EAAEgU,OAAO6P,EAAG7P,OAAOhX,KAAK6Y,IAE/BlG,EAAIsL,EAAGrH,OAAOuH,GACdzd,EAAIomB,EAAGlQ,OAAOmQ,EAClB,IAAkB,IAAdpU,EAAE2C,KAAK,GACT,MAAkB,KAAd5U,EAAE4U,KAAK,GACFtV,KAAK8f,MAAMY,OAAO,KAAM,KAAM,MAE9B1gB,KAAKyiB,KAGhB,IAAIuE,GAAKrU,EAAEwE,SACP8P,EAAKD,EAAGhQ,OAAOrE,GACf4R,EAAItG,EAAGjH,OAAOgQ,GAEdf,EAAKvlB,EAAEyW,SAASR,QAAQsQ,GAAIpQ,QAAQ0N,GAAG1N,QAAQ0N,GAC/C2B,EAAKxlB,EAAEsW,OAAOuN,EAAE1N,QAAQoP,IAAKpP,QAAQiQ,EAAG9P,OAAOiQ,IAC/CC,EAAKlnB,KAAK6Y,EAAE7B,OAAO7T,EAAE0V,GAAG7B,OAAOrE,EAEnC,OAAO3S,MAAK8f,MAAMY,OAAOuF,EAAIC,EAAIgB,IAGnC3D,OAAOtkB,UAAU0hB,SAAW,SAAkBxd,GAE5C,GAAInD,KAAKgmB,aACP,MAAO7iB,GAAEqe,KAGX,IAAIre,EAAE6iB,aACJ,MAAOhmB,KAGT,IAAI6mB,GAAK7mB,KAAK6Y,EAAE1B,SACZ8G,EAAKje,KAAK+C,EACVob,EAAKhb,EAAEJ,EAAEiU,OAAO6P,GAChBC,EAAK9mB,KAAKgD,EACV+jB,EAAK5jB,EAAEH,EAAEgU,OAAO6P,GAAI7P,OAAOhX,KAAK6Y,GAEhClG,EAAIsL,EAAGrH,OAAOuH,GACdzd,EAAIomB,EAAGlQ,OAAOmQ,EAClB,IAAkB,IAAdpU,EAAE2C,KAAK,GACT,MAAkB,KAAd5U,EAAE4U,KAAK,GACFtV,KAAK8f,MAAMY,OAAO,KAAM,KAAM,MAE9B1gB,KAAKyiB,KAGhB,IAAIuE,GAAKrU,EAAEwE,SACP8P,EAAKD,EAAGhQ,OAAOrE,GACf4R,EAAItG,EAAGjH,OAAOgQ,GAEdf,EAAKvlB,EAAEyW,SAASR,QAAQsQ,GAAIpQ,QAAQ0N,GAAG1N,QAAQ0N,GAC/C2B,EAAKxlB,EAAEsW,OAAOuN,EAAE1N,QAAQoP,IAAKpP,QAAQiQ,EAAG9P,OAAOiQ,IAC/CC,EAAKlnB,KAAK6Y,EAAE7B,OAAOrE,EAEvB,OAAO3S,MAAK8f,MAAMY,OAAOuF,EAAIC,EAAIgB,IAGnC3D,OAAOtkB,UAAUgiB,KAAO,SAAc5a,GACpC,GAAY,IAARA,EACF,MAAOrG,KACT,IAAIA,KAAKgmB,aACP,MAAOhmB,KACT,KAAKqG,EACH,MAAOrG,MAAKyiB,KAEd,IAAIziB,KAAK8f,MAAMgD,OAAS9iB,KAAK8f,MAAMiD,OAAQ,CAEzC,IAAK,GADDriB,GAAIV,KACCc,EAAI,EAAGA,EAAIuF,EAAKvF,IACvBJ,EAAIA,EAAE+hB,KACR,OAAO/hB,GAeT,IAAK,GAVDoB,GAAI9B,KAAK8f,MAAMhe,EACf+gB,EAAO7iB,KAAK8f,MAAM+C,KAElBsE,EAAKnnB,KAAK+C,EACVqkB,EAAKpnB,KAAKgD,EACVqkB,EAAKrnB,KAAK6Y,EACVyO,EAAMD,EAAGlQ,SAASA,SAGlBoQ,EAAMH,EAAG1Q,OAAO0Q,GACXtmB,EAAI,EAAGA,EAAIuF,EAAKvF,IAAK,CAC5B,GAAI0mB,GAAML,EAAGhQ,SACTsQ,EAAOF,EAAIpQ,SACXuQ,EAAOD,EAAKtQ,SACZpW,EAAIymB,EAAI9Q,OAAO8Q,GAAK7Q,QAAQ6Q,GAAK7Q,QAAQ7U,EAAEkV,OAAOsQ,IAElDK,EAAKR,EAAGnQ,OAAOyQ,GACfxB,EAAKllB,EAAEoW,SAASN,QAAQ8Q,EAAGjR,OAAOiR,IAClCC,EAAKD,EAAG9Q,QAAQoP,GAChB4B,EAAM9mB,EAAEiW,OAAO4Q,EACnBC,GAAMA,EAAIlR,QAAQkR,GAAKhR,QAAQ6Q,EAC/B,IAAIR,GAAKK,EAAIvQ,OAAOqQ,EAChBvmB,GAAI,EAAIuF,IACVihB,EAAMA,EAAItQ,OAAO0Q,IAEnBP,EAAKlB,EACLoB,EAAKH,EACLK,EAAMM,EAGR,MAAO7nB,MAAK8f,MAAMY,OAAOyG,EAAII,EAAIvQ,OAAO6L,GAAOwE,IAGjD9D,OAAOtkB,UAAUwjB,IAAM,WACrB,MAAIziB,MAAKgmB,aACAhmB,KAELA,KAAK8f,MAAMgD,MACN9iB,KAAK8nB,WACL9nB,KAAK8f,MAAMiD,OACX/iB,KAAK+nB,YAEL/nB,KAAKgoB,QAGhBzE,OAAOtkB,UAAU6oB,SAAW,WAC1B,GAAI7B,GACAC,EACAgB,CAEJ,IAAIlnB,KAAKwjB,KAAM,CAMb,GAAIyE,GAAKjoB,KAAK+C,EAAEoU,SAEZ+Q,EAAKloB,KAAKgD,EAAEmU,SAEZgR,EAAOD,EAAG/Q,SAEV9G,EAAIrQ,KAAK+C,EAAE2T,OAAOwR,GAAI/Q,SAASN,QAAQoR,GAAIpR,QAAQsR,EACvD9X,GAAIA,EAAEsG,QAAQtG,EAEd,IAAItM,GAAIkkB,EAAGvR,OAAOuR,GAAItR,QAAQsR,GAE1B5f,EAAItE,EAAEoT,SAASN,QAAQxG,GAAGwG,QAAQxG,GAGlC+X,EAAQD,EAAKxR,QAAQwR,EACzBC,GAAQA,EAAMzR,QAAQyR,GACtBA,EAAQA,EAAMzR,QAAQyR,GAGtBnC,EAAK5d,EAEL6d,EAAKniB,EAAEiT,OAAO3G,EAAEwG,QAAQxO,IAAIwO,QAAQuR,GAEpClB,EAAKlnB,KAAKgD,EAAE0T,OAAO1W,KAAKgD,OACnB,CAML,GAAIlB,GAAI9B,KAAK+C,EAAEoU,SAEXpV,EAAI/B,KAAKgD,EAAEmU,SAEXpW,EAAIgB,EAAEoV,SAENkR,EAAIroB,KAAK+C,EAAE2T,OAAO3U,GAAGoV,SAASN,QAAQ/U,GAAG+U,QAAQ9V,EACrDsnB,GAAIA,EAAE1R,QAAQ0R,EAEd,IAAIpjB,GAAInD,EAAE4U,OAAO5U,GAAG6U,QAAQ7U,GAExBwmB,EAAIrjB,EAAEkS,SAGNoR,EAAKxnB,EAAE4V,QAAQ5V,EACnBwnB,GAAKA,EAAG5R,QAAQ4R,GAChBA,EAAKA,EAAG5R,QAAQ4R,GAGhBtC,EAAKqC,EAAEzR,QAAQwR,GAAGxR,QAAQwR,GAE1BnC,EAAKjhB,EAAE+R,OAAOqR,EAAExR,QAAQoP,IAAKpP,QAAQ0R,GAErCrB,EAAKlnB,KAAKgD,EAAEgU,OAAOhX,KAAK6Y,GACxBqO,EAAKA,EAAGvQ,QAAQuQ,GAGlB,MAAOlnB,MAAK8f,MAAMY,OAAOuF,EAAIC,EAAIgB,IAGnC3D,OAAOtkB,UAAU8oB,UAAY,WAC3B,GAAI9B,GACAC,EACAgB,CAEJ,IAAIlnB,KAAKwjB,KAAM,CAMb,GAAIyE,GAAKjoB,KAAK+C,EAAEoU,SAEZ+Q,EAAKloB,KAAKgD,EAAEmU,SAEZgR,EAAOD,EAAG/Q,SAEV9G,EAAIrQ,KAAK+C,EAAE2T,OAAOwR,GAAI/Q,SAASN,QAAQoR,GAAIpR,QAAQsR,EACvD9X,GAAIA,EAAEsG,QAAQtG,EAEd,IAAItM,GAAIkkB,EAAGvR,OAAOuR,GAAItR,QAAQsR,GAAItR,QAAQ3W,KAAK8f,MAAMhe,GAEjDuG,EAAItE,EAAEoT,SAASN,QAAQxG,GAAGwG,QAAQxG,EAEtC4V,GAAK5d,CAEL,IAAI+f,GAAQD,EAAKxR,QAAQwR,EACzBC,GAAQA,EAAMzR,QAAQyR,GACtBA,EAAQA,EAAMzR,QAAQyR,GACtBlC,EAAKniB,EAAEiT,OAAO3G,EAAEwG,QAAQxO,IAAIwO,QAAQuR,GAEpClB,EAAKlnB,KAAKgD,EAAE0T,OAAO1W,KAAKgD,OACnB,CAKL,GAAIqS,GAAQrV,KAAK6Y,EAAE1B,SAEfqR,EAAQxoB,KAAKgD,EAAEmU,SAEfmL,EAAOtiB,KAAK+C,EAAEiU,OAAOwR,GAErBC,EAAQzoB,KAAK+C,EAAE6T,OAAOvB,GAAO2B,OAAOhX,KAAK+C,EAAE2T,OAAOrB,GACtDoT,GAAQA,EAAM/R,OAAO+R,GAAO9R,QAAQ8R,EAEpC,IAAIC,GAAQpG,EAAK3L,QAAQ2L,EACzBoG,GAAQA,EAAM/R,QAAQ+R,EACtB,IAAIC,GAAQD,EAAMhS,OAAOgS,EACzBzC,GAAKwC,EAAMtR,SAASN,QAAQ8R,GAE5BzB,EAAKlnB,KAAKgD,EAAE0T,OAAO1W,KAAK6Y,GAAG1B,SAASN,QAAQ2R,GAAO3R,QAAQxB,EAE3D,IAAIuT,GAAUJ,EAAMrR,QACpByR,GAAUA,EAAQjS,QAAQiS,GAC1BA,EAAUA,EAAQjS,QAAQiS,GAC1BA,EAAUA,EAAQjS,QAAQiS,GAC1B1C,EAAKuC,EAAMzR,OAAO0R,EAAM7R,QAAQoP,IAAKpP,QAAQ+R,GAG/C,MAAO5oB,MAAK8f,MAAMY,OAAOuF,EAAIC,EAAIgB,IAGnC3D,OAAOtkB,UAAU+oB,KAAO,WACtB,GAAIlmB,GAAI9B,KAAK8f,MAAMhe,EAGfqlB,EAAKnnB,KAAK+C,EACVqkB,EAAKpnB,KAAKgD,EACVqkB,EAAKrnB,KAAK6Y,EACVyO,EAAMD,EAAGlQ,SAASA,SAElBqQ,EAAML,EAAGhQ,SACT0R,EAAMzB,EAAGjQ,SAETpW,EAAIymB,EAAI9Q,OAAO8Q,GAAK7Q,QAAQ6Q,GAAK7Q,QAAQ7U,EAAEkV,OAAOsQ,IAElDwB,EAAO3B,EAAGzQ,OAAOyQ,EACrB2B,GAAOA,EAAKnS,QAAQmS,EACpB,IAAInB,GAAKmB,EAAK9R,OAAO6R,GACjB5C,EAAKllB,EAAEoW,SAASN,QAAQ8Q,EAAGjR,OAAOiR,IAClCC,EAAKD,EAAG9Q,QAAQoP,GAEhB8C,EAAOF,EAAI1R,QACf4R,GAAOA,EAAKpS,QAAQoS,GACpBA,EAAOA,EAAKpS,QAAQoS,GACpBA,EAAOA,EAAKpS,QAAQoS,EACpB,IAAI7C,GAAKnlB,EAAEiW,OAAO4Q,GAAI/Q,QAAQkS,GAC1B7B,EAAKE,EAAG1Q,OAAO0Q,GAAIpQ,OAAOqQ,EAE9B,OAAOrnB,MAAK8f,MAAMY,OAAOuF,EAAIC,EAAIgB,IAGnC3D,OAAOtkB,UAAU+pB,KAAO,WACtB,IAAKhpB,KAAK8f,MAAMgD,MACd,MAAO9iB,MAAKyiB,MAAMrY,IAAIpK,KAMxB,IAAIioB,GAAKjoB,KAAK+C,EAAEoU,SAEZ+Q,EAAKloB,KAAKgD,EAAEmU,SAEZ8R,EAAKjpB,KAAK6Y,EAAE1B,SAEZgR,EAAOD,EAAG/Q,SAEVpT,EAAIkkB,EAAGvR,OAAOuR,GAAItR,QAAQsR,GAE1BiB,EAAKnlB,EAAEoT,SAEPlS,EAAIjF,KAAK+C,EAAE2T,OAAOwR,GAAI/Q,SAASN,QAAQoR,GAAIpR,QAAQsR,EACvDljB,GAAIA,EAAE0R,QAAQ1R,GACdA,EAAIA,EAAEyR,OAAOzR,GAAG0R,QAAQ1R,GACxBA,EAAIA,EAAE4R,QAAQqS,EAEd,IAAIC,GAAKlkB,EAAEkS,SAEP9O,EAAI8f,EAAKxR,QAAQwR,EACrB9f,GAAIA,EAAEsO,QAAQtO,GACdA,EAAIA,EAAEsO,QAAQtO,GACdA,EAAIA,EAAEsO,QAAQtO,EAEd,IAAI+Q,GAAIrV,EAAE4S,QAAQ1R,GAAGkS,SAASN,QAAQqS,GAAIrS,QAAQsS,GAAItS,QAAQxO,GAE1D+gB,EAAOlB,EAAGlR,OAAOoC,EACrBgQ,GAAOA,EAAKzS,QAAQyS,GACpBA,EAAOA,EAAKzS,QAAQyS,EACpB,IAAInD,GAAKjmB,KAAK+C,EAAEiU,OAAOmS,GAAItS,QAAQuS,EACnCnD,GAAKA,EAAGtP,QAAQsP,GAChBA,EAAKA,EAAGtP,QAAQsP,EAEhB,IAAIC,GAAKlmB,KAAKgD,EAAEgU,OAAOoC,EAAEpC,OAAO3O,EAAEwO,QAAQuC,IAAIvC,QAAQ5R,EAAE+R,OAAOmS,IAC/DjD,GAAKA,EAAGvP,QAAQuP,GAChBA,EAAKA,EAAGvP,QAAQuP,GAChBA,EAAKA,EAAGvP,QAAQuP,EAEhB,IAAIgB,GAAKlnB,KAAK6Y,EAAEnC,OAAOzR,GAAGkS,SAASN,QAAQoS,GAAIpS,QAAQsS,EAEvD,OAAOnpB,MAAK8f,MAAMY,OAAOuF,EAAIC,EAAIgB,IAGnC3D,OAAOtkB,UAAUiC,IAAM,SAAagB,EAAGmnB,GAGrC,MAFAnnB,GAAI,GAAIo3B,GAAGp3B,EAAGmnB,GAEPrpB,KAAK8f,MAAMgB,SAAS9gB,KAAMkC,IAGnCqhB,OAAOtkB,UAAUiX,GAAK,SAAY/S,GAChC,GAAe,WAAXA,EAAE2W,KACJ,MAAO9Z,MAAKkW,GAAG/S,EAAEqe,MAEnB,IAAIxhB,OAASmD,EACX,OAAO,CAGT,IAAI0jB,GAAK7mB,KAAK6Y,EAAE1B,SACZyP,EAAMzjB,EAAE0V,EAAE1B,QACd,IAA2D,IAAvDnX,KAAK+C,EAAEiU,OAAO4P,GAAK/P,QAAQ1T,EAAEJ,EAAEiU,OAAO6P,IAAKvR,KAAK,GAClD,OAAO,CAGT,IAAIgU,GAAKzC,EAAG7P,OAAOhX,KAAK6Y,GACpB0Q,EAAM3C,EAAI5P,OAAO7T,EAAE0V;AACvB,MAA8D,KAAvD7Y,KAAKgD,EAAEgU,OAAOuS,GAAK1S,QAAQ1T,EAAEH,EAAEgU,OAAOsS,IAAKhU,KAAK,IAGzDiO,OAAOtkB,UAAU2H,QAAU,WACzB,MAAI5G,MAAKgmB,aACA,uBACF,iBAAmBhmB,KAAK+C,EAAEyC,SAAS,GAAI,GAC1C,OAASxF,KAAKgD,EAAEwC,SAAS,GAAI,GAC7B,OAASxF,KAAK6Y,EAAErT,SAAS,GAAI,GAAK,KAGxC+d,OAAOtkB,UAAU+mB,WAAa,WAE5B,MAA0B,KAAnBhmB,KAAK6Y,EAAEvD,KAAK,K/C6gef0+B,KACA,SAASv1C,EAAQC,EAASC,GgDv5fhC,YAUA,SAASirB,WAAU3K,GACjB2D,EAAKlf,KAAK1D,KAAM,OAAQif,GAExBjf,KAAK8B,EAAI,GAAIw3B,GAAGra,EAAKnd,EAAG,IAAIqU,MAAMnW,KAAKI,KACvCJ,KAAK+B,EAAI,GAAIu3B,GAAGra,EAAKld,EAAG,IAAIoU,MAAMnW,KAAKI,KACvCJ,KAAK6pB,GAAK,GAAIyP,GAAG,GAAGnjB,MAAMnW,KAAKI,KAAKoX,UACpCxX,KAAKmf,IAAM,GAAIma,GAAG,GAAGnjB,MAAMnW,KAAKI,KAChCJ,KAAK8pB,IAAM9pB,KAAK6pB,GAAG7S,OAAOhX,KAAK8B,EAAE4U,OAAO1W,KAAKmf,MAc/C,QAASiE,OAAMtD,EAAO/c,EAAG8V,GACvB+J,EAAK/C,UAAUnc,KAAK1D,KAAM8f,EAAO,cACvB,OAAN/c,GAAoB,OAAN8V,GAChB7Y,KAAK+C,EAAI/C,KAAK8f,MAAMpH,IACpB1Y,KAAK6Y,EAAI7Y,KAAK8f,MAAMZ,OAEpBlf,KAAK+C,EAAI,GAAIu2B,GAAGv2B,EAAG,IACnB/C,KAAK6Y,EAAI,GAAIygB,GAAGzgB,EAAG,IACd7Y,KAAK+C,EAAE3C,MACVJ,KAAK+C,EAAI/C,KAAK+C,EAAEoT,MAAMnW,KAAK8f,MAAM1f,MAC9BJ,KAAK6Y,EAAEzY,MACVJ,KAAK6Y,EAAI7Y,KAAK6Y,EAAE1C,MAAMnW,KAAK8f,MAAM1f,OAxCvC,GAAI0f,GAAQnhB,EAAQ,MAChB26B,EAAK36B,EAAQ,MACbW,EAAWX,EAAQ,KACnBikB,EAAO9C,EAAMjgB,KAEbmgB,EAAWrhB,EAAQ,MACnB8f,EAAQuB,EAASvB,KAWrBnf,GAASsqB,UAAWhH,GACpBnkB,EAAOC,QAAUkrB,UAEjBA,UAAU3qB,UAAUihB,SAAW,SAAkBD,GAC/C,GAAIld,GAAIkd,EAAM8J,YAAYhnB,EACtBqS,EAAKrS,EAAEoU,SACPmO,EAAMlQ,EAAG4B,OAAOjU,GAAG2T,OAAOtB,EAAG4B,OAAOhX,KAAK8B,IAAI4U,OAAO3T,GACpDC,EAAIsiB,EAAIhO,SAEZ,OAA+B,KAAxBtU,EAAEmU,SAAS9R,IAAIigB,IAiBxBhmB,EAAS8jB,MAAOR,EAAK/C,WAErB+J,UAAU3qB,UAAU2iB,YAAc,SAAqBpD,EAAOvB,GAC5D,MAAOjd,MAAKigB,MAAMxB,EAAM7Y,QAAQ4Y,EAAOvB,GAAM,IAG/C2M,UAAU3qB,UAAUghB,MAAQ,SAAeld,EAAG8V,GAC5C,MAAO,IAAIuK,OAAMpjB,KAAM+C,EAAG8V,IAG5B+Q,UAAU3qB,UAAUmgB,cAAgB,SAAuBrgB,GACzD,MAAOqkB,OAAMsC,SAAS1lB,KAAMjB,IAG9BqkB,MAAMnkB,UAAUmjB,WAAa,aAI7BgB,MAAMnkB,UAAU8iB,QAAU,WACxB,MAAO/hB,MAAKiiB,OAAOrc,QAAQ,KAAM5F,KAAK8f,MAAM3c,EAAEyE,eAGhDwb,MAAMsC,SAAW,SAAkB5F,EAAO/gB,GACxC,MAAO,IAAIqkB,OAAMtD,EAAO/gB,EAAI,GAAIA,EAAI,IAAM+gB,EAAMpH,MAGlD0K,MAAMnkB,UAAU2H,QAAU,WACxB,MAAI5G,MAAKgmB,aACA,sBACF,gBAAkBhmB,KAAK+C,EAAEwT,UAAU/Q,SAAS,GAAI,GACnD,OAASxF,KAAK6Y,EAAEtC,UAAU/Q,SAAS,GAAI,GAAK,KAGlD4d,MAAMnkB,UAAU+mB,WAAa,WAE3B,MAA0B,KAAnBhmB,KAAK6Y,EAAEvD,KAAK,IAGrB8N,MAAMnkB,UAAUwjB,IAAM,WAKpB,GAAI3gB,GAAI9B,KAAK+C,EAAE2T,OAAO1W,KAAK6Y,GAEvBmR,EAAKloB,EAAEqV,SAEPpV,EAAI/B,KAAK+C,EAAE6T,OAAO5W,KAAK6Y,GAEvBoR,EAAKloB,EAAEoV,SAEPpW,EAAIipB,EAAGpT,OAAOqT,GAEdhE,EAAK+D,EAAGhT,OAAOiT,GAEf/C,EAAKnmB,EAAEiW,OAAOiT,EAAGvT,OAAO1W,KAAK8f,MAAMgK,IAAI9S,OAAOjW,IAClD,OAAOf,MAAK8f,MAAMG,MAAMgG,EAAIiB,IAG9B9D,MAAMnkB,UAAUmL,IAAM,WACpB,KAAM,IAAI/K,OAAM,sCAGlB+jB,MAAMnkB,UAAUirB,QAAU,SAAiB/mB,EAAG0Q,GAK5C,GAAI/R,GAAI9B,KAAK+C,EAAE2T,OAAO1W,KAAK6Y,GAEvB9W,EAAI/B,KAAK+C,EAAE6T,OAAO5W,KAAK6Y,GAEvB9X,EAAIoC,EAAEJ,EAAE2T,OAAOvT,EAAE0V,GAEjBwP,EAAIllB,EAAEJ,EAAE6T,OAAOzT,EAAE0V,GAEjBsR,EAAK9B,EAAErR,OAAOlV,GAEdsoB,EAAKrpB,EAAEiW,OAAOjV,GAEdkkB,EAAKpS,EAAKgF,EAAE7B,OAAOmT,EAAGzT,OAAO0T,GAAIjT,UAEjC+P,EAAKrT,EAAK9Q,EAAEiU,OAAOmT,EAAGtT,QAAQuT,GAAIjT,SACtC,OAAOnX,MAAK8f,MAAMG,MAAMgG,EAAIiB,IAG9B9D,MAAMnkB,UAAUiC,IAAM,SAAagB,GAMjC,IAAK,GALDmG,GAAInG,EAAEsE,QACN1E,EAAI9B,KACJ+B,EAAI/B,KAAK8f,MAAMG,MAAM,KAAM,MAC3Blf,EAAIf,KAECqS,KAAyB,IAAdhK,EAAEiN,KAAK,GAAUjN,EAAEH,OAAO,GAC5CmK,EAAK8K,KAAK9U,EAAEJ,MAAM,GAEpB,KAAK,GAAInH,GAAIuR,EAAKlS,OAAS,EAAGW,GAAK,EAAGA,IACpB,IAAZuR,EAAKvR,IAEPgB,EAAIA,EAAEooB,QAAQnoB,EAAGhB,GAEjBgB,EAAIA,EAAE0gB,QAGN1gB,EAAID,EAAEooB,QAAQnoB,EAAGhB,GAEjBe,EAAIA,EAAE2gB,MAGV,OAAO1gB,IAGTqhB,MAAMnkB,UAAUonB,OAAS,WACvB,KAAM,IAAIhnB,OAAM,sCAGlB+jB,MAAMnkB,UAAUiX,GAAK,SAAYoU,GAC/B,MAAyC,KAAlCtqB,KAAKiiB,OAAO5c,IAAIilB,EAAMrI,SAG/BmB,MAAMnkB,UAAU8qB,UAAY,WAG1B,MAFA/pB,MAAK+C,EAAI/C,KAAK+C,EAAEiU,OAAOhX,KAAK6Y,EAAErB,WAC9BxX,KAAK6Y,EAAI7Y,KAAK8f,MAAMpH,IACb1Y,MAGTojB,MAAMnkB,UAAUgjB,KAAO,WAIrB,MAFAjiB,MAAK+pB,YAEE/pB,KAAK+C,EAAEwT,YhDy5fV09B,KACA,SAASx1C,EAAQC,EAASC,GiDxkgBhC,YAUA,SAAS6rB,cAAavL,GAEpBjf,KAAKyqB,QAA2B,KAAP,EAATxL,EAAKnd,GACrB9B,KAAK0qB,MAAQ1qB,KAAKyqB,UAAqB,EAATxL,EAAKnd,QACnC9B,KAAK0S,SAAW1S,KAAK0qB,MAErB9H,EAAKlf,KAAK1D,KAAM,UAAWif,GAE3Bjf,KAAK8B,EAAI,GAAIw3B,GAAGra,EAAKnd,EAAG,IAAI+C,KAAK7E,KAAKI,IAAI2D,GAC1C/D,KAAK8B,EAAI9B,KAAK8B,EAAEqU,MAAMnW,KAAKI,KAC3BJ,KAAKe,EAAI,GAAIu4B,GAAGra,EAAKle,EAAG,IAAIoV,MAAMnW,KAAKI,KACvCJ,KAAKglB,GAAKhlB,KAAKe,EAAEoW,SACjBnX,KAAKqoB,EAAI,GAAIiR,GAAGra,EAAKoJ,EAAG,IAAIlS,MAAMnW,KAAKI,KACvCJ,KAAK2qB,GAAK3qB,KAAKqoB,EAAE3R,OAAO1W,KAAKqoB,GAE7BnpB,GAAQc,KAAKyqB,SAAwC,IAA7BzqB,KAAKe,EAAEwV,UAAUjB,KAAK,IAC9CtV,KAAK4qB,KAAwB,KAAP,EAAT3L,EAAKle,GAoFpB,QAASqiB,OAAMtD,EAAO/c,EAAGC,EAAG6V,EAAGxQ,GAC7Bua,EAAK/C,UAAUnc,KAAK1D,KAAM8f,EAAO,cACvB,OAAN/c,GAAoB,OAANC,GAAoB,OAAN6V,GAC9B7Y,KAAK+C,EAAI/C,KAAK8f,MAAMZ,KACpBlf,KAAKgD,EAAIhD,KAAK8f,MAAMpH,IACpB1Y,KAAK6Y,EAAI7Y,KAAK8f,MAAMpH,IACpB1Y,KAAKqI,EAAIrI,KAAK8f,MAAMZ,KACpBlf,KAAKwjB,MAAO,IAEZxjB,KAAK+C,EAAI,GAAIu2B,GAAGv2B,EAAG,IACnB/C,KAAKgD,EAAI,GAAIs2B,GAAGt2B,EAAG,IACnBhD,KAAK6Y,EAAIA,EAAI,GAAIygB,GAAGzgB,EAAG,IAAM7Y,KAAK8f,MAAMpH,IACxC1Y,KAAKqI,EAAIA,GAAK,GAAIixB,GAAGjxB,EAAG,IACnBrI,KAAK+C,EAAE3C,MACVJ,KAAK+C,EAAI/C,KAAK+C,EAAEoT,MAAMnW,KAAK8f,MAAM1f,MAC9BJ,KAAKgD,EAAE5C,MACVJ,KAAKgD,EAAIhD,KAAKgD,EAAEmT,MAAMnW,KAAK8f,MAAM1f,MAC9BJ,KAAK6Y,EAAEzY,MACVJ,KAAK6Y,EAAI7Y,KAAK6Y,EAAE1C,MAAMnW,KAAK8f,MAAM1f,MAC/BJ,KAAKqI,IAAMrI,KAAKqI,EAAEjI,MACpBJ,KAAKqI,EAAIrI,KAAKqI,EAAE8N,MAAMnW,KAAK8f,MAAM1f,MACnCJ,KAAKwjB,KAAOxjB,KAAK6Y,IAAM7Y,KAAK8f,MAAMpH,IAG9B1Y,KAAK8f,MAAMpN,WAAa1S,KAAKqI,IAC/BrI,KAAKqI,EAAIrI,KAAK+C,EAAEiU,OAAOhX,KAAKgD,GACvBhD,KAAKwjB,OACRxjB,KAAKqI,EAAIrI,KAAKqI,EAAE2O,OAAOhX,KAAK6Y,EAAErB,cAvItC,GAAIsI,GAAQnhB,EAAQ,MAChBqhB,EAAWrhB,EAAQ,MACnB26B,EAAK36B,EAAQ,MACbW,EAAWX,EAAQ,KACnBikB,EAAO9C,EAAMjgB,KAEbX,EAAS8gB,EAASvB,MAAMvf,MAoB5BI,GAASkrB,aAAc5H,GACvBnkB,EAAOC,QAAU8rB,aAEjBA,aAAavrB,UAAU4rB,MAAQ,SAAezpB,GAC5C,MAAIpB,MAAK0qB,MACAtpB,EAAIqW,SAEJzX,KAAK8B,EAAEkV,OAAO5V,IAGzBopB,aAAavrB,UAAU6rB,MAAQ,SAAe1pB,GAC5C,MAAIpB,MAAK4qB,KACAxpB,EAEApB,KAAKe,EAAEiW,OAAO5V,IAIzBopB,aAAavrB,UAAUyhB,OAAS,SAAgB3d,EAAGC,EAAG6V,EAAGxQ,GACvD,MAAOrI,MAAKigB,MAAMld,EAAGC,EAAG6V,EAAGxQ,IAG7BmiB,aAAavrB,UAAU4iB,WAAa,SAAoB9e,EAAGoO,GACzDpO,EAAI,GAAIu2B,GAAGv2B,EAAG,IACTA,EAAE3C,MACL2C,EAAIA,EAAEoT,MAAMnW,KAAKI,KAEnB,IAAIgV,GAAKrS,EAAEoU,SACPmO,EAAMtlB,KAAKglB,GAAGpO,OAAO5W,KAAK8B,EAAEkV,OAAO5B,IACnC2V,EAAM/qB,KAAK0Y,IAAI9B,OAAO5W,KAAKglB,GAAGhO,OAAOhX,KAAKqoB,GAAGrR,OAAO5B,IAEpDpS,EAAIsiB,EAAItO,OAAO+T,EAAIvT,WAAWF,UAC9BtC,EAAQhS,EAAEuT,UAAUvB,OAIxB,QAHI7D,IAAQ6D,IAAU7D,GAAO6D,KAC3BhS,EAAIA,EAAEyU,UAEDzX,KAAKigB,MAAMld,EAAGC,IAGvBwnB,aAAavrB,UAAU+rB,WAAa,SAAoBhoB,EAAGmO,GACzDnO,EAAI,GAAIs2B,GAAGt2B,EAAG,IACTA,EAAE5C,MACL4C,EAAIA,EAAEmT,MAAMnW,KAAKI,KAGnB,IAAIqkB,GAAKzhB,EAAEmU,SACP4T,EAAMtG,EAAG7N,OAAO5W,KAAK0Y,KACrB4M,EAAMb,EAAGzN,OAAOhX,KAAKqoB,GAAG3R,OAAO1W,KAAK0Y,KACpCtD,EAAK2V,EAAI/T,OAAOsO,EAAI9N,UAExB,IAA0B,IAAtBpC,EAAG/P,IAAIrF,KAAKkf,MAAa,CAC3B,GAAI/N,EACF,KAAM,IAAI9R,OAAM,gBAEhB,OAAOW,MAAKigB,MAAMjgB,KAAKkf,KAAMlc,GAGjC,GAAID,GAAIqS,EAAGkC,SACX,IAA6C,IAAzCvU,EAAEoU,SAASP,OAAOxB,GAAI/P,IAAIrF,KAAKkf,MACjC,KAAM,IAAI7f,OAAM,gBAKlB,OAHI0D,GAAEiS,UAAY7D,IAChBpO,EAAIA,EAAE0U,UAEDzX,KAAKigB,MAAMld,EAAGC,IAGvBwnB,aAAavrB,UAAUihB,SAAW,SAAkBD,GAClD,GAAIA,EAAM+F,aACR,OAAO,CAGT/F,GAAM8J,WAEN,IAAI3U,GAAK6K,EAAMld,EAAEoU,SACbsN,EAAKxE,EAAMjd,EAAEmU,SACb4T,EAAM3V,EAAG4B,OAAOhX,KAAK8B,GAAG4U,OAAO+N,GAC/Ba,EAAMtlB,KAAKglB,GAAGhO,OAAOhX,KAAK0Y,IAAIhC,OAAO1W,KAAKqoB,EAAErR,OAAO5B,GAAI4B,OAAOyN,IAElE,OAAwB,KAAjBsG,EAAI1lB,IAAIigB,IAkCjBhmB,EAAS8jB,MAAOR,EAAK/C,WAErB2K,aAAavrB,UAAUmgB,cAAgB,SAAuBrgB,GAC5D,MAAOqkB,OAAMsC,SAAS1lB,KAAMjB,IAG9ByrB,aAAavrB,UAAUghB,MAAQ,SAAeld,EAAGC,EAAG6V,EAAGxQ,GACrD,MAAO,IAAI+a,OAAMpjB,KAAM+C,EAAGC,EAAG6V,EAAGxQ,IAGlC+a,MAAMsC,SAAW,SAAkB5F,EAAO/gB,GACxC,MAAO,IAAIqkB,OAAMtD,EAAO/gB,EAAI,GAAIA,EAAI,GAAIA,EAAI,KAG9CqkB,MAAMnkB,UAAU2H,QAAU,WACxB,MAAI5G,MAAKgmB,aACA,sBACF,gBAAkBhmB,KAAK+C,EAAEwT,UAAU/Q,SAAS,GAAI,GACnD,OAASxF,KAAKgD,EAAEuT,UAAU/Q,SAAS,GAAI,GACvC,OAASxF,KAAK6Y,EAAEtC,UAAU/Q,SAAS,GAAI,GAAK,KAGlD4d,MAAMnkB,UAAU+mB,WAAa,WAE3B,MAA0B,KAAnBhmB,KAAK+C,EAAEuS,KAAK,IACW,IAAvBtV,KAAKgD,EAAEqC,IAAIrF,KAAK6Y,IAGzBuK,MAAMnkB,UAAUgsB,QAAU,WAMxB,GAAInpB,GAAI9B,KAAK+C,EAAEoU,SAEXpV,EAAI/B,KAAKgD,EAAEmU,SAEXpW,EAAIf,KAAK6Y,EAAE1B,QACfpW,GAAIA,EAAE4V,QAAQ5V,EAEd,IAAIsnB,GAAIroB,KAAK8f,MAAM+K,MAAM/oB,GAErBmD,EAAIjF,KAAK+C,EAAE2T,OAAO1W,KAAKgD,GAAGmU,SAASN,QAAQ/U,GAAG+U,QAAQ9U,GAEtD4S,EAAI0T,EAAE3R,OAAO3U,GAEbumB,EAAI3T,EAAEiC,OAAO7V,GAEb4R,EAAI0V,EAAEzR,OAAO7U,GAEbkkB,EAAKhhB,EAAE+R,OAAOsR,GAEdpC,EAAKvR,EAAEqC,OAAOrE,GAEduY,EAAKjmB,EAAE+R,OAAOrE,GAEduU,EAAKoB,EAAEtR,OAAOrC,EAClB,OAAO3U,MAAK8f,MAAMG,MAAMgG,EAAIC,EAAIgB,EAAIgE,IAGtC9H,MAAMnkB,UAAUksB,SAAW,WAQzB,GAMIlF,GACAC,EACAgB,EARAnlB,EAAI/B,KAAK+C,EAAE2T,OAAO1W,KAAKgD,GAAGmU,SAE1BpW,EAAIf,KAAK+C,EAAEoU,SAEXkR,EAAIroB,KAAKgD,EAAEmU,QAKf,IAAInX,KAAK8f,MAAM2K,QAAS,CAEtB,GAAIxlB,GAAIjF,KAAK8f,MAAM+K,MAAM9pB,GAErBunB,EAAIrjB,EAAEyR,OAAO2R,EACjB,IAAIroB,KAAKwjB,KAEPyC,EAAKlkB,EAAE6U,OAAO7V,GAAG6V,OAAOyR,GAAGrR,OAAOsR,EAAE1R,OAAO5W,KAAK8f,MAAMX,MAEtD+G,EAAKoC,EAAEtR,OAAO/R,EAAE2R,OAAOyR,IAEvBnB,EAAKoB,EAAEnR,SAASP,OAAO0R,GAAG1R,OAAO0R,OAC5B,CAEL,GAAI3V,GAAI3S,KAAK6Y,EAAE1B,SAEX7U,EAAIgmB,EAAE1R,OAAOjE,GAAGkE,QAAQlE,EAE5BsT,GAAKlkB,EAAE6U,OAAO7V,GAAG8V,QAAQwR,GAAGrR,OAAO1U,GAEnC4jB,EAAKoC,EAAEtR,OAAO/R,EAAE2R,OAAOyR,IAEvBnB,EAAKoB,EAAEtR,OAAO1U,QAEX,CAEL,GAAI2C,GAAIlE,EAAE2V,OAAO2R,GAEb1V,EAAI3S,KAAK8f,MAAMgL,MAAM9qB,KAAKe,EAAEiW,OAAOhX,KAAK6Y,IAAI1B,SAE5C7U,EAAI2C,EAAE2R,OAAOjE,GAAGiE,OAAOjE,EAE3BsT,GAAKjmB,KAAK8f,MAAMgL,MAAM/oB,EAAE8U,QAAQ5R,IAAI+R,OAAO1U,GAE3C4jB,EAAKlmB,KAAK8f,MAAMgL,MAAM7lB,GAAG+R,OAAOjW,EAAE8V,QAAQwR,IAE1CnB,EAAKjiB,EAAE+R,OAAO1U,GAEhB,MAAOtC,MAAK8f,MAAMG,MAAMgG,EAAIC,EAAIgB,IAGlC9D,MAAMnkB,UAAUwjB,IAAM,WACpB,MAAIziB,MAAKgmB,aACAhmB,KAGLA,KAAK8f,MAAMpN,SACN1S,KAAKirB,UAELjrB,KAAKmrB,YAGhB/H,MAAMnkB,UAAUmsB,QAAU,SAAiBjoB,GAMzC,GAAIrB,GAAI9B,KAAKgD,EAAE4T,OAAO5W,KAAK+C,GAAGiU,OAAO7T,EAAEH,EAAE4T,OAAOzT,EAAEJ,IAE9ChB,EAAI/B,KAAKgD,EAAE0T,OAAO1W,KAAK+C,GAAGiU,OAAO7T,EAAEH,EAAE0T,OAAOvT,EAAEJ,IAE9ChC,EAAIf,KAAKqI,EAAE2O,OAAOhX,KAAK8f,MAAM6K,IAAI3T,OAAO7T,EAAEkF,GAE1CggB,EAAIroB,KAAK6Y,EAAE7B,OAAO7T,EAAE0V,EAAEnC,OAAOvT,EAAE0V,IAE/B5T,EAAIlD,EAAE6U,OAAO9U,GAEbwmB,EAAID,EAAEzR,OAAO7V,GAEb4T,EAAI0T,EAAE3R,OAAO3V,GAEb4R,EAAI5Q,EAAE2U,OAAO5U,GAEbmkB,EAAKhhB,EAAE+R,OAAOsR,GAEdpC,EAAKvR,EAAEqC,OAAOrE,GAEduY,EAAKjmB,EAAE+R,OAAOrE,GAEduU,EAAKoB,EAAEtR,OAAOrC,EAClB,OAAO3U,MAAK8f,MAAMG,MAAMgG,EAAIC,EAAIgB,EAAIgE,IAGtC9H,MAAMnkB,UAAUosB,SAAW,SAAkBloB,GAO3C,GAgBI+iB,GACAgB,EAjBAplB,EAAI9B,KAAK6Y,EAAE7B,OAAO7T,EAAE0V,GAEpB9W,EAAID,EAAEqV,SAENpW,EAAIf,KAAK+C,EAAEiU,OAAO7T,EAAEJ,GAEpBslB,EAAIroB,KAAKgD,EAAEgU,OAAO7T,EAAEH,GAEpBiC,EAAIjF,KAAK8f,MAAMuI,EAAErR,OAAOjW,GAAGiW,OAAOqR,GAElCC,EAAIvmB,EAAE6U,OAAO3R,GAEb0P,EAAI5S,EAAE2U,OAAOzR,GAEb1B,EAAMvD,KAAK+C,EAAE2T,OAAO1W,KAAKgD,GAAGgU,OAAO7T,EAAEJ,EAAE2T,OAAOvT,EAAEH,IAAI6T,QAAQ9V,GAAG8V,QAAQwR,GACvEpC,EAAKnkB,EAAEkV,OAAOsR,GAAGtR,OAAOzT,EAc5B,OAXIvD,MAAK8f,MAAM2K,SAEbvE,EAAKpkB,EAAEkV,OAAOrC,GAAGqC,OAAOqR,EAAEzR,OAAO5W,KAAK8f,MAAM+K,MAAM9pB,KAElDmmB,EAAKoB,EAAEtR,OAAOrC,KAGduR,EAAKpkB,EAAEkV,OAAOrC,GAAGqC,OAAOqR,EAAEzR,OAAO7V,IAEjCmmB,EAAKlnB,KAAK8f,MAAMgL,MAAMxC,GAAGtR,OAAOrC,IAE3B3U,KAAK8f,MAAMG,MAAMgG,EAAIC,EAAIgB,IAGlC9D,MAAMnkB,UAAUmL,IAAM,SAAajH,GACjC,MAAInD,MAAKgmB,aACA7iB,EACLA,EAAE6iB,aACGhmB,KAELA,KAAK8f,MAAMpN,SACN1S,KAAKorB,QAAQjoB,GAEbnD,KAAKqrB,SAASloB,IAGzBigB,MAAMnkB,UAAUiC,IAAM,SAAagB,GACjC,MAAIlC,MAAKwiB,YAAYtgB,GACZlC,KAAK8f,MAAMK,aAAangB,KAAMkC,GAE9BlC,KAAK8f,MAAMgB,SAAS9gB,KAAMkC,IAGrCkhB,MAAMnkB,UAAUonB,OAAS,SAAgB3I,EAAIva,EAAGwa,GAC9C,MAAO3d,MAAK8f,MAAMoB,YAAY,GAAKlhB,KAAMmD,IAAOua,EAAIC,GAAM,IAG5DyF,MAAMnkB,UAAU8qB,UAAY,WAC1B,GAAI/pB,KAAKwjB,KACP,MAAOxjB,KAGT,IAAIsrB,GAAKtrB,KAAK6Y,EAAErB,SAOhB,OANAxX,MAAK+C,EAAI/C,KAAK+C,EAAEiU,OAAOsU,GACvBtrB,KAAKgD,EAAIhD,KAAKgD,EAAEgU,OAAOsU,GACnBtrB,KAAKqI,IACPrI,KAAKqI,EAAIrI,KAAKqI,EAAE2O,OAAOsU,IACzBtrB,KAAK6Y,EAAI7Y,KAAK8f,MAAMpH,IACpB1Y,KAAKwjB,MAAO,EACLxjB,MAGTojB,MAAMnkB,UAAUkK,IAAM,WACpB,MAAOnJ,MAAK8f,MAAMG,MAAMjgB,KAAK+C,EAAE0U,SACPzX,KAAKgD,EACLhD,KAAK6Y,EACL7Y,KAAKqI,GAAKrI,KAAKqI,EAAEoP,WAG3C2L,MAAMnkB,UAAUgjB,KAAO,WAErB,MADAjiB,MAAK+pB,YACE/pB,KAAK+C,EAAEwT,WAGhB6M,MAAMnkB,UAAUijB,KAAO,WAErB,MADAliB,MAAK+pB,YACE/pB,KAAKgD,EAAEuT,WAGhB6M,MAAMnkB,UAAUiX,GAAK,SAAYoU,GAC/B,MAAOtqB,QAASsqB,GACyB,IAAlCtqB,KAAKiiB,OAAO5c,IAAIilB,EAAMrI,SACY,IAAlCjiB,KAAKkiB,OAAO7c,IAAIilB,EAAMpI,SAI/BkB,MAAMnkB,UAAU4hB,IAAMuC,MAAMnkB,UAAU8qB,UACtC3G,MAAMnkB,UAAU0hB,SAAWyC,MAAMnkB,UAAUmL,KjDmigBrC8pC,MACL,KAAM,KAAM,MAEPC,KACN,IAEMC,KACA,SAAS31C,EAAQC,EAASC,GkD/7gBhC,YAUA,SAAS+sB,IAAGC,GACV,MAAM3rB,gBAAgB0rB,KAIC,gBAAZC,KACTzsB,EAAO8gB,EAAS4L,OAAOC,eAAeF,GAAU,iBAAmBA,GAEnEA,EAAU3L,EAAS4L,OAAOD,IAIxBA,YAAmB3L,GAAS4L,OAAOE,cACrCH,GAAY7L,MAAO6L,IAErB3rB,KAAK8f,MAAQ6L,EAAQ7L,MAAMA,MAC3B9f,KAAKoD,EAAIpD,KAAK8f,MAAM1c,EACpBpD,KAAK+rB,GAAK/rB,KAAKoD,EAAE8P,MAAM,GACvBlT,KAAK2U,EAAI3U,KAAK8f,MAAMnL,EAGpB3U,KAAK2U,EAAIgX,EAAQ7L,MAAMnL,EACvB3U,KAAK2U,EAAEyN,WAAWuJ,EAAQ7L,MAAM1c,EAAE7B,YAAc,QAGhDvB,KAAKgsB,KAAOL,EAAQK,MAAQL,EAAQ7L,MAAMkM,OAvBjC,GAAIN,IAAGC,GlDu7gBjB,GAAI/sB,GAA4B,kBAAXC,SAAoD,gBAApBA,QAAOC,SAAwB,SAAUC,GAAO,aAAcA,IAAS,SAAUA,GAAO,MAAOA,IAAyB,kBAAXF,SAAyBE,EAAIC,cAAgBH,QAAUE,IAAQF,OAAOI,UAAY,eAAkBF,IkDj8gBnQu6B,EAAK36B,EAAQ,MACbqhB,EAAWrhB,EAAQ,MACnB8f,EAAQuB,EAASvB,MACjBvf,EAASuf,EAAMvf,OAEf+sB,EAAUttB,EAAQ,MAClButB,EAAYvtB,EAAQ,KA6BxBF,GAAOC,QAAUgtB,GAEjBA,GAAGzsB,UAAUktB,QAAU,SAAiBR,GACtC,MAAO,IAAIM,GAAQjsB,KAAM2rB,IAG3BD,GAAGzsB,UAAUmtB,eAAiB,SAAwBC,EAAMpP,GAC1D,MAAOgP,GAAQK,YAAYtsB,KAAMqsB,EAAMpP,IAGzCyO,GAAGzsB,UAAUstB,cAAgB,SAAuBC,EAAKvP,GACvD,MAAOgP,GAAQQ,WAAWzsB,KAAMwsB,EAAKvP,IAGvCyO,GAAGzsB,UAAUytB,WAAa,SAAoBf,GACvCA,IACHA,KAYF,KATA,GAAIgB,GAAO,GAAI3M,GAAS4M,UACtBZ,KAAMhsB,KAAKgsB,KACXa,KAAMlB,EAAQkB,KACdC,QAASnB,EAAQmB,SAAW9M,EAAS+M,KAAK/sB,KAAKgsB,KAAKgB,cACpDC,MAAOjtB,KAAKoD,EAAEwC,YAGZ4Y,EAAQxe,KAAKoD,EAAEwE,aACfslB,EAAMltB,KAAKoD,EAAE0B,IAAI,GAAIw0B,GAAG,MACzB,CACD,GAAIjN,GAAO,GAAIiN,GAAG3M,EAAKQ,SAAS3O,GAChC,MAAI6N,EAAKhnB,IAAI6nB,GAAO,GAIpB,MADAb,GAAKxjB,MAAM,GACJ7I,KAAKosB,eAAeC,KAI/BX,GAAGzsB,UAAUmuB,aAAe,SAAqBhuB,EAAKiuB,GACpD,GAAIhY,GAA2B,EAAnBjW,EAAIwI,aAAmB5H,KAAKoD,EAAE7B,WAG1C,OAFI8T,GAAQ,IACVjW,EAAMA,EAAI8T,MAAMmC,KACbgY,GAAajuB,EAAIiG,IAAIrF,KAAKoD,IAAM,EAC5BhE,EAAI0F,IAAI9E,KAAKoD,GAEbhE,GAGXssB,GAAGzsB,UAAUquB,KAAO,SAAcluB,EAAKkf,EAAKrB,EAAK0O,GAC5B,YAAf,mBAAO1O,GAAP,YAAAre,EAAOqe,MACT0O,EAAU1O,EACVA,EAAM,MAEH0O,IACHA,MAEFrN,EAAMte,KAAKosB,eAAe9N,EAAKrB,GAC/B7d,EAAMY,KAAKotB,aAAa,GAAIkM,GAAGl6B,EAAK,IAKpC,KAAK,GAFDof,GAAQxe,KAAKoD,EAAEwE,aACf2lB,EAAOjP,EAAIkP,aAAa5nB,UACnB9E,EAAIysB,EAAKptB,OAAQW,EAAI0d,EAAO1d,IACnCysB,EAAK4gB,QAAQ,EAIf,KAAK,GADDlhB,GAAQ7tB,EAAIwG,UACP9E,EAAImsB,EAAM9sB,OAAQW,EAAI0d,EAAO1d,IACpCmsB,EAAMkhB,QAAQ,EAWhB,KARA,GAAIxhB,GAAO,GAAI3M,GAAS4M,UACtBZ,KAAMhsB,KAAKgsB,KACXc,QAASS,EACTN,MAAOA,IAILS,EAAM1tB,KAAKoD,EAAE0B,IAAI,GAAIw0B,GAAG,MACzB,CACD,GAAIp3B,GAAI,GAAIo3B,GAAG3M,EAAKQ,SAASntB,KAAKoD,EAAEwE,cAEpC,IADA1F,EAAIlC,KAAKotB,aAAalrB,GAAG,KACrBA,EAAEoT,KAAK,IAAM,GAAKpT,EAAEmD,IAAIqoB,IAAQ,GAApC,CAGA,GAAIE,GAAK5tB,KAAK2U,EAAEzT,IAAIgB,EACpB,KAAI0rB,EAAG5H,aAAP,CAGA,GAAI6H,GAAMD,EAAG3L,OACTvhB,EAAImtB,EAAIhpB,KAAK7E,KAAKoD,EACtB,IAAkB,IAAd1C,EAAE4U,KAAK,GAAX,CAGA,GAAIjF,GAAInO,EAAEqT,KAAKvV,KAAKoD,GAAGlC,IAAIR,EAAEQ,IAAIod,EAAIkP,cAAcrjB,KAAK/K,GAExD,IADAiR,EAAIA,EAAExL,KAAK7E,KAAKoD,GACE,IAAdiN,EAAEiF,KAAK,GAAX,CAIIqW,EAAQoC,WAAa1d,EAAEhL,IAAIrF,KAAK+rB,IAAM,IACxC1b,EAAIrQ,KAAKoD,EAAE0B,IAAIuL,GAEjB,IAAIyd,IAAiBF,EAAG1L,OAAOlN,QAAU,EAAI,IACT,IAAf6Y,EAAIxoB,IAAI3E,GAAW,EAAI,EAE5C,OAAO,IAAIwrB,IAAYxrB,EAAGA,EAAG2P,EAAGA,EAAGyd,cAAeA,UAItDpC,GAAGzsB,UAAU+uB,OAAS,SAAgB5uB,EAAK6uB,EAAW3P,EAAKrB,GACzD7d,EAAMY,KAAKotB,aAAa,GAAIkM,GAAGl6B,EAAK,KACpCkf,EAAMte,KAAKusB,cAAcjO,EAAKrB,GAC9BgR,EAAY,GAAI/B,GAAU+B,EAAW,MAGrC,IAAIvtB,GAAIutB,EAAUvtB,EACd2P,EAAI4d,EAAU5d,CAClB,IAAI3P,EAAE4U,KAAK,GAAK,GAAK5U,EAAE2E,IAAIrF,KAAKoD,IAAM,EACpC,OAAO,CACT,IAAIiN,EAAEiF,KAAK,GAAK,GAAKjF,EAAEhL,IAAIrF,KAAKoD,IAAM,EACpC,OAAO,CAGT,IAAI8qB,GAAO7d,EAAEkF,KAAKvV,KAAKoD,GACnB6a,EAAKiQ,EAAKhtB,IAAI9B,GAAKyF,KAAK7E,KAAKoD,GAC7B+a,EAAK+P,EAAKhtB,IAAIR,GAAGmE,KAAK7E,KAAKoD,GAE3BD,EAAInD,KAAK2U,EAAE0R,OAAOpI,EAAIK,EAAI6P,YAAahQ,EAC3C,QAAIhb,EAAE6iB,cAGkC,IAAjC7iB,EAAE8e,OAAOpd,KAAK7E,KAAKoD,GAAGiC,IAAI3E,IAGnCgrB,GAAGzsB,UAAUmvB,cAAgB,SAAShvB,EAAK6uB,EAAW3rB,EAAG2a,GACvD/d,GAAQ,EAAIoD,KAAOA,EAAG,4CACtB2rB,EAAY,GAAI/B,GAAU+B,EAAWhR,EAErC,IAAI7Z,GAAIpD,KAAKoD,EACT6B,EAAI,GAAIq0B,GAAGl6B,GACXsB,EAAIutB,EAAUvtB,EACd2P,EAAI4d,EAAU5d,EAGdge,EAAa,EAAJ/rB,EACTgsB,EAAchsB,GAAK,CACvB,IAAI5B,EAAE2E,IAAIrF,KAAK8f,MAAM3c,EAAE0B,KAAK7E,KAAK8f,MAAM1c,KAAO,GAAKkrB,EACjD,KAAM,IAAIjvB,OAAM,uCAGlBqB,GAAIV,KAAK8f,MAAM+B,WAAWnhB,EAAG2tB,EAC7B,IAAIgmB,GAAOpvC,EAAEkE,MAAMtE,KAAKzB,GAIpBmrB,EAAON,EAAUvtB,EAAE6U,KAAKnS,EAC5B,OAAO1C,GAAEQ,IAAImP,GAAGjG,IAAIpK,KAAK2U,EAAEzT,IAAImzC,IAAOnzC,IAAIqtB,IAG5C7C,GAAGzsB,UAAUuvB,oBAAsB,SAASvpB,EAAGgpB,EAAWQ,EAAGxR,GAE3D,GADAgR,EAAY,GAAI/B,GAAU+B,EAAWhR,GACL,OAA5BgR,EAAUH,cACZ,MAAOG,GAAUH,aAEnB,KAAK,GAAIhtB,GAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,GAAI4tB,GAAS1uB,KAAKouB,cAAcnpB,EAAGgpB,EAAWntB,EAE9C,IAAI4tB,EAAOxY,GAAGuY,GACZ,MAAO3tB,GAEX,KAAM,IAAIzB,OAAM,0ClDi7gBZi1C,KACA,SAAS71C,EAAQC,EAASC,GmDlohBhC,YAIA,SAASstB,SAAQ2C,EAAIjD,GACnB3rB,KAAK4uB,GAAKA,EACV5uB,KAAKqsB,KAAO,KACZrsB,KAAKwsB,IAAM,KAGPb,EAAQU,MACVrsB,KAAK6uB,eAAelD,EAAQU,KAAMV,EAAQmD,SACxCnD,EAAQa,KACVxsB,KAAK+uB,cAAcpD,EAAQa,IAAKb,EAAQqD,QAX5C,GAAIsK,GAAK36B,EAAQ,KAajBF,GAAOC,QAAUutB,QAEjBA,QAAQQ,WAAa,SAAoBmC,EAAIpC,EAAKvP,GAChD,MAAIuP,aAAeP,SACVO,EAEF,GAAIP,SAAQ2C,GACjBpC,IAAKA,EACLwC,OAAQ/R,KAIZgP,QAAQK,YAAc,SAAqBsC,EAAIvC,EAAMpP,GACnD,MAAIoP,aAAgBJ,SACXI,EAEF,GAAIJ,SAAQ2C,GACjBvC,KAAMA,EACNyC,QAAS7R,KAIbgP,QAAQhtB,UAAUihB,SAAW,WAC3B,GAAIsM,GAAMxsB,KAAKmuB,WAEf,OAAI3B,GAAIxG,cACGiJ,QAAQ,EAAOC,OAAQ,sBAC7B1C,EAAItM,WAEJsM,EAAItrB,IAAIlB,KAAK4uB,GAAG9O,MAAM1c,GAAG4iB,cAGrBiJ,QAAQ,EAAMC,OAAQ,OAFpBD,QAAQ,EAAOC,OAAQ,wBAFvBD,QAAQ,EAAOC,OAAQ,8BAOpCjD,QAAQhtB,UAAUkvB,UAAY,SAAmBnM,EAAS/E,GAUxD,MARuB,gBAAZ+E,KACT/E,EAAM+E,EACNA,EAAU,MAGPhiB,KAAKwsB,MACRxsB,KAAKwsB,IAAMxsB,KAAK4uB,GAAGja,EAAEzT,IAAIlB,KAAKqsB,OAE3BpP,EAGEjd,KAAKwsB,IAAI7N,OAAO1B,EAAK+E,GAFnBhiB,KAAKwsB,KAKhBP,QAAQhtB,UAAUuuB,WAAa,SAAoBvQ,GACjD,MAAY,QAARA,EACKjd,KAAKqsB,KAAK7mB,SAAS,GAAI,GAEvBxF,KAAKqsB,MAGhBJ,QAAQhtB,UAAU4vB,eAAiB,SAAwBvQ,EAAKrB,GAC9Djd,KAAKqsB,KAAO,GAAIiN,GAAGhb,EAAKrB,GAAO,IAI/Bjd,KAAKqsB,KAAOrsB,KAAKqsB,KAAKxnB,KAAK7E,KAAK4uB,GAAG9O,MAAM1c,IAG3C6oB,QAAQhtB,UAAU8vB,cAAgB,SAAuBzQ,EAAKrB,GAC5D,MAAIqB,GAAIvb,GAAKub,EAAItb,OACfhD,KAAKwsB,IAAMxsB,KAAK4uB,GAAG9O,MAAMG,MAAM3B,EAAIvb,EAAGub,EAAItb,SAG5ChD,KAAKwsB,IAAMxsB,KAAK4uB,GAAG9O,MAAM8B,YAAYtD,EAAKrB,KAI5CgP,QAAQhtB,UAAUkwB,OAAS,SAAgB3C,GACzC,MAAOA,GAAItrB,IAAIlB,KAAKqsB,MAAMpK,QAI5BgK,QAAQhtB,UAAUquB,KAAO,SAAcluB,EAAK6d,EAAK0O,GAC/C,MAAO3rB,MAAK4uB,GAAGtB,KAAKluB,EAAKY,KAAMid,EAAK0O,IAGtCM,QAAQhtB,UAAU+uB,OAAS,SAAgB5uB,EAAK6uB,GAC9C,MAAOjuB,MAAK4uB,GAAGZ,OAAO5uB,EAAK6uB,EAAWjuB,OAGxCisB,QAAQhtB,UAAU2H,QAAU,WAC1B,MAAO,eAAiB5G,KAAKqsB,MAAQrsB,KAAKqsB,KAAK7mB,SAAS,GAAI,IACrD,UAAYxF,KAAKwsB,KAAOxsB,KAAKwsB,IAAI5lB,WAAa,OnD4nhBjD2tC,KACA,SAAS91C,EAAQC,EAASC,GoDtuhBhC,YAQA,SAASutB,WAAUP,EAAS1O,GAC1B,MAAI0O,aAAmBO,WACdP,OAEL3rB,KAAKqvB,WAAW1D,EAAS1O,KAG7B/d,EAAOysB,EAAQjrB,GAAKirB,EAAQtb,EAAG,4BAC/BrQ,KAAKU,EAAI,GAAI44B,GAAG3N,EAAQjrB,EAAG,IAC3BV,KAAKqQ,EAAI,GAAIipB,GAAG3N,EAAQtb,EAAG,IACG,OAA1Bsb,EAAQmC,cACV9tB,KAAK8tB,cAAgBnC,EAAQmC,cAE7B9tB,KAAK8tB,cAAgB,OAIzB,QAASwB,YACPtvB,KAAKuvB,MAAQ,EAGf,QAASC,WAAUC,EAAKtsB,GACtB,GAAIusB,GAAUD,EAAItsB,EAAEosB,QACpB,MAAgB,IAAVG,GACJ,MAAOA,EAIT,KAAK,GAFDC,GAAqB,GAAVD,EACXvwB,EAAM,EACD2B,EAAI,EAAGW,EAAM0B,EAAEosB,MAAOzuB,EAAI6uB,EAAU7uB,IAAKW,IAChDtC,IAAQ,EACRA,GAAOswB,EAAIhuB,EAGb,OADA0B,GAAEosB,MAAQ9tB,EACHtC,EAGT,QAASywB,WAAUH,GAGjB,IAFA,GAAI3uB,GAAI,EACJH,EAAM8uB,EAAItvB,OAAS,GACfsvB,EAAI3uB,MAAqB,IAAb2uB,EAAI3uB,EAAI,KAAcA,EAAIH,GAC5CG,GAEF,OAAU,KAANA,EACK2uB,EAEFA,EAAIvS,MAAMpc,GAyCnB,QAAS+uB,iBAAgBjR,EAAKje,GAC5B,GAAIA,EAAM,IAER,WADAie,GAAIzB,KAAKxc,EAGX,IAAImvB,GAAS,GAAKlvB,KAAKmvB,IAAIpvB,GAAOC,KAAKovB,MAAQ,EAE/C,KADApR,EAAIzB,KAAc,IAAT2S,KACAA,GACPlR,EAAIzB,KAAMxc,KAASmvB,GAAU,GAAM,IAErClR,GAAIzB,KAAKxc,GAtGX,GAAI24B,GAAK36B,EAAQ,MAEbqhB,EAAWrhB,EAAQ,MACnB8f,EAAQuB,EAASvB,MACjBvf,EAASuf,EAAMvf,MAiBnBT,GAAOC,QAAUwtB,UAiCjBA,UAAUjtB,UAAUowB,WAAa,SAAoBY,EAAMhT,GACzDgT,EAAOxR,EAAM7Y,QAAQqqB,EAAMhT,EAC3B,IAAI9Z,GAAI,GAAImsB,SACZ,IAAwB,KAApBW,EAAK9sB,EAAEosB,SACT,OAAO,CAET,IAAI5uB,GAAM6uB,UAAUS,EAAM9sB,EAC1B,IAAKxC,EAAMwC,EAAEosB,QAAWU,EAAK9vB,OAC3B,OAAO,CAET,IAAwB,IAApB8vB,EAAK9sB,EAAEosB,SACT,OAAO,CAET,IAAItX,GAAOuX,UAAUS,EAAM9sB,GACvBzC,EAAIuvB,EAAK/S,MAAM/Z,EAAEosB,MAAOtX,EAAO9U,EAAEosB,MAErC,IADApsB,EAAEosB,OAAStX,EACa,IAApBgY,EAAK9sB,EAAEosB,SACT,OAAO,CAET,IAAIW,GAAOV,UAAUS,EAAM9sB,EAC3B,IAAI8sB,EAAK9vB,SAAW+vB,EAAO/sB,EAAEosB,MAC3B,OAAO,CAET,IAAIlf,GAAI4f,EAAK/S,MAAM/Z,EAAEosB,MAAOW,EAAO/sB,EAAEosB,MAYrC,OAXa,KAAT7uB,EAAE,IAAoB,IAAPA,EAAE,KACnBA,EAAIA,EAAEwc,MAAM,IAED,IAAT7M,EAAE,IAAoB,IAAPA,EAAE,KACnBA,EAAIA,EAAE6M,MAAM,IAGdld,KAAKU,EAAI,GAAI44B,GAAG54B,GAChBV,KAAKqQ,EAAI,GAAIipB,GAAGjpB,GAChBrQ,KAAK8tB,cAAgB,MAEd,GAgBT5B,UAAUjtB,UAAUkxB,MAAQ,SAAelT,GACzC,GAAIvc,GAAIV,KAAKU,EAAEkF,UACXyK,EAAIrQ,KAAKqQ,EAAEzK,SAYf,KATW,IAAPlF,EAAE,KACJA,GAAM,GAAIyhB,OAAOzhB,IAER,IAAP2P,EAAE,KACJA,GAAM,GAAI8R,OAAO9R,IAEnB3P,EAAIkvB,UAAUlvB,GACd2P,EAAIuf,UAAUvf,KAENA,EAAE,IAAe,IAAPA,EAAE,KAClBA,EAAIA,EAAE6M,MAAM,EAEd,IAAI0B,IAAQ,EACZiR,iBAAgBjR,EAAKle,EAAEP,QACvBye,EAAMA,EAAIuD,OAAOzhB,GACjBke,EAAIzB,KAAK,GACT0S,gBAAgBjR,EAAKvO,EAAElQ,OACvB,IAAIiwB,GAAWxR,EAAIuD,OAAO9R,GACtBtI,GAAQ,GAGZ,OAFA8nB,iBAAgB9nB,EAAKqoB,EAASjwB,QAC9B4H,EAAMA,EAAIoa,OAAOiO,GACV3R,EAAME,OAAO5W,EAAKkV,KpDsuhBrBu3B,MACL,KAAM,KAAM,KAAM,MAEbC,KACA,SAASh2C,EAAQC,EAASC,GqD/2hBhC,YAiBA,SAASstB,SAAQsE,EAAOC,GACtBxwB,KAAKuwB,MAAQA,EACbvwB,KAAKywB,QAAUlS,EAAWiS,EAAOE,QAC7BH,EAAMI,QAAQH,EAAOhE,KACvBxsB,KAAK4wB,KAAOJ,EAAOhE,IAEnBxsB,KAAK6wB,UAAYtS,EAAWiS,EAAOhE,KArBvC,GAAIxM,GAAWrhB,EAAQ,MACnB8f,EAAQuB,EAASvB,MACjBvf,EAASuf,EAAMvf,OACfqf,EAAaE,EAAMF,WACnBH,EAAiBK,EAAML,cAoB3B6N,SAAQQ,WAAa,SAAoB8D,EAAO/D,GAC9C,MAAIA,aAAeP,SACVO,EACF,GAAIP,SAAQsE,GAAS/D,IAAKA,KAGnCP,QAAQ6E,WAAa,SAAoBP,EAAOG,GAC9C,MAAIA,aAAkBzE,SACbyE,EACF,GAAIzE,SAAQsE,GAASG,OAAQA,KAGtCzE,QAAQhtB,UAAUyxB,OAAS,WACzB,MAAO1wB,MAAKywB,SAGdrS,EAAe6N,QAAS,WACtB,MAAOjsB,MAAKuwB,MAAMQ,YAAY/wB,KAAKwsB,SAGrCpO,EAAe6N,QAAS,WACtB,MAAIjsB,MAAK6wB,UACA7wB,KAAKuwB,MAAM3O,YAAY5hB,KAAK6wB,WAC9B7wB,KAAKuwB,MAAM5b,EAAEzT,IAAIlB,KAAKqsB,UAG/BjO,EAAe6N,QAAS,WACtB,GAAIsE,GAAQvwB,KAAKuwB,MACbvE,EAAOhsB,KAAKgsB,OACZgF,EAAST,EAAMU,eAAiB,EAEhCnvB,EAAIkqB,EAAK9O,MAAM,EAAGqT,EAAMU,eAK5B,OAJAnvB,GAAE,IAAM,IACRA,EAAEkvB,IAAW,IACblvB,EAAEkvB,IAAW,GAENlvB,IAGTsc,EAAe6N,QAAS,WACtB,MAAOjsB,MAAKuwB,MAAMW,UAAUlxB,KAAKmxB,eAGnC/S,EAAe6N,QAAS,WACtB,MAAOjsB,MAAKuwB,MAAMvE,OAAOoF,OAAOpxB,KAAK0wB,UAAUW,WAGjDjT,EAAe6N,QAAS,WACtB,MAAOjsB,MAAKgsB,OAAO9O,MAAMld,KAAKuwB,MAAMU,kBAGtChF,QAAQhtB,UAAUquB,KAAO,SAAcgE,GAErC,MADApyB,GAAOc,KAAKywB,QAAS,2BACdzwB,KAAKuwB,MAAMjD,KAAKgE,EAAStxB,OAGlCisB,QAAQhtB,UAAU+uB,OAAS,SAAgBsD,EAASC,GAClD,MAAOvxB,MAAKuwB,MAAMvC,OAAOsD,EAASC,EAAKvxB,OAGzCisB,QAAQhtB,UAAUuyB,UAAY,SAAmBvU,GAE/C,MADA/d,GAAOc,KAAKywB,QAAS,0BACdhS,EAAME,OAAO3e,KAAK0wB,SAAUzT,IAGrCgP,QAAQhtB,UAAUkvB,UAAY,SAAmBlR,GAC/C,MAAOwB,GAAME,OAAO3e,KAAKyxB,WAAYxU,IAGvCxe,EAAOC,QAAUutB,SrD+2hBXyoB,KACA,SAASj2C,EAAQC,EAASC,GsD/8hBhC,YAiBA,SAASutB,WAAUqE,EAAOgB,GACxBvxB,KAAKuwB,MAAQA,EAEM,YAAf,mBAAOgB,GAAP,YAAA3yB,EAAO2yB,MACTA,EAAMhT,EAAWgT,IAEfjwB,MAAM4D,QAAQqsB,KAChBA,GACEI,EAAGJ,EAAIrU,MAAM,EAAGqT,EAAMU,gBACtBW,EAAGL,EAAIrU,MAAMqT,EAAMU,kBAIvB/xB,EAAOqyB,EAAII,GAAKJ,EAAIK,EAAG,4BAEnBrB,EAAMI,QAAQY,EAAII,KACpB3xB,KAAK6xB,GAAKN,EAAII,GACZJ,EAAIK,YAAa0H,KACnBt5B,KAAK8xB,GAAKP,EAAIK,GAEhB5xB,KAAK+xB,UAAYzwB,MAAM4D,QAAQqsB,EAAII,GAAKJ,EAAII,EAAIJ,EAAIS,SACpDhyB,KAAKiyB,UAAY3wB,MAAM4D,QAAQqsB,EAAIK,GAAKL,EAAIK,EAAIL,EAAIW,StD66hBrD,GAAItzB,GAA4B,kBAAXC,SAAoD,gBAApBA,QAAOC,SAAwB,SAAUC,GAAO,aAAcA,IAAS,SAAUA,GAAO,MAAOA,IAAyB,kBAAXF,SAAyBE,EAAIC,cAAgBH,QAAUE,IAAQF,OAAOI,UAAY,eAAkBF,IsDj9hBnQu6B,EAAK36B,EAAQ,MACbqhB,EAAWrhB,EAAQ,MACnB8f,EAAQuB,EAASvB,MACjBvf,EAASuf,EAAMvf,OACfkf,EAAiBK,EAAML,eACvBG,EAAaE,EAAMF,UAkCvBH,GAAe8N,UAAW,WACxB,MAAOlsB,MAAKuwB,MAAMW,UAAUlxB,KAAKkyB,cAGnC9T,EAAe8N,UAAW,WACxB,MAAOlsB,MAAKuwB,MAAM3O,YAAY5hB,KAAKgyB,cAGrC5T,EAAe8N,UAAW,WACxB,MAAOlsB,MAAKuwB,MAAMQ,YAAY/wB,KAAK2xB,OAGrCvT,EAAe8N,UAAW,WACxB,MAAOlsB,MAAKuwB,MAAM4B,UAAUnyB,KAAK4xB,OAGnC1F,UAAUjtB,UAAUmzB,QAAU,WAC5B,MAAOpyB,MAAKgyB,WAAW7P,OAAOniB,KAAKkyB,aAGrChG,UAAUjtB,UAAUqe,MAAQ,WAC1B,MAAOmB,GAAME,OAAO3e,KAAKoyB,UAAW,OAAOC,eAG7C5zB,EAAOC,QAAUwtB,WtDo9hBXyoB,KACA,SAASl2C,EAAQC,GAEtB,YuDxhiBDD,GAAOC,SACLoZ,KAAM,aACND,KAAM,YACNk4B,KAAM,aACNC,KAAM,YACNC,KAAM,cvD+hiBF2E,KACA,SAASn2C,EAAQC,EAASC,IwDriiBhC,SAAAqG,GAAA,YAeA,SAAS+7B,WACP,GAAI1U,SACJ,GACEA,GAAO4N,EAAO4a,YAAY,WAClB9hB,EAAUC,iBAAiB3G,GAErC,OAAOuiB,GAAKlpB,UAAW2G,SAGzB,QAAS3G,UAAUwZ,GAyBjB,QAASqQ,UAAUnwC,GACjB,IAAKitB,EAAM,KAAM,IAAIhtB,OAAM,uBAE3B,IAAIkyB,GAAMwB,EAAUzF,KAAKluB,EAAKitB,EAM9B,OAHAkF,GAAMwB,EAAU8B,mBAAmBtD,EAAItD,WAGhC,GAAIjpB,GAAO+tB,EAAUiC,gBAAgBzD,IAAM/rB,SAAS,OAG7D,QAASiqC,YAAYrwC,EAAKmyB,GAIxB,MAHmB,gBAARA,KAAkBA,EAAM,GAAIvsB,GAAOusB,EAAK,QAEnDA,EAAMwB,EAAUmC,gBAAgB3D,GACzBwB,EAAU/E,OAAO5uB,EAAKmyB,EAAK/E,GAGpC,QAASsoB,aAAazoB,GACpB,MAAO0G,GAAUiB,gBAAgB3H,GAGnC,QAAS7kB,QAAQutC,GACf,GAAMh2C,IACJ+a,KAAM,KACNgG,MAAO,YACP0M,IAAKgQ,EACLC,cAKF,OAFIsY,KAAeh2C,EAAIstB,KAAO2oB,GAEvBj2C,EAzDT,IAAMmgC,EAAK7S,OAAQ6S,EAAK1S,IACtB,KAAM,IAAIntB,OAAM,2BAGlB,IAAMgtB,GAA4B,gBAAd6S,GAAK7S,KAAoB,GAAIrnB,GAAOk6B,EAAK7S,KAAM,OAAS6S,EAAK7S,KAC3EG,EAA0B,gBAAb0S,GAAK1S,IAAmB,GAAIxnB,GAAOk6B,EAAK1S,IAAK,OAAS0S,EAAK1S,KAAOsoB,YAAYzoB,GAG3FmQ,EAAehQ,EAAIhnB,SAAS,OAC5BwvC,EAAgB3oB,GAAQ0G,EAAUK,iBAAiB/G,GACnDoQ,EAAcxC,EAAOZ,WAAW,UAAUjI,OAAO5E,GAAK6E,OAAO,MAEnE,OAAO4K,GAAKhB,MACVnhB,OACAy1B,kBACAE,sBACAK,qBAAqB,EACrBtT,eACAC,cACAjQ,MACAH,OACA7kB,gBA5CJ,GAAMyyB,GAASt7B,EAAQ,KACjBo0B,EAAYp0B,EAAQ,MACpBs9B,EAAOt9B,EAAQ,MACfmb,EAAO,KAEP80B,EAAO3S,EAAKhB,MAChBnhB,OACAinB,gBACArb,mBAGFjnB,GAAOC,QAAUkwC,IxD+miBalrC,KAAKhF,EAASC,EAAoB,KAAKqG,SAI/DiwC,KACA,SAASx2C,EAAQC,EAASC,IyDjoiBhC,SAAAqG,GAAA,YAeA,SAAS+7B,WACP,GAAM1U,GAAO6oB,EAAW/oB,SACxB,OAAOyiB,GAAKlpB,UAAW2G,SAGzB,QAAS3G,UAAUwZ,GAoCjB,QAAS4V,aAAazoB,GACpB,GAAMzN,GAAMyN,EAAK8oB,WAAaD,EAAW/oB,QAAQipB,cAAc/oB,GAAMmH,SACrE,OAAO,IAAIxuB,GAAO4Z,GAGpB,QAASpX,QAAQutC,GACf,GAAMh2C,IACJ+a,KAAM,KACNgG,MAAO,aACP0M,IAAKgQ,EACLC,cAKF,OAFIsY,KAAeh2C,EAAIstB,KAAO2oB,GAEvBj2C,EAlDT,IAAMmgC,EAAK7S,OAAQ6S,EAAK1S,IACtB,KAAM,IAAIntB,OAAM,2BAGlB,IAAMgtB,GAA4B,gBAAd6S,GAAK7S,KACrB,GAAIrnB,GAAOk6B,EAAK7S,KAAM,OACxB6S,EAAK7S,MAAQ6S,EAAK7S,KAAK8oB,UAAY,GAAInwC,GAAOk6B,EAAK7S,KAAK8oB,WAAajW,EAAK7S,KAEtEgpB,EAAUhpB,GAAQipB,aAAajpB,GAC/BG,EAA0B,gBAAb0S,GAAK1S,IACpB,GAAIxnB,GAAOk6B,EAAK1S,IAAK,OACrB0S,EAAK1S,KAAQ0S,EAAK7S,MAAQ6S,EAAK7S,KAAKmH,WAAa,GAAIxuB,GAAOk6B,EAAK7S,KAAKmH,YAAeshB,YAAYzoB,GAI/FmQ,EAAehQ,EAAIhnB,SAAS,OAC5BwvC,EAAgB3oB,GAAQA,EAAK7mB,SAAS,OACtCi3B,EAAcxC,EAAOZ,WAAW,UAAUjI,OAAO5E,GAAK6E,OAAO,MAEnE,OAAO4K,GAAKhB,MACVnhB,OACA0iB,eACAC,cACAjQ,MACAH,OACA+J,KAAM,SAAU5J,GACd,IAAKH,EAAM,KAAM,IAAIhtB,OAAM,wBAE3BmtB,GAAM8oB,aAAa9oB,EACnB,IAAM+oB,GAAYL,EAAWM,OAAOhpB,EAAK6oB,EACzC,OAAO,IAAIrwC,GAAOuwC,IAEpB/tC,gBAsBJ,QAAS8tC,cAAc7lB,GACrB,GAAIA,YAAegmB,YAAY,MAAOhmB,EACtC,KAAKzqB,EAAOkuB,SAASzD,GACnB,KAAM,IAAIpwB,OAAM,gCAIlB,KAAK,GADDuf,GAAM,GAAI62B,YAAWhmB,EAAItvB,QACpBW,EAAI,EAAGA,EAAI2uB,EAAItvB,OAAQW,IAC9B8d,EAAI9d,GAAK2uB,EAAI3uB,EAGf,OAAO8d,GApFT,GAAMqb,GAASt7B,EAAQ,KACjBu2C,EAAav2C,EAAQ,MAAa+2C,IAClCzZ,EAAOt9B,EAAQ,MACfmb,EAAO,KAEP80B,EAAO3S,EAAKhB,MAChBnhB,OACAinB,gBACArb,mBAGFjnB,GAAOC,QAAUkwC,IzD0siBalrC,KAAKhF,EAASC,EAAoB,KAAKqG,SAI/D2wC,KACA,SAASl3C,EAAQC,EAASC,G0D5tiBhC,YAgBA,SAASoiC,SAAS7B,GAChB,GAAM0W,GAAc1W,EAAK0W,aAAel3C,EAAQm3C,eAChD,OAAOjH,GAAKlpB,UACV2G,KAAMypB,EAAQC,MAAMC,aACpBJ,gBAIJ,QAASlwB,UAAUwZ,GA6EjB,QAASqQ,UAAUnwC,GACjB,IAAKitB,EAAM,KAAM,IAAIhtB,OAAM,uBAE3B,OAAOif,GAAIgP,KAAKluB,GAAK+wB,QAGvB,QAASsf,YAAYrwC,EAAKmyB,GACxB,MAAOuJ,GAAItO,IAAIwB,OAAO5uB,EAAK02C,EAAQG,YAAYja,QAAQzK,IAGzD,QAAS/pB,QAAQutC,GACf,GAAMh2C,IACJ+a,OACA87B,cACAnZ,YAAa3B,EAAI2B,YACjBjQ,IAAKsO,EAAI0B,aAKX,OAFIuY,KAAeh2C,EAAIstB,KAAO2oB,GAEvBj2C,EAhGT,IAAMmgC,EAAK7S,OAAQ6S,EAAK1S,IACtB,KAAM,IAAIntB,OAAM,2BAGlB,IAAMu2C,GAAc1W,EAAK0W,YACnBM,EAAUJ,EAAQK,SAASP,EACjC,KAAKM,EAAS,KAAM,IAAI72C,OAAM,wBAE9B,IAAIif,UACA+N,EAAO6S,EAAK7S,KACZG,EAAM0S,EAAK1S,IACXwoB,SACAxY,QACgB,iBAATnQ,IACT2oB,EAAgB3oB,EAChB/N,EAAMw3B,EAAQC,MAAMK,QAAQ/pB,IACnBA,GACT2oB,EAAgB3oB,EAAKgqB,MAAMH,GAC3B53B,EAAM+N,GACkB,gBAARG,IAChBgQ,EAAehQ,EACflO,EAAMw3B,EAAQQ,SAASC,QAAQ/pB,GAC/BA,EAAMlO,GAENA,EAAMkO,CAKR,IAAIiQ,UACE3B,GACJhhB,OACAy1B,kBACAE,sBACAuF,gBACAxtC,cACAsoC,qBAAqB,EACrB0G,IAAKxB,EAqCP,OA7BAze,QAAO0H,eAAenD,EAAK,OACzB+G,YAAY,EACZ3D,IAAK,WACH,MAAO5f,GAAIkO,KAAOlO,KAItBiY,OAAO0H,eAAenD,EAAK,gBACzB+G,YAAY,EACZ3D,IAAK,WAKH,MAJK1B,KACHA,EAAe1B,EAAItO,IAAIlP,SAGlBkf,KAIXjG,OAAO0H,eAAenD,EAAK,eACzB+G,YAAY,EACZ3D,IAAK,WAKH,MAJKzB,KACHA,EAAc3B,EAAItO,IAAIiqB,WAAWP,GAAS1wC,YAGrCi3B,KAIJR,EAAKhB,KAAKH,GAjGnB,GACMgb,IADSn3C,EAAQ,KACPA,EAAQ,OAClBs9B,EAAOt9B,EAAQ,MACfmb,EAAO,UACP80B,EAAO3S,EAAKhB,MAChBnhB,OACAinB,gBACArb,mBAGFjnB,GAAOC,QAAUA,EAAUkwC,EAE3BlwC,EAAQm3C,gBAAkB,W1D+0iBpBa,KACA,SAASj4C,EAAQC,EAASC,EAAqBg4C,EAAwCC,EAAwCC,EAAwCC,EAAwCC,EAAwCC,EAAwCC,G2D91iBrS,YAEA,IAAIj3B,GAAWthB,CAEfshB,GAASjD,QAAUpe,EAAQg4C,GAAmB55B,QAC9CiD,EAASvB,MAAQ9f,EAAQi4C,GACzB52B,EAAS+M,KAAOpuB,EAAQ,KACxBqhB,EAAS4M,SAAWjuB,EAAQk4C,GAC5B72B,EAASF,MAAQnhB,EAAQm4C,GACzB92B,EAAS4L,OAASjtB,EAAQo4C,GAG1B/2B,EAAS4O,GAAKjwB,EAAQq4C,GACtBh3B,EAASuQ,MAAQ5xB,EAAQs4C,I3Do2iBnBC,KACA,SAASz4C,EAAQC,EAASC,EAAqBg4C,G4Dl3iBrD,YAOA,SAASQ,UAASxrB,GAChB,KAAM3rB,eAAgBm3C,WACpB,MAAO,IAAIA,UAASxrB,EACtB3rB,MAAKgsB,KAAOL,EAAQK,KACpBhsB,KAAKo3C,aAAezrB,EAAQyrB,WAE5Bp3C,KAAKsY,OAAStY,KAAKgsB,KAAKqrB,QACxBr3C,KAAKs3C,WAAa3rB,EAAQ2rB,YAAct3C,KAAKgsB,KAAKgB,aAElDhtB,KAAKu3C,OAAS,KACdv3C,KAAKw3C,eAAiB,KACtBx3C,KAAKy3C,EAAI,KACTz3C,KAAK03C,EAAI,IAET,IAAI5qB,GAAUrO,EAAM7Y,QAAQ+lB,EAAQmB,QAASnB,EAAQgsB,YACjD1qB,EAAQxO,EAAM7Y,QAAQ+lB,EAAQsB,MAAOtB,EAAQisB,UAC7C/qB,EAAOpO,EAAM7Y,QAAQ+lB,EAAQkB,KAAMlB,EAAQ8B,QAC/CvuB,GAAO4tB,EAAQ3sB,QAAWH,KAAKs3C,WAAa,EACrC,mCAAqCt3C,KAAKs3C,WAAa,SAC9Dt3C,KAAKK,MAAMysB,EAASG,EAAOJ,GAxB7B,GAAIb,GAAOrtB,EAAQ,KACfqhB,EAAWrhB,EAAQg4C,GACnBl4B,EAAQuB,EAASvB,MACjBvf,EAASuf,EAAMvf,MAuBnBT,GAAOC,QAAUy4C,SAEjBA,SAASl4C,UAAUoB,MAAQ,SAAcysB,EAASG,EAAOJ,GACvD,GAAIgrB,GAAO/qB,EAAQ3K,OAAO8K,GAAO9K,OAAO0K,EAExC7sB,MAAKy3C,EAAI,GAAIn2C,OAAMtB,KAAKsY,OAAS,GACjCtY,KAAK03C,EAAI,GAAIp2C,OAAMtB,KAAKsY,OAAS,EACjC,KAAK,GAAIxX,GAAI,EAAGA,EAAId,KAAK03C,EAAEv3C,OAAQW,IACjCd,KAAKy3C,EAAE32C,GAAK,EACZd,KAAK03C,EAAE52C,GAAK,CAGdd,MAAK83C,QAAQD,GACb73C,KAAKu3C,OAAS,EACdv3C,KAAKw3C,eAAiB,iBAGxBL,SAASl4C,UAAU84C,MAAQ,WACzB,MAAO,IAAI/rB,GAAKgsB,KAAKh4C,KAAKgsB,KAAMhsB,KAAKy3C,IAGvCN,SAASl4C,UAAU64C,QAAU,SAAgBD,GAC3C,GAAII,GAAOj4C,KAAK+3C,QACA3mB,OAAOpxB,KAAK03C,GACZtmB,QAAS,GACrBymB,KACFI,EAAOA,EAAK7mB,OAAOymB,IACrB73C,KAAKy3C,EAAIQ,EAAK5mB,SACdrxB,KAAK03C,EAAI13C,KAAK+3C,QAAQ3mB,OAAOpxB,KAAK03C,GAAGrmB,SAChCwmB,IAGL73C,KAAKy3C,EAAIz3C,KAAK+3C,QACA3mB,OAAOpxB,KAAK03C,GACZtmB,QAAS,IACTA,OAAOymB,GACPxmB,SACdrxB,KAAK03C,EAAI13C,KAAK+3C,QAAQ3mB,OAAOpxB,KAAK03C,GAAGrmB,WAGvC8lB,SAASl4C,UAAUs4C,OAAS,SAAgBzqB,EAAS6qB,EAAYvtC,EAAK8tC,GAE1C,gBAAfP,KACTO,EAAS9tC,EACTA,EAAMutC,EACNA,EAAa,MAGf7qB,EAAUrO,EAAMhX,SAASqlB,EAAS6qB,GAClCvtC,EAAMqU,EAAMhX,SAAS2C,EAAK8tC,GAE1Bh5C,EAAO4tB,EAAQ3sB,QAAWH,KAAKs3C,WAAa,EACrC,mCAAqCt3C,KAAKs3C,WAAa,SAE9Dt3C,KAAK83C,QAAQhrB,EAAQ3K,OAAO/X,QAC5BpK,KAAKu3C,OAAS,GAGhBJ,SAASl4C,UAAUkuB,SAAW,SAAkBxsB,EAAKsc,EAAK7S,EAAK8tC,GAC7D,GAAIl4C,KAAKu3C,OAASv3C,KAAKw3C,eACrB,KAAM,IAAIn4C,OAAM,qBAGC,iBAAR4d,KACTi7B,EAAS9tC,EACTA,EAAM6S,EACNA,EAAM,MAIJ7S,IACFA,EAAMqU,EAAM7Y,QAAQwE,EAAK8tC,GACzBl4C,KAAK83C,QAAQ1tC,GAIf,KADA,GAAI+tC,MACGA,EAAKh4C,OAASQ,GACnBX,KAAK03C,EAAI13C,KAAK+3C,QAAQ3mB,OAAOpxB,KAAK03C,GAAGrmB,SACrC8mB,EAAOA,EAAKh2B,OAAOniB,KAAK03C,EAG1B,IAAI3vC,GAAMowC,EAAKj7B,MAAM,EAAGvc,EAGxB,OAFAX,MAAK83C,QAAQ1tC,GACbpK,KAAKu3C,SACE94B,EAAME,OAAO5W,EAAKkV,K5D62iBrBm7B,KACA,SAAS35C,EAAQC,EAASC,EAAqBg4C,EAAwCC,EAAwCC,EAAwCC,G6D99iB7K,YAEA,IAAIh3B,GAAQphB,CAEZohB,GAAMjgB,KAAOlB,EAAQg4C,GACrB72B,WAAcnhB,EAAQi4C,GACtB92B,EAAM3G,KAAOxa,EAAQk4C,GACrB/2B,EAAMu4B,QAAU15C,EAAQm4C,I7Do+iBlBwB,KACA,SAAS75C,EAAQC,EAASC,EAAqBg4C,EAAwCC,G8D5+iB7F,YASA,SAAS9qB,aAAYH,GACE,UAAjBA,EAAQ7R,KACV9Z,KAAK8f,MAAQ,GAAIE,GAASF,MAATE,SAAqB2L,GACd,YAAjBA,EAAQ7R,KACf9Z,KAAK8f,MAAQ,GAAIE,GAASF,MAAMu4B,QAAQ1sB,GAExC3rB,KAAK8f,MAAQ,GAAIE,GAASF,MAAM3G,KAAKwS,GACvC3rB,KAAK2U,EAAI3U,KAAK8f,MAAMnL,EACpB3U,KAAKoD,EAAIpD,KAAK8f,MAAM1c,EACpBpD,KAAKgsB,KAAOL,EAAQK,KAEpB9sB,EAAOc,KAAK2U,EAAEuL,WAAY,iBAC1BhhB,EAAOc,KAAK2U,EAAEzT,IAAIlB,KAAKoD,GAAG4iB,aAAc,2BAI1C,QAASuyB,aAAYr1C,EAAMyoB,GACzB4K,OAAO0H,eAAerS,EAAQ1oB,GAC5Bs1C,cAAc,EACd3W,YAAY,EACZ3D,IAAK,WACH,GAAIpe,GAAQ,GAAIgM,aAAYH,EAM5B,OALA4K,QAAO0H,eAAerS,EAAQ1oB,GAC5Bs1C,cAAc,EACd3W,YAAY,EACZpP,MAAO3S,IAEFA,KAlCb,GAAI8L,GAASltB,EAETstB,EAAOrtB,EAAQ,KACfqhB,EAAWrhB,EAAQg4C,GAEnBz3C,EAAS8gB,EAASvB,MAAMvf,MAgB5B0sB,GAAOE,YAAcA,YAkBrBysB,YAAY,QACVz+B,KAAM,QACN9V,MAAO,OACPb,EAAG,wDACHrB,EAAG,wDACHC,EAAG,wDACHqB,EAAG,wDACH4oB,KAAMA,EAAK0T,OACXrgB,MAAM,EACN1K,GACE,wDACA,2DAIJ4jC,YAAY,QACVz+B,KAAM,QACN9V,MAAO,OACPb,EAAG,iEACHrB,EAAG,iEACHC,EAAG,iEACHqB,EAAG,iEACH4oB,KAAMA,EAAK0T,OACXrgB,MAAM,EACN1K,GACE,iEACA,oEAIJ4jC,YAAY,QACVz+B,KAAM,QACN9V,MAAO,KACPb,EAAG,0EACHrB,EAAG,0EACHC,EAAG,0EACHqB,EAAG,0EACH4oB,KAAMA,EAAK0T,OACXrgB,MAAM,EACN1K,GACE,0EACA,6EAIJ4jC,YAAY,QACVz+B,KAAM,QACN9V,MAAO,KACPb,EAAG,8GAEHrB,EAAG,8GAEHC,EAAG,8GAEHqB,EAAG,8GAEH4oB,KAAMA,EAAK2T,OACXtgB,MAAM,EACN1K,GACE,8GAEA,iHAKJ4jC,YAAY,QACVz+B,KAAM,QACN9V,MAAO,KACPb,EAAG,2JAGHrB,EAAG,2JAGHC,EAAG,2JAGHqB,EAAG,2JAGH4oB,KAAMA,EAAK4T,OACXvgB,MAAM,EACN1K,GACE,2JAGA,8JAMJ4jC,YAAY,cACVz+B,KAAM,OACN9V,MAAO,SACPb,EAAG,sEACHrB,EAAG,QACHC,EAAG,IACHqB,EAAG,sEACH4oB,KAAMA,EAAK0T,OACXrgB,MAAM,EACN1K,GACE,OAIJ4jC,YAAY,WACVz+B,KAAM,UACN9V,MAAO,SACPb,EAAG,sEACHrB,EAAG,KACHf,EAAG,IAEHsnB,EAAG,sEACHjlB,EAAG,sEACH4oB,KAAMA,EAAK0T,OACXrgB,MAAM,EACN1K,GACE,mEAGA,qEAIJ,IAAIgR,EACJ,KACEA,EAAMhnB,EAAQi4C,GACd,MAAO3xC,GACP0gB,EAAMtM,OAGRk/B,YAAY,aACVz+B,KAAM,QACN9V,MAAO,OACPb,EAAG,0EACHrB,EAAG,IACHC,EAAG,IACHqB,EAAG,0EACHuP,EAAG,IACHqZ,KAAMA,EAAK0T,OAGXpd,KAAM,mEACNmB,OAAQ,mEACRI,QAEI/hB,EAAG,mCACHC,EAAG,sCAGHD,EAAG,oCACHC,EAAG,qCAIPsd,MAAM,EACN1K,GACE,mEACA,mEACAgR,M9Dm8iBE8yB,KACA,SAASh6C,EAAQC,EAASC,EAAqBg4C,EAAwCC,EAAwCC,G+D9ojBrI,YAUA,SAAS6B,OAAM54B,GAGb,GAFA5gB,EAAiB,YAAV4gB,EAAqB,qCAEtB9f,eAAgB04C,QACpB,MAAO,IAAIA,OAAM54B,EAEnB,IAAIA,GAAQE,EAAS4L,OAAO9L,GAAOA,KACnC9f,MAAK8f,MAAQA,EACb9f,KAAK2U,EAAImL,EAAMnL,EACf3U,KAAK2U,EAAEyN,WAAWtC,EAAM1c,EAAE7B,YAAc,GAExCvB,KAAK24C,WAAa74B,EAAMG,QAAQjhB,YAChCgB,KAAKixB,eAAiBrwB,KAAKiF,KAAKia,EAAM1c,EAAE7B,YAAc,GACtDvB,KAAKgsB,KAAOA,EAAK4T,OArBnB,GAAI5T,GAAOrtB,EAAQ,KACfqhB,EAAWrhB,EAAQg4C,GACnBl4B,EAAQuB,EAASvB,MACjBvf,EAASuf,EAAMvf,OACfqf,EAAaE,EAAMF,WACnB0N,EAAUttB,EAAQi4C,GAClB1qB,EAAYvtB,EAAQk4C,EAkBxBp4C,GAAOC,QAAUg6C,MAOjBA,MAAMz5C,UAAUquB,KAAO,SAAcgE,EAASZ,GAC5CY,EAAU/S,EAAW+S,EACrB,IAAIhT,GAAMte,KAAK44C,cAAcloB,GACzBhwB,EAAIV,KAAK64C,QAAQv6B,EAAIw6B,gBAAiBxnB,GACtCK,EAAI3xB,KAAK2U,EAAEzT,IAAIR,GACfsxB,EAAWhyB,KAAK+wB,YAAYY,GAC5BonB,EAAK/4C,KAAK64C,QAAQ7mB,EAAU1T,EAAImT,WAAYH,GAClCpwB,IAAIod,EAAI+N,QAClBuF,EAAIlxB,EAAE0J,IAAI2uC,GAAIl0C,KAAK7E,KAAK8f,MAAM1c,EAClC,OAAOpD,MAAKg5C,eAAgBrnB,EAAGA,EAAGC,EAAGA,EAAGI,SAAUA,KASpD0mB,MAAMz5C,UAAU+uB,OAAS,SAAgBsD,EAASC,EAAK/E,GACrD8E,EAAU/S,EAAW+S,GACrBC,EAAMvxB,KAAKg5C,cAAcznB,EACzB,IAAIjT,GAAMte,KAAKusB,cAAcC,GACzB7Z,EAAI3S,KAAK64C,QAAQtnB,EAAIS,WAAY1T,EAAImT,WAAYH,GACjD2nB,EAAKj5C,KAAK2U,EAAEzT,IAAIqwB,EAAIK,KACpBsnB,EAAU3nB,EAAII,IAAIvnB,IAAIkU,EAAIkO,MAAMtrB,IAAIyR,GACxC,OAAOumC,GAAQhjC,GAAG+iC,IAGpBP,MAAMz5C,UAAU45C,QAAU,WAExB,IAAK,GADD7sB,GAAOhsB,KAAKgsB,OACPlrB,EAAI,EAAGA,EAAIw9B,UAAUn+B,OAAQW,IACpCkrB,EAAKoF,OAAOkN,UAAUx9B,GACxB,OAAO2d,GAAMC,UAAUsN,EAAKqF,UAAUxsB,KAAK7E,KAAK8f,MAAM1c,IAGxDs1C,MAAMz5C,UAAUstB,cAAgB,SAAuBC,GACrD,MAAOP,GAAQQ,WAAWzsB,KAAMwsB,IAGlCksB,MAAMz5C,UAAU25C,cAAgB,SAAuBloB,GACrD,MAAOzE,GAAQ6E,WAAW9wB,KAAM0wB,IAGlCgoB,MAAMz5C,UAAU+5C,cAAgB,SAAuBznB,GACrD,MAAIA,aAAerF,GACVqF,EACF,GAAIrF,GAAUlsB,KAAMuxB,IAW7BmnB,MAAMz5C,UAAU8xB,YAAc,SAAqB9Q,GACjD,GAAIhD,GAAMgD,EAAMiC,OAAOtc,QAAQ,KAAM5F,KAAKixB,eAE1C,OADAhU,GAAIjd,KAAKixB,eAAiB,IAAMhR,EAAMgC,OAAOjN,QAAU,IAAO,EACvDiI,GAGTy7B,MAAMz5C,UAAU2iB,YAAc,SAAqBpD,GACjDA,EAAQC,EAAMF,WAAWC,EAEzB,IAAIwS,GAASxS,EAAMre,OAAS,EACxBg5C,EAAS36B,EAAMtB,MAAM,EAAG8T,GAAQ7O,OAAO3D,EAAMwS,SAC7CooB,EAAoC,KAAV,IAAhB56B,EAAMwS,IAEhBhuB,EAAIyb,EAAMC,UAAUy6B,EACxB,OAAOn5C,MAAK8f,MAAMkL,WAAWhoB,EAAGo2C,IAGlCV,MAAMz5C,UAAUkzB,UAAY,SAAmB/wB,GAC7C,MAAOA,GAAIwE,QAAQ,KAAM5F,KAAKixB,iBAGhCynB,MAAMz5C,UAAUiyB,UAAY,SAAmB1S,GAC7C,MAAOC,GAAMC,UAAUF,IAGzBk6B,MAAMz5C,UAAU0xB,QAAU,SAAiBxxB,GACzC,MAAOA,aAAea,MAAK24C,a/DkpjBvBU,KACA,SAAS56C,EAAQC,EAASC,EAAqBg4C,EAAwCC,EAAwCC,EAAwCC,EAAwCC,EAAwCC,GAE5P,YgEzwjBD,IAAInU,GAAOnkC,CAEXmkC,GAAKiI,OAASnsC,EAAQg4C,GAEtB9T,EAAKC,OAASnkC,EAAQi4C,GAAc9T,OACpCD,EAAKhjC,KAAOlB,EAAQk4C,GACpBhU,EAAKkI,UAAYpsC,EAAQm4C,GACzBjU,EAAKO,SAAWzkC,EAAQo4C,GACxBlU,EAAKQ,SAAW1kC,EAAQq4C,IhE+wjBlBsC,KACA,SAAS76C,EAAQC,EAASC,EAAqBg4C,EAAwCC,EAAwCC,EAAwCC,GAE5K,YiE1xjBD,IAAIj3C,GAAOnB,CAEXmB,GAAKmkC,SAAWrlC,EAAQg4C,GAAc3S,SACtCnkC,EAAK8mC,cAAgBhoC,EAAQi4C,GAAYjQ,cACzC9mC,EAAK6mC,cAAgB/nC,EAAQk4C,GAAYnQ,cACzC7mC,EAAK8lC,KAAOhnC,EAAQm4C,IjEgyjBdyC,KACA,SAAS96C,EAAQC,EAASC,EAAqBg4C,GAEpD,YkEpyjBD,SAAShQ,eAAc9mC,EAAM8rB,GAE3B,MADAqY,GAAStgC,KAAK1D,KAAM2rB,GACf3mB,EAAOkuB,SAASrzB,IAKrBG,KAAKH,KAAOA,EACZG,KAAKioC,OAAS,OACdjoC,KAAKG,OAASN,EAAKM,aANjBH,MAAKilC,MAAM,oBAyDf,QAASyB,eAAcjU,EAAOoR,GAC5B,GAAIviC,MAAM4D,QAAQutB,GAChBzyB,KAAKG,OAAS,EACdH,KAAKyyB,MAAQA,EAAM3O,IAAI,SAASwjB,GAI9B,MAHMA,aAAgBZ,iBACpBY,EAAO,GAAIZ,eAAcY,EAAMzD,IACjC7jC,KAAKG,QAAUmnC,EAAKnnC,OACbmnC,GACNtnC,UACE,IAAqB,gBAAVyyB,GAAoB,CACpC,KAAM,GAAKA,GAASA,GAAS,KAC3B,MAAOoR,GAASoB,MAAM,+BACxBjlC,MAAKyyB,MAAQA,EACbzyB,KAAKG,OAAS,MACT,IAAqB,gBAAVsyB,GAChBzyB,KAAKyyB,MAAQA,EACbzyB,KAAKG,OAAS6E,EAAO4C,WAAW6qB,OAC3B,KAAIztB,EAAOkuB,SAAST,GAIzB,MAAOoR,GAASoB,MAAM,yCAA8BxS,GAA9B,YAAA7zB,EAA8B6zB,IAHpDzyB,MAAKyyB,MAAQA,EACbzyB,KAAKG,OAASsyB,EAAMtyB,QlEutjBvB,GAAIvB,GAA4B,kBAAXC,SAAoD,gBAApBA,QAAOC,SAAwB,SAAUC,GAAO,aAAcA;EAAS,SAAUA,GAAO,MAAOA,IAAyB,kBAAXF,SAAyBE,EAAIC,cAAgBH,QAAUE,IAAQF,OAAOI,UAAY,eAAkBF,IkE1yjBnQO,EAAWX,EAAQ,KACnBqlC,EAAWrlC,EAAQg4C,GAAW3S,SAC9Bh/B,EAASrG,EAAQ,KAAUqG,MAa/B1F,GAASqnC,cAAe3C,GACxBtlC,EAAQioC,cAAgBA,cAExBA,cAAc1nC,UAAUslC,KAAO,WAC7B,OAAS0D,OAAQjoC,KAAKioC,OAAQpE,SAAUG,EAAS/kC,UAAUslC,KAAK7gC,KAAK1D,QAGvE2mC,cAAc1nC,UAAUylC,QAAU,SAAiBH,GAEjD,GAAIx8B,GAAM,GAAI4+B,eAAc3mC,KAAKH,KAOjC,OANAkI,GAAIkgC,OAAS1D,EAAK0D,OAClBlgC,EAAI5H,OAASH,KAAKioC,OAElBjoC,KAAKioC,OAAS1D,EAAK0D,OACnBjE,EAAS/kC,UAAUylC,QAAQhhC,KAAK1D,KAAMukC,EAAKV,UAEpC97B,GAGT4+B,cAAc1nC,UAAU+rC,QAAU,WAChC,MAAOhrC,MAAKioC,SAAWjoC,KAAKG,QAG9BwmC,cAAc1nC,UAAUwrC,UAAY,SAAmBD,GACrD,MAAIxqC,MAAKioC,OAAS,GAAKjoC,KAAKG,OACnBH,KAAKH,KAAK4qC,UAAUzqC,KAAKioC,UAAU,GAEnCjoC,KAAKilC,MAAMuF,GAAQ,0BAG9B7D,cAAc1nC,UAAUisC,KAAO,SAAc1sB,EAAOgsB,GAClD,KAAMxqC,KAAKioC,OAASzpB,GAASxe,KAAKG,QAChC,MAAOH,MAAKilC,MAAMuF,GAAQ,wBAE5B,IAAIziC,GAAM,GAAI4+B,eAAc3mC,KAAKH,KAQjC,OALAkI,GAAIk8B,eAAiBjkC,KAAKikC,eAE1Bl8B,EAAIkgC,OAASjoC,KAAKioC,OAClBlgC,EAAI5H,OAASH,KAAKioC,OAASzpB,EAC3Bxe,KAAKioC,QAAUzpB,EACRzW,GAGT4+B,cAAc1nC,UAAUwa,IAAM,SAAa8qB,GACzC,MAAOvkC,MAAKH,KAAKqd,MAAMqnB,EAAOA,EAAK0D,OAASjoC,KAAKioC,OAAQjoC,KAAKG,SA2BhEzB,EAAQgoC,cAAgBA,cAExBA,cAAcznC,UAAUs9B,KAAO,SAAc16B,EAAKomC,GAMhD,MALKpmC,KACHA,EAAM,GAAImD,GAAOhF,KAAKG,SACnB8nC,IACHA,EAAS,GAES,IAAhBjoC,KAAKG,OACA0B,GAELP,MAAM4D,QAAQlF,KAAKyyB,OACrBzyB,KAAKyyB,MAAMsL,QAAQ,SAASuJ,GAC1BA,EAAK/K,KAAK16B,EAAKomC,GACfA,GAAUX,EAAKnnC,UAGS,gBAAfH,MAAKyyB,MACd5wB,EAAIomC,GAAUjoC,KAAKyyB,MACU,gBAAfzyB,MAAKyyB,MACnB5wB,EAAI23C,MAAMx5C,KAAKyyB,MAAOwV,GACfjjC,EAAOkuB,SAASlzB,KAAKyyB,QAC5BzyB,KAAKyyB,MAAMnsB,KAAKzE,EAAKomC,GACvBA,GAAUjoC,KAAKG,QAGV0B,KlEmyjBH43C,KACA,SAASh7C,EAAQC,EAASC,EAAqBg4C,GAEpD,YmEx5jBD,IAAI5L,GAAYrsC,CAGhBqsC,GAAU2O,SAAW,SAAiB51B,GACpC,GAAI/b,KAWJ,OATAwuB,QAAO+F,KAAKxY,GAAKia,QAAQ,SAASzf,IAErB,EAANA,IAAYA,IACfA,EAAY,EAANA,EAER,IAAImU,GAAQ3O,EAAIxF,EAChBvW,GAAI0qB,GAASnU,IAGRvW,GAGTgjC,EAAUjY,IAAMn0B,EAAQg4C,InE65jBlBgD,KACA,SAASl7C,EAAQC,EAASC,EAAqBg4C,GAEpD,YoEl7jBD,IAAI5L,GAAYpsC,EAAQg4C,EAExBj4C,GAAQgsC,UACNkP,EAAG,YACHC,EAAG,cACHC,EAAG,UACHC,EAAG,WAELr7C,EAAQyuC,eAAiBpC,EAAU2O,SAASh7C,EAAQgsC,UAEpDhsC,EAAQqnC,KACN6T,EAAM,MACNC,EAAM,OACNC,EAAM,MACNC,EAAM,SACNC,EAAM,SACNC,EAAM,QACNC,EAAM,QACNC,EAAM,UACNC,EAAM,WACNC,EAAM,OACNC,GAAM,OACNC,GAAM,QACNC,GAAM,UACNC,GAAM,cACNC,GAAM,MACNC,GAAM,MACNC,GAAM,SACNC,GAAM,WACNC,GAAM,SACNC,GAAM,WACNC,GAAM,SACNC,GAAM,UACNC,GAAM,UACNC,GAAM,WACNC,GAAM,YACNC,GAAM,SACNC,GAAM,SACNC,GAAM,UACNC,GAAM,UAER98C,EAAQwuC,UAAYnC,EAAU2O,SAASh7C,EAAQqnC,MpEw7jBzC0V,KACA,SAASh9C,EAAQC,EAASC,EAAqBg4C,EAAwCC,GAE5F,YqEp+jBD,IAAIxT,GAAW1kC,CAEf0kC,GAAStQ,IAAMn0B,EAAQg4C,GACvBvT,EAASsY,IAAM/8C,EAAQi4C,IrE0+jBjB+E,KACA,SAASl9C,EAAQC,EAASC,EAAqBg4C,EAAwCC,GAE5F,YsEh/jBD,IAAIvT,GAAW3kC,CAEf2kC,GAASvQ,IAAMn0B,EAAQg4C,GACvBtT,EAASqY,IAAM/8C,EAAQi4C","file":"crypto.46dae3bc29d6043e5cc2.js","sourcesContent":["webpackJsonp([5,7],{\n\n/***/ 881:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(module) {'use strict';\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\t(function (module, exports) {\n\t  'use strict';\n\t\n\t  // Utils\n\t\n\t  function assert(val, msg) {\n\t    if (!val) throw new Error(msg || 'Assertion failed');\n\t  }\n\t\n\t  // Could use `inherits` module, but don't want to move from single file\n\t  // architecture yet.\n\t  function inherits(ctor, superCtor) {\n\t    ctor.super_ = superCtor;\n\t    var TempCtor = function TempCtor() {};\n\t    TempCtor.prototype = superCtor.prototype;\n\t    ctor.prototype = new TempCtor();\n\t    ctor.prototype.constructor = ctor;\n\t  }\n\t\n\t  // BN\n\t\n\t  function BN(number, base, endian) {\n\t    if (BN.isBN(number)) {\n\t      return number;\n\t    }\n\t\n\t    this.negative = 0;\n\t    this.words = null;\n\t    this.length = 0;\n\t\n\t    // Reduction context\n\t    this.red = null;\n\t\n\t    if (number !== null) {\n\t      if (base === 'le' || base === 'be') {\n\t        endian = base;\n\t        base = 10;\n\t      }\n\t\n\t      this._init(number || 0, base || 10, endian || 'be');\n\t    }\n\t  }\n\t  if ((typeof module === 'undefined' ? 'undefined' : _typeof(module)) === 'object') {\n\t    module.exports = BN;\n\t  } else {\n\t    exports.BN = BN;\n\t  }\n\t\n\t  BN.BN = BN;\n\t  BN.wordSize = 26;\n\t\n\t  var Buffer;\n\t  try {\n\t    Buffer = __webpack_require__(807).Buffer;\n\t  } catch (e) {}\n\t\n\t  BN.isBN = function isBN(num) {\n\t    if (num instanceof BN) {\n\t      return true;\n\t    }\n\t\n\t    return num !== null && (typeof num === 'undefined' ? 'undefined' : _typeof(num)) === 'object' && num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n\t  };\n\t\n\t  BN.max = function max(left, right) {\n\t    if (left.cmp(right) > 0) return left;\n\t    return right;\n\t  };\n\t\n\t  BN.min = function min(left, right) {\n\t    if (left.cmp(right) < 0) return left;\n\t    return right;\n\t  };\n\t\n\t  BN.prototype._init = function init(number, base, endian) {\n\t    if (typeof number === 'number') {\n\t      return this._initNumber(number, base, endian);\n\t    }\n\t\n\t    if ((typeof number === 'undefined' ? 'undefined' : _typeof(number)) === 'object') {\n\t      return this._initArray(number, base, endian);\n\t    }\n\t\n\t    if (base === 'hex') {\n\t      base = 16;\n\t    }\n\t    assert(base === (base | 0) && base >= 2 && base <= 36);\n\t\n\t    number = number.toString().replace(/\\s+/g, '');\n\t    var start = 0;\n\t    if (number[0] === '-') {\n\t      start++;\n\t    }\n\t\n\t    if (base === 16) {\n\t      this._parseHex(number, start);\n\t    } else {\n\t      this._parseBase(number, base, start);\n\t    }\n\t\n\t    if (number[0] === '-') {\n\t      this.negative = 1;\n\t    }\n\t\n\t    this.strip();\n\t\n\t    if (endian !== 'le') return;\n\t\n\t    this._initArray(this.toArray(), base, endian);\n\t  };\n\t\n\t  BN.prototype._initNumber = function _initNumber(number, base, endian) {\n\t    if (number < 0) {\n\t      this.negative = 1;\n\t      number = -number;\n\t    }\n\t    if (number < 0x4000000) {\n\t      this.words = [number & 0x3ffffff];\n\t      this.length = 1;\n\t    } else if (number < 0x10000000000000) {\n\t      this.words = [number & 0x3ffffff, number / 0x4000000 & 0x3ffffff];\n\t      this.length = 2;\n\t    } else {\n\t      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n\t      this.words = [number & 0x3ffffff, number / 0x4000000 & 0x3ffffff, 1];\n\t      this.length = 3;\n\t    }\n\t\n\t    if (endian !== 'le') return;\n\t\n\t    // Reverse the bytes\n\t    this._initArray(this.toArray(), base, endian);\n\t  };\n\t\n\t  BN.prototype._initArray = function _initArray(number, base, endian) {\n\t    // Perhaps a Uint8Array\n\t    assert(typeof number.length === 'number');\n\t    if (number.length <= 0) {\n\t      this.words = [0];\n\t      this.length = 1;\n\t      return this;\n\t    }\n\t\n\t    this.length = Math.ceil(number.length / 3);\n\t    this.words = new Array(this.length);\n\t    for (var i = 0; i < this.length; i++) {\n\t      this.words[i] = 0;\n\t    }\n\t\n\t    var j, w;\n\t    var off = 0;\n\t    if (endian === 'be') {\n\t      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n\t        w = number[i] | number[i - 1] << 8 | number[i - 2] << 16;\n\t        this.words[j] |= w << off & 0x3ffffff;\n\t        this.words[j + 1] = w >>> 26 - off & 0x3ffffff;\n\t        off += 24;\n\t        if (off >= 26) {\n\t          off -= 26;\n\t          j++;\n\t        }\n\t      }\n\t    } else if (endian === 'le') {\n\t      for (i = 0, j = 0; i < number.length; i += 3) {\n\t        w = number[i] | number[i + 1] << 8 | number[i + 2] << 16;\n\t        this.words[j] |= w << off & 0x3ffffff;\n\t        this.words[j + 1] = w >>> 26 - off & 0x3ffffff;\n\t        off += 24;\n\t        if (off >= 26) {\n\t          off -= 26;\n\t          j++;\n\t        }\n\t      }\n\t    }\n\t    return this.strip();\n\t  };\n\t\n\t  function parseHex(str, start, end) {\n\t    var r = 0;\n\t    var len = Math.min(str.length, end);\n\t    for (var i = start; i < len; i++) {\n\t      var c = str.charCodeAt(i) - 48;\n\t\n\t      r <<= 4;\n\t\n\t      // 'a' - 'f'\n\t      if (c >= 49 && c <= 54) {\n\t        r |= c - 49 + 0xa;\n\t\n\t        // 'A' - 'F'\n\t      } else if (c >= 17 && c <= 22) {\n\t        r |= c - 17 + 0xa;\n\t\n\t        // '0' - '9'\n\t      } else {\n\t        r |= c & 0xf;\n\t      }\n\t    }\n\t    return r;\n\t  }\n\t\n\t  BN.prototype._parseHex = function _parseHex(number, start) {\n\t    // Create possibly bigger array to ensure that it fits the number\n\t    this.length = Math.ceil((number.length - start) / 6);\n\t    this.words = new Array(this.length);\n\t    for (var i = 0; i < this.length; i++) {\n\t      this.words[i] = 0;\n\t    }\n\t\n\t    var j, w;\n\t    // Scan 24-bit chunks and add them to the number\n\t    var off = 0;\n\t    for (i = number.length - 6, j = 0; i >= start; i -= 6) {\n\t      w = parseHex(number, i, i + 6);\n\t      this.words[j] |= w << off & 0x3ffffff;\n\t      // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb\n\t      this.words[j + 1] |= w >>> 26 - off & 0x3fffff;\n\t      off += 24;\n\t      if (off >= 26) {\n\t        off -= 26;\n\t        j++;\n\t      }\n\t    }\n\t    if (i + 6 !== start) {\n\t      w = parseHex(number, start, i + 6);\n\t      this.words[j] |= w << off & 0x3ffffff;\n\t      this.words[j + 1] |= w >>> 26 - off & 0x3fffff;\n\t    }\n\t    this.strip();\n\t  };\n\t\n\t  function parseBase(str, start, end, mul) {\n\t    var r = 0;\n\t    var len = Math.min(str.length, end);\n\t    for (var i = start; i < len; i++) {\n\t      var c = str.charCodeAt(i) - 48;\n\t\n\t      r *= mul;\n\t\n\t      // 'a'\n\t      if (c >= 49) {\n\t        r += c - 49 + 0xa;\n\t\n\t        // 'A'\n\t      } else if (c >= 17) {\n\t        r += c - 17 + 0xa;\n\t\n\t        // '0' - '9'\n\t      } else {\n\t        r += c;\n\t      }\n\t    }\n\t    return r;\n\t  }\n\t\n\t  BN.prototype._parseBase = function _parseBase(number, base, start) {\n\t    // Initialize as zero\n\t    this.words = [0];\n\t    this.length = 1;\n\t\n\t    // Find length of limb in base\n\t    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n\t      limbLen++;\n\t    }\n\t    limbLen--;\n\t    limbPow = limbPow / base | 0;\n\t\n\t    var total = number.length - start;\n\t    var mod = total % limbLen;\n\t    var end = Math.min(total, total - mod) + start;\n\t\n\t    var word = 0;\n\t    for (var i = start; i < end; i += limbLen) {\n\t      word = parseBase(number, i, i + limbLen, base);\n\t\n\t      this.imuln(limbPow);\n\t      if (this.words[0] + word < 0x4000000) {\n\t        this.words[0] += word;\n\t      } else {\n\t        this._iaddn(word);\n\t      }\n\t    }\n\t\n\t    if (mod !== 0) {\n\t      var pow = 1;\n\t      word = parseBase(number, i, number.length, base);\n\t\n\t      for (i = 0; i < mod; i++) {\n\t        pow *= base;\n\t      }\n\t\n\t      this.imuln(pow);\n\t      if (this.words[0] + word < 0x4000000) {\n\t        this.words[0] += word;\n\t      } else {\n\t        this._iaddn(word);\n\t      }\n\t    }\n\t  };\n\t\n\t  BN.prototype.copy = function copy(dest) {\n\t    dest.words = new Array(this.length);\n\t    for (var i = 0; i < this.length; i++) {\n\t      dest.words[i] = this.words[i];\n\t    }\n\t    dest.length = this.length;\n\t    dest.negative = this.negative;\n\t    dest.red = this.red;\n\t  };\n\t\n\t  BN.prototype.clone = function clone() {\n\t    var r = new BN(null);\n\t    this.copy(r);\n\t    return r;\n\t  };\n\t\n\t  BN.prototype._expand = function _expand(size) {\n\t    while (this.length < size) {\n\t      this.words[this.length++] = 0;\n\t    }\n\t    return this;\n\t  };\n\t\n\t  // Remove leading `0` from `this`\n\t  BN.prototype.strip = function strip() {\n\t    while (this.length > 1 && this.words[this.length - 1] === 0) {\n\t      this.length--;\n\t    }\n\t    return this._normSign();\n\t  };\n\t\n\t  BN.prototype._normSign = function _normSign() {\n\t    // -0 = 0\n\t    if (this.length === 1 && this.words[0] === 0) {\n\t      this.negative = 0;\n\t    }\n\t    return this;\n\t  };\n\t\n\t  BN.prototype.inspect = function inspect() {\n\t    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n\t  };\n\t\n\t  /*\n\t   var zeros = [];\n\t  var groupSizes = [];\n\t  var groupBases = [];\n\t   var s = '';\n\t  var i = -1;\n\t  while (++i < BN.wordSize) {\n\t    zeros[i] = s;\n\t    s += '0';\n\t  }\n\t  groupSizes[0] = 0;\n\t  groupSizes[1] = 0;\n\t  groupBases[0] = 0;\n\t  groupBases[1] = 0;\n\t  var base = 2 - 1;\n\t  while (++base < 36 + 1) {\n\t    var groupSize = 0;\n\t    var groupBase = 1;\n\t    while (groupBase < (1 << BN.wordSize) / base) {\n\t      groupBase *= base;\n\t      groupSize += 1;\n\t    }\n\t    groupSizes[base] = groupSize;\n\t    groupBases[base] = groupBase;\n\t  }\n\t   */\n\t\n\t  var zeros = ['', '0', '00', '000', '0000', '00000', '000000', '0000000', '00000000', '000000000', '0000000000', '00000000000', '000000000000', '0000000000000', '00000000000000', '000000000000000', '0000000000000000', '00000000000000000', '000000000000000000', '0000000000000000000', '00000000000000000000', '000000000000000000000', '0000000000000000000000', '00000000000000000000000', '000000000000000000000000', '0000000000000000000000000'];\n\t\n\t  var groupSizes = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5];\n\t\n\t  var groupBases = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];\n\t\n\t  BN.prototype.toString = function toString(base, padding) {\n\t    base = base || 10;\n\t    padding = padding | 0 || 1;\n\t\n\t    var out;\n\t    if (base === 16 || base === 'hex') {\n\t      out = '';\n\t      var off = 0;\n\t      var carry = 0;\n\t      for (var i = 0; i < this.length; i++) {\n\t        var w = this.words[i];\n\t        var word = ((w << off | carry) & 0xffffff).toString(16);\n\t        carry = w >>> 24 - off & 0xffffff;\n\t        if (carry !== 0 || i !== this.length - 1) {\n\t          out = zeros[6 - word.length] + word + out;\n\t        } else {\n\t          out = word + out;\n\t        }\n\t        off += 2;\n\t        if (off >= 26) {\n\t          off -= 26;\n\t          i--;\n\t        }\n\t      }\n\t      if (carry !== 0) {\n\t        out = carry.toString(16) + out;\n\t      }\n\t      while (out.length % padding !== 0) {\n\t        out = '0' + out;\n\t      }\n\t      if (this.negative !== 0) {\n\t        out = '-' + out;\n\t      }\n\t      return out;\n\t    }\n\t\n\t    if (base === (base | 0) && base >= 2 && base <= 36) {\n\t      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n\t      var groupSize = groupSizes[base];\n\t      // var groupBase = Math.pow(base, groupSize);\n\t      var groupBase = groupBases[base];\n\t      out = '';\n\t      var c = this.clone();\n\t      c.negative = 0;\n\t      while (!c.isZero()) {\n\t        var r = c.modn(groupBase).toString(base);\n\t        c = c.idivn(groupBase);\n\t\n\t        if (!c.isZero()) {\n\t          out = zeros[groupSize - r.length] + r + out;\n\t        } else {\n\t          out = r + out;\n\t        }\n\t      }\n\t      if (this.isZero()) {\n\t        out = '0' + out;\n\t      }\n\t      while (out.length % padding !== 0) {\n\t        out = '0' + out;\n\t      }\n\t      if (this.negative !== 0) {\n\t        out = '-' + out;\n\t      }\n\t      return out;\n\t    }\n\t\n\t    assert(false, 'Base should be between 2 and 36');\n\t  };\n\t\n\t  BN.prototype.toNumber = function toNumber() {\n\t    var ret = this.words[0];\n\t    if (this.length === 2) {\n\t      ret += this.words[1] * 0x4000000;\n\t    } else if (this.length === 3 && this.words[2] === 0x01) {\n\t      // NOTE: at this stage it is known that the top bit is set\n\t      ret += 0x10000000000000 + this.words[1] * 0x4000000;\n\t    } else if (this.length > 2) {\n\t      assert(false, 'Number can only safely store up to 53 bits');\n\t    }\n\t    return this.negative !== 0 ? -ret : ret;\n\t  };\n\t\n\t  BN.prototype.toJSON = function toJSON() {\n\t    return this.toString(16);\n\t  };\n\t\n\t  BN.prototype.toBuffer = function toBuffer(endian, length) {\n\t    assert(typeof Buffer !== 'undefined');\n\t    return this.toArrayLike(Buffer, endian, length);\n\t  };\n\t\n\t  BN.prototype.toArray = function toArray(endian, length) {\n\t    return this.toArrayLike(Array, endian, length);\n\t  };\n\t\n\t  BN.prototype.toArrayLike = function toArrayLike(ArrayType, endian, length) {\n\t    var byteLength = this.byteLength();\n\t    var reqLength = length || Math.max(1, byteLength);\n\t    assert(byteLength <= reqLength, 'byte array longer than desired length');\n\t    assert(reqLength > 0, 'Requested array length <= 0');\n\t\n\t    this.strip();\n\t    var littleEndian = endian === 'le';\n\t    var res = new ArrayType(reqLength);\n\t\n\t    var b, i;\n\t    var q = this.clone();\n\t    if (!littleEndian) {\n\t      // Assume big-endian\n\t      for (i = 0; i < reqLength - byteLength; i++) {\n\t        res[i] = 0;\n\t      }\n\t\n\t      for (i = 0; !q.isZero(); i++) {\n\t        b = q.andln(0xff);\n\t        q.iushrn(8);\n\t\n\t        res[reqLength - i - 1] = b;\n\t      }\n\t    } else {\n\t      for (i = 0; !q.isZero(); i++) {\n\t        b = q.andln(0xff);\n\t        q.iushrn(8);\n\t\n\t        res[i] = b;\n\t      }\n\t\n\t      for (; i < reqLength; i++) {\n\t        res[i] = 0;\n\t      }\n\t    }\n\t\n\t    return res;\n\t  };\n\t\n\t  if (Math.clz32) {\n\t    BN.prototype._countBits = function _countBits(w) {\n\t      return 32 - Math.clz32(w);\n\t    };\n\t  } else {\n\t    BN.prototype._countBits = function _countBits(w) {\n\t      var t = w;\n\t      var r = 0;\n\t      if (t >= 0x1000) {\n\t        r += 13;\n\t        t >>>= 13;\n\t      }\n\t      if (t >= 0x40) {\n\t        r += 7;\n\t        t >>>= 7;\n\t      }\n\t      if (t >= 0x8) {\n\t        r += 4;\n\t        t >>>= 4;\n\t      }\n\t      if (t >= 0x02) {\n\t        r += 2;\n\t        t >>>= 2;\n\t      }\n\t      return r + t;\n\t    };\n\t  }\n\t\n\t  BN.prototype._zeroBits = function _zeroBits(w) {\n\t    // Short-cut\n\t    if (w === 0) return 26;\n\t\n\t    var t = w;\n\t    var r = 0;\n\t    if ((t & 0x1fff) === 0) {\n\t      r += 13;\n\t      t >>>= 13;\n\t    }\n\t    if ((t & 0x7f) === 0) {\n\t      r += 7;\n\t      t >>>= 7;\n\t    }\n\t    if ((t & 0xf) === 0) {\n\t      r += 4;\n\t      t >>>= 4;\n\t    }\n\t    if ((t & 0x3) === 0) {\n\t      r += 2;\n\t      t >>>= 2;\n\t    }\n\t    if ((t & 0x1) === 0) {\n\t      r++;\n\t    }\n\t    return r;\n\t  };\n\t\n\t  // Return number of used bits in a BN\n\t  BN.prototype.bitLength = function bitLength() {\n\t    var w = this.words[this.length - 1];\n\t    var hi = this._countBits(w);\n\t    return (this.length - 1) * 26 + hi;\n\t  };\n\t\n\t  function toBitArray(num) {\n\t    var w = new Array(num.bitLength());\n\t\n\t    for (var bit = 0; bit < w.length; bit++) {\n\t      var off = bit / 26 | 0;\n\t      var wbit = bit % 26;\n\t\n\t      w[bit] = (num.words[off] & 1 << wbit) >>> wbit;\n\t    }\n\t\n\t    return w;\n\t  }\n\t\n\t  // Number of trailing zero bits\n\t  BN.prototype.zeroBits = function zeroBits() {\n\t    if (this.isZero()) return 0;\n\t\n\t    var r = 0;\n\t    for (var i = 0; i < this.length; i++) {\n\t      var b = this._zeroBits(this.words[i]);\n\t      r += b;\n\t      if (b !== 26) break;\n\t    }\n\t    return r;\n\t  };\n\t\n\t  BN.prototype.byteLength = function byteLength() {\n\t    return Math.ceil(this.bitLength() / 8);\n\t  };\n\t\n\t  BN.prototype.toTwos = function toTwos(width) {\n\t    if (this.negative !== 0) {\n\t      return this.abs().inotn(width).iaddn(1);\n\t    }\n\t    return this.clone();\n\t  };\n\t\n\t  BN.prototype.fromTwos = function fromTwos(width) {\n\t    if (this.testn(width - 1)) {\n\t      return this.notn(width).iaddn(1).ineg();\n\t    }\n\t    return this.clone();\n\t  };\n\t\n\t  BN.prototype.isNeg = function isNeg() {\n\t    return this.negative !== 0;\n\t  };\n\t\n\t  // Return negative clone of `this`\n\t  BN.prototype.neg = function neg() {\n\t    return this.clone().ineg();\n\t  };\n\t\n\t  BN.prototype.ineg = function ineg() {\n\t    if (!this.isZero()) {\n\t      this.negative ^= 1;\n\t    }\n\t\n\t    return this;\n\t  };\n\t\n\t  // Or `num` with `this` in-place\n\t  BN.prototype.iuor = function iuor(num) {\n\t    while (this.length < num.length) {\n\t      this.words[this.length++] = 0;\n\t    }\n\t\n\t    for (var i = 0; i < num.length; i++) {\n\t      this.words[i] = this.words[i] | num.words[i];\n\t    }\n\t\n\t    return this.strip();\n\t  };\n\t\n\t  BN.prototype.ior = function ior(num) {\n\t    assert((this.negative | num.negative) === 0);\n\t    return this.iuor(num);\n\t  };\n\t\n\t  // Or `num` with `this`\n\t  BN.prototype.or = function or(num) {\n\t    if (this.length > num.length) return this.clone().ior(num);\n\t    return num.clone().ior(this);\n\t  };\n\t\n\t  BN.prototype.uor = function uor(num) {\n\t    if (this.length > num.length) return this.clone().iuor(num);\n\t    return num.clone().iuor(this);\n\t  };\n\t\n\t  // And `num` with `this` in-place\n\t  BN.prototype.iuand = function iuand(num) {\n\t    // b = min-length(num, this)\n\t    var b;\n\t    if (this.length > num.length) {\n\t      b = num;\n\t    } else {\n\t      b = this;\n\t    }\n\t\n\t    for (var i = 0; i < b.length; i++) {\n\t      this.words[i] = this.words[i] & num.words[i];\n\t    }\n\t\n\t    this.length = b.length;\n\t\n\t    return this.strip();\n\t  };\n\t\n\t  BN.prototype.iand = function iand(num) {\n\t    assert((this.negative | num.negative) === 0);\n\t    return this.iuand(num);\n\t  };\n\t\n\t  // And `num` with `this`\n\t  BN.prototype.and = function and(num) {\n\t    if (this.length > num.length) return this.clone().iand(num);\n\t    return num.clone().iand(this);\n\t  };\n\t\n\t  BN.prototype.uand = function uand(num) {\n\t    if (this.length > num.length) return this.clone().iuand(num);\n\t    return num.clone().iuand(this);\n\t  };\n\t\n\t  // Xor `num` with `this` in-place\n\t  BN.prototype.iuxor = function iuxor(num) {\n\t    // a.length > b.length\n\t    var a;\n\t    var b;\n\t    if (this.length > num.length) {\n\t      a = this;\n\t      b = num;\n\t    } else {\n\t      a = num;\n\t      b = this;\n\t    }\n\t\n\t    for (var i = 0; i < b.length; i++) {\n\t      this.words[i] = a.words[i] ^ b.words[i];\n\t    }\n\t\n\t    if (this !== a) {\n\t      for (; i < a.length; i++) {\n\t        this.words[i] = a.words[i];\n\t      }\n\t    }\n\t\n\t    this.length = a.length;\n\t\n\t    return this.strip();\n\t  };\n\t\n\t  BN.prototype.ixor = function ixor(num) {\n\t    assert((this.negative | num.negative) === 0);\n\t    return this.iuxor(num);\n\t  };\n\t\n\t  // Xor `num` with `this`\n\t  BN.prototype.xor = function xor(num) {\n\t    if (this.length > num.length) return this.clone().ixor(num);\n\t    return num.clone().ixor(this);\n\t  };\n\t\n\t  BN.prototype.uxor = function uxor(num) {\n\t    if (this.length > num.length) return this.clone().iuxor(num);\n\t    return num.clone().iuxor(this);\n\t  };\n\t\n\t  // Not ``this`` with ``width`` bitwidth\n\t  BN.prototype.inotn = function inotn(width) {\n\t    assert(typeof width === 'number' && width >= 0);\n\t\n\t    var bytesNeeded = Math.ceil(width / 26) | 0;\n\t    var bitsLeft = width % 26;\n\t\n\t    // Extend the buffer with leading zeroes\n\t    this._expand(bytesNeeded);\n\t\n\t    if (bitsLeft > 0) {\n\t      bytesNeeded--;\n\t    }\n\t\n\t    // Handle complete words\n\t    for (var i = 0; i < bytesNeeded; i++) {\n\t      this.words[i] = ~this.words[i] & 0x3ffffff;\n\t    }\n\t\n\t    // Handle the residue\n\t    if (bitsLeft > 0) {\n\t      this.words[i] = ~this.words[i] & 0x3ffffff >> 26 - bitsLeft;\n\t    }\n\t\n\t    // And remove leading zeroes\n\t    return this.strip();\n\t  };\n\t\n\t  BN.prototype.notn = function notn(width) {\n\t    return this.clone().inotn(width);\n\t  };\n\t\n\t  // Set `bit` of `this`\n\t  BN.prototype.setn = function setn(bit, val) {\n\t    assert(typeof bit === 'number' && bit >= 0);\n\t\n\t    var off = bit / 26 | 0;\n\t    var wbit = bit % 26;\n\t\n\t    this._expand(off + 1);\n\t\n\t    if (val) {\n\t      this.words[off] = this.words[off] | 1 << wbit;\n\t    } else {\n\t      this.words[off] = this.words[off] & ~(1 << wbit);\n\t    }\n\t\n\t    return this.strip();\n\t  };\n\t\n\t  // Add `num` to `this` in-place\n\t  BN.prototype.iadd = function iadd(num) {\n\t    var r;\n\t\n\t    // negative + positive\n\t    if (this.negative !== 0 && num.negative === 0) {\n\t      this.negative = 0;\n\t      r = this.isub(num);\n\t      this.negative ^= 1;\n\t      return this._normSign();\n\t\n\t      // positive + negative\n\t    } else if (this.negative === 0 && num.negative !== 0) {\n\t      num.negative = 0;\n\t      r = this.isub(num);\n\t      num.negative = 1;\n\t      return r._normSign();\n\t    }\n\t\n\t    // a.length > b.length\n\t    var a, b;\n\t    if (this.length > num.length) {\n\t      a = this;\n\t      b = num;\n\t    } else {\n\t      a = num;\n\t      b = this;\n\t    }\n\t\n\t    var carry = 0;\n\t    for (var i = 0; i < b.length; i++) {\n\t      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n\t      this.words[i] = r & 0x3ffffff;\n\t      carry = r >>> 26;\n\t    }\n\t    for (; carry !== 0 && i < a.length; i++) {\n\t      r = (a.words[i] | 0) + carry;\n\t      this.words[i] = r & 0x3ffffff;\n\t      carry = r >>> 26;\n\t    }\n\t\n\t    this.length = a.length;\n\t    if (carry !== 0) {\n\t      this.words[this.length] = carry;\n\t      this.length++;\n\t      // Copy the rest of the words\n\t    } else if (a !== this) {\n\t      for (; i < a.length; i++) {\n\t        this.words[i] = a.words[i];\n\t      }\n\t    }\n\t\n\t    return this;\n\t  };\n\t\n\t  // Add `num` to `this`\n\t  BN.prototype.add = function add(num) {\n\t    var res;\n\t    if (num.negative !== 0 && this.negative === 0) {\n\t      num.negative = 0;\n\t      res = this.sub(num);\n\t      num.negative ^= 1;\n\t      return res;\n\t    } else if (num.negative === 0 && this.negative !== 0) {\n\t      this.negative = 0;\n\t      res = num.sub(this);\n\t      this.negative = 1;\n\t      return res;\n\t    }\n\t\n\t    if (this.length > num.length) return this.clone().iadd(num);\n\t\n\t    return num.clone().iadd(this);\n\t  };\n\t\n\t  // Subtract `num` from `this` in-place\n\t  BN.prototype.isub = function isub(num) {\n\t    // this - (-num) = this + num\n\t    if (num.negative !== 0) {\n\t      num.negative = 0;\n\t      var r = this.iadd(num);\n\t      num.negative = 1;\n\t      return r._normSign();\n\t\n\t      // -this - num = -(this + num)\n\t    } else if (this.negative !== 0) {\n\t      this.negative = 0;\n\t      this.iadd(num);\n\t      this.negative = 1;\n\t      return this._normSign();\n\t    }\n\t\n\t    // At this point both numbers are positive\n\t    var cmp = this.cmp(num);\n\t\n\t    // Optimization - zeroify\n\t    if (cmp === 0) {\n\t      this.negative = 0;\n\t      this.length = 1;\n\t      this.words[0] = 0;\n\t      return this;\n\t    }\n\t\n\t    // a > b\n\t    var a, b;\n\t    if (cmp > 0) {\n\t      a = this;\n\t      b = num;\n\t    } else {\n\t      a = num;\n\t      b = this;\n\t    }\n\t\n\t    var carry = 0;\n\t    for (var i = 0; i < b.length; i++) {\n\t      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n\t      carry = r >> 26;\n\t      this.words[i] = r & 0x3ffffff;\n\t    }\n\t    for (; carry !== 0 && i < a.length; i++) {\n\t      r = (a.words[i] | 0) + carry;\n\t      carry = r >> 26;\n\t      this.words[i] = r & 0x3ffffff;\n\t    }\n\t\n\t    // Copy rest of the words\n\t    if (carry === 0 && i < a.length && a !== this) {\n\t      for (; i < a.length; i++) {\n\t        this.words[i] = a.words[i];\n\t      }\n\t    }\n\t\n\t    this.length = Math.max(this.length, i);\n\t\n\t    if (a !== this) {\n\t      this.negative = 1;\n\t    }\n\t\n\t    return this.strip();\n\t  };\n\t\n\t  // Subtract `num` from `this`\n\t  BN.prototype.sub = function sub(num) {\n\t    return this.clone().isub(num);\n\t  };\n\t\n\t  function smallMulTo(self, num, out) {\n\t    out.negative = num.negative ^ self.negative;\n\t    var len = self.length + num.length | 0;\n\t    out.length = len;\n\t    len = len - 1 | 0;\n\t\n\t    // Peel one iteration (compiler can't do it, because of code complexity)\n\t    var a = self.words[0] | 0;\n\t    var b = num.words[0] | 0;\n\t    var r = a * b;\n\t\n\t    var lo = r & 0x3ffffff;\n\t    var carry = r / 0x4000000 | 0;\n\t    out.words[0] = lo;\n\t\n\t    for (var k = 1; k < len; k++) {\n\t      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n\t      // note that ncarry could be >= 0x3ffffff\n\t      var ncarry = carry >>> 26;\n\t      var rword = carry & 0x3ffffff;\n\t      var maxJ = Math.min(k, num.length - 1);\n\t      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n\t        var i = k - j | 0;\n\t        a = self.words[i] | 0;\n\t        b = num.words[j] | 0;\n\t        r = a * b + rword;\n\t        ncarry += r / 0x4000000 | 0;\n\t        rword = r & 0x3ffffff;\n\t      }\n\t      out.words[k] = rword | 0;\n\t      carry = ncarry | 0;\n\t    }\n\t    if (carry !== 0) {\n\t      out.words[k] = carry | 0;\n\t    } else {\n\t      out.length--;\n\t    }\n\t\n\t    return out.strip();\n\t  }\n\t\n\t  // TODO(indutny): it may be reasonable to omit it for users who don't need\n\t  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n\t  // multiplication (like elliptic secp256k1).\n\t  var comb10MulTo = function comb10MulTo(self, num, out) {\n\t    var a = self.words;\n\t    var b = num.words;\n\t    var o = out.words;\n\t    var c = 0;\n\t    var lo;\n\t    var mid;\n\t    var hi;\n\t    var a0 = a[0] | 0;\n\t    var al0 = a0 & 0x1fff;\n\t    var ah0 = a0 >>> 13;\n\t    var a1 = a[1] | 0;\n\t    var al1 = a1 & 0x1fff;\n\t    var ah1 = a1 >>> 13;\n\t    var a2 = a[2] | 0;\n\t    var al2 = a2 & 0x1fff;\n\t    var ah2 = a2 >>> 13;\n\t    var a3 = a[3] | 0;\n\t    var al3 = a3 & 0x1fff;\n\t    var ah3 = a3 >>> 13;\n\t    var a4 = a[4] | 0;\n\t    var al4 = a4 & 0x1fff;\n\t    var ah4 = a4 >>> 13;\n\t    var a5 = a[5] | 0;\n\t    var al5 = a5 & 0x1fff;\n\t    var ah5 = a5 >>> 13;\n\t    var a6 = a[6] | 0;\n\t    var al6 = a6 & 0x1fff;\n\t    var ah6 = a6 >>> 13;\n\t    var a7 = a[7] | 0;\n\t    var al7 = a7 & 0x1fff;\n\t    var ah7 = a7 >>> 13;\n\t    var a8 = a[8] | 0;\n\t    var al8 = a8 & 0x1fff;\n\t    var ah8 = a8 >>> 13;\n\t    var a9 = a[9] | 0;\n\t    var al9 = a9 & 0x1fff;\n\t    var ah9 = a9 >>> 13;\n\t    var b0 = b[0] | 0;\n\t    var bl0 = b0 & 0x1fff;\n\t    var bh0 = b0 >>> 13;\n\t    var b1 = b[1] | 0;\n\t    var bl1 = b1 & 0x1fff;\n\t    var bh1 = b1 >>> 13;\n\t    var b2 = b[2] | 0;\n\t    var bl2 = b2 & 0x1fff;\n\t    var bh2 = b2 >>> 13;\n\t    var b3 = b[3] | 0;\n\t    var bl3 = b3 & 0x1fff;\n\t    var bh3 = b3 >>> 13;\n\t    var b4 = b[4] | 0;\n\t    var bl4 = b4 & 0x1fff;\n\t    var bh4 = b4 >>> 13;\n\t    var b5 = b[5] | 0;\n\t    var bl5 = b5 & 0x1fff;\n\t    var bh5 = b5 >>> 13;\n\t    var b6 = b[6] | 0;\n\t    var bl6 = b6 & 0x1fff;\n\t    var bh6 = b6 >>> 13;\n\t    var b7 = b[7] | 0;\n\t    var bl7 = b7 & 0x1fff;\n\t    var bh7 = b7 >>> 13;\n\t    var b8 = b[8] | 0;\n\t    var bl8 = b8 & 0x1fff;\n\t    var bh8 = b8 >>> 13;\n\t    var b9 = b[9] | 0;\n\t    var bl9 = b9 & 0x1fff;\n\t    var bh9 = b9 >>> 13;\n\t\n\t    out.negative = self.negative ^ num.negative;\n\t    out.length = 19;\n\t    /* k = 0 */\n\t    lo = Math.imul(al0, bl0);\n\t    mid = Math.imul(al0, bh0);\n\t    mid = mid + Math.imul(ah0, bl0) | 0;\n\t    hi = Math.imul(ah0, bh0);\n\t    var w0 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n\t    c = (hi + (mid >>> 13) | 0) + (w0 >>> 26) | 0;\n\t    w0 &= 0x3ffffff;\n\t    /* k = 1 */\n\t    lo = Math.imul(al1, bl0);\n\t    mid = Math.imul(al1, bh0);\n\t    mid = mid + Math.imul(ah1, bl0) | 0;\n\t    hi = Math.imul(ah1, bh0);\n\t    lo = lo + Math.imul(al0, bl1) | 0;\n\t    mid = mid + Math.imul(al0, bh1) | 0;\n\t    mid = mid + Math.imul(ah0, bl1) | 0;\n\t    hi = hi + Math.imul(ah0, bh1) | 0;\n\t    var w1 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n\t    c = (hi + (mid >>> 13) | 0) + (w1 >>> 26) | 0;\n\t    w1 &= 0x3ffffff;\n\t    /* k = 2 */\n\t    lo = Math.imul(al2, bl0);\n\t    mid = Math.imul(al2, bh0);\n\t    mid = mid + Math.imul(ah2, bl0) | 0;\n\t    hi = Math.imul(ah2, bh0);\n\t    lo = lo + Math.imul(al1, bl1) | 0;\n\t    mid = mid + Math.imul(al1, bh1) | 0;\n\t    mid = mid + Math.imul(ah1, bl1) | 0;\n\t    hi = hi + Math.imul(ah1, bh1) | 0;\n\t    lo = lo + Math.imul(al0, bl2) | 0;\n\t    mid = mid + Math.imul(al0, bh2) | 0;\n\t    mid = mid + Math.imul(ah0, bl2) | 0;\n\t    hi = hi + Math.imul(ah0, bh2) | 0;\n\t    var w2 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n\t    c = (hi + (mid >>> 13) | 0) + (w2 >>> 26) | 0;\n\t    w2 &= 0x3ffffff;\n\t    /* k = 3 */\n\t    lo = Math.imul(al3, bl0);\n\t    mid = Math.imul(al3, bh0);\n\t    mid = mid + Math.imul(ah3, bl0) | 0;\n\t    hi = Math.imul(ah3, bh0);\n\t    lo = lo + Math.imul(al2, bl1) | 0;\n\t    mid = mid + Math.imul(al2, bh1) | 0;\n\t    mid = mid + Math.imul(ah2, bl1) | 0;\n\t    hi = hi + Math.imul(ah2, bh1) | 0;\n\t    lo = lo + Math.imul(al1, bl2) | 0;\n\t    mid = mid + Math.imul(al1, bh2) | 0;\n\t    mid = mid + Math.imul(ah1, bl2) | 0;\n\t    hi = hi + Math.imul(ah1, bh2) | 0;\n\t    lo = lo + Math.imul(al0, bl3) | 0;\n\t    mid = mid + Math.imul(al0, bh3) | 0;\n\t    mid = mid + Math.imul(ah0, bl3) | 0;\n\t    hi = hi + Math.imul(ah0, bh3) | 0;\n\t    var w3 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n\t    c = (hi + (mid >>> 13) | 0) + (w3 >>> 26) | 0;\n\t    w3 &= 0x3ffffff;\n\t    /* k = 4 */\n\t    lo = Math.imul(al4, bl0);\n\t    mid = Math.imul(al4, bh0);\n\t    mid = mid + Math.imul(ah4, bl0) | 0;\n\t    hi = Math.imul(ah4, bh0);\n\t    lo = lo + Math.imul(al3, bl1) | 0;\n\t    mid = mid + Math.imul(al3, bh1) | 0;\n\t    mid = mid + Math.imul(ah3, bl1) | 0;\n\t    hi = hi + Math.imul(ah3, bh1) | 0;\n\t    lo = lo + Math.imul(al2, bl2) | 0;\n\t    mid = mid + Math.imul(al2, bh2) | 0;\n\t    mid = mid + Math.imul(ah2, bl2) | 0;\n\t    hi = hi + Math.imul(ah2, bh2) | 0;\n\t    lo = lo + Math.imul(al1, bl3) | 0;\n\t    mid = mid + Math.imul(al1, bh3) | 0;\n\t    mid = mid + Math.imul(ah1, bl3) | 0;\n\t    hi = hi + Math.imul(ah1, bh3) | 0;\n\t    lo = lo + Math.imul(al0, bl4) | 0;\n\t    mid = mid + Math.imul(al0, bh4) | 0;\n\t    mid = mid + Math.imul(ah0, bl4) | 0;\n\t    hi = hi + Math.imul(ah0, bh4) | 0;\n\t    var w4 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n\t    c = (hi + (mid >>> 13) | 0) + (w4 >>> 26) | 0;\n\t    w4 &= 0x3ffffff;\n\t    /* k = 5 */\n\t    lo = Math.imul(al5, bl0);\n\t    mid = Math.imul(al5, bh0);\n\t    mid = mid + Math.imul(ah5, bl0) | 0;\n\t    hi = Math.imul(ah5, bh0);\n\t    lo = lo + Math.imul(al4, bl1) | 0;\n\t    mid = mid + Math.imul(al4, bh1) | 0;\n\t    mid = mid + Math.imul(ah4, bl1) | 0;\n\t    hi = hi + Math.imul(ah4, bh1) | 0;\n\t    lo = lo + Math.imul(al3, bl2) | 0;\n\t    mid = mid + Math.imul(al3, bh2) | 0;\n\t    mid = mid + Math.imul(ah3, bl2) | 0;\n\t    hi = hi + Math.imul(ah3, bh2) | 0;\n\t    lo = lo + Math.imul(al2, bl3) | 0;\n\t    mid = mid + Math.imul(al2, bh3) | 0;\n\t    mid = mid + Math.imul(ah2, bl3) | 0;\n\t    hi = hi + Math.imul(ah2, bh3) | 0;\n\t    lo = lo + Math.imul(al1, bl4) | 0;\n\t    mid = mid + Math.imul(al1, bh4) | 0;\n\t    mid = mid + Math.imul(ah1, bl4) | 0;\n\t    hi = hi + Math.imul(ah1, bh4) | 0;\n\t    lo = lo + Math.imul(al0, bl5) | 0;\n\t    mid = mid + Math.imul(al0, bh5) | 0;\n\t    mid = mid + Math.imul(ah0, bl5) | 0;\n\t    hi = hi + Math.imul(ah0, bh5) | 0;\n\t    var w5 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n\t    c = (hi + (mid >>> 13) | 0) + (w5 >>> 26) | 0;\n\t    w5 &= 0x3ffffff;\n\t    /* k = 6 */\n\t    lo = Math.imul(al6, bl0);\n\t    mid = Math.imul(al6, bh0);\n\t    mid = mid + Math.imul(ah6, bl0) | 0;\n\t    hi = Math.imul(ah6, bh0);\n\t    lo = lo + Math.imul(al5, bl1) | 0;\n\t    mid = mid + Math.imul(al5, bh1) | 0;\n\t    mid = mid + Math.imul(ah5, bl1) | 0;\n\t    hi = hi + Math.imul(ah5, bh1) | 0;\n\t    lo = lo + Math.imul(al4, bl2) | 0;\n\t    mid = mid + Math.imul(al4, bh2) | 0;\n\t    mid = mid + Math.imul(ah4, bl2) | 0;\n\t    hi = hi + Math.imul(ah4, bh2) | 0;\n\t    lo = lo + Math.imul(al3, bl3) | 0;\n\t    mid = mid + Math.imul(al3, bh3) | 0;\n\t    mid = mid + Math.imul(ah3, bl3) | 0;\n\t    hi = hi + Math.imul(ah3, bh3) | 0;\n\t    lo = lo + Math.imul(al2, bl4) | 0;\n\t    mid = mid + Math.imul(al2, bh4) | 0;\n\t    mid = mid + Math.imul(ah2, bl4) | 0;\n\t    hi = hi + Math.imul(ah2, bh4) | 0;\n\t    lo = lo + Math.imul(al1, bl5) | 0;\n\t    mid = mid + Math.imul(al1, bh5) | 0;\n\t    mid = mid + Math.imul(ah1, bl5) | 0;\n\t    hi = hi + Math.imul(ah1, bh5) | 0;\n\t    lo = lo + Math.imul(al0, bl6) | 0;\n\t    mid = mid + Math.imul(al0, bh6) | 0;\n\t    mid = mid + Math.imul(ah0, bl6) | 0;\n\t    hi = hi + Math.imul(ah0, bh6) | 0;\n\t    var w6 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n\t    c = (hi + (mid >>> 13) | 0) + (w6 >>> 26) | 0;\n\t    w6 &= 0x3ffffff;\n\t    /* k = 7 */\n\t    lo = Math.imul(al7, bl0);\n\t    mid = Math.imul(al7, bh0);\n\t    mid = mid + Math.imul(ah7, bl0) | 0;\n\t    hi = Math.imul(ah7, bh0);\n\t    lo = lo + Math.imul(al6, bl1) | 0;\n\t    mid = mid + Math.imul(al6, bh1) | 0;\n\t    mid = mid + Math.imul(ah6, bl1) | 0;\n\t    hi = hi + Math.imul(ah6, bh1) | 0;\n\t    lo = lo + Math.imul(al5, bl2) | 0;\n\t    mid = mid + Math.imul(al5, bh2) | 0;\n\t    mid = mid + Math.imul(ah5, bl2) | 0;\n\t    hi = hi + Math.imul(ah5, bh2) | 0;\n\t    lo = lo + Math.imul(al4, bl3) | 0;\n\t    mid = mid + Math.imul(al4, bh3) | 0;\n\t    mid = mid + Math.imul(ah4, bl3) | 0;\n\t    hi = hi + Math.imul(ah4, bh3) | 0;\n\t    lo = lo + Math.imul(al3, bl4) | 0;\n\t    mid = mid + Math.imul(al3, bh4) | 0;\n\t    mid = mid + Math.imul(ah3, bl4) | 0;\n\t    hi = hi + Math.imul(ah3, bh4) | 0;\n\t    lo = lo + Math.imul(al2, bl5) | 0;\n\t    mid = mid + Math.imul(al2, bh5) | 0;\n\t    mid = mid + Math.imul(ah2, bl5) | 0;\n\t    hi = hi + Math.imul(ah2, bh5) | 0;\n\t    lo = lo + Math.imul(al1, bl6) | 0;\n\t    mid = mid + Math.imul(al1, bh6) | 0;\n\t    mid = mid + Math.imul(ah1, bl6) | 0;\n\t    hi = hi + Math.imul(ah1, bh6) | 0;\n\t    lo = lo + Math.imul(al0, bl7) | 0;\n\t    mid = mid + Math.imul(al0, bh7) | 0;\n\t    mid = mid + Math.imul(ah0, bl7) | 0;\n\t    hi = hi + Math.imul(ah0, bh7) | 0;\n\t    var w7 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n\t    c = (hi + (mid >>> 13) | 0) + (w7 >>> 26) | 0;\n\t    w7 &= 0x3ffffff;\n\t    /* k = 8 */\n\t    lo = Math.imul(al8, bl0);\n\t    mid = Math.imul(al8, bh0);\n\t    mid = mid + Math.imul(ah8, bl0) | 0;\n\t    hi = Math.imul(ah8, bh0);\n\t    lo = lo + Math.imul(al7, bl1) | 0;\n\t    mid = mid + Math.imul(al7, bh1) | 0;\n\t    mid = mid + Math.imul(ah7, bl1) | 0;\n\t    hi = hi + Math.imul(ah7, bh1) | 0;\n\t    lo = lo + Math.imul(al6, bl2) | 0;\n\t    mid = mid + Math.imul(al6, bh2) | 0;\n\t    mid = mid + Math.imul(ah6, bl2) | 0;\n\t    hi = hi + Math.imul(ah6, bh2) | 0;\n\t    lo = lo + Math.imul(al5, bl3) | 0;\n\t    mid = mid + Math.imul(al5, bh3) | 0;\n\t    mid = mid + Math.imul(ah5, bl3) | 0;\n\t    hi = hi + Math.imul(ah5, bh3) | 0;\n\t    lo = lo + Math.imul(al4, bl4) | 0;\n\t    mid = mid + Math.imul(al4, bh4) | 0;\n\t    mid = mid + Math.imul(ah4, bl4) | 0;\n\t    hi = hi + Math.imul(ah4, bh4) | 0;\n\t    lo = lo + Math.imul(al3, bl5) | 0;\n\t    mid = mid + Math.imul(al3, bh5) | 0;\n\t    mid = mid + Math.imul(ah3, bl5) | 0;\n\t    hi = hi + Math.imul(ah3, bh5) | 0;\n\t    lo = lo + Math.imul(al2, bl6) | 0;\n\t    mid = mid + Math.imul(al2, bh6) | 0;\n\t    mid = mid + Math.imul(ah2, bl6) | 0;\n\t    hi = hi + Math.imul(ah2, bh6) | 0;\n\t    lo = lo + Math.imul(al1, bl7) | 0;\n\t    mid = mid + Math.imul(al1, bh7) | 0;\n\t    mid = mid + Math.imul(ah1, bl7) | 0;\n\t    hi = hi + Math.imul(ah1, bh7) | 0;\n\t    lo = lo + Math.imul(al0, bl8) | 0;\n\t    mid = mid + Math.imul(al0, bh8) | 0;\n\t    mid = mid + Math.imul(ah0, bl8) | 0;\n\t    hi = hi + Math.imul(ah0, bh8) | 0;\n\t    var w8 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n\t    c = (hi + (mid >>> 13) | 0) + (w8 >>> 26) | 0;\n\t    w8 &= 0x3ffffff;\n\t    /* k = 9 */\n\t    lo = Math.imul(al9, bl0);\n\t    mid = Math.imul(al9, bh0);\n\t    mid = mid + Math.imul(ah9, bl0) | 0;\n\t    hi = Math.imul(ah9, bh0);\n\t    lo = lo + Math.imul(al8, bl1) | 0;\n\t    mid = mid + Math.imul(al8, bh1) | 0;\n\t    mid = mid + Math.imul(ah8, bl1) | 0;\n\t    hi = hi + Math.imul(ah8, bh1) | 0;\n\t    lo = lo + Math.imul(al7, bl2) | 0;\n\t    mid = mid + Math.imul(al7, bh2) | 0;\n\t    mid = mid + Math.imul(ah7, bl2) | 0;\n\t    hi = hi + Math.imul(ah7, bh2) | 0;\n\t    lo = lo + Math.imul(al6, bl3) | 0;\n\t    mid = mid + Math.imul(al6, bh3) | 0;\n\t    mid = mid + Math.imul(ah6, bl3) | 0;\n\t    hi = hi + Math.imul(ah6, bh3) | 0;\n\t    lo = lo + Math.imul(al5, bl4) | 0;\n\t    mid = mid + Math.imul(al5, bh4) | 0;\n\t    mid = mid + Math.imul(ah5, bl4) | 0;\n\t    hi = hi + Math.imul(ah5, bh4) | 0;\n\t    lo = lo + Math.imul(al4, bl5) | 0;\n\t    mid = mid + Math.imul(al4, bh5) | 0;\n\t    mid = mid + Math.imul(ah4, bl5) | 0;\n\t    hi = hi + Math.imul(ah4, bh5) | 0;\n\t    lo = lo + Math.imul(al3, bl6) | 0;\n\t    mid = mid + Math.imul(al3, bh6) | 0;\n\t    mid = mid + Math.imul(ah3, bl6) | 0;\n\t    hi = hi + Math.imul(ah3, bh6) | 0;\n\t    lo = lo + Math.imul(al2, bl7) | 0;\n\t    mid = mid + Math.imul(al2, bh7) | 0;\n\t    mid = mid + Math.imul(ah2, bl7) | 0;\n\t    hi = hi + Math.imul(ah2, bh7) | 0;\n\t    lo = lo + Math.imul(al1, bl8) | 0;\n\t    mid = mid + Math.imul(al1, bh8) | 0;\n\t    mid = mid + Math.imul(ah1, bl8) | 0;\n\t    hi = hi + Math.imul(ah1, bh8) | 0;\n\t    lo = lo + Math.imul(al0, bl9) | 0;\n\t    mid = mid + Math.imul(al0, bh9) | 0;\n\t    mid = mid + Math.imul(ah0, bl9) | 0;\n\t    hi = hi + Math.imul(ah0, bh9) | 0;\n\t    var w9 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n\t    c = (hi + (mid >>> 13) | 0) + (w9 >>> 26) | 0;\n\t    w9 &= 0x3ffffff;\n\t    /* k = 10 */\n\t    lo = Math.imul(al9, bl1);\n\t    mid = Math.imul(al9, bh1);\n\t    mid = mid + Math.imul(ah9, bl1) | 0;\n\t    hi = Math.imul(ah9, bh1);\n\t    lo = lo + Math.imul(al8, bl2) | 0;\n\t    mid = mid + Math.imul(al8, bh2) | 0;\n\t    mid = mid + Math.imul(ah8, bl2) | 0;\n\t    hi = hi + Math.imul(ah8, bh2) | 0;\n\t    lo = lo + Math.imul(al7, bl3) | 0;\n\t    mid = mid + Math.imul(al7, bh3) | 0;\n\t    mid = mid + Math.imul(ah7, bl3) | 0;\n\t    hi = hi + Math.imul(ah7, bh3) | 0;\n\t    lo = lo + Math.imul(al6, bl4) | 0;\n\t    mid = mid + Math.imul(al6, bh4) | 0;\n\t    mid = mid + Math.imul(ah6, bl4) | 0;\n\t    hi = hi + Math.imul(ah6, bh4) | 0;\n\t    lo = lo + Math.imul(al5, bl5) | 0;\n\t    mid = mid + Math.imul(al5, bh5) | 0;\n\t    mid = mid + Math.imul(ah5, bl5) | 0;\n\t    hi = hi + Math.imul(ah5, bh5) | 0;\n\t    lo = lo + Math.imul(al4, bl6) | 0;\n\t    mid = mid + Math.imul(al4, bh6) | 0;\n\t    mid = mid + Math.imul(ah4, bl6) | 0;\n\t    hi = hi + Math.imul(ah4, bh6) | 0;\n\t    lo = lo + Math.imul(al3, bl7) | 0;\n\t    mid = mid + Math.imul(al3, bh7) | 0;\n\t    mid = mid + Math.imul(ah3, bl7) | 0;\n\t    hi = hi + Math.imul(ah3, bh7) | 0;\n\t    lo = lo + Math.imul(al2, bl8) | 0;\n\t    mid = mid + Math.imul(al2, bh8) | 0;\n\t    mid = mid + Math.imul(ah2, bl8) | 0;\n\t    hi = hi + Math.imul(ah2, bh8) | 0;\n\t    lo = lo + Math.imul(al1, bl9) | 0;\n\t    mid = mid + Math.imul(al1, bh9) | 0;\n\t    mid = mid + Math.imul(ah1, bl9) | 0;\n\t    hi = hi + Math.imul(ah1, bh9) | 0;\n\t    var w10 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n\t    c = (hi + (mid >>> 13) | 0) + (w10 >>> 26) | 0;\n\t    w10 &= 0x3ffffff;\n\t    /* k = 11 */\n\t    lo = Math.imul(al9, bl2);\n\t    mid = Math.imul(al9, bh2);\n\t    mid = mid + Math.imul(ah9, bl2) | 0;\n\t    hi = Math.imul(ah9, bh2);\n\t    lo = lo + Math.imul(al8, bl3) | 0;\n\t    mid = mid + Math.imul(al8, bh3) | 0;\n\t    mid = mid + Math.imul(ah8, bl3) | 0;\n\t    hi = hi + Math.imul(ah8, bh3) | 0;\n\t    lo = lo + Math.imul(al7, bl4) | 0;\n\t    mid = mid + Math.imul(al7, bh4) | 0;\n\t    mid = mid + Math.imul(ah7, bl4) | 0;\n\t    hi = hi + Math.imul(ah7, bh4) | 0;\n\t    lo = lo + Math.imul(al6, bl5) | 0;\n\t    mid = mid + Math.imul(al6, bh5) | 0;\n\t    mid = mid + Math.imul(ah6, bl5) | 0;\n\t    hi = hi + Math.imul(ah6, bh5) | 0;\n\t    lo = lo + Math.imul(al5, bl6) | 0;\n\t    mid = mid + Math.imul(al5, bh6) | 0;\n\t    mid = mid + Math.imul(ah5, bl6) | 0;\n\t    hi = hi + Math.imul(ah5, bh6) | 0;\n\t    lo = lo + Math.imul(al4, bl7) | 0;\n\t    mid = mid + Math.imul(al4, bh7) | 0;\n\t    mid = mid + Math.imul(ah4, bl7) | 0;\n\t    hi = hi + Math.imul(ah4, bh7) | 0;\n\t    lo = lo + Math.imul(al3, bl8) | 0;\n\t    mid = mid + Math.imul(al3, bh8) | 0;\n\t    mid = mid + Math.imul(ah3, bl8) | 0;\n\t    hi = hi + Math.imul(ah3, bh8) | 0;\n\t    lo = lo + Math.imul(al2, bl9) | 0;\n\t    mid = mid + Math.imul(al2, bh9) | 0;\n\t    mid = mid + Math.imul(ah2, bl9) | 0;\n\t    hi = hi + Math.imul(ah2, bh9) | 0;\n\t    var w11 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n\t    c = (hi + (mid >>> 13) | 0) + (w11 >>> 26) | 0;\n\t    w11 &= 0x3ffffff;\n\t    /* k = 12 */\n\t    lo = Math.imul(al9, bl3);\n\t    mid = Math.imul(al9, bh3);\n\t    mid = mid + Math.imul(ah9, bl3) | 0;\n\t    hi = Math.imul(ah9, bh3);\n\t    lo = lo + Math.imul(al8, bl4) | 0;\n\t    mid = mid + Math.imul(al8, bh4) | 0;\n\t    mid = mid + Math.imul(ah8, bl4) | 0;\n\t    hi = hi + Math.imul(ah8, bh4) | 0;\n\t    lo = lo + Math.imul(al7, bl5) | 0;\n\t    mid = mid + Math.imul(al7, bh5) | 0;\n\t    mid = mid + Math.imul(ah7, bl5) | 0;\n\t    hi = hi + Math.imul(ah7, bh5) | 0;\n\t    lo = lo + Math.imul(al6, bl6) | 0;\n\t    mid = mid + Math.imul(al6, bh6) | 0;\n\t    mid = mid + Math.imul(ah6, bl6) | 0;\n\t    hi = hi + Math.imul(ah6, bh6) | 0;\n\t    lo = lo + Math.imul(al5, bl7) | 0;\n\t    mid = mid + Math.imul(al5, bh7) | 0;\n\t    mid = mid + Math.imul(ah5, bl7) | 0;\n\t    hi = hi + Math.imul(ah5, bh7) | 0;\n\t    lo = lo + Math.imul(al4, bl8) | 0;\n\t    mid = mid + Math.imul(al4, bh8) | 0;\n\t    mid = mid + Math.imul(ah4, bl8) | 0;\n\t    hi = hi + Math.imul(ah4, bh8) | 0;\n\t    lo = lo + Math.imul(al3, bl9) | 0;\n\t    mid = mid + Math.imul(al3, bh9) | 0;\n\t    mid = mid + Math.imul(ah3, bl9) | 0;\n\t    hi = hi + Math.imul(ah3, bh9) | 0;\n\t    var w12 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n\t    c = (hi + (mid >>> 13) | 0) + (w12 >>> 26) | 0;\n\t    w12 &= 0x3ffffff;\n\t    /* k = 13 */\n\t    lo = Math.imul(al9, bl4);\n\t    mid = Math.imul(al9, bh4);\n\t    mid = mid + Math.imul(ah9, bl4) | 0;\n\t    hi = Math.imul(ah9, bh4);\n\t    lo = lo + Math.imul(al8, bl5) | 0;\n\t    mid = mid + Math.imul(al8, bh5) | 0;\n\t    mid = mid + Math.imul(ah8, bl5) | 0;\n\t    hi = hi + Math.imul(ah8, bh5) | 0;\n\t    lo = lo + Math.imul(al7, bl6) | 0;\n\t    mid = mid + Math.imul(al7, bh6) | 0;\n\t    mid = mid + Math.imul(ah7, bl6) | 0;\n\t    hi = hi + Math.imul(ah7, bh6) | 0;\n\t    lo = lo + Math.imul(al6, bl7) | 0;\n\t    mid = mid + Math.imul(al6, bh7) | 0;\n\t    mid = mid + Math.imul(ah6, bl7) | 0;\n\t    hi = hi + Math.imul(ah6, bh7) | 0;\n\t    lo = lo + Math.imul(al5, bl8) | 0;\n\t    mid = mid + Math.imul(al5, bh8) | 0;\n\t    mid = mid + Math.imul(ah5, bl8) | 0;\n\t    hi = hi + Math.imul(ah5, bh8) | 0;\n\t    lo = lo + Math.imul(al4, bl9) | 0;\n\t    mid = mid + Math.imul(al4, bh9) | 0;\n\t    mid = mid + Math.imul(ah4, bl9) | 0;\n\t    hi = hi + Math.imul(ah4, bh9) | 0;\n\t    var w13 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n\t    c = (hi + (mid >>> 13) | 0) + (w13 >>> 26) | 0;\n\t    w13 &= 0x3ffffff;\n\t    /* k = 14 */\n\t    lo = Math.imul(al9, bl5);\n\t    mid = Math.imul(al9, bh5);\n\t    mid = mid + Math.imul(ah9, bl5) | 0;\n\t    hi = Math.imul(ah9, bh5);\n\t    lo = lo + Math.imul(al8, bl6) | 0;\n\t    mid = mid + Math.imul(al8, bh6) | 0;\n\t    mid = mid + Math.imul(ah8, bl6) | 0;\n\t    hi = hi + Math.imul(ah8, bh6) | 0;\n\t    lo = lo + Math.imul(al7, bl7) | 0;\n\t    mid = mid + Math.imul(al7, bh7) | 0;\n\t    mid = mid + Math.imul(ah7, bl7) | 0;\n\t    hi = hi + Math.imul(ah7, bh7) | 0;\n\t    lo = lo + Math.imul(al6, bl8) | 0;\n\t    mid = mid + Math.imul(al6, bh8) | 0;\n\t    mid = mid + Math.imul(ah6, bl8) | 0;\n\t    hi = hi + Math.imul(ah6, bh8) | 0;\n\t    lo = lo + Math.imul(al5, bl9) | 0;\n\t    mid = mid + Math.imul(al5, bh9) | 0;\n\t    mid = mid + Math.imul(ah5, bl9) | 0;\n\t    hi = hi + Math.imul(ah5, bh9) | 0;\n\t    var w14 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n\t    c = (hi + (mid >>> 13) | 0) + (w14 >>> 26) | 0;\n\t    w14 &= 0x3ffffff;\n\t    /* k = 15 */\n\t    lo = Math.imul(al9, bl6);\n\t    mid = Math.imul(al9, bh6);\n\t    mid = mid + Math.imul(ah9, bl6) | 0;\n\t    hi = Math.imul(ah9, bh6);\n\t    lo = lo + Math.imul(al8, bl7) | 0;\n\t    mid = mid + Math.imul(al8, bh7) | 0;\n\t    mid = mid + Math.imul(ah8, bl7) | 0;\n\t    hi = hi + Math.imul(ah8, bh7) | 0;\n\t    lo = lo + Math.imul(al7, bl8) | 0;\n\t    mid = mid + Math.imul(al7, bh8) | 0;\n\t    mid = mid + Math.imul(ah7, bl8) | 0;\n\t    hi = hi + Math.imul(ah7, bh8) | 0;\n\t    lo = lo + Math.imul(al6, bl9) | 0;\n\t    mid = mid + Math.imul(al6, bh9) | 0;\n\t    mid = mid + Math.imul(ah6, bl9) | 0;\n\t    hi = hi + Math.imul(ah6, bh9) | 0;\n\t    var w15 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n\t    c = (hi + (mid >>> 13) | 0) + (w15 >>> 26) | 0;\n\t    w15 &= 0x3ffffff;\n\t    /* k = 16 */\n\t    lo = Math.imul(al9, bl7);\n\t    mid = Math.imul(al9, bh7);\n\t    mid = mid + Math.imul(ah9, bl7) | 0;\n\t    hi = Math.imul(ah9, bh7);\n\t    lo = lo + Math.imul(al8, bl8) | 0;\n\t    mid = mid + Math.imul(al8, bh8) | 0;\n\t    mid = mid + Math.imul(ah8, bl8) | 0;\n\t    hi = hi + Math.imul(ah8, bh8) | 0;\n\t    lo = lo + Math.imul(al7, bl9) | 0;\n\t    mid = mid + Math.imul(al7, bh9) | 0;\n\t    mid = mid + Math.imul(ah7, bl9) | 0;\n\t    hi = hi + Math.imul(ah7, bh9) | 0;\n\t    var w16 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n\t    c = (hi + (mid >>> 13) | 0) + (w16 >>> 26) | 0;\n\t    w16 &= 0x3ffffff;\n\t    /* k = 17 */\n\t    lo = Math.imul(al9, bl8);\n\t    mid = Math.imul(al9, bh8);\n\t    mid = mid + Math.imul(ah9, bl8) | 0;\n\t    hi = Math.imul(ah9, bh8);\n\t    lo = lo + Math.imul(al8, bl9) | 0;\n\t    mid = mid + Math.imul(al8, bh9) | 0;\n\t    mid = mid + Math.imul(ah8, bl9) | 0;\n\t    hi = hi + Math.imul(ah8, bh9) | 0;\n\t    var w17 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n\t    c = (hi + (mid >>> 13) | 0) + (w17 >>> 26) | 0;\n\t    w17 &= 0x3ffffff;\n\t    /* k = 18 */\n\t    lo = Math.imul(al9, bl9);\n\t    mid = Math.imul(al9, bh9);\n\t    mid = mid + Math.imul(ah9, bl9) | 0;\n\t    hi = Math.imul(ah9, bh9);\n\t    var w18 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n\t    c = (hi + (mid >>> 13) | 0) + (w18 >>> 26) | 0;\n\t    w18 &= 0x3ffffff;\n\t    o[0] = w0;\n\t    o[1] = w1;\n\t    o[2] = w2;\n\t    o[3] = w3;\n\t    o[4] = w4;\n\t    o[5] = w5;\n\t    o[6] = w6;\n\t    o[7] = w7;\n\t    o[8] = w8;\n\t    o[9] = w9;\n\t    o[10] = w10;\n\t    o[11] = w11;\n\t    o[12] = w12;\n\t    o[13] = w13;\n\t    o[14] = w14;\n\t    o[15] = w15;\n\t    o[16] = w16;\n\t    o[17] = w17;\n\t    o[18] = w18;\n\t    if (c !== 0) {\n\t      o[19] = c;\n\t      out.length++;\n\t    }\n\t    return out;\n\t  };\n\t\n\t  // Polyfill comb\n\t  if (!Math.imul) {\n\t    comb10MulTo = smallMulTo;\n\t  }\n\t\n\t  function bigMulTo(self, num, out) {\n\t    out.negative = num.negative ^ self.negative;\n\t    out.length = self.length + num.length;\n\t\n\t    var carry = 0;\n\t    var hncarry = 0;\n\t    for (var k = 0; k < out.length - 1; k++) {\n\t      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n\t      // note that ncarry could be >= 0x3ffffff\n\t      var ncarry = hncarry;\n\t      hncarry = 0;\n\t      var rword = carry & 0x3ffffff;\n\t      var maxJ = Math.min(k, num.length - 1);\n\t      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n\t        var i = k - j;\n\t        var a = self.words[i] | 0;\n\t        var b = num.words[j] | 0;\n\t        var r = a * b;\n\t\n\t        var lo = r & 0x3ffffff;\n\t        ncarry = ncarry + (r / 0x4000000 | 0) | 0;\n\t        lo = lo + rword | 0;\n\t        rword = lo & 0x3ffffff;\n\t        ncarry = ncarry + (lo >>> 26) | 0;\n\t\n\t        hncarry += ncarry >>> 26;\n\t        ncarry &= 0x3ffffff;\n\t      }\n\t      out.words[k] = rword;\n\t      carry = ncarry;\n\t      ncarry = hncarry;\n\t    }\n\t    if (carry !== 0) {\n\t      out.words[k] = carry;\n\t    } else {\n\t      out.length--;\n\t    }\n\t\n\t    return out.strip();\n\t  }\n\t\n\t  function jumboMulTo(self, num, out) {\n\t    var fftm = new FFTM();\n\t    return fftm.mulp(self, num, out);\n\t  }\n\t\n\t  BN.prototype.mulTo = function mulTo(num, out) {\n\t    var res;\n\t    var len = this.length + num.length;\n\t    if (this.length === 10 && num.length === 10) {\n\t      res = comb10MulTo(this, num, out);\n\t    } else if (len < 63) {\n\t      res = smallMulTo(this, num, out);\n\t    } else if (len < 1024) {\n\t      res = bigMulTo(this, num, out);\n\t    } else {\n\t      res = jumboMulTo(this, num, out);\n\t    }\n\t\n\t    return res;\n\t  };\n\t\n\t  // Cooley-Tukey algorithm for FFT\n\t  // slightly revisited to rely on looping instead of recursion\n\t\n\t  function FFTM(x, y) {\n\t    this.x = x;\n\t    this.y = y;\n\t  }\n\t\n\t  FFTM.prototype.makeRBT = function makeRBT(N) {\n\t    var t = new Array(N);\n\t    var l = BN.prototype._countBits(N) - 1;\n\t    for (var i = 0; i < N; i++) {\n\t      t[i] = this.revBin(i, l, N);\n\t    }\n\t\n\t    return t;\n\t  };\n\t\n\t  // Returns binary-reversed representation of `x`\n\t  FFTM.prototype.revBin = function revBin(x, l, N) {\n\t    if (x === 0 || x === N - 1) return x;\n\t\n\t    var rb = 0;\n\t    for (var i = 0; i < l; i++) {\n\t      rb |= (x & 1) << l - i - 1;\n\t      x >>= 1;\n\t    }\n\t\n\t    return rb;\n\t  };\n\t\n\t  // Performs \"tweedling\" phase, therefore 'emulating'\n\t  // behaviour of the recursive algorithm\n\t  FFTM.prototype.permute = function permute(rbt, rws, iws, rtws, itws, N) {\n\t    for (var i = 0; i < N; i++) {\n\t      rtws[i] = rws[rbt[i]];\n\t      itws[i] = iws[rbt[i]];\n\t    }\n\t  };\n\t\n\t  FFTM.prototype.transform = function transform(rws, iws, rtws, itws, N, rbt) {\n\t    this.permute(rbt, rws, iws, rtws, itws, N);\n\t\n\t    for (var s = 1; s < N; s <<= 1) {\n\t      var l = s << 1;\n\t\n\t      var rtwdf = Math.cos(2 * Math.PI / l);\n\t      var itwdf = Math.sin(2 * Math.PI / l);\n\t\n\t      for (var p = 0; p < N; p += l) {\n\t        var rtwdf_ = rtwdf;\n\t        var itwdf_ = itwdf;\n\t\n\t        for (var j = 0; j < s; j++) {\n\t          var re = rtws[p + j];\n\t          var ie = itws[p + j];\n\t\n\t          var ro = rtws[p + j + s];\n\t          var io = itws[p + j + s];\n\t\n\t          var rx = rtwdf_ * ro - itwdf_ * io;\n\t\n\t          io = rtwdf_ * io + itwdf_ * ro;\n\t          ro = rx;\n\t\n\t          rtws[p + j] = re + ro;\n\t          itws[p + j] = ie + io;\n\t\n\t          rtws[p + j + s] = re - ro;\n\t          itws[p + j + s] = ie - io;\n\t\n\t          /* jshint maxdepth : false */\n\t          if (j !== l) {\n\t            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\t\n\t            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n\t            rtwdf_ = rx;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  };\n\t\n\t  FFTM.prototype.guessLen13b = function guessLen13b(n, m) {\n\t    var N = Math.max(m, n) | 1;\n\t    var odd = N & 1;\n\t    var i = 0;\n\t    for (N = N / 2 | 0; N; N = N >>> 1) {\n\t      i++;\n\t    }\n\t\n\t    return 1 << i + 1 + odd;\n\t  };\n\t\n\t  FFTM.prototype.conjugate = function conjugate(rws, iws, N) {\n\t    if (N <= 1) return;\n\t\n\t    for (var i = 0; i < N / 2; i++) {\n\t      var t = rws[i];\n\t\n\t      rws[i] = rws[N - i - 1];\n\t      rws[N - i - 1] = t;\n\t\n\t      t = iws[i];\n\t\n\t      iws[i] = -iws[N - i - 1];\n\t      iws[N - i - 1] = -t;\n\t    }\n\t  };\n\t\n\t  FFTM.prototype.normalize13b = function normalize13b(ws, N) {\n\t    var carry = 0;\n\t    for (var i = 0; i < N / 2; i++) {\n\t      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 + Math.round(ws[2 * i] / N) + carry;\n\t\n\t      ws[i] = w & 0x3ffffff;\n\t\n\t      if (w < 0x4000000) {\n\t        carry = 0;\n\t      } else {\n\t        carry = w / 0x4000000 | 0;\n\t      }\n\t    }\n\t\n\t    return ws;\n\t  };\n\t\n\t  FFTM.prototype.convert13b = function convert13b(ws, len, rws, N) {\n\t    var carry = 0;\n\t    for (var i = 0; i < len; i++) {\n\t      carry = carry + (ws[i] | 0);\n\t\n\t      rws[2 * i] = carry & 0x1fff;carry = carry >>> 13;\n\t      rws[2 * i + 1] = carry & 0x1fff;carry = carry >>> 13;\n\t    }\n\t\n\t    // Pad with zeroes\n\t    for (i = 2 * len; i < N; ++i) {\n\t      rws[i] = 0;\n\t    }\n\t\n\t    assert(carry === 0);\n\t    assert((carry & ~0x1fff) === 0);\n\t  };\n\t\n\t  FFTM.prototype.stub = function stub(N) {\n\t    var ph = new Array(N);\n\t    for (var i = 0; i < N; i++) {\n\t      ph[i] = 0;\n\t    }\n\t\n\t    return ph;\n\t  };\n\t\n\t  FFTM.prototype.mulp = function mulp(x, y, out) {\n\t    var N = 2 * this.guessLen13b(x.length, y.length);\n\t\n\t    var rbt = this.makeRBT(N);\n\t\n\t    var _ = this.stub(N);\n\t\n\t    var rws = new Array(N);\n\t    var rwst = new Array(N);\n\t    var iwst = new Array(N);\n\t\n\t    var nrws = new Array(N);\n\t    var nrwst = new Array(N);\n\t    var niwst = new Array(N);\n\t\n\t    var rmws = out.words;\n\t    rmws.length = N;\n\t\n\t    this.convert13b(x.words, x.length, rws, N);\n\t    this.convert13b(y.words, y.length, nrws, N);\n\t\n\t    this.transform(rws, _, rwst, iwst, N, rbt);\n\t    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\t\n\t    for (var i = 0; i < N; i++) {\n\t      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n\t      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n\t      rwst[i] = rx;\n\t    }\n\t\n\t    this.conjugate(rwst, iwst, N);\n\t    this.transform(rwst, iwst, rmws, _, N, rbt);\n\t    this.conjugate(rmws, _, N);\n\t    this.normalize13b(rmws, N);\n\t\n\t    out.negative = x.negative ^ y.negative;\n\t    out.length = x.length + y.length;\n\t    return out.strip();\n\t  };\n\t\n\t  // Multiply `this` by `num`\n\t  BN.prototype.mul = function mul(num) {\n\t    var out = new BN(null);\n\t    out.words = new Array(this.length + num.length);\n\t    return this.mulTo(num, out);\n\t  };\n\t\n\t  // Multiply employing FFT\n\t  BN.prototype.mulf = function mulf(num) {\n\t    var out = new BN(null);\n\t    out.words = new Array(this.length + num.length);\n\t    return jumboMulTo(this, num, out);\n\t  };\n\t\n\t  // In-place Multiplication\n\t  BN.prototype.imul = function imul(num) {\n\t    return this.clone().mulTo(num, this);\n\t  };\n\t\n\t  BN.prototype.imuln = function imuln(num) {\n\t    assert(typeof num === 'number');\n\t    assert(num < 0x4000000);\n\t\n\t    // Carry\n\t    var carry = 0;\n\t    for (var i = 0; i < this.length; i++) {\n\t      var w = (this.words[i] | 0) * num;\n\t      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n\t      carry >>= 26;\n\t      carry += w / 0x4000000 | 0;\n\t      // NOTE: lo is 27bit maximum\n\t      carry += lo >>> 26;\n\t      this.words[i] = lo & 0x3ffffff;\n\t    }\n\t\n\t    if (carry !== 0) {\n\t      this.words[i] = carry;\n\t      this.length++;\n\t    }\n\t\n\t    return this;\n\t  };\n\t\n\t  BN.prototype.muln = function muln(num) {\n\t    return this.clone().imuln(num);\n\t  };\n\t\n\t  // `this` * `this`\n\t  BN.prototype.sqr = function sqr() {\n\t    return this.mul(this);\n\t  };\n\t\n\t  // `this` * `this` in-place\n\t  BN.prototype.isqr = function isqr() {\n\t    return this.imul(this.clone());\n\t  };\n\t\n\t  // Math.pow(`this`, `num`)\n\t  BN.prototype.pow = function pow(num) {\n\t    var w = toBitArray(num);\n\t    if (w.length === 0) return new BN(1);\n\t\n\t    // Skip leading zeroes\n\t    var res = this;\n\t    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n\t      if (w[i] !== 0) break;\n\t    }\n\t\n\t    if (++i < w.length) {\n\t      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n\t        if (w[i] === 0) continue;\n\t\n\t        res = res.mul(q);\n\t      }\n\t    }\n\t\n\t    return res;\n\t  };\n\t\n\t  // Shift-left in-place\n\t  BN.prototype.iushln = function iushln(bits) {\n\t    assert(typeof bits === 'number' && bits >= 0);\n\t    var r = bits % 26;\n\t    var s = (bits - r) / 26;\n\t    var carryMask = 0x3ffffff >>> 26 - r << 26 - r;\n\t    var i;\n\t\n\t    if (r !== 0) {\n\t      var carry = 0;\n\t\n\t      for (i = 0; i < this.length; i++) {\n\t        var newCarry = this.words[i] & carryMask;\n\t        var c = (this.words[i] | 0) - newCarry << r;\n\t        this.words[i] = c | carry;\n\t        carry = newCarry >>> 26 - r;\n\t      }\n\t\n\t      if (carry) {\n\t        this.words[i] = carry;\n\t        this.length++;\n\t      }\n\t    }\n\t\n\t    if (s !== 0) {\n\t      for (i = this.length - 1; i >= 0; i--) {\n\t        this.words[i + s] = this.words[i];\n\t      }\n\t\n\t      for (i = 0; i < s; i++) {\n\t        this.words[i] = 0;\n\t      }\n\t\n\t      this.length += s;\n\t    }\n\t\n\t    return this.strip();\n\t  };\n\t\n\t  BN.prototype.ishln = function ishln(bits) {\n\t    // TODO(indutny): implement me\n\t    assert(this.negative === 0);\n\t    return this.iushln(bits);\n\t  };\n\t\n\t  // Shift-right in-place\n\t  // NOTE: `hint` is a lowest bit before trailing zeroes\n\t  // NOTE: if `extended` is present - it will be filled with destroyed bits\n\t  BN.prototype.iushrn = function iushrn(bits, hint, extended) {\n\t    assert(typeof bits === 'number' && bits >= 0);\n\t    var h;\n\t    if (hint) {\n\t      h = (hint - hint % 26) / 26;\n\t    } else {\n\t      h = 0;\n\t    }\n\t\n\t    var r = bits % 26;\n\t    var s = Math.min((bits - r) / 26, this.length);\n\t    var mask = 0x3ffffff ^ 0x3ffffff >>> r << r;\n\t    var maskedWords = extended;\n\t\n\t    h -= s;\n\t    h = Math.max(0, h);\n\t\n\t    // Extended mode, copy masked part\n\t    if (maskedWords) {\n\t      for (var i = 0; i < s; i++) {\n\t        maskedWords.words[i] = this.words[i];\n\t      }\n\t      maskedWords.length = s;\n\t    }\n\t\n\t    if (s === 0) {\n\t      // No-op, we should not move anything at all\n\t    } else if (this.length > s) {\n\t      this.length -= s;\n\t      for (i = 0; i < this.length; i++) {\n\t        this.words[i] = this.words[i + s];\n\t      }\n\t    } else {\n\t      this.words[0] = 0;\n\t      this.length = 1;\n\t    }\n\t\n\t    var carry = 0;\n\t    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n\t      var word = this.words[i] | 0;\n\t      this.words[i] = carry << 26 - r | word >>> r;\n\t      carry = word & mask;\n\t    }\n\t\n\t    // Push carried bits as a mask\n\t    if (maskedWords && carry !== 0) {\n\t      maskedWords.words[maskedWords.length++] = carry;\n\t    }\n\t\n\t    if (this.length === 0) {\n\t      this.words[0] = 0;\n\t      this.length = 1;\n\t    }\n\t\n\t    return this.strip();\n\t  };\n\t\n\t  BN.prototype.ishrn = function ishrn(bits, hint, extended) {\n\t    // TODO(indutny): implement me\n\t    assert(this.negative === 0);\n\t    return this.iushrn(bits, hint, extended);\n\t  };\n\t\n\t  // Shift-left\n\t  BN.prototype.shln = function shln(bits) {\n\t    return this.clone().ishln(bits);\n\t  };\n\t\n\t  BN.prototype.ushln = function ushln(bits) {\n\t    return this.clone().iushln(bits);\n\t  };\n\t\n\t  // Shift-right\n\t  BN.prototype.shrn = function shrn(bits) {\n\t    return this.clone().ishrn(bits);\n\t  };\n\t\n\t  BN.prototype.ushrn = function ushrn(bits) {\n\t    return this.clone().iushrn(bits);\n\t  };\n\t\n\t  // Test if n bit is set\n\t  BN.prototype.testn = function testn(bit) {\n\t    assert(typeof bit === 'number' && bit >= 0);\n\t    var r = bit % 26;\n\t    var s = (bit - r) / 26;\n\t    var q = 1 << r;\n\t\n\t    // Fast case: bit is much higher than all existing words\n\t    if (this.length <= s) return false;\n\t\n\t    // Check bit and return\n\t    var w = this.words[s];\n\t\n\t    return !!(w & q);\n\t  };\n\t\n\t  // Return only lowers bits of number (in-place)\n\t  BN.prototype.imaskn = function imaskn(bits) {\n\t    assert(typeof bits === 'number' && bits >= 0);\n\t    var r = bits % 26;\n\t    var s = (bits - r) / 26;\n\t\n\t    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\t\n\t    if (this.length <= s) {\n\t      return this;\n\t    }\n\t\n\t    if (r !== 0) {\n\t      s++;\n\t    }\n\t    this.length = Math.min(s, this.length);\n\t\n\t    if (r !== 0) {\n\t      var mask = 0x3ffffff ^ 0x3ffffff >>> r << r;\n\t      this.words[this.length - 1] &= mask;\n\t    }\n\t\n\t    return this.strip();\n\t  };\n\t\n\t  // Return only lowers bits of number\n\t  BN.prototype.maskn = function maskn(bits) {\n\t    return this.clone().imaskn(bits);\n\t  };\n\t\n\t  // Add plain number `num` to `this`\n\t  BN.prototype.iaddn = function iaddn(num) {\n\t    assert(typeof num === 'number');\n\t    assert(num < 0x4000000);\n\t    if (num < 0) return this.isubn(-num);\n\t\n\t    // Possible sign change\n\t    if (this.negative !== 0) {\n\t      if (this.length === 1 && (this.words[0] | 0) < num) {\n\t        this.words[0] = num - (this.words[0] | 0);\n\t        this.negative = 0;\n\t        return this;\n\t      }\n\t\n\t      this.negative = 0;\n\t      this.isubn(num);\n\t      this.negative = 1;\n\t      return this;\n\t    }\n\t\n\t    // Add without checks\n\t    return this._iaddn(num);\n\t  };\n\t\n\t  BN.prototype._iaddn = function _iaddn(num) {\n\t    this.words[0] += num;\n\t\n\t    // Carry\n\t    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n\t      this.words[i] -= 0x4000000;\n\t      if (i === this.length - 1) {\n\t        this.words[i + 1] = 1;\n\t      } else {\n\t        this.words[i + 1]++;\n\t      }\n\t    }\n\t    this.length = Math.max(this.length, i + 1);\n\t\n\t    return this;\n\t  };\n\t\n\t  // Subtract plain number `num` from `this`\n\t  BN.prototype.isubn = function isubn(num) {\n\t    assert(typeof num === 'number');\n\t    assert(num < 0x4000000);\n\t    if (num < 0) return this.iaddn(-num);\n\t\n\t    if (this.negative !== 0) {\n\t      this.negative = 0;\n\t      this.iaddn(num);\n\t      this.negative = 1;\n\t      return this;\n\t    }\n\t\n\t    this.words[0] -= num;\n\t\n\t    if (this.length === 1 && this.words[0] < 0) {\n\t      this.words[0] = -this.words[0];\n\t      this.negative = 1;\n\t    } else {\n\t      // Carry\n\t      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n\t        this.words[i] += 0x4000000;\n\t        this.words[i + 1] -= 1;\n\t      }\n\t    }\n\t\n\t    return this.strip();\n\t  };\n\t\n\t  BN.prototype.addn = function addn(num) {\n\t    return this.clone().iaddn(num);\n\t  };\n\t\n\t  BN.prototype.subn = function subn(num) {\n\t    return this.clone().isubn(num);\n\t  };\n\t\n\t  BN.prototype.iabs = function iabs() {\n\t    this.negative = 0;\n\t\n\t    return this;\n\t  };\n\t\n\t  BN.prototype.abs = function abs() {\n\t    return this.clone().iabs();\n\t  };\n\t\n\t  BN.prototype._ishlnsubmul = function _ishlnsubmul(num, mul, shift) {\n\t    var len = num.length + shift;\n\t    var i;\n\t\n\t    this._expand(len);\n\t\n\t    var w;\n\t    var carry = 0;\n\t    for (i = 0; i < num.length; i++) {\n\t      w = (this.words[i + shift] | 0) + carry;\n\t      var right = (num.words[i] | 0) * mul;\n\t      w -= right & 0x3ffffff;\n\t      carry = (w >> 26) - (right / 0x4000000 | 0);\n\t      this.words[i + shift] = w & 0x3ffffff;\n\t    }\n\t    for (; i < this.length - shift; i++) {\n\t      w = (this.words[i + shift] | 0) + carry;\n\t      carry = w >> 26;\n\t      this.words[i + shift] = w & 0x3ffffff;\n\t    }\n\t\n\t    if (carry === 0) return this.strip();\n\t\n\t    // Subtraction overflow\n\t    assert(carry === -1);\n\t    carry = 0;\n\t    for (i = 0; i < this.length; i++) {\n\t      w = -(this.words[i] | 0) + carry;\n\t      carry = w >> 26;\n\t      this.words[i] = w & 0x3ffffff;\n\t    }\n\t    this.negative = 1;\n\t\n\t    return this.strip();\n\t  };\n\t\n\t  BN.prototype._wordDiv = function _wordDiv(num, mode) {\n\t    var shift = this.length - num.length;\n\t\n\t    var a = this.clone();\n\t    var b = num;\n\t\n\t    // Normalize\n\t    var bhi = b.words[b.length - 1] | 0;\n\t    var bhiBits = this._countBits(bhi);\n\t    shift = 26 - bhiBits;\n\t    if (shift !== 0) {\n\t      b = b.ushln(shift);\n\t      a.iushln(shift);\n\t      bhi = b.words[b.length - 1] | 0;\n\t    }\n\t\n\t    // Initialize quotient\n\t    var m = a.length - b.length;\n\t    var q;\n\t\n\t    if (mode !== 'mod') {\n\t      q = new BN(null);\n\t      q.length = m + 1;\n\t      q.words = new Array(q.length);\n\t      for (var i = 0; i < q.length; i++) {\n\t        q.words[i] = 0;\n\t      }\n\t    }\n\t\n\t    var diff = a.clone()._ishlnsubmul(b, 1, m);\n\t    if (diff.negative === 0) {\n\t      a = diff;\n\t      if (q) {\n\t        q.words[m] = 1;\n\t      }\n\t    }\n\t\n\t    for (var j = m - 1; j >= 0; j--) {\n\t      var qj = (a.words[b.length + j] | 0) * 0x4000000 + (a.words[b.length + j - 1] | 0);\n\t\n\t      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n\t      // (0x7ffffff)\n\t      qj = Math.min(qj / bhi | 0, 0x3ffffff);\n\t\n\t      a._ishlnsubmul(b, qj, j);\n\t      while (a.negative !== 0) {\n\t        qj--;\n\t        a.negative = 0;\n\t        a._ishlnsubmul(b, 1, j);\n\t        if (!a.isZero()) {\n\t          a.negative ^= 1;\n\t        }\n\t      }\n\t      if (q) {\n\t        q.words[j] = qj;\n\t      }\n\t    }\n\t    if (q) {\n\t      q.strip();\n\t    }\n\t    a.strip();\n\t\n\t    // Denormalize\n\t    if (mode !== 'div' && shift !== 0) {\n\t      a.iushrn(shift);\n\t    }\n\t\n\t    return {\n\t      div: q || null,\n\t      mod: a\n\t    };\n\t  };\n\t\n\t  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n\t  //       to `div` to request div only, or be absent to\n\t  //       request both div & mod\n\t  //       2) `positive` is true if unsigned mod is requested\n\t  BN.prototype.divmod = function divmod(num, mode, positive) {\n\t    assert(!num.isZero());\n\t\n\t    if (this.isZero()) {\n\t      return {\n\t        div: new BN(0),\n\t        mod: new BN(0)\n\t      };\n\t    }\n\t\n\t    var div, mod, res;\n\t    if (this.negative !== 0 && num.negative === 0) {\n\t      res = this.neg().divmod(num, mode);\n\t\n\t      if (mode !== 'mod') {\n\t        div = res.div.neg();\n\t      }\n\t\n\t      if (mode !== 'div') {\n\t        mod = res.mod.neg();\n\t        if (positive && mod.negative !== 0) {\n\t          mod.iadd(num);\n\t        }\n\t      }\n\t\n\t      return {\n\t        div: div,\n\t        mod: mod\n\t      };\n\t    }\n\t\n\t    if (this.negative === 0 && num.negative !== 0) {\n\t      res = this.divmod(num.neg(), mode);\n\t\n\t      if (mode !== 'mod') {\n\t        div = res.div.neg();\n\t      }\n\t\n\t      return {\n\t        div: div,\n\t        mod: res.mod\n\t      };\n\t    }\n\t\n\t    if ((this.negative & num.negative) !== 0) {\n\t      res = this.neg().divmod(num.neg(), mode);\n\t\n\t      if (mode !== 'div') {\n\t        mod = res.mod.neg();\n\t        if (positive && mod.negative !== 0) {\n\t          mod.isub(num);\n\t        }\n\t      }\n\t\n\t      return {\n\t        div: res.div,\n\t        mod: mod\n\t      };\n\t    }\n\t\n\t    // Both numbers are positive at this point\n\t\n\t    // Strip both numbers to approximate shift value\n\t    if (num.length > this.length || this.cmp(num) < 0) {\n\t      return {\n\t        div: new BN(0),\n\t        mod: this\n\t      };\n\t    }\n\t\n\t    // Very short reduction\n\t    if (num.length === 1) {\n\t      if (mode === 'div') {\n\t        return {\n\t          div: this.divn(num.words[0]),\n\t          mod: null\n\t        };\n\t      }\n\t\n\t      if (mode === 'mod') {\n\t        return {\n\t          div: null,\n\t          mod: new BN(this.modn(num.words[0]))\n\t        };\n\t      }\n\t\n\t      return {\n\t        div: this.divn(num.words[0]),\n\t        mod: new BN(this.modn(num.words[0]))\n\t      };\n\t    }\n\t\n\t    return this._wordDiv(num, mode);\n\t  };\n\t\n\t  // Find `this` / `num`\n\t  BN.prototype.div = function div(num) {\n\t    return this.divmod(num, 'div', false).div;\n\t  };\n\t\n\t  // Find `this` % `num`\n\t  BN.prototype.mod = function mod(num) {\n\t    return this.divmod(num, 'mod', false).mod;\n\t  };\n\t\n\t  BN.prototype.umod = function umod(num) {\n\t    return this.divmod(num, 'mod', true).mod;\n\t  };\n\t\n\t  // Find Round(`this` / `num`)\n\t  BN.prototype.divRound = function divRound(num) {\n\t    var dm = this.divmod(num);\n\t\n\t    // Fast case - exact division\n\t    if (dm.mod.isZero()) return dm.div;\n\t\n\t    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\t\n\t    var half = num.ushrn(1);\n\t    var r2 = num.andln(1);\n\t    var cmp = mod.cmp(half);\n\t\n\t    // Round down\n\t    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\t\n\t    // Round up\n\t    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n\t  };\n\t\n\t  BN.prototype.modn = function modn(num) {\n\t    assert(num <= 0x3ffffff);\n\t    var p = (1 << 26) % num;\n\t\n\t    var acc = 0;\n\t    for (var i = this.length - 1; i >= 0; i--) {\n\t      acc = (p * acc + (this.words[i] | 0)) % num;\n\t    }\n\t\n\t    return acc;\n\t  };\n\t\n\t  // In-place division by number\n\t  BN.prototype.idivn = function idivn(num) {\n\t    assert(num <= 0x3ffffff);\n\t\n\t    var carry = 0;\n\t    for (var i = this.length - 1; i >= 0; i--) {\n\t      var w = (this.words[i] | 0) + carry * 0x4000000;\n\t      this.words[i] = w / num | 0;\n\t      carry = w % num;\n\t    }\n\t\n\t    return this.strip();\n\t  };\n\t\n\t  BN.prototype.divn = function divn(num) {\n\t    return this.clone().idivn(num);\n\t  };\n\t\n\t  BN.prototype.egcd = function egcd(p) {\n\t    assert(p.negative === 0);\n\t    assert(!p.isZero());\n\t\n\t    var x = this;\n\t    var y = p.clone();\n\t\n\t    if (x.negative !== 0) {\n\t      x = x.umod(p);\n\t    } else {\n\t      x = x.clone();\n\t    }\n\t\n\t    // A * x + B * y = x\n\t    var A = new BN(1);\n\t    var B = new BN(0);\n\t\n\t    // C * x + D * y = y\n\t    var C = new BN(0);\n\t    var D = new BN(1);\n\t\n\t    var g = 0;\n\t\n\t    while (x.isEven() && y.isEven()) {\n\t      x.iushrn(1);\n\t      y.iushrn(1);\n\t      ++g;\n\t    }\n\t\n\t    var yp = y.clone();\n\t    var xp = x.clone();\n\t\n\t    while (!x.isZero()) {\n\t      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1) {}\n\t      if (i > 0) {\n\t        x.iushrn(i);\n\t        while (i-- > 0) {\n\t          if (A.isOdd() || B.isOdd()) {\n\t            A.iadd(yp);\n\t            B.isub(xp);\n\t          }\n\t\n\t          A.iushrn(1);\n\t          B.iushrn(1);\n\t        }\n\t      }\n\t\n\t      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1) {}\n\t      if (j > 0) {\n\t        y.iushrn(j);\n\t        while (j-- > 0) {\n\t          if (C.isOdd() || D.isOdd()) {\n\t            C.iadd(yp);\n\t            D.isub(xp);\n\t          }\n\t\n\t          C.iushrn(1);\n\t          D.iushrn(1);\n\t        }\n\t      }\n\t\n\t      if (x.cmp(y) >= 0) {\n\t        x.isub(y);\n\t        A.isub(C);\n\t        B.isub(D);\n\t      } else {\n\t        y.isub(x);\n\t        C.isub(A);\n\t        D.isub(B);\n\t      }\n\t    }\n\t\n\t    return {\n\t      a: C,\n\t      b: D,\n\t      gcd: y.iushln(g)\n\t    };\n\t  };\n\t\n\t  // This is reduced incarnation of the binary EEA\n\t  // above, designated to invert members of the\n\t  // _prime_ fields F(p) at a maximal speed\n\t  BN.prototype._invmp = function _invmp(p) {\n\t    assert(p.negative === 0);\n\t    assert(!p.isZero());\n\t\n\t    var a = this;\n\t    var b = p.clone();\n\t\n\t    if (a.negative !== 0) {\n\t      a = a.umod(p);\n\t    } else {\n\t      a = a.clone();\n\t    }\n\t\n\t    var x1 = new BN(1);\n\t    var x2 = new BN(0);\n\t\n\t    var delta = b.clone();\n\t\n\t    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n\t      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1) {}\n\t      if (i > 0) {\n\t        a.iushrn(i);\n\t        while (i-- > 0) {\n\t          if (x1.isOdd()) {\n\t            x1.iadd(delta);\n\t          }\n\t\n\t          x1.iushrn(1);\n\t        }\n\t      }\n\t\n\t      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1) {}\n\t      if (j > 0) {\n\t        b.iushrn(j);\n\t        while (j-- > 0) {\n\t          if (x2.isOdd()) {\n\t            x2.iadd(delta);\n\t          }\n\t\n\t          x2.iushrn(1);\n\t        }\n\t      }\n\t\n\t      if (a.cmp(b) >= 0) {\n\t        a.isub(b);\n\t        x1.isub(x2);\n\t      } else {\n\t        b.isub(a);\n\t        x2.isub(x1);\n\t      }\n\t    }\n\t\n\t    var res;\n\t    if (a.cmpn(1) === 0) {\n\t      res = x1;\n\t    } else {\n\t      res = x2;\n\t    }\n\t\n\t    if (res.cmpn(0) < 0) {\n\t      res.iadd(p);\n\t    }\n\t\n\t    return res;\n\t  };\n\t\n\t  BN.prototype.gcd = function gcd(num) {\n\t    if (this.isZero()) return num.abs();\n\t    if (num.isZero()) return this.abs();\n\t\n\t    var a = this.clone();\n\t    var b = num.clone();\n\t    a.negative = 0;\n\t    b.negative = 0;\n\t\n\t    // Remove common factor of two\n\t    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n\t      a.iushrn(1);\n\t      b.iushrn(1);\n\t    }\n\t\n\t    do {\n\t      while (a.isEven()) {\n\t        a.iushrn(1);\n\t      }\n\t      while (b.isEven()) {\n\t        b.iushrn(1);\n\t      }\n\t\n\t      var r = a.cmp(b);\n\t      if (r < 0) {\n\t        // Swap `a` and `b` to make `a` always bigger than `b`\n\t        var t = a;\n\t        a = b;\n\t        b = t;\n\t      } else if (r === 0 || b.cmpn(1) === 0) {\n\t        break;\n\t      }\n\t\n\t      a.isub(b);\n\t    } while (true);\n\t\n\t    return b.iushln(shift);\n\t  };\n\t\n\t  // Invert number in the field F(num)\n\t  BN.prototype.invm = function invm(num) {\n\t    return this.egcd(num).a.umod(num);\n\t  };\n\t\n\t  BN.prototype.isEven = function isEven() {\n\t    return (this.words[0] & 1) === 0;\n\t  };\n\t\n\t  BN.prototype.isOdd = function isOdd() {\n\t    return (this.words[0] & 1) === 1;\n\t  };\n\t\n\t  // And first word and num\n\t  BN.prototype.andln = function andln(num) {\n\t    return this.words[0] & num;\n\t  };\n\t\n\t  // Increment at the bit position in-line\n\t  BN.prototype.bincn = function bincn(bit) {\n\t    assert(typeof bit === 'number');\n\t    var r = bit % 26;\n\t    var s = (bit - r) / 26;\n\t    var q = 1 << r;\n\t\n\t    // Fast case: bit is much higher than all existing words\n\t    if (this.length <= s) {\n\t      this._expand(s + 1);\n\t      this.words[s] |= q;\n\t      return this;\n\t    }\n\t\n\t    // Add bit and propagate, if needed\n\t    var carry = q;\n\t    for (var i = s; carry !== 0 && i < this.length; i++) {\n\t      var w = this.words[i] | 0;\n\t      w += carry;\n\t      carry = w >>> 26;\n\t      w &= 0x3ffffff;\n\t      this.words[i] = w;\n\t    }\n\t    if (carry !== 0) {\n\t      this.words[i] = carry;\n\t      this.length++;\n\t    }\n\t    return this;\n\t  };\n\t\n\t  BN.prototype.isZero = function isZero() {\n\t    return this.length === 1 && this.words[0] === 0;\n\t  };\n\t\n\t  BN.prototype.cmpn = function cmpn(num) {\n\t    var negative = num < 0;\n\t\n\t    if (this.negative !== 0 && !negative) return -1;\n\t    if (this.negative === 0 && negative) return 1;\n\t\n\t    this.strip();\n\t\n\t    var res;\n\t    if (this.length > 1) {\n\t      res = 1;\n\t    } else {\n\t      if (negative) {\n\t        num = -num;\n\t      }\n\t\n\t      assert(num <= 0x3ffffff, 'Number is too big');\n\t\n\t      var w = this.words[0] | 0;\n\t      res = w === num ? 0 : w < num ? -1 : 1;\n\t    }\n\t    if (this.negative !== 0) return -res | 0;\n\t    return res;\n\t  };\n\t\n\t  // Compare two numbers and return:\n\t  // 1 - if `this` > `num`\n\t  // 0 - if `this` == `num`\n\t  // -1 - if `this` < `num`\n\t  BN.prototype.cmp = function cmp(num) {\n\t    if (this.negative !== 0 && num.negative === 0) return -1;\n\t    if (this.negative === 0 && num.negative !== 0) return 1;\n\t\n\t    var res = this.ucmp(num);\n\t    if (this.negative !== 0) return -res | 0;\n\t    return res;\n\t  };\n\t\n\t  // Unsigned comparison\n\t  BN.prototype.ucmp = function ucmp(num) {\n\t    // At this point both numbers have the same sign\n\t    if (this.length > num.length) return 1;\n\t    if (this.length < num.length) return -1;\n\t\n\t    var res = 0;\n\t    for (var i = this.length - 1; i >= 0; i--) {\n\t      var a = this.words[i] | 0;\n\t      var b = num.words[i] | 0;\n\t\n\t      if (a === b) continue;\n\t      if (a < b) {\n\t        res = -1;\n\t      } else if (a > b) {\n\t        res = 1;\n\t      }\n\t      break;\n\t    }\n\t    return res;\n\t  };\n\t\n\t  BN.prototype.gtn = function gtn(num) {\n\t    return this.cmpn(num) === 1;\n\t  };\n\t\n\t  BN.prototype.gt = function gt(num) {\n\t    return this.cmp(num) === 1;\n\t  };\n\t\n\t  BN.prototype.gten = function gten(num) {\n\t    return this.cmpn(num) >= 0;\n\t  };\n\t\n\t  BN.prototype.gte = function gte(num) {\n\t    return this.cmp(num) >= 0;\n\t  };\n\t\n\t  BN.prototype.ltn = function ltn(num) {\n\t    return this.cmpn(num) === -1;\n\t  };\n\t\n\t  BN.prototype.lt = function lt(num) {\n\t    return this.cmp(num) === -1;\n\t  };\n\t\n\t  BN.prototype.lten = function lten(num) {\n\t    return this.cmpn(num) <= 0;\n\t  };\n\t\n\t  BN.prototype.lte = function lte(num) {\n\t    return this.cmp(num) <= 0;\n\t  };\n\t\n\t  BN.prototype.eqn = function eqn(num) {\n\t    return this.cmpn(num) === 0;\n\t  };\n\t\n\t  BN.prototype.eq = function eq(num) {\n\t    return this.cmp(num) === 0;\n\t  };\n\t\n\t  //\n\t  // A reduce context, could be using montgomery or something better, depending\n\t  // on the `m` itself.\n\t  //\n\t  BN.red = function red(num) {\n\t    return new Red(num);\n\t  };\n\t\n\t  BN.prototype.toRed = function toRed(ctx) {\n\t    assert(!this.red, 'Already a number in reduction context');\n\t    assert(this.negative === 0, 'red works only with positives');\n\t    return ctx.convertTo(this)._forceRed(ctx);\n\t  };\n\t\n\t  BN.prototype.fromRed = function fromRed() {\n\t    assert(this.red, 'fromRed works only with numbers in reduction context');\n\t    return this.red.convertFrom(this);\n\t  };\n\t\n\t  BN.prototype._forceRed = function _forceRed(ctx) {\n\t    this.red = ctx;\n\t    return this;\n\t  };\n\t\n\t  BN.prototype.forceRed = function forceRed(ctx) {\n\t    assert(!this.red, 'Already a number in reduction context');\n\t    return this._forceRed(ctx);\n\t  };\n\t\n\t  BN.prototype.redAdd = function redAdd(num) {\n\t    assert(this.red, 'redAdd works only with red numbers');\n\t    return this.red.add(this, num);\n\t  };\n\t\n\t  BN.prototype.redIAdd = function redIAdd(num) {\n\t    assert(this.red, 'redIAdd works only with red numbers');\n\t    return this.red.iadd(this, num);\n\t  };\n\t\n\t  BN.prototype.redSub = function redSub(num) {\n\t    assert(this.red, 'redSub works only with red numbers');\n\t    return this.red.sub(this, num);\n\t  };\n\t\n\t  BN.prototype.redISub = function redISub(num) {\n\t    assert(this.red, 'redISub works only with red numbers');\n\t    return this.red.isub(this, num);\n\t  };\n\t\n\t  BN.prototype.redShl = function redShl(num) {\n\t    assert(this.red, 'redShl works only with red numbers');\n\t    return this.red.shl(this, num);\n\t  };\n\t\n\t  BN.prototype.redMul = function redMul(num) {\n\t    assert(this.red, 'redMul works only with red numbers');\n\t    this.red._verify2(this, num);\n\t    return this.red.mul(this, num);\n\t  };\n\t\n\t  BN.prototype.redIMul = function redIMul(num) {\n\t    assert(this.red, 'redMul works only with red numbers');\n\t    this.red._verify2(this, num);\n\t    return this.red.imul(this, num);\n\t  };\n\t\n\t  BN.prototype.redSqr = function redSqr() {\n\t    assert(this.red, 'redSqr works only with red numbers');\n\t    this.red._verify1(this);\n\t    return this.red.sqr(this);\n\t  };\n\t\n\t  BN.prototype.redISqr = function redISqr() {\n\t    assert(this.red, 'redISqr works only with red numbers');\n\t    this.red._verify1(this);\n\t    return this.red.isqr(this);\n\t  };\n\t\n\t  // Square root over p\n\t  BN.prototype.redSqrt = function redSqrt() {\n\t    assert(this.red, 'redSqrt works only with red numbers');\n\t    this.red._verify1(this);\n\t    return this.red.sqrt(this);\n\t  };\n\t\n\t  BN.prototype.redInvm = function redInvm() {\n\t    assert(this.red, 'redInvm works only with red numbers');\n\t    this.red._verify1(this);\n\t    return this.red.invm(this);\n\t  };\n\t\n\t  // Return negative clone of `this` % `red modulo`\n\t  BN.prototype.redNeg = function redNeg() {\n\t    assert(this.red, 'redNeg works only with red numbers');\n\t    this.red._verify1(this);\n\t    return this.red.neg(this);\n\t  };\n\t\n\t  BN.prototype.redPow = function redPow(num) {\n\t    assert(this.red && !num.red, 'redPow(normalNum)');\n\t    this.red._verify1(this);\n\t    return this.red.pow(this, num);\n\t  };\n\t\n\t  // Prime numbers with efficient reduction\n\t  var primes = {\n\t    k256: null,\n\t    p224: null,\n\t    p192: null,\n\t    p25519: null\n\t  };\n\t\n\t  // Pseudo-Mersenne prime\n\t  function MPrime(name, p) {\n\t    // P = 2 ^ N - K\n\t    this.name = name;\n\t    this.p = new BN(p, 16);\n\t    this.n = this.p.bitLength();\n\t    this.k = new BN(1).iushln(this.n).isub(this.p);\n\t\n\t    this.tmp = this._tmp();\n\t  }\n\t\n\t  MPrime.prototype._tmp = function _tmp() {\n\t    var tmp = new BN(null);\n\t    tmp.words = new Array(Math.ceil(this.n / 13));\n\t    return tmp;\n\t  };\n\t\n\t  MPrime.prototype.ireduce = function ireduce(num) {\n\t    // Assumes that `num` is less than `P^2`\n\t    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n\t    var r = num;\n\t    var rlen;\n\t\n\t    do {\n\t      this.split(r, this.tmp);\n\t      r = this.imulK(r);\n\t      r = r.iadd(this.tmp);\n\t      rlen = r.bitLength();\n\t    } while (rlen > this.n);\n\t\n\t    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n\t    if (cmp === 0) {\n\t      r.words[0] = 0;\n\t      r.length = 1;\n\t    } else if (cmp > 0) {\n\t      r.isub(this.p);\n\t    } else {\n\t      r.strip();\n\t    }\n\t\n\t    return r;\n\t  };\n\t\n\t  MPrime.prototype.split = function split(input, out) {\n\t    input.iushrn(this.n, 0, out);\n\t  };\n\t\n\t  MPrime.prototype.imulK = function imulK(num) {\n\t    return num.imul(this.k);\n\t  };\n\t\n\t  function K256() {\n\t    MPrime.call(this, 'k256', 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n\t  }\n\t  inherits(K256, MPrime);\n\t\n\t  K256.prototype.split = function split(input, output) {\n\t    // 256 = 9 * 26 + 22\n\t    var mask = 0x3fffff;\n\t\n\t    var outLen = Math.min(input.length, 9);\n\t    for (var i = 0; i < outLen; i++) {\n\t      output.words[i] = input.words[i];\n\t    }\n\t    output.length = outLen;\n\t\n\t    if (input.length <= 9) {\n\t      input.words[0] = 0;\n\t      input.length = 1;\n\t      return;\n\t    }\n\t\n\t    // Shift by 9 limbs\n\t    var prev = input.words[9];\n\t    output.words[output.length++] = prev & mask;\n\t\n\t    for (i = 10; i < input.length; i++) {\n\t      var next = input.words[i] | 0;\n\t      input.words[i - 10] = (next & mask) << 4 | prev >>> 22;\n\t      prev = next;\n\t    }\n\t    prev >>>= 22;\n\t    input.words[i - 10] = prev;\n\t    if (prev === 0 && input.length > 10) {\n\t      input.length -= 10;\n\t    } else {\n\t      input.length -= 9;\n\t    }\n\t  };\n\t\n\t  K256.prototype.imulK = function imulK(num) {\n\t    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n\t    num.words[num.length] = 0;\n\t    num.words[num.length + 1] = 0;\n\t    num.length += 2;\n\t\n\t    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n\t    var lo = 0;\n\t    for (var i = 0; i < num.length; i++) {\n\t      var w = num.words[i] | 0;\n\t      lo += w * 0x3d1;\n\t      num.words[i] = lo & 0x3ffffff;\n\t      lo = w * 0x40 + (lo / 0x4000000 | 0);\n\t    }\n\t\n\t    // Fast length reduction\n\t    if (num.words[num.length - 1] === 0) {\n\t      num.length--;\n\t      if (num.words[num.length - 1] === 0) {\n\t        num.length--;\n\t      }\n\t    }\n\t    return num;\n\t  };\n\t\n\t  function P224() {\n\t    MPrime.call(this, 'p224', 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n\t  }\n\t  inherits(P224, MPrime);\n\t\n\t  function P192() {\n\t    MPrime.call(this, 'p192', 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n\t  }\n\t  inherits(P192, MPrime);\n\t\n\t  function P25519() {\n\t    // 2 ^ 255 - 19\n\t    MPrime.call(this, '25519', '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n\t  }\n\t  inherits(P25519, MPrime);\n\t\n\t  P25519.prototype.imulK = function imulK(num) {\n\t    // K = 0x13\n\t    var carry = 0;\n\t    for (var i = 0; i < num.length; i++) {\n\t      var hi = (num.words[i] | 0) * 0x13 + carry;\n\t      var lo = hi & 0x3ffffff;\n\t      hi >>>= 26;\n\t\n\t      num.words[i] = lo;\n\t      carry = hi;\n\t    }\n\t    if (carry !== 0) {\n\t      num.words[num.length++] = carry;\n\t    }\n\t    return num;\n\t  };\n\t\n\t  // Exported mostly for testing purposes, use plain name instead\n\t  BN._prime = function prime(name) {\n\t    // Cached version of prime\n\t    if (primes[name]) return primes[name];\n\t\n\t    var prime;\n\t    if (name === 'k256') {\n\t      prime = new K256();\n\t    } else if (name === 'p224') {\n\t      prime = new P224();\n\t    } else if (name === 'p192') {\n\t      prime = new P192();\n\t    } else if (name === 'p25519') {\n\t      prime = new P25519();\n\t    } else {\n\t      throw new Error('Unknown prime ' + name);\n\t    }\n\t    primes[name] = prime;\n\t\n\t    return prime;\n\t  };\n\t\n\t  //\n\t  // Base reduction engine\n\t  //\n\t  function Red(m) {\n\t    if (typeof m === 'string') {\n\t      var prime = BN._prime(m);\n\t      this.m = prime.p;\n\t      this.prime = prime;\n\t    } else {\n\t      assert(m.gtn(1), 'modulus must be greater than 1');\n\t      this.m = m;\n\t      this.prime = null;\n\t    }\n\t  }\n\t\n\t  Red.prototype._verify1 = function _verify1(a) {\n\t    assert(a.negative === 0, 'red works only with positives');\n\t    assert(a.red, 'red works only with red numbers');\n\t  };\n\t\n\t  Red.prototype._verify2 = function _verify2(a, b) {\n\t    assert((a.negative | b.negative) === 0, 'red works only with positives');\n\t    assert(a.red && a.red === b.red, 'red works only with red numbers');\n\t  };\n\t\n\t  Red.prototype.imod = function imod(a) {\n\t    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\t    return a.umod(this.m)._forceRed(this);\n\t  };\n\t\n\t  Red.prototype.neg = function neg(a) {\n\t    if (a.isZero()) {\n\t      return a.clone();\n\t    }\n\t\n\t    return this.m.sub(a)._forceRed(this);\n\t  };\n\t\n\t  Red.prototype.add = function add(a, b) {\n\t    this._verify2(a, b);\n\t\n\t    var res = a.add(b);\n\t    if (res.cmp(this.m) >= 0) {\n\t      res.isub(this.m);\n\t    }\n\t    return res._forceRed(this);\n\t  };\n\t\n\t  Red.prototype.iadd = function iadd(a, b) {\n\t    this._verify2(a, b);\n\t\n\t    var res = a.iadd(b);\n\t    if (res.cmp(this.m) >= 0) {\n\t      res.isub(this.m);\n\t    }\n\t    return res;\n\t  };\n\t\n\t  Red.prototype.sub = function sub(a, b) {\n\t    this._verify2(a, b);\n\t\n\t    var res = a.sub(b);\n\t    if (res.cmpn(0) < 0) {\n\t      res.iadd(this.m);\n\t    }\n\t    return res._forceRed(this);\n\t  };\n\t\n\t  Red.prototype.isub = function isub(a, b) {\n\t    this._verify2(a, b);\n\t\n\t    var res = a.isub(b);\n\t    if (res.cmpn(0) < 0) {\n\t      res.iadd(this.m);\n\t    }\n\t    return res;\n\t  };\n\t\n\t  Red.prototype.shl = function shl(a, num) {\n\t    this._verify1(a);\n\t    return this.imod(a.ushln(num));\n\t  };\n\t\n\t  Red.prototype.imul = function imul(a, b) {\n\t    this._verify2(a, b);\n\t    return this.imod(a.imul(b));\n\t  };\n\t\n\t  Red.prototype.mul = function mul(a, b) {\n\t    this._verify2(a, b);\n\t    return this.imod(a.mul(b));\n\t  };\n\t\n\t  Red.prototype.isqr = function isqr(a) {\n\t    return this.imul(a, a.clone());\n\t  };\n\t\n\t  Red.prototype.sqr = function sqr(a) {\n\t    return this.mul(a, a);\n\t  };\n\t\n\t  Red.prototype.sqrt = function sqrt(a) {\n\t    if (a.isZero()) return a.clone();\n\t\n\t    var mod3 = this.m.andln(3);\n\t    assert(mod3 % 2 === 1);\n\t\n\t    // Fast case\n\t    if (mod3 === 3) {\n\t      var pow = this.m.add(new BN(1)).iushrn(2);\n\t      return this.pow(a, pow);\n\t    }\n\t\n\t    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n\t    //\n\t    // Find Q and S, that Q * 2 ^ S = (P - 1)\n\t    var q = this.m.subn(1);\n\t    var s = 0;\n\t    while (!q.isZero() && q.andln(1) === 0) {\n\t      s++;\n\t      q.iushrn(1);\n\t    }\n\t    assert(!q.isZero());\n\t\n\t    var one = new BN(1).toRed(this);\n\t    var nOne = one.redNeg();\n\t\n\t    // Find quadratic non-residue\n\t    // NOTE: Max is such because of generalized Riemann hypothesis.\n\t    var lpow = this.m.subn(1).iushrn(1);\n\t    var z = this.m.bitLength();\n\t    z = new BN(2 * z * z).toRed(this);\n\t\n\t    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n\t      z.redIAdd(nOne);\n\t    }\n\t\n\t    var c = this.pow(z, q);\n\t    var r = this.pow(a, q.addn(1).iushrn(1));\n\t    var t = this.pow(a, q);\n\t    var m = s;\n\t    while (t.cmp(one) !== 0) {\n\t      var tmp = t;\n\t      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n\t        tmp = tmp.redSqr();\n\t      }\n\t      assert(i < m);\n\t      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\t\n\t      r = r.redMul(b);\n\t      c = b.redSqr();\n\t      t = t.redMul(c);\n\t      m = i;\n\t    }\n\t\n\t    return r;\n\t  };\n\t\n\t  Red.prototype.invm = function invm(a) {\n\t    var inv = a._invmp(this.m);\n\t    if (inv.negative !== 0) {\n\t      inv.negative = 0;\n\t      return this.imod(inv).redNeg();\n\t    } else {\n\t      return this.imod(inv);\n\t    }\n\t  };\n\t\n\t  Red.prototype.pow = function pow(a, num) {\n\t    if (num.isZero()) return new BN(1);\n\t    if (num.cmpn(1) === 0) return a.clone();\n\t\n\t    var windowSize = 4;\n\t    var wnd = new Array(1 << windowSize);\n\t    wnd[0] = new BN(1).toRed(this);\n\t    wnd[1] = a;\n\t    for (var i = 2; i < wnd.length; i++) {\n\t      wnd[i] = this.mul(wnd[i - 1], a);\n\t    }\n\t\n\t    var res = wnd[0];\n\t    var current = 0;\n\t    var currentLen = 0;\n\t    var start = num.bitLength() % 26;\n\t    if (start === 0) {\n\t      start = 26;\n\t    }\n\t\n\t    for (i = num.length - 1; i >= 0; i--) {\n\t      var word = num.words[i];\n\t      for (var j = start - 1; j >= 0; j--) {\n\t        var bit = word >> j & 1;\n\t        if (res !== wnd[0]) {\n\t          res = this.sqr(res);\n\t        }\n\t\n\t        if (bit === 0 && current === 0) {\n\t          currentLen = 0;\n\t          continue;\n\t        }\n\t\n\t        current <<= 1;\n\t        current |= bit;\n\t        currentLen++;\n\t        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\t\n\t        res = this.mul(res, wnd[current]);\n\t        currentLen = 0;\n\t        current = 0;\n\t      }\n\t      start = 26;\n\t    }\n\t\n\t    return res;\n\t  };\n\t\n\t  Red.prototype.convertTo = function convertTo(num) {\n\t    var r = num.umod(this.m);\n\t\n\t    return r === num ? r.clone() : r;\n\t  };\n\t\n\t  Red.prototype.convertFrom = function convertFrom(num) {\n\t    var res = num.clone();\n\t    res.red = null;\n\t    return res;\n\t  };\n\t\n\t  //\n\t  // Montgomery method engine\n\t  //\n\t\n\t  BN.mont = function mont(num) {\n\t    return new Mont(num);\n\t  };\n\t\n\t  function Mont(m) {\n\t    Red.call(this, m);\n\t\n\t    this.shift = this.m.bitLength();\n\t    if (this.shift % 26 !== 0) {\n\t      this.shift += 26 - this.shift % 26;\n\t    }\n\t\n\t    this.r = new BN(1).iushln(this.shift);\n\t    this.r2 = this.imod(this.r.sqr());\n\t    this.rinv = this.r._invmp(this.m);\n\t\n\t    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n\t    this.minv = this.minv.umod(this.r);\n\t    this.minv = this.r.sub(this.minv);\n\t  }\n\t  inherits(Mont, Red);\n\t\n\t  Mont.prototype.convertTo = function convertTo(num) {\n\t    return this.imod(num.ushln(this.shift));\n\t  };\n\t\n\t  Mont.prototype.convertFrom = function convertFrom(num) {\n\t    var r = this.imod(num.mul(this.rinv));\n\t    r.red = null;\n\t    return r;\n\t  };\n\t\n\t  Mont.prototype.imul = function imul(a, b) {\n\t    if (a.isZero() || b.isZero()) {\n\t      a.words[0] = 0;\n\t      a.length = 1;\n\t      return a;\n\t    }\n\t\n\t    var t = a.imul(b);\n\t    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n\t    var u = t.isub(c).iushrn(this.shift);\n\t    var res = u;\n\t\n\t    if (u.cmp(this.m) >= 0) {\n\t      res = u.isub(this.m);\n\t    } else if (u.cmpn(0) < 0) {\n\t      res = u.iadd(this.m);\n\t    }\n\t\n\t    return res._forceRed(this);\n\t  };\n\t\n\t  Mont.prototype.mul = function mul(a, b) {\n\t    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\t\n\t    var t = a.mul(b);\n\t    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n\t    var u = t.isub(c).iushrn(this.shift);\n\t    var res = u;\n\t    if (u.cmp(this.m) >= 0) {\n\t      res = u.isub(this.m);\n\t    } else if (u.cmpn(0) < 0) {\n\t      res = u.iadd(this.m);\n\t    }\n\t\n\t    return res._forceRed(this);\n\t  };\n\t\n\t  Mont.prototype.invm = function invm(a) {\n\t    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n\t    var res = this.imod(a._invmp(this.m).mul(this.r2));\n\t    return res._forceRed(this);\n\t  };\n\t})(typeof module === 'undefined' || module, undefined);\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(294)(module)))\n\n/***/ },\n\n/***/ 891:\n[2491, 892, 893, 894, 901, 906, 908, 911],\n\n/***/ 892:\n/***/ function(module, exports) {\n\n\tmodule.exports = {\n\t\t\"_args\": [\n\t\t\t[\n\t\t\t\t{\n\t\t\t\t\t\"raw\": \"elliptic@https://registry.npmjs.org/elliptic/-/elliptic-6.3.2.tgz\",\n\t\t\t\t\t\"scope\": null,\n\t\t\t\t\t\"escapedName\": \"elliptic\",\n\t\t\t\t\t\"name\": \"elliptic\",\n\t\t\t\t\t\"rawSpec\": \"https://registry.npmjs.org/elliptic/-/elliptic-6.3.2.tgz\",\n\t\t\t\t\t\"spec\": \"https://registry.npmjs.org/elliptic/-/elliptic-6.3.2.tgz\",\n\t\t\t\t\t\"type\": \"remote\"\n\t\t\t\t},\n\t\t\t\t\"/Users/tenaciousmv/Code/tradle-app-web\"\n\t\t\t]\n\t\t],\n\t\t\"_from\": \"elliptic@6.3.2\",\n\t\t\"_id\": \"elliptic@6.3.2\",\n\t\t\"_inCache\": true,\n\t\t\"_location\": \"/elliptic\",\n\t\t\"_phantomChildren\": {},\n\t\t\"_requested\": {\n\t\t\t\"raw\": \"elliptic@https://registry.npmjs.org/elliptic/-/elliptic-6.3.2.tgz\",\n\t\t\t\"scope\": null,\n\t\t\t\"escapedName\": \"elliptic\",\n\t\t\t\"name\": \"elliptic\",\n\t\t\t\"rawSpec\": \"https://registry.npmjs.org/elliptic/-/elliptic-6.3.2.tgz\",\n\t\t\t\"spec\": \"https://registry.npmjs.org/elliptic/-/elliptic-6.3.2.tgz\",\n\t\t\t\"type\": \"remote\"\n\t\t},\n\t\t\"_requiredBy\": [\n\t\t\t\"/\",\n\t\t\t\"/@tradle/protocol\",\n\t\t\t\"/browserify-sign\",\n\t\t\t\"/create-ecdh\",\n\t\t\t\"/secp256k1\"\n\t\t],\n\t\t\"_resolved\": \"https://registry.npmjs.org/elliptic/-/elliptic-6.3.2.tgz\",\n\t\t\"_shasum\": \"e4c81e0829cf0a65ab70e998b8232723b5c1bc48\",\n\t\t\"_shrinkwrap\": null,\n\t\t\"_spec\": \"elliptic@https://registry.npmjs.org/elliptic/-/elliptic-6.3.2.tgz\",\n\t\t\"_where\": \"/Users/tenaciousmv/Code/tradle-app-web\",\n\t\t\"author\": {\n\t\t\t\"name\": \"Fedor Indutny\",\n\t\t\t\"email\": \"fedor@indutny.com\"\n\t\t},\n\t\t\"bugs\": {\n\t\t\t\"url\": \"https://github.com/indutny/elliptic/issues\"\n\t\t},\n\t\t\"dependencies\": {\n\t\t\t\"bn.js\": \"^4.4.0\",\n\t\t\t\"brorand\": \"^1.0.1\",\n\t\t\t\"hash.js\": \"^1.0.0\",\n\t\t\t\"inherits\": \"^2.0.1\"\n\t\t},\n\t\t\"description\": \"EC cryptography\",\n\t\t\"devDependencies\": {\n\t\t\t\"brfs\": \"^1.4.3\",\n\t\t\t\"coveralls\": \"^2.11.3\",\n\t\t\t\"grunt\": \"^0.4.5\",\n\t\t\t\"grunt-browserify\": \"^5.0.0\",\n\t\t\t\"grunt-contrib-connect\": \"^1.0.0\",\n\t\t\t\"grunt-contrib-copy\": \"^1.0.0\",\n\t\t\t\"grunt-contrib-uglify\": \"^1.0.1\",\n\t\t\t\"grunt-mocha-istanbul\": \"^3.0.1\",\n\t\t\t\"grunt-saucelabs\": \"^8.6.2\",\n\t\t\t\"istanbul\": \"^0.4.2\",\n\t\t\t\"jscs\": \"^2.9.0\",\n\t\t\t\"jshint\": \"^2.6.0\",\n\t\t\t\"mocha\": \"^2.1.0\"\n\t\t},\n\t\t\"files\": [\n\t\t\t\"lib\"\n\t\t],\n\t\t\"homepage\": \"https://github.com/indutny/elliptic\",\n\t\t\"keywords\": [\n\t\t\t\"EC\",\n\t\t\t\"Elliptic\",\n\t\t\t\"curve\",\n\t\t\t\"Cryptography\"\n\t\t],\n\t\t\"license\": \"MIT\",\n\t\t\"main\": \"lib/elliptic.js\",\n\t\t\"name\": \"elliptic\",\n\t\t\"optionalDependencies\": {},\n\t\t\"readme\": \"# Elliptic [![Build Status](https://secure.travis-ci.org/indutny/elliptic.png)](http://travis-ci.org/indutny/elliptic) [![Coverage Status](https://coveralls.io/repos/indutny/elliptic/badge.svg?branch=master&service=github)](https://coveralls.io/github/indutny/elliptic?branch=master) [![Code Climate](https://codeclimate.com/github/indutny/elliptic/badges/gpa.svg)](https://codeclimate.com/github/indutny/elliptic)\\n\\n[![Saucelabs Test Status](https://saucelabs.com/browser-matrix/gh-indutny-elliptic.svg)](https://saucelabs.com/u/gh-indutny-elliptic)\\n\\nFast elliptic-curve cryptography in a plain javascript implementation.\\n\\nNOTE: Please take a look at http://safecurves.cr.yp.to/ before choosing a curve\\nfor your cryptography operations.\\n\\n## Incentive\\n\\nECC is much slower than regular RSA cryptography, the JS implementations are\\neven more slower.\\n\\n## Benchmarks\\n\\n```bash\\n$ node benchmarks/index.js\\nBenchmarking: sign\\nelliptic#sign x 262 ops/sec ±0.51% (177 runs sampled)\\neccjs#sign x 55.91 ops/sec ±0.90% (144 runs sampled)\\n------------------------\\nFastest is elliptic#sign\\n========================\\nBenchmarking: verify\\nelliptic#verify x 113 ops/sec ±0.50% (166 runs sampled)\\neccjs#verify x 48.56 ops/sec ±0.36% (125 runs sampled)\\n------------------------\\nFastest is elliptic#verify\\n========================\\nBenchmarking: gen\\nelliptic#gen x 294 ops/sec ±0.43% (176 runs sampled)\\neccjs#gen x 62.25 ops/sec ±0.63% (129 runs sampled)\\n------------------------\\nFastest is elliptic#gen\\n========================\\nBenchmarking: ecdh\\nelliptic#ecdh x 136 ops/sec ±0.85% (156 runs sampled)\\n------------------------\\nFastest is elliptic#ecdh\\n========================\\n```\\n\\n## API\\n\\n### ECDSA\\n\\n```javascript\\nvar EC = require('elliptic').ec;\\n\\n// Create and initialize EC context\\n// (better do it once and reuse it)\\nvar ec = new EC('secp256k1');\\n\\n// Generate keys\\nvar key = ec.genKeyPair();\\n\\n// Sign message (must be an array, or it'll be treated as a hex sequence)\\nvar msg = [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 ];\\nvar signature = key.sign(msg);\\n\\n// Export DER encoded signature in Array\\nvar derSign = signature.toDER();\\n\\n// Verify signature\\nconsole.log(key.verify(msg, derSign));\\n\\n// CHECK WITH NO PRIVATE KEY\\n\\n// Public key as '04 + x + y'\\nvar pub = '04bb1fa3...';\\n\\n// Signature MUST be either:\\n// 1) hex-string of DER-encoded signature; or\\n// 2) DER-encoded signature as buffer; or\\n// 3) object with two hex-string properties (r and s)\\n\\nvar signature = 'b102ac...'; // case 1\\nvar signature = new Buffer('...'); // case 2\\nvar signature = { r: 'b1fc...', s: '9c42...' }; // case 3\\n\\n// Import public key\\nvar key = ec.keyFromPublic(pub, 'hex');\\n\\n// Verify signature\\nconsole.log(key.verify(msg, signature));\\n```\\n\\n### EdDSA\\n\\n```javascript\\nvar EdDSA = require('elliptic').eddsa;\\n\\n// Create and initialize EdDSA context\\n// (better do it once and reuse it)\\nvar ec = new EdDSA('ed25519');\\n\\n// Create key pair from secret\\nvar key = ec.keyFromSecret('693e3c...'); // hex string, array or Buffer\\n\\n// Sign message (must be an array, or it'll be treated as a hex sequence)\\nvar msg = [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 ];\\nvar signature = key.sign(msg).toHex();\\n\\n// Verify signature\\nconsole.log(key.verify(msg, signature));\\n\\n// CHECK WITH NO PRIVATE KEY\\n\\n// Import public key\\nvar pub = '0a1af638...';\\nvar key = ec.keyFromPublic(pub, 'hex');\\n\\n// Verify signature\\nvar signature = '70bed1...';\\nconsole.log(key.verify(msg, signature));\\n```\\n\\n### ECDH\\n\\n```javascript\\nvar ECDH = require('elliptic').ec;\\nvar ec = new ECDH('curve25519');\\n\\n// Generate keys\\nvar key1 = ec.genKeyPair();\\nvar key2 = ec.genKeyPair();\\n\\nvar shared1 = key1.derive(key2.getPublic());\\nvar shared2 = key2.derive(key1.getPublic());\\n\\nconsole.log('Both shared secrets are BN instances');\\nconsole.log(shared1.toString(16));\\nconsole.log(shared2.toString(16));\\n```\\n\\nNOTE: `.derive()` returns a [BN][1] instance.\\n\\n## Supported curves\\n\\nElliptic.js support following curve types:\\n\\n* Short Weierstrass\\n* Montgomery\\n* Edwards\\n* Twisted Edwards\\n\\nFollowing curve 'presets' are embedded into the library:\\n\\n* `secp256k1`\\n* `p192`\\n* `p224`\\n* `p256`\\n* `p384`\\n* `p521`\\n* `curve25519`\\n* `ed25519`\\n\\nNOTE: That `curve25519` could not be used for ECDSA, use `ed25519` instead.\\n\\n### Implementation details\\n\\nECDSA is using deterministic `k` value generation as per [RFC6979][0]. Most of\\nthe curve operations are performed on non-affine coordinates (either projective\\nor extended), various windowing techniques are used for different cases.\\n\\nAll operations are performed in reduction context using [bn.js][1], hashing is\\nprovided by [hash.js][2]\\n\\n### Related projects\\n\\n* [eccrypto][3]: isomorphic implementation of ECDSA, ECDH and ECIES for both\\n  browserify and node (uses `elliptic` for browser and [secp256k1-node][4] for\\n  node)\\n\\n#### LICENSE\\n\\nThis software is licensed under the MIT License.\\n\\nCopyright Fedor Indutny, 2014.\\n\\nPermission is hereby granted, free of charge, to any person obtaining a\\ncopy of this software and associated documentation files (the\\n\\\"Software\\\"), to deal in the Software without restriction, including\\nwithout limitation the rights to use, copy, modify, merge, publish,\\ndistribute, sublicense, and/or sell copies of the Software, and to permit\\npersons to whom the Software is furnished to do so, subject to the\\nfollowing conditions:\\n\\nThe above copyright notice and this permission notice shall be included\\nin all copies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\\nOR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\\nNO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\\nDAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\\nOTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\\nUSE OR OTHER DEALINGS IN THE SOFTWARE.\\n\\n[0]: http://tools.ietf.org/html/rfc6979\\n[1]: https://github.com/indutny/bn.js\\n[2]: https://github.com/indutny/hash.js\\n[3]: https://github.com/bitchan/eccrypto\\n[4]: https://github.com/wanderer/secp256k1-node\\n\",\n\t\t\"readmeFilename\": \"README.md\",\n\t\t\"repository\": {\n\t\t\t\"type\": \"git\",\n\t\t\t\"url\": \"git+ssh://git@github.com/indutny/elliptic.git\"\n\t\t},\n\t\t\"scripts\": {\n\t\t\t\"jscs\": \"jscs benchmarks/*.js lib/*.js lib/**/*.js lib/**/**/*.js test/index.js\",\n\t\t\t\"jshint\": \"jscs benchmarks/*.js lib/*.js lib/**/*.js lib/**/**/*.js test/index.js\",\n\t\t\t\"lint\": \"npm run jscs && npm run jshint\",\n\t\t\t\"test\": \"npm run lint && npm run unit\",\n\t\t\t\"unit\": \"istanbul test _mocha --reporter=spec test/index.js\",\n\t\t\t\"version\": \"grunt dist && git add dist/\"\n\t\t},\n\t\t\"version\": \"6.3.2\"\n\t};\n\n/***/ },\n\n/***/ 893:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar utils = exports;\n\tvar BN = __webpack_require__(881);\n\t\n\tutils.assert = function assert(val, msg) {\n\t  if (!val) throw new Error(msg || 'Assertion failed');\n\t};\n\t\n\tfunction toArray(msg, enc) {\n\t  if (Array.isArray(msg)) return msg.slice();\n\t  if (!msg) return [];\n\t  var res = [];\n\t  if (typeof msg !== 'string') {\n\t    for (var i = 0; i < msg.length; i++) {\n\t      res[i] = msg[i] | 0;\n\t    }return res;\n\t  }\n\t  if (!enc) {\n\t    for (var i = 0; i < msg.length; i++) {\n\t      var c = msg.charCodeAt(i);\n\t      var hi = c >> 8;\n\t      var lo = c & 0xff;\n\t      if (hi) res.push(hi, lo);else res.push(lo);\n\t    }\n\t  } else if (enc === 'hex') {\n\t    msg = msg.replace(/[^a-z0-9]+/ig, '');\n\t    if (msg.length % 2 !== 0) msg = '0' + msg;\n\t    for (var i = 0; i < msg.length; i += 2) {\n\t      res.push(parseInt(msg[i] + msg[i + 1], 16));\n\t    }\n\t  }\n\t  return res;\n\t}\n\tutils.toArray = toArray;\n\t\n\tfunction zero2(word) {\n\t  if (word.length === 1) return '0' + word;else return word;\n\t}\n\tutils.zero2 = zero2;\n\t\n\tfunction toHex(msg) {\n\t  var res = '';\n\t  for (var i = 0; i < msg.length; i++) {\n\t    res += zero2(msg[i].toString(16));\n\t  }return res;\n\t}\n\tutils.toHex = toHex;\n\t\n\tutils.encode = function encode(arr, enc) {\n\t  if (enc === 'hex') return toHex(arr);else return arr;\n\t};\n\t\n\t// Represent num in a w-NAF form\n\tfunction getNAF(num, w) {\n\t  var naf = [];\n\t  var ws = 1 << w + 1;\n\t  var k = num.clone();\n\t  while (k.cmpn(1) >= 0) {\n\t    var z;\n\t    if (k.isOdd()) {\n\t      var mod = k.andln(ws - 1);\n\t      if (mod > (ws >> 1) - 1) z = (ws >> 1) - mod;else z = mod;\n\t      k.isubn(z);\n\t    } else {\n\t      z = 0;\n\t    }\n\t    naf.push(z);\n\t\n\t    // Optimization, shift by word if possible\n\t    var shift = k.cmpn(0) !== 0 && k.andln(ws - 1) === 0 ? w + 1 : 1;\n\t    for (var i = 1; i < shift; i++) {\n\t      naf.push(0);\n\t    }k.iushrn(shift);\n\t  }\n\t\n\t  return naf;\n\t}\n\tutils.getNAF = getNAF;\n\t\n\t// Represent k1, k2 in a Joint Sparse Form\n\tfunction getJSF(k1, k2) {\n\t  var jsf = [[], []];\n\t\n\t  k1 = k1.clone();\n\t  k2 = k2.clone();\n\t  var d1 = 0;\n\t  var d2 = 0;\n\t  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {\n\t\n\t    // First phase\n\t    var m14 = k1.andln(3) + d1 & 3;\n\t    var m24 = k2.andln(3) + d2 & 3;\n\t    if (m14 === 3) m14 = -1;\n\t    if (m24 === 3) m24 = -1;\n\t    var u1;\n\t    if ((m14 & 1) === 0) {\n\t      u1 = 0;\n\t    } else {\n\t      var m8 = k1.andln(7) + d1 & 7;\n\t      if ((m8 === 3 || m8 === 5) && m24 === 2) u1 = -m14;else u1 = m14;\n\t    }\n\t    jsf[0].push(u1);\n\t\n\t    var u2;\n\t    if ((m24 & 1) === 0) {\n\t      u2 = 0;\n\t    } else {\n\t      var m8 = k2.andln(7) + d2 & 7;\n\t      if ((m8 === 3 || m8 === 5) && m14 === 2) u2 = -m24;else u2 = m24;\n\t    }\n\t    jsf[1].push(u2);\n\t\n\t    // Second phase\n\t    if (2 * d1 === u1 + 1) d1 = 1 - d1;\n\t    if (2 * d2 === u2 + 1) d2 = 1 - d2;\n\t    k1.iushrn(1);\n\t    k2.iushrn(1);\n\t  }\n\t\n\t  return jsf;\n\t}\n\tutils.getJSF = getJSF;\n\t\n\tfunction cachedProperty(obj, name, computer) {\n\t  var key = '_' + name;\n\t  obj.prototype[name] = function cachedProperty() {\n\t    return this[key] !== undefined ? this[key] : this[key] = computer.call(this);\n\t  };\n\t}\n\tutils.cachedProperty = cachedProperty;\n\t\n\tfunction parseBytes(bytes) {\n\t  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') : bytes;\n\t}\n\tutils.parseBytes = parseBytes;\n\t\n\tfunction intFromLE(bytes) {\n\t  return new BN(bytes, 'hex', 'le');\n\t}\n\tutils.intFromLE = intFromLE;\n\n/***/ },\n\n/***/ 894:\n[2492, 891],\n\n/***/ 901:\n[2493, 902, 903, 904, 905],\n\n/***/ 902:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar BN = __webpack_require__(881);\n\tvar elliptic = __webpack_require__(891);\n\tvar utils = elliptic.utils;\n\tvar getNAF = utils.getNAF;\n\tvar getJSF = utils.getJSF;\n\tvar assert = utils.assert;\n\t\n\tfunction BaseCurve(type, conf) {\n\t  this.type = type;\n\t  this.p = new BN(conf.p, 16);\n\t\n\t  // Use Montgomery, when there is no fast reduction for the prime\n\t  this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p);\n\t\n\t  // Useful for many curves\n\t  this.zero = new BN(0).toRed(this.red);\n\t  this.one = new BN(1).toRed(this.red);\n\t  this.two = new BN(2).toRed(this.red);\n\t\n\t  // Curve configuration, optional\n\t  this.n = conf.n && new BN(conf.n, 16);\n\t  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);\n\t\n\t  // Temporary arrays\n\t  this._wnafT1 = new Array(4);\n\t  this._wnafT2 = new Array(4);\n\t  this._wnafT3 = new Array(4);\n\t  this._wnafT4 = new Array(4);\n\t\n\t  // Generalized Greg Maxwell's trick\n\t  var adjustCount = this.n && this.p.div(this.n);\n\t  if (!adjustCount || adjustCount.cmpn(100) > 0) {\n\t    this.redN = null;\n\t  } else {\n\t    this._maxwellTrick = true;\n\t    this.redN = this.n.toRed(this.red);\n\t  }\n\t}\n\tmodule.exports = BaseCurve;\n\t\n\tBaseCurve.prototype.point = function point() {\n\t  throw new Error('Not implemented');\n\t};\n\t\n\tBaseCurve.prototype.validate = function validate() {\n\t  throw new Error('Not implemented');\n\t};\n\t\n\tBaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {\n\t  assert(p.precomputed);\n\t  var doubles = p._getDoubles();\n\t\n\t  var naf = getNAF(k, 1);\n\t  var I = (1 << doubles.step + 1) - (doubles.step % 2 === 0 ? 2 : 1);\n\t  I /= 3;\n\t\n\t  // Translate into more windowed form\n\t  var repr = [];\n\t  for (var j = 0; j < naf.length; j += doubles.step) {\n\t    var nafW = 0;\n\t    for (var k = j + doubles.step - 1; k >= j; k--) {\n\t      nafW = (nafW << 1) + naf[k];\n\t    }repr.push(nafW);\n\t  }\n\t\n\t  var a = this.jpoint(null, null, null);\n\t  var b = this.jpoint(null, null, null);\n\t  for (var i = I; i > 0; i--) {\n\t    for (var j = 0; j < repr.length; j++) {\n\t      var nafW = repr[j];\n\t      if (nafW === i) b = b.mixedAdd(doubles.points[j]);else if (nafW === -i) b = b.mixedAdd(doubles.points[j].neg());\n\t    }\n\t    a = a.add(b);\n\t  }\n\t  return a.toP();\n\t};\n\t\n\tBaseCurve.prototype._wnafMul = function _wnafMul(p, k) {\n\t  var w = 4;\n\t\n\t  // Precompute window\n\t  var nafPoints = p._getNAFPoints(w);\n\t  w = nafPoints.wnd;\n\t  var wnd = nafPoints.points;\n\t\n\t  // Get NAF form\n\t  var naf = getNAF(k, w);\n\t\n\t  // Add `this`*(N+1) for every w-NAF index\n\t  var acc = this.jpoint(null, null, null);\n\t  for (var i = naf.length - 1; i >= 0; i--) {\n\t    // Count zeroes\n\t    for (var k = 0; i >= 0 && naf[i] === 0; i--) {\n\t      k++;\n\t    }if (i >= 0) k++;\n\t    acc = acc.dblp(k);\n\t\n\t    if (i < 0) break;\n\t    var z = naf[i];\n\t    assert(z !== 0);\n\t    if (p.type === 'affine') {\n\t      // J +- P\n\t      if (z > 0) acc = acc.mixedAdd(wnd[z - 1 >> 1]);else acc = acc.mixedAdd(wnd[-z - 1 >> 1].neg());\n\t    } else {\n\t      // J +- J\n\t      if (z > 0) acc = acc.add(wnd[z - 1 >> 1]);else acc = acc.add(wnd[-z - 1 >> 1].neg());\n\t    }\n\t  }\n\t  return p.type === 'affine' ? acc.toP() : acc;\n\t};\n\t\n\tBaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW, points, coeffs, len, jacobianResult) {\n\t  var wndWidth = this._wnafT1;\n\t  var wnd = this._wnafT2;\n\t  var naf = this._wnafT3;\n\t\n\t  // Fill all arrays\n\t  var max = 0;\n\t  for (var i = 0; i < len; i++) {\n\t    var p = points[i];\n\t    var nafPoints = p._getNAFPoints(defW);\n\t    wndWidth[i] = nafPoints.wnd;\n\t    wnd[i] = nafPoints.points;\n\t  }\n\t\n\t  // Comb small window NAFs\n\t  for (var i = len - 1; i >= 1; i -= 2) {\n\t    var a = i - 1;\n\t    var b = i;\n\t    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {\n\t      naf[a] = getNAF(coeffs[a], wndWidth[a]);\n\t      naf[b] = getNAF(coeffs[b], wndWidth[b]);\n\t      max = Math.max(naf[a].length, max);\n\t      max = Math.max(naf[b].length, max);\n\t      continue;\n\t    }\n\t\n\t    var comb = [points[a], /* 1 */\n\t    null, /* 3 */\n\t    null, /* 5 */\n\t    points[b] /* 7 */\n\t    ];\n\t\n\t    // Try to avoid Projective points, if possible\n\t    if (points[a].y.cmp(points[b].y) === 0) {\n\t      comb[1] = points[a].add(points[b]);\n\t      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n\t    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {\n\t      comb[1] = points[a].toJ().mixedAdd(points[b]);\n\t      comb[2] = points[a].add(points[b].neg());\n\t    } else {\n\t      comb[1] = points[a].toJ().mixedAdd(points[b]);\n\t      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n\t    }\n\t\n\t    var index = [-3, /* -1 -1 */\n\t    -1, /* -1 0 */\n\t    -5, /* -1 1 */\n\t    -7, /* 0 -1 */\n\t    0, /* 0 0 */\n\t    7, /* 0 1 */\n\t    5, /* 1 -1 */\n\t    1, /* 1 0 */\n\t    3 /* 1 1 */\n\t    ];\n\t\n\t    var jsf = getJSF(coeffs[a], coeffs[b]);\n\t    max = Math.max(jsf[0].length, max);\n\t    naf[a] = new Array(max);\n\t    naf[b] = new Array(max);\n\t    for (var j = 0; j < max; j++) {\n\t      var ja = jsf[0][j] | 0;\n\t      var jb = jsf[1][j] | 0;\n\t\n\t      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];\n\t      naf[b][j] = 0;\n\t      wnd[a] = comb;\n\t    }\n\t  }\n\t\n\t  var acc = this.jpoint(null, null, null);\n\t  var tmp = this._wnafT4;\n\t  for (var i = max; i >= 0; i--) {\n\t    var k = 0;\n\t\n\t    while (i >= 0) {\n\t      var zero = true;\n\t      for (var j = 0; j < len; j++) {\n\t        tmp[j] = naf[j][i] | 0;\n\t        if (tmp[j] !== 0) zero = false;\n\t      }\n\t      if (!zero) break;\n\t      k++;\n\t      i--;\n\t    }\n\t    if (i >= 0) k++;\n\t    acc = acc.dblp(k);\n\t    if (i < 0) break;\n\t\n\t    for (var j = 0; j < len; j++) {\n\t      var z = tmp[j];\n\t      var p;\n\t      if (z === 0) continue;else if (z > 0) p = wnd[j][z - 1 >> 1];else if (z < 0) p = wnd[j][-z - 1 >> 1].neg();\n\t\n\t      if (p.type === 'affine') acc = acc.mixedAdd(p);else acc = acc.add(p);\n\t    }\n\t  }\n\t  // Zeroify references\n\t  for (var i = 0; i < len; i++) {\n\t    wnd[i] = null;\n\t  }if (jacobianResult) return acc;else return acc.toP();\n\t};\n\t\n\tfunction BasePoint(curve, type) {\n\t  this.curve = curve;\n\t  this.type = type;\n\t  this.precomputed = null;\n\t}\n\tBaseCurve.BasePoint = BasePoint;\n\t\n\tBasePoint.prototype.eq = function eq() /*other*/{\n\t  throw new Error('Not implemented');\n\t};\n\t\n\tBasePoint.prototype.validate = function validate() {\n\t  return this.curve.validate(this);\n\t};\n\t\n\tBaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n\t  bytes = utils.toArray(bytes, enc);\n\t\n\t  var len = this.p.byteLength();\n\t\n\t  // uncompressed, hybrid-odd, hybrid-even\n\t  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) && bytes.length - 1 === 2 * len) {\n\t    if (bytes[0] === 0x06) assert(bytes[bytes.length - 1] % 2 === 0);else if (bytes[0] === 0x07) assert(bytes[bytes.length - 1] % 2 === 1);\n\t\n\t    var res = this.point(bytes.slice(1, 1 + len), bytes.slice(1 + len, 1 + 2 * len));\n\t\n\t    return res;\n\t  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) && bytes.length - 1 === len) {\n\t    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);\n\t  }\n\t  throw new Error('Unknown point format');\n\t};\n\t\n\tBasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {\n\t  return this.encode(enc, true);\n\t};\n\t\n\tBasePoint.prototype._encode = function _encode(compact) {\n\t  var len = this.curve.p.byteLength();\n\t  var x = this.getX().toArray('be', len);\n\t\n\t  if (compact) return [this.getY().isEven() ? 0x02 : 0x03].concat(x);\n\t\n\t  return [0x04].concat(x, this.getY().toArray('be', len));\n\t};\n\t\n\tBasePoint.prototype.encode = function encode(enc, compact) {\n\t  return utils.encode(this._encode(compact), enc);\n\t};\n\t\n\tBasePoint.prototype.precompute = function precompute(power) {\n\t  if (this.precomputed) return this;\n\t\n\t  var precomputed = {\n\t    doubles: null,\n\t    naf: null,\n\t    beta: null\n\t  };\n\t  precomputed.naf = this._getNAFPoints(8);\n\t  precomputed.doubles = this._getDoubles(4, power);\n\t  precomputed.beta = this._getBeta();\n\t  this.precomputed = precomputed;\n\t\n\t  return this;\n\t};\n\t\n\tBasePoint.prototype._hasDoubles = function _hasDoubles(k) {\n\t  if (!this.precomputed) return false;\n\t\n\t  var doubles = this.precomputed.doubles;\n\t  if (!doubles) return false;\n\t\n\t  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);\n\t};\n\t\n\tBasePoint.prototype._getDoubles = function _getDoubles(step, power) {\n\t  if (this.precomputed && this.precomputed.doubles) return this.precomputed.doubles;\n\t\n\t  var doubles = [this];\n\t  var acc = this;\n\t  for (var i = 0; i < power; i += step) {\n\t    for (var j = 0; j < step; j++) {\n\t      acc = acc.dbl();\n\t    }doubles.push(acc);\n\t  }\n\t  return {\n\t    step: step,\n\t    points: doubles\n\t  };\n\t};\n\t\n\tBasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {\n\t  if (this.precomputed && this.precomputed.naf) return this.precomputed.naf;\n\t\n\t  var res = [this];\n\t  var max = (1 << wnd) - 1;\n\t  var dbl = max === 1 ? null : this.dbl();\n\t  for (var i = 1; i < max; i++) {\n\t    res[i] = res[i - 1].add(dbl);\n\t  }return {\n\t    wnd: wnd,\n\t    points: res\n\t  };\n\t};\n\t\n\tBasePoint.prototype._getBeta = function _getBeta() {\n\t  return null;\n\t};\n\t\n\tBasePoint.prototype.dblp = function dblp(k) {\n\t  var r = this;\n\t  for (var i = 0; i < k; i++) {\n\t    r = r.dbl();\n\t  }return r;\n\t};\n\n/***/ },\n\n/***/ 903:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar curve = __webpack_require__(901);\n\tvar elliptic = __webpack_require__(891);\n\tvar BN = __webpack_require__(881);\n\tvar inherits = __webpack_require__(821);\n\tvar Base = curve.base;\n\t\n\tvar assert = elliptic.utils.assert;\n\t\n\tfunction ShortCurve(conf) {\n\t  Base.call(this, 'short', conf);\n\t\n\t  this.a = new BN(conf.a, 16).toRed(this.red);\n\t  this.b = new BN(conf.b, 16).toRed(this.red);\n\t  this.tinv = this.two.redInvm();\n\t\n\t  this.zeroA = this.a.fromRed().cmpn(0) === 0;\n\t  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;\n\t\n\t  // If the curve is endomorphic, precalculate beta and lambda\n\t  this.endo = this._getEndomorphism(conf);\n\t  this._endoWnafT1 = new Array(4);\n\t  this._endoWnafT2 = new Array(4);\n\t}\n\tinherits(ShortCurve, Base);\n\tmodule.exports = ShortCurve;\n\t\n\tShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {\n\t  // No efficient endomorphism\n\t  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1) return;\n\t\n\t  // Compute beta and lambda, that lambda * P = (beta * Px; Py)\n\t  var beta;\n\t  var lambda;\n\t  if (conf.beta) {\n\t    beta = new BN(conf.beta, 16).toRed(this.red);\n\t  } else {\n\t    var betas = this._getEndoRoots(this.p);\n\t    // Choose the smallest beta\n\t    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];\n\t    beta = beta.toRed(this.red);\n\t  }\n\t  if (conf.lambda) {\n\t    lambda = new BN(conf.lambda, 16);\n\t  } else {\n\t    // Choose the lambda that is matching selected beta\n\t    var lambdas = this._getEndoRoots(this.n);\n\t    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {\n\t      lambda = lambdas[0];\n\t    } else {\n\t      lambda = lambdas[1];\n\t      assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);\n\t    }\n\t  }\n\t\n\t  // Get basis vectors, used for balanced length-two representation\n\t  var basis;\n\t  if (conf.basis) {\n\t    basis = conf.basis.map(function (vec) {\n\t      return {\n\t        a: new BN(vec.a, 16),\n\t        b: new BN(vec.b, 16)\n\t      };\n\t    });\n\t  } else {\n\t    basis = this._getEndoBasis(lambda);\n\t  }\n\t\n\t  return {\n\t    beta: beta,\n\t    lambda: lambda,\n\t    basis: basis\n\t  };\n\t};\n\t\n\tShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {\n\t  // Find roots of for x^2 + x + 1 in F\n\t  // Root = (-1 +- Sqrt(-3)) / 2\n\t  //\n\t  var red = num === this.p ? this.red : BN.mont(num);\n\t  var tinv = new BN(2).toRed(red).redInvm();\n\t  var ntinv = tinv.redNeg();\n\t\n\t  var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);\n\t\n\t  var l1 = ntinv.redAdd(s).fromRed();\n\t  var l2 = ntinv.redSub(s).fromRed();\n\t  return [l1, l2];\n\t};\n\t\n\tShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {\n\t  // aprxSqrt >= sqrt(this.n)\n\t  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));\n\t\n\t  // 3.74\n\t  // Run EGCD, until r(L + 1) < aprxSqrt\n\t  var u = lambda;\n\t  var v = this.n.clone();\n\t  var x1 = new BN(1);\n\t  var y1 = new BN(0);\n\t  var x2 = new BN(0);\n\t  var y2 = new BN(1);\n\t\n\t  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)\n\t  var a0;\n\t  var b0;\n\t  // First vector\n\t  var a1;\n\t  var b1;\n\t  // Second vector\n\t  var a2;\n\t  var b2;\n\t\n\t  var prevR;\n\t  var i = 0;\n\t  var r;\n\t  var x;\n\t  while (u.cmpn(0) !== 0) {\n\t    var q = v.div(u);\n\t    r = v.sub(q.mul(u));\n\t    x = x2.sub(q.mul(x1));\n\t    var y = y2.sub(q.mul(y1));\n\t\n\t    if (!a1 && r.cmp(aprxSqrt) < 0) {\n\t      a0 = prevR.neg();\n\t      b0 = x1;\n\t      a1 = r.neg();\n\t      b1 = x;\n\t    } else if (a1 && ++i === 2) {\n\t      break;\n\t    }\n\t    prevR = r;\n\t\n\t    v = u;\n\t    u = r;\n\t    x2 = x1;\n\t    x1 = x;\n\t    y2 = y1;\n\t    y1 = y;\n\t  }\n\t  a2 = r.neg();\n\t  b2 = x;\n\t\n\t  var len1 = a1.sqr().add(b1.sqr());\n\t  var len2 = a2.sqr().add(b2.sqr());\n\t  if (len2.cmp(len1) >= 0) {\n\t    a2 = a0;\n\t    b2 = b0;\n\t  }\n\t\n\t  // Normalize signs\n\t  if (a1.negative) {\n\t    a1 = a1.neg();\n\t    b1 = b1.neg();\n\t  }\n\t  if (a2.negative) {\n\t    a2 = a2.neg();\n\t    b2 = b2.neg();\n\t  }\n\t\n\t  return [{ a: a1, b: b1 }, { a: a2, b: b2 }];\n\t};\n\t\n\tShortCurve.prototype._endoSplit = function _endoSplit(k) {\n\t  var basis = this.endo.basis;\n\t  var v1 = basis[0];\n\t  var v2 = basis[1];\n\t\n\t  var c1 = v2.b.mul(k).divRound(this.n);\n\t  var c2 = v1.b.neg().mul(k).divRound(this.n);\n\t\n\t  var p1 = c1.mul(v1.a);\n\t  var p2 = c2.mul(v2.a);\n\t  var q1 = c1.mul(v1.b);\n\t  var q2 = c2.mul(v2.b);\n\t\n\t  // Calculate answer\n\t  var k1 = k.sub(p1).sub(p2);\n\t  var k2 = q1.add(q2).neg();\n\t  return { k1: k1, k2: k2 };\n\t};\n\t\n\tShortCurve.prototype.pointFromX = function pointFromX(x, odd) {\n\t  x = new BN(x, 16);\n\t  if (!x.red) x = x.toRed(this.red);\n\t\n\t  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);\n\t  var y = y2.redSqrt();\n\t  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0) throw new Error('invalid point');\n\t\n\t  // XXX Is there any way to tell if the number is odd without converting it\n\t  // to non-red form?\n\t  var isOdd = y.fromRed().isOdd();\n\t  if (odd && !isOdd || !odd && isOdd) y = y.redNeg();\n\t\n\t  return this.point(x, y);\n\t};\n\t\n\tShortCurve.prototype.validate = function validate(point) {\n\t  if (point.inf) return true;\n\t\n\t  var x = point.x;\n\t  var y = point.y;\n\t\n\t  var ax = this.a.redMul(x);\n\t  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);\n\t  return y.redSqr().redISub(rhs).cmpn(0) === 0;\n\t};\n\t\n\tShortCurve.prototype._endoWnafMulAdd = function _endoWnafMulAdd(points, coeffs, jacobianResult) {\n\t  var npoints = this._endoWnafT1;\n\t  var ncoeffs = this._endoWnafT2;\n\t  for (var i = 0; i < points.length; i++) {\n\t    var split = this._endoSplit(coeffs[i]);\n\t    var p = points[i];\n\t    var beta = p._getBeta();\n\t\n\t    if (split.k1.negative) {\n\t      split.k1.ineg();\n\t      p = p.neg(true);\n\t    }\n\t    if (split.k2.negative) {\n\t      split.k2.ineg();\n\t      beta = beta.neg(true);\n\t    }\n\t\n\t    npoints[i * 2] = p;\n\t    npoints[i * 2 + 1] = beta;\n\t    ncoeffs[i * 2] = split.k1;\n\t    ncoeffs[i * 2 + 1] = split.k2;\n\t  }\n\t  var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);\n\t\n\t  // Clean-up references to points and coefficients\n\t  for (var j = 0; j < i * 2; j++) {\n\t    npoints[j] = null;\n\t    ncoeffs[j] = null;\n\t  }\n\t  return res;\n\t};\n\t\n\tfunction Point(curve, x, y, isRed) {\n\t  Base.BasePoint.call(this, curve, 'affine');\n\t  if (x === null && y === null) {\n\t    this.x = null;\n\t    this.y = null;\n\t    this.inf = true;\n\t  } else {\n\t    this.x = new BN(x, 16);\n\t    this.y = new BN(y, 16);\n\t    // Force redgomery representation when loading from JSON\n\t    if (isRed) {\n\t      this.x.forceRed(this.curve.red);\n\t      this.y.forceRed(this.curve.red);\n\t    }\n\t    if (!this.x.red) this.x = this.x.toRed(this.curve.red);\n\t    if (!this.y.red) this.y = this.y.toRed(this.curve.red);\n\t    this.inf = false;\n\t  }\n\t}\n\tinherits(Point, Base.BasePoint);\n\t\n\tShortCurve.prototype.point = function point(x, y, isRed) {\n\t  return new Point(this, x, y, isRed);\n\t};\n\t\n\tShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {\n\t  return Point.fromJSON(this, obj, red);\n\t};\n\t\n\tPoint.prototype._getBeta = function _getBeta() {\n\t  if (!this.curve.endo) return;\n\t\n\t  var pre = this.precomputed;\n\t  if (pre && pre.beta) return pre.beta;\n\t\n\t  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);\n\t  if (pre) {\n\t    var curve = this.curve;\n\t    var endoMul = function endoMul(p) {\n\t      return curve.point(p.x.redMul(curve.endo.beta), p.y);\n\t    };\n\t    pre.beta = beta;\n\t    beta.precomputed = {\n\t      beta: null,\n\t      naf: pre.naf && {\n\t        wnd: pre.naf.wnd,\n\t        points: pre.naf.points.map(endoMul)\n\t      },\n\t      doubles: pre.doubles && {\n\t        step: pre.doubles.step,\n\t        points: pre.doubles.points.map(endoMul)\n\t      }\n\t    };\n\t  }\n\t  return beta;\n\t};\n\t\n\tPoint.prototype.toJSON = function toJSON() {\n\t  if (!this.precomputed) return [this.x, this.y];\n\t\n\t  return [this.x, this.y, this.precomputed && {\n\t    doubles: this.precomputed.doubles && {\n\t      step: this.precomputed.doubles.step,\n\t      points: this.precomputed.doubles.points.slice(1)\n\t    },\n\t    naf: this.precomputed.naf && {\n\t      wnd: this.precomputed.naf.wnd,\n\t      points: this.precomputed.naf.points.slice(1)\n\t    }\n\t  }];\n\t};\n\t\n\tPoint.fromJSON = function fromJSON(curve, obj, red) {\n\t  if (typeof obj === 'string') obj = JSON.parse(obj);\n\t  var res = curve.point(obj[0], obj[1], red);\n\t  if (!obj[2]) return res;\n\t\n\t  function obj2point(obj) {\n\t    return curve.point(obj[0], obj[1], red);\n\t  }\n\t\n\t  var pre = obj[2];\n\t  res.precomputed = {\n\t    beta: null,\n\t    doubles: pre.doubles && {\n\t      step: pre.doubles.step,\n\t      points: [res].concat(pre.doubles.points.map(obj2point))\n\t    },\n\t    naf: pre.naf && {\n\t      wnd: pre.naf.wnd,\n\t      points: [res].concat(pre.naf.points.map(obj2point))\n\t    }\n\t  };\n\t  return res;\n\t};\n\t\n\tPoint.prototype.inspect = function inspect() {\n\t  if (this.isInfinity()) return '<EC Point Infinity>';\n\t  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) + ' y: ' + this.y.fromRed().toString(16, 2) + '>';\n\t};\n\t\n\tPoint.prototype.isInfinity = function isInfinity() {\n\t  return this.inf;\n\t};\n\t\n\tPoint.prototype.add = function add(p) {\n\t  // O + P = P\n\t  if (this.inf) return p;\n\t\n\t  // P + O = P\n\t  if (p.inf) return this;\n\t\n\t  // P + P = 2P\n\t  if (this.eq(p)) return this.dbl();\n\t\n\t  // P + (-P) = O\n\t  if (this.neg().eq(p)) return this.curve.point(null, null);\n\t\n\t  // P + Q = O\n\t  if (this.x.cmp(p.x) === 0) return this.curve.point(null, null);\n\t\n\t  var c = this.y.redSub(p.y);\n\t  if (c.cmpn(0) !== 0) c = c.redMul(this.x.redSub(p.x).redInvm());\n\t  var nx = c.redSqr().redISub(this.x).redISub(p.x);\n\t  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n\t  return this.curve.point(nx, ny);\n\t};\n\t\n\tPoint.prototype.dbl = function dbl() {\n\t  if (this.inf) return this;\n\t\n\t  // 2P = O\n\t  var ys1 = this.y.redAdd(this.y);\n\t  if (ys1.cmpn(0) === 0) return this.curve.point(null, null);\n\t\n\t  var a = this.curve.a;\n\t\n\t  var x2 = this.x.redSqr();\n\t  var dyinv = ys1.redInvm();\n\t  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);\n\t\n\t  var nx = c.redSqr().redISub(this.x.redAdd(this.x));\n\t  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n\t  return this.curve.point(nx, ny);\n\t};\n\t\n\tPoint.prototype.getX = function getX() {\n\t  return this.x.fromRed();\n\t};\n\t\n\tPoint.prototype.getY = function getY() {\n\t  return this.y.fromRed();\n\t};\n\t\n\tPoint.prototype.mul = function mul(k) {\n\t  k = new BN(k, 16);\n\t\n\t  if (this._hasDoubles(k)) return this.curve._fixedNafMul(this, k);else if (this.curve.endo) return this.curve._endoWnafMulAdd([this], [k]);else return this.curve._wnafMul(this, k);\n\t};\n\t\n\tPoint.prototype.mulAdd = function mulAdd(k1, p2, k2) {\n\t  var points = [this, p2];\n\t  var coeffs = [k1, k2];\n\t  if (this.curve.endo) return this.curve._endoWnafMulAdd(points, coeffs);else return this.curve._wnafMulAdd(1, points, coeffs, 2);\n\t};\n\t\n\tPoint.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {\n\t  var points = [this, p2];\n\t  var coeffs = [k1, k2];\n\t  if (this.curve.endo) return this.curve._endoWnafMulAdd(points, coeffs, true);else return this.curve._wnafMulAdd(1, points, coeffs, 2, true);\n\t};\n\t\n\tPoint.prototype.eq = function eq(p) {\n\t  return this === p || this.inf === p.inf && (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);\n\t};\n\t\n\tPoint.prototype.neg = function neg(_precompute) {\n\t  if (this.inf) return this;\n\t\n\t  var res = this.curve.point(this.x, this.y.redNeg());\n\t  if (_precompute && this.precomputed) {\n\t    var pre = this.precomputed;\n\t    var negate = function negate(p) {\n\t      return p.neg();\n\t    };\n\t    res.precomputed = {\n\t      naf: pre.naf && {\n\t        wnd: pre.naf.wnd,\n\t        points: pre.naf.points.map(negate)\n\t      },\n\t      doubles: pre.doubles && {\n\t        step: pre.doubles.step,\n\t        points: pre.doubles.points.map(negate)\n\t      }\n\t    };\n\t  }\n\t  return res;\n\t};\n\t\n\tPoint.prototype.toJ = function toJ() {\n\t  if (this.inf) return this.curve.jpoint(null, null, null);\n\t\n\t  var res = this.curve.jpoint(this.x, this.y, this.curve.one);\n\t  return res;\n\t};\n\t\n\tfunction JPoint(curve, x, y, z) {\n\t  Base.BasePoint.call(this, curve, 'jacobian');\n\t  if (x === null && y === null && z === null) {\n\t    this.x = this.curve.one;\n\t    this.y = this.curve.one;\n\t    this.z = new BN(0);\n\t  } else {\n\t    this.x = new BN(x, 16);\n\t    this.y = new BN(y, 16);\n\t    this.z = new BN(z, 16);\n\t  }\n\t  if (!this.x.red) this.x = this.x.toRed(this.curve.red);\n\t  if (!this.y.red) this.y = this.y.toRed(this.curve.red);\n\t  if (!this.z.red) this.z = this.z.toRed(this.curve.red);\n\t\n\t  this.zOne = this.z === this.curve.one;\n\t}\n\tinherits(JPoint, Base.BasePoint);\n\t\n\tShortCurve.prototype.jpoint = function jpoint(x, y, z) {\n\t  return new JPoint(this, x, y, z);\n\t};\n\t\n\tJPoint.prototype.toP = function toP() {\n\t  if (this.isInfinity()) return this.curve.point(null, null);\n\t\n\t  var zinv = this.z.redInvm();\n\t  var zinv2 = zinv.redSqr();\n\t  var ax = this.x.redMul(zinv2);\n\t  var ay = this.y.redMul(zinv2).redMul(zinv);\n\t\n\t  return this.curve.point(ax, ay);\n\t};\n\t\n\tJPoint.prototype.neg = function neg() {\n\t  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);\n\t};\n\t\n\tJPoint.prototype.add = function add(p) {\n\t  // O + P = P\n\t  if (this.isInfinity()) return p;\n\t\n\t  // P + O = P\n\t  if (p.isInfinity()) return this;\n\t\n\t  // 12M + 4S + 7A\n\t  var pz2 = p.z.redSqr();\n\t  var z2 = this.z.redSqr();\n\t  var u1 = this.x.redMul(pz2);\n\t  var u2 = p.x.redMul(z2);\n\t  var s1 = this.y.redMul(pz2.redMul(p.z));\n\t  var s2 = p.y.redMul(z2.redMul(this.z));\n\t\n\t  var h = u1.redSub(u2);\n\t  var r = s1.redSub(s2);\n\t  if (h.cmpn(0) === 0) {\n\t    if (r.cmpn(0) !== 0) return this.curve.jpoint(null, null, null);else return this.dbl();\n\t  }\n\t\n\t  var h2 = h.redSqr();\n\t  var h3 = h2.redMul(h);\n\t  var v = u1.redMul(h2);\n\t\n\t  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n\t  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n\t  var nz = this.z.redMul(p.z).redMul(h);\n\t\n\t  return this.curve.jpoint(nx, ny, nz);\n\t};\n\t\n\tJPoint.prototype.mixedAdd = function mixedAdd(p) {\n\t  // O + P = P\n\t  if (this.isInfinity()) return p.toJ();\n\t\n\t  // P + O = P\n\t  if (p.isInfinity()) return this;\n\t\n\t  // 8M + 3S + 7A\n\t  var z2 = this.z.redSqr();\n\t  var u1 = this.x;\n\t  var u2 = p.x.redMul(z2);\n\t  var s1 = this.y;\n\t  var s2 = p.y.redMul(z2).redMul(this.z);\n\t\n\t  var h = u1.redSub(u2);\n\t  var r = s1.redSub(s2);\n\t  if (h.cmpn(0) === 0) {\n\t    if (r.cmpn(0) !== 0) return this.curve.jpoint(null, null, null);else return this.dbl();\n\t  }\n\t\n\t  var h2 = h.redSqr();\n\t  var h3 = h2.redMul(h);\n\t  var v = u1.redMul(h2);\n\t\n\t  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n\t  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n\t  var nz = this.z.redMul(h);\n\t\n\t  return this.curve.jpoint(nx, ny, nz);\n\t};\n\t\n\tJPoint.prototype.dblp = function dblp(pow) {\n\t  if (pow === 0) return this;\n\t  if (this.isInfinity()) return this;\n\t  if (!pow) return this.dbl();\n\t\n\t  if (this.curve.zeroA || this.curve.threeA) {\n\t    var r = this;\n\t    for (var i = 0; i < pow; i++) {\n\t      r = r.dbl();\n\t    }return r;\n\t  }\n\t\n\t  // 1M + 2S + 1A + N * (4S + 5M + 8A)\n\t  // N = 1 => 6M + 6S + 9A\n\t  var a = this.curve.a;\n\t  var tinv = this.curve.tinv;\n\t\n\t  var jx = this.x;\n\t  var jy = this.y;\n\t  var jz = this.z;\n\t  var jz4 = jz.redSqr().redSqr();\n\t\n\t  // Reuse results\n\t  var jyd = jy.redAdd(jy);\n\t  for (var i = 0; i < pow; i++) {\n\t    var jx2 = jx.redSqr();\n\t    var jyd2 = jyd.redSqr();\n\t    var jyd4 = jyd2.redSqr();\n\t    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\t\n\t    var t1 = jx.redMul(jyd2);\n\t    var nx = c.redSqr().redISub(t1.redAdd(t1));\n\t    var t2 = t1.redISub(nx);\n\t    var dny = c.redMul(t2);\n\t    dny = dny.redIAdd(dny).redISub(jyd4);\n\t    var nz = jyd.redMul(jz);\n\t    if (i + 1 < pow) jz4 = jz4.redMul(jyd4);\n\t\n\t    jx = nx;\n\t    jz = nz;\n\t    jyd = dny;\n\t  }\n\t\n\t  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);\n\t};\n\t\n\tJPoint.prototype.dbl = function dbl() {\n\t  if (this.isInfinity()) return this;\n\t\n\t  if (this.curve.zeroA) return this._zeroDbl();else if (this.curve.threeA) return this._threeDbl();else return this._dbl();\n\t};\n\t\n\tJPoint.prototype._zeroDbl = function _zeroDbl() {\n\t  var nx;\n\t  var ny;\n\t  var nz;\n\t  // Z = 1\n\t  if (this.zOne) {\n\t    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n\t    //     #doubling-mdbl-2007-bl\n\t    // 1M + 5S + 14A\n\t\n\t    // XX = X1^2\n\t    var xx = this.x.redSqr();\n\t    // YY = Y1^2\n\t    var yy = this.y.redSqr();\n\t    // YYYY = YY^2\n\t    var yyyy = yy.redSqr();\n\t    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n\t    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n\t    s = s.redIAdd(s);\n\t    // M = 3 * XX + a; a = 0\n\t    var m = xx.redAdd(xx).redIAdd(xx);\n\t    // T = M ^ 2 - 2*S\n\t    var t = m.redSqr().redISub(s).redISub(s);\n\t\n\t    // 8 * YYYY\n\t    var yyyy8 = yyyy.redIAdd(yyyy);\n\t    yyyy8 = yyyy8.redIAdd(yyyy8);\n\t    yyyy8 = yyyy8.redIAdd(yyyy8);\n\t\n\t    // X3 = T\n\t    nx = t;\n\t    // Y3 = M * (S - T) - 8 * YYYY\n\t    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n\t    // Z3 = 2*Y1\n\t    nz = this.y.redAdd(this.y);\n\t  } else {\n\t    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n\t    //     #doubling-dbl-2009-l\n\t    // 2M + 5S + 13A\n\t\n\t    // A = X1^2\n\t    var a = this.x.redSqr();\n\t    // B = Y1^2\n\t    var b = this.y.redSqr();\n\t    // C = B^2\n\t    var c = b.redSqr();\n\t    // D = 2 * ((X1 + B)^2 - A - C)\n\t    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);\n\t    d = d.redIAdd(d);\n\t    // E = 3 * A\n\t    var e = a.redAdd(a).redIAdd(a);\n\t    // F = E^2\n\t    var f = e.redSqr();\n\t\n\t    // 8 * C\n\t    var c8 = c.redIAdd(c);\n\t    c8 = c8.redIAdd(c8);\n\t    c8 = c8.redIAdd(c8);\n\t\n\t    // X3 = F - 2 * D\n\t    nx = f.redISub(d).redISub(d);\n\t    // Y3 = E * (D - X3) - 8 * C\n\t    ny = e.redMul(d.redISub(nx)).redISub(c8);\n\t    // Z3 = 2 * Y1 * Z1\n\t    nz = this.y.redMul(this.z);\n\t    nz = nz.redIAdd(nz);\n\t  }\n\t\n\t  return this.curve.jpoint(nx, ny, nz);\n\t};\n\t\n\tJPoint.prototype._threeDbl = function _threeDbl() {\n\t  var nx;\n\t  var ny;\n\t  var nz;\n\t  // Z = 1\n\t  if (this.zOne) {\n\t    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html\n\t    //     #doubling-mdbl-2007-bl\n\t    // 1M + 5S + 15A\n\t\n\t    // XX = X1^2\n\t    var xx = this.x.redSqr();\n\t    // YY = Y1^2\n\t    var yy = this.y.redSqr();\n\t    // YYYY = YY^2\n\t    var yyyy = yy.redSqr();\n\t    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n\t    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n\t    s = s.redIAdd(s);\n\t    // M = 3 * XX + a\n\t    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);\n\t    // T = M^2 - 2 * S\n\t    var t = m.redSqr().redISub(s).redISub(s);\n\t    // X3 = T\n\t    nx = t;\n\t    // Y3 = M * (S - T) - 8 * YYYY\n\t    var yyyy8 = yyyy.redIAdd(yyyy);\n\t    yyyy8 = yyyy8.redIAdd(yyyy8);\n\t    yyyy8 = yyyy8.redIAdd(yyyy8);\n\t    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n\t    // Z3 = 2 * Y1\n\t    nz = this.y.redAdd(this.y);\n\t  } else {\n\t    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b\n\t    // 3M + 5S\n\t\n\t    // delta = Z1^2\n\t    var delta = this.z.redSqr();\n\t    // gamma = Y1^2\n\t    var gamma = this.y.redSqr();\n\t    // beta = X1 * gamma\n\t    var beta = this.x.redMul(gamma);\n\t    // alpha = 3 * (X1 - delta) * (X1 + delta)\n\t    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));\n\t    alpha = alpha.redAdd(alpha).redIAdd(alpha);\n\t    // X3 = alpha^2 - 8 * beta\n\t    var beta4 = beta.redIAdd(beta);\n\t    beta4 = beta4.redIAdd(beta4);\n\t    var beta8 = beta4.redAdd(beta4);\n\t    nx = alpha.redSqr().redISub(beta8);\n\t    // Z3 = (Y1 + Z1)^2 - gamma - delta\n\t    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);\n\t    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2\n\t    var ggamma8 = gamma.redSqr();\n\t    ggamma8 = ggamma8.redIAdd(ggamma8);\n\t    ggamma8 = ggamma8.redIAdd(ggamma8);\n\t    ggamma8 = ggamma8.redIAdd(ggamma8);\n\t    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);\n\t  }\n\t\n\t  return this.curve.jpoint(nx, ny, nz);\n\t};\n\t\n\tJPoint.prototype._dbl = function _dbl() {\n\t  var a = this.curve.a;\n\t\n\t  // 4M + 6S + 10A\n\t  var jx = this.x;\n\t  var jy = this.y;\n\t  var jz = this.z;\n\t  var jz4 = jz.redSqr().redSqr();\n\t\n\t  var jx2 = jx.redSqr();\n\t  var jy2 = jy.redSqr();\n\t\n\t  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\t\n\t  var jxd4 = jx.redAdd(jx);\n\t  jxd4 = jxd4.redIAdd(jxd4);\n\t  var t1 = jxd4.redMul(jy2);\n\t  var nx = c.redSqr().redISub(t1.redAdd(t1));\n\t  var t2 = t1.redISub(nx);\n\t\n\t  var jyd8 = jy2.redSqr();\n\t  jyd8 = jyd8.redIAdd(jyd8);\n\t  jyd8 = jyd8.redIAdd(jyd8);\n\t  jyd8 = jyd8.redIAdd(jyd8);\n\t  var ny = c.redMul(t2).redISub(jyd8);\n\t  var nz = jy.redAdd(jy).redMul(jz);\n\t\n\t  return this.curve.jpoint(nx, ny, nz);\n\t};\n\t\n\tJPoint.prototype.trpl = function trpl() {\n\t  if (!this.curve.zeroA) return this.dbl().add(this);\n\t\n\t  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl\n\t  // 5M + 10S + ...\n\t\n\t  // XX = X1^2\n\t  var xx = this.x.redSqr();\n\t  // YY = Y1^2\n\t  var yy = this.y.redSqr();\n\t  // ZZ = Z1^2\n\t  var zz = this.z.redSqr();\n\t  // YYYY = YY^2\n\t  var yyyy = yy.redSqr();\n\t  // M = 3 * XX + a * ZZ2; a = 0\n\t  var m = xx.redAdd(xx).redIAdd(xx);\n\t  // MM = M^2\n\t  var mm = m.redSqr();\n\t  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM\n\t  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n\t  e = e.redIAdd(e);\n\t  e = e.redAdd(e).redIAdd(e);\n\t  e = e.redISub(mm);\n\t  // EE = E^2\n\t  var ee = e.redSqr();\n\t  // T = 16*YYYY\n\t  var t = yyyy.redIAdd(yyyy);\n\t  t = t.redIAdd(t);\n\t  t = t.redIAdd(t);\n\t  t = t.redIAdd(t);\n\t  // U = (M + E)^2 - MM - EE - T\n\t  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);\n\t  // X3 = 4 * (X1 * EE - 4 * YY * U)\n\t  var yyu4 = yy.redMul(u);\n\t  yyu4 = yyu4.redIAdd(yyu4);\n\t  yyu4 = yyu4.redIAdd(yyu4);\n\t  var nx = this.x.redMul(ee).redISub(yyu4);\n\t  nx = nx.redIAdd(nx);\n\t  nx = nx.redIAdd(nx);\n\t  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)\n\t  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));\n\t  ny = ny.redIAdd(ny);\n\t  ny = ny.redIAdd(ny);\n\t  ny = ny.redIAdd(ny);\n\t  // Z3 = (Z1 + E)^2 - ZZ - EE\n\t  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);\n\t\n\t  return this.curve.jpoint(nx, ny, nz);\n\t};\n\t\n\tJPoint.prototype.mul = function mul(k, kbase) {\n\t  k = new BN(k, kbase);\n\t\n\t  return this.curve._wnafMul(this, k);\n\t};\n\t\n\tJPoint.prototype.eq = function eq(p) {\n\t  if (p.type === 'affine') return this.eq(p.toJ());\n\t\n\t  if (this === p) return true;\n\t\n\t  // x1 * z2^2 == x2 * z1^2\n\t  var z2 = this.z.redSqr();\n\t  var pz2 = p.z.redSqr();\n\t  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0) return false;\n\t\n\t  // y1 * z2^3 == y2 * z1^3\n\t  var z3 = z2.redMul(this.z);\n\t  var pz3 = pz2.redMul(p.z);\n\t  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;\n\t};\n\t\n\tJPoint.prototype.eqXToP = function eqXToP(x) {\n\t  var zs = this.z.redSqr();\n\t  var rx = x.toRed(this.curve.red).redMul(zs);\n\t  if (this.x.cmp(rx) === 0) return true;\n\t\n\t  var xc = x.clone();\n\t  var t = this.curve.redN.redMul(zs);\n\t  for (;;) {\n\t    xc.iadd(this.curve.n);\n\t    if (xc.cmp(this.curve.p) >= 0) return false;\n\t\n\t    rx.redIAdd(t);\n\t    if (this.x.cmp(rx) === 0) return true;\n\t  }\n\t  return false;\n\t};\n\t\n\tJPoint.prototype.inspect = function inspect() {\n\t  if (this.isInfinity()) return '<EC JPoint Infinity>';\n\t  return '<EC JPoint x: ' + this.x.toString(16, 2) + ' y: ' + this.y.toString(16, 2) + ' z: ' + this.z.toString(16, 2) + '>';\n\t};\n\t\n\tJPoint.prototype.isInfinity = function isInfinity() {\n\t  // XXX This code assumes that zero is always zero in red\n\t  return this.z.cmpn(0) === 0;\n\t};\n\n/***/ },\n\n/***/ 904:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar curve = __webpack_require__(901);\n\tvar BN = __webpack_require__(881);\n\tvar inherits = __webpack_require__(821);\n\tvar Base = curve.base;\n\t\n\tvar elliptic = __webpack_require__(891);\n\tvar utils = elliptic.utils;\n\t\n\tfunction MontCurve(conf) {\n\t  Base.call(this, 'mont', conf);\n\t\n\t  this.a = new BN(conf.a, 16).toRed(this.red);\n\t  this.b = new BN(conf.b, 16).toRed(this.red);\n\t  this.i4 = new BN(4).toRed(this.red).redInvm();\n\t  this.two = new BN(2).toRed(this.red);\n\t  this.a24 = this.i4.redMul(this.a.redAdd(this.two));\n\t}\n\tinherits(MontCurve, Base);\n\tmodule.exports = MontCurve;\n\t\n\tMontCurve.prototype.validate = function validate(point) {\n\t  var x = point.normalize().x;\n\t  var x2 = x.redSqr();\n\t  var rhs = x2.redMul(x).redAdd(x2.redMul(this.a)).redAdd(x);\n\t  var y = rhs.redSqrt();\n\t\n\t  return y.redSqr().cmp(rhs) === 0;\n\t};\n\t\n\tfunction Point(curve, x, z) {\n\t  Base.BasePoint.call(this, curve, 'projective');\n\t  if (x === null && z === null) {\n\t    this.x = this.curve.one;\n\t    this.z = this.curve.zero;\n\t  } else {\n\t    this.x = new BN(x, 16);\n\t    this.z = new BN(z, 16);\n\t    if (!this.x.red) this.x = this.x.toRed(this.curve.red);\n\t    if (!this.z.red) this.z = this.z.toRed(this.curve.red);\n\t  }\n\t}\n\tinherits(Point, Base.BasePoint);\n\t\n\tMontCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n\t  return this.point(utils.toArray(bytes, enc), 1);\n\t};\n\t\n\tMontCurve.prototype.point = function point(x, z) {\n\t  return new Point(this, x, z);\n\t};\n\t\n\tMontCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n\t  return Point.fromJSON(this, obj);\n\t};\n\t\n\tPoint.prototype.precompute = function precompute() {\n\t  // No-op\n\t};\n\t\n\tPoint.prototype._encode = function _encode() {\n\t  return this.getX().toArray('be', this.curve.p.byteLength());\n\t};\n\t\n\tPoint.fromJSON = function fromJSON(curve, obj) {\n\t  return new Point(curve, obj[0], obj[1] || curve.one);\n\t};\n\t\n\tPoint.prototype.inspect = function inspect() {\n\t  if (this.isInfinity()) return '<EC Point Infinity>';\n\t  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) + ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n\t};\n\t\n\tPoint.prototype.isInfinity = function isInfinity() {\n\t  // XXX This code assumes that zero is always zero in red\n\t  return this.z.cmpn(0) === 0;\n\t};\n\t\n\tPoint.prototype.dbl = function dbl() {\n\t  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#doubling-dbl-1987-m-3\n\t  // 2M + 2S + 4A\n\t\n\t  // A = X1 + Z1\n\t  var a = this.x.redAdd(this.z);\n\t  // AA = A^2\n\t  var aa = a.redSqr();\n\t  // B = X1 - Z1\n\t  var b = this.x.redSub(this.z);\n\t  // BB = B^2\n\t  var bb = b.redSqr();\n\t  // C = AA - BB\n\t  var c = aa.redSub(bb);\n\t  // X3 = AA * BB\n\t  var nx = aa.redMul(bb);\n\t  // Z3 = C * (BB + A24 * C)\n\t  var nz = c.redMul(bb.redAdd(this.curve.a24.redMul(c)));\n\t  return this.curve.point(nx, nz);\n\t};\n\t\n\tPoint.prototype.add = function add() {\n\t  throw new Error('Not supported on Montgomery curve');\n\t};\n\t\n\tPoint.prototype.diffAdd = function diffAdd(p, diff) {\n\t  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#diffadd-dadd-1987-m-3\n\t  // 4M + 2S + 6A\n\t\n\t  // A = X2 + Z2\n\t  var a = this.x.redAdd(this.z);\n\t  // B = X2 - Z2\n\t  var b = this.x.redSub(this.z);\n\t  // C = X3 + Z3\n\t  var c = p.x.redAdd(p.z);\n\t  // D = X3 - Z3\n\t  var d = p.x.redSub(p.z);\n\t  // DA = D * A\n\t  var da = d.redMul(a);\n\t  // CB = C * B\n\t  var cb = c.redMul(b);\n\t  // X5 = Z1 * (DA + CB)^2\n\t  var nx = diff.z.redMul(da.redAdd(cb).redSqr());\n\t  // Z5 = X1 * (DA - CB)^2\n\t  var nz = diff.x.redMul(da.redISub(cb).redSqr());\n\t  return this.curve.point(nx, nz);\n\t};\n\t\n\tPoint.prototype.mul = function mul(k) {\n\t  var t = k.clone();\n\t  var a = this; // (N / 2) * Q + Q\n\t  var b = this.curve.point(null, null); // (N / 2) * Q\n\t  var c = this; // Q\n\t\n\t  for (var bits = []; t.cmpn(0) !== 0; t.iushrn(1)) {\n\t    bits.push(t.andln(1));\n\t  }for (var i = bits.length - 1; i >= 0; i--) {\n\t    if (bits[i] === 0) {\n\t      // N * Q + Q = ((N / 2) * Q + Q)) + (N / 2) * Q\n\t      a = a.diffAdd(b, c);\n\t      // N * Q = 2 * ((N / 2) * Q + Q))\n\t      b = b.dbl();\n\t    } else {\n\t      // N * Q = ((N / 2) * Q + Q) + ((N / 2) * Q)\n\t      b = a.diffAdd(b, c);\n\t      // N * Q + Q = 2 * ((N / 2) * Q + Q)\n\t      a = a.dbl();\n\t    }\n\t  }\n\t  return b;\n\t};\n\t\n\tPoint.prototype.mulAdd = function mulAdd() {\n\t  throw new Error('Not supported on Montgomery curve');\n\t};\n\t\n\tPoint.prototype.jumlAdd = function jumlAdd() {\n\t  throw new Error('Not supported on Montgomery curve');\n\t};\n\t\n\tPoint.prototype.eq = function eq(other) {\n\t  return this.getX().cmp(other.getX()) === 0;\n\t};\n\t\n\tPoint.prototype.normalize = function normalize() {\n\t  this.x = this.x.redMul(this.z.redInvm());\n\t  this.z = this.curve.one;\n\t  return this;\n\t};\n\t\n\tPoint.prototype.getX = function getX() {\n\t  // Normalize coordinates\n\t  this.normalize();\n\t\n\t  return this.x.fromRed();\n\t};\n\n/***/ },\n\n/***/ 905:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar curve = __webpack_require__(901);\n\tvar elliptic = __webpack_require__(891);\n\tvar BN = __webpack_require__(881);\n\tvar inherits = __webpack_require__(821);\n\tvar Base = curve.base;\n\t\n\tvar assert = elliptic.utils.assert;\n\t\n\tfunction EdwardsCurve(conf) {\n\t  // NOTE: Important as we are creating point in Base.call()\n\t  this.twisted = (conf.a | 0) !== 1;\n\t  this.mOneA = this.twisted && (conf.a | 0) === -1;\n\t  this.extended = this.mOneA;\n\t\n\t  Base.call(this, 'edwards', conf);\n\t\n\t  this.a = new BN(conf.a, 16).umod(this.red.m);\n\t  this.a = this.a.toRed(this.red);\n\t  this.c = new BN(conf.c, 16).toRed(this.red);\n\t  this.c2 = this.c.redSqr();\n\t  this.d = new BN(conf.d, 16).toRed(this.red);\n\t  this.dd = this.d.redAdd(this.d);\n\t\n\t  assert(!this.twisted || this.c.fromRed().cmpn(1) === 0);\n\t  this.oneC = (conf.c | 0) === 1;\n\t}\n\tinherits(EdwardsCurve, Base);\n\tmodule.exports = EdwardsCurve;\n\t\n\tEdwardsCurve.prototype._mulA = function _mulA(num) {\n\t  if (this.mOneA) return num.redNeg();else return this.a.redMul(num);\n\t};\n\t\n\tEdwardsCurve.prototype._mulC = function _mulC(num) {\n\t  if (this.oneC) return num;else return this.c.redMul(num);\n\t};\n\t\n\t// Just for compatibility with Short curve\n\tEdwardsCurve.prototype.jpoint = function jpoint(x, y, z, t) {\n\t  return this.point(x, y, z, t);\n\t};\n\t\n\tEdwardsCurve.prototype.pointFromX = function pointFromX(x, odd) {\n\t  x = new BN(x, 16);\n\t  if (!x.red) x = x.toRed(this.red);\n\t\n\t  var x2 = x.redSqr();\n\t  var rhs = this.c2.redSub(this.a.redMul(x2));\n\t  var lhs = this.one.redSub(this.c2.redMul(this.d).redMul(x2));\n\t\n\t  var y2 = rhs.redMul(lhs.redInvm());\n\t  var y = y2.redSqrt();\n\t  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0) throw new Error('invalid point');\n\t\n\t  var isOdd = y.fromRed().isOdd();\n\t  if (odd && !isOdd || !odd && isOdd) y = y.redNeg();\n\t\n\t  return this.point(x, y);\n\t};\n\t\n\tEdwardsCurve.prototype.pointFromY = function pointFromY(y, odd) {\n\t  y = new BN(y, 16);\n\t  if (!y.red) y = y.toRed(this.red);\n\t\n\t  // x^2 = (y^2 - 1) / (d y^2 + 1)\n\t  var y2 = y.redSqr();\n\t  var lhs = y2.redSub(this.one);\n\t  var rhs = y2.redMul(this.d).redAdd(this.one);\n\t  var x2 = lhs.redMul(rhs.redInvm());\n\t\n\t  if (x2.cmp(this.zero) === 0) {\n\t    if (odd) throw new Error('invalid point');else return this.point(this.zero, y);\n\t  }\n\t\n\t  var x = x2.redSqrt();\n\t  if (x.redSqr().redSub(x2).cmp(this.zero) !== 0) throw new Error('invalid point');\n\t\n\t  if (x.isOdd() !== odd) x = x.redNeg();\n\t\n\t  return this.point(x, y);\n\t};\n\t\n\tEdwardsCurve.prototype.validate = function validate(point) {\n\t  if (point.isInfinity()) return true;\n\t\n\t  // Curve: A * X^2 + Y^2 = C^2 * (1 + D * X^2 * Y^2)\n\t  point.normalize();\n\t\n\t  var x2 = point.x.redSqr();\n\t  var y2 = point.y.redSqr();\n\t  var lhs = x2.redMul(this.a).redAdd(y2);\n\t  var rhs = this.c2.redMul(this.one.redAdd(this.d.redMul(x2).redMul(y2)));\n\t\n\t  return lhs.cmp(rhs) === 0;\n\t};\n\t\n\tfunction Point(curve, x, y, z, t) {\n\t  Base.BasePoint.call(this, curve, 'projective');\n\t  if (x === null && y === null && z === null) {\n\t    this.x = this.curve.zero;\n\t    this.y = this.curve.one;\n\t    this.z = this.curve.one;\n\t    this.t = this.curve.zero;\n\t    this.zOne = true;\n\t  } else {\n\t    this.x = new BN(x, 16);\n\t    this.y = new BN(y, 16);\n\t    this.z = z ? new BN(z, 16) : this.curve.one;\n\t    this.t = t && new BN(t, 16);\n\t    if (!this.x.red) this.x = this.x.toRed(this.curve.red);\n\t    if (!this.y.red) this.y = this.y.toRed(this.curve.red);\n\t    if (!this.z.red) this.z = this.z.toRed(this.curve.red);\n\t    if (this.t && !this.t.red) this.t = this.t.toRed(this.curve.red);\n\t    this.zOne = this.z === this.curve.one;\n\t\n\t    // Use extended coordinates\n\t    if (this.curve.extended && !this.t) {\n\t      this.t = this.x.redMul(this.y);\n\t      if (!this.zOne) this.t = this.t.redMul(this.z.redInvm());\n\t    }\n\t  }\n\t}\n\tinherits(Point, Base.BasePoint);\n\t\n\tEdwardsCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n\t  return Point.fromJSON(this, obj);\n\t};\n\t\n\tEdwardsCurve.prototype.point = function point(x, y, z, t) {\n\t  return new Point(this, x, y, z, t);\n\t};\n\t\n\tPoint.fromJSON = function fromJSON(curve, obj) {\n\t  return new Point(curve, obj[0], obj[1], obj[2]);\n\t};\n\t\n\tPoint.prototype.inspect = function inspect() {\n\t  if (this.isInfinity()) return '<EC Point Infinity>';\n\t  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) + ' y: ' + this.y.fromRed().toString(16, 2) + ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n\t};\n\t\n\tPoint.prototype.isInfinity = function isInfinity() {\n\t  // XXX This code assumes that zero is always zero in red\n\t  return this.x.cmpn(0) === 0 && this.y.cmp(this.z) === 0;\n\t};\n\t\n\tPoint.prototype._extDbl = function _extDbl() {\n\t  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html\n\t  //     #doubling-dbl-2008-hwcd\n\t  // 4M + 4S\n\t\n\t  // A = X1^2\n\t  var a = this.x.redSqr();\n\t  // B = Y1^2\n\t  var b = this.y.redSqr();\n\t  // C = 2 * Z1^2\n\t  var c = this.z.redSqr();\n\t  c = c.redIAdd(c);\n\t  // D = a * A\n\t  var d = this.curve._mulA(a);\n\t  // E = (X1 + Y1)^2 - A - B\n\t  var e = this.x.redAdd(this.y).redSqr().redISub(a).redISub(b);\n\t  // G = D + B\n\t  var g = d.redAdd(b);\n\t  // F = G - C\n\t  var f = g.redSub(c);\n\t  // H = D - B\n\t  var h = d.redSub(b);\n\t  // X3 = E * F\n\t  var nx = e.redMul(f);\n\t  // Y3 = G * H\n\t  var ny = g.redMul(h);\n\t  // T3 = E * H\n\t  var nt = e.redMul(h);\n\t  // Z3 = F * G\n\t  var nz = f.redMul(g);\n\t  return this.curve.point(nx, ny, nz, nt);\n\t};\n\t\n\tPoint.prototype._projDbl = function _projDbl() {\n\t  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html\n\t  //     #doubling-dbl-2008-bbjlp\n\t  //     #doubling-dbl-2007-bl\n\t  // and others\n\t  // Generally 3M + 4S or 2M + 4S\n\t\n\t  // B = (X1 + Y1)^2\n\t  var b = this.x.redAdd(this.y).redSqr();\n\t  // C = X1^2\n\t  var c = this.x.redSqr();\n\t  // D = Y1^2\n\t  var d = this.y.redSqr();\n\t\n\t  var nx;\n\t  var ny;\n\t  var nz;\n\t  if (this.curve.twisted) {\n\t    // E = a * C\n\t    var e = this.curve._mulA(c);\n\t    // F = E + D\n\t    var f = e.redAdd(d);\n\t    if (this.zOne) {\n\t      // X3 = (B - C - D) * (F - 2)\n\t      nx = b.redSub(c).redSub(d).redMul(f.redSub(this.curve.two));\n\t      // Y3 = F * (E - D)\n\t      ny = f.redMul(e.redSub(d));\n\t      // Z3 = F^2 - 2 * F\n\t      nz = f.redSqr().redSub(f).redSub(f);\n\t    } else {\n\t      // H = Z1^2\n\t      var h = this.z.redSqr();\n\t      // J = F - 2 * H\n\t      var j = f.redSub(h).redISub(h);\n\t      // X3 = (B-C-D)*J\n\t      nx = b.redSub(c).redISub(d).redMul(j);\n\t      // Y3 = F * (E - D)\n\t      ny = f.redMul(e.redSub(d));\n\t      // Z3 = F * J\n\t      nz = f.redMul(j);\n\t    }\n\t  } else {\n\t    // E = C + D\n\t    var e = c.redAdd(d);\n\t    // H = (c * Z1)^2\n\t    var h = this.curve._mulC(this.c.redMul(this.z)).redSqr();\n\t    // J = E - 2 * H\n\t    var j = e.redSub(h).redSub(h);\n\t    // X3 = c * (B - E) * J\n\t    nx = this.curve._mulC(b.redISub(e)).redMul(j);\n\t    // Y3 = c * E * (C - D)\n\t    ny = this.curve._mulC(e).redMul(c.redISub(d));\n\t    // Z3 = E * J\n\t    nz = e.redMul(j);\n\t  }\n\t  return this.curve.point(nx, ny, nz);\n\t};\n\t\n\tPoint.prototype.dbl = function dbl() {\n\t  if (this.isInfinity()) return this;\n\t\n\t  // Double in extended coordinates\n\t  if (this.curve.extended) return this._extDbl();else return this._projDbl();\n\t};\n\t\n\tPoint.prototype._extAdd = function _extAdd(p) {\n\t  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html\n\t  //     #addition-add-2008-hwcd-3\n\t  // 8M\n\t\n\t  // A = (Y1 - X1) * (Y2 - X2)\n\t  var a = this.y.redSub(this.x).redMul(p.y.redSub(p.x));\n\t  // B = (Y1 + X1) * (Y2 + X2)\n\t  var b = this.y.redAdd(this.x).redMul(p.y.redAdd(p.x));\n\t  // C = T1 * k * T2\n\t  var c = this.t.redMul(this.curve.dd).redMul(p.t);\n\t  // D = Z1 * 2 * Z2\n\t  var d = this.z.redMul(p.z.redAdd(p.z));\n\t  // E = B - A\n\t  var e = b.redSub(a);\n\t  // F = D - C\n\t  var f = d.redSub(c);\n\t  // G = D + C\n\t  var g = d.redAdd(c);\n\t  // H = B + A\n\t  var h = b.redAdd(a);\n\t  // X3 = E * F\n\t  var nx = e.redMul(f);\n\t  // Y3 = G * H\n\t  var ny = g.redMul(h);\n\t  // T3 = E * H\n\t  var nt = e.redMul(h);\n\t  // Z3 = F * G\n\t  var nz = f.redMul(g);\n\t  return this.curve.point(nx, ny, nz, nt);\n\t};\n\t\n\tPoint.prototype._projAdd = function _projAdd(p) {\n\t  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html\n\t  //     #addition-add-2008-bbjlp\n\t  //     #addition-add-2007-bl\n\t  // 10M + 1S\n\t\n\t  // A = Z1 * Z2\n\t  var a = this.z.redMul(p.z);\n\t  // B = A^2\n\t  var b = a.redSqr();\n\t  // C = X1 * X2\n\t  var c = this.x.redMul(p.x);\n\t  // D = Y1 * Y2\n\t  var d = this.y.redMul(p.y);\n\t  // E = d * C * D\n\t  var e = this.curve.d.redMul(c).redMul(d);\n\t  // F = B - E\n\t  var f = b.redSub(e);\n\t  // G = B + E\n\t  var g = b.redAdd(e);\n\t  // X3 = A * F * ((X1 + Y1) * (X2 + Y2) - C - D)\n\t  var tmp = this.x.redAdd(this.y).redMul(p.x.redAdd(p.y)).redISub(c).redISub(d);\n\t  var nx = a.redMul(f).redMul(tmp);\n\t  var ny;\n\t  var nz;\n\t  if (this.curve.twisted) {\n\t    // Y3 = A * G * (D - a * C)\n\t    ny = a.redMul(g).redMul(d.redSub(this.curve._mulA(c)));\n\t    // Z3 = F * G\n\t    nz = f.redMul(g);\n\t  } else {\n\t    // Y3 = A * G * (D - C)\n\t    ny = a.redMul(g).redMul(d.redSub(c));\n\t    // Z3 = c * F * G\n\t    nz = this.curve._mulC(f).redMul(g);\n\t  }\n\t  return this.curve.point(nx, ny, nz);\n\t};\n\t\n\tPoint.prototype.add = function add(p) {\n\t  if (this.isInfinity()) return p;\n\t  if (p.isInfinity()) return this;\n\t\n\t  if (this.curve.extended) return this._extAdd(p);else return this._projAdd(p);\n\t};\n\t\n\tPoint.prototype.mul = function mul(k) {\n\t  if (this._hasDoubles(k)) return this.curve._fixedNafMul(this, k);else return this.curve._wnafMul(this, k);\n\t};\n\t\n\tPoint.prototype.mulAdd = function mulAdd(k1, p, k2) {\n\t  return this.curve._wnafMulAdd(1, [this, p], [k1, k2], 2, false);\n\t};\n\t\n\tPoint.prototype.jmulAdd = function jmulAdd(k1, p, k2) {\n\t  return this.curve._wnafMulAdd(1, [this, p], [k1, k2], 2, true);\n\t};\n\t\n\tPoint.prototype.normalize = function normalize() {\n\t  if (this.zOne) return this;\n\t\n\t  // Normalize coordinates\n\t  var zi = this.z.redInvm();\n\t  this.x = this.x.redMul(zi);\n\t  this.y = this.y.redMul(zi);\n\t  if (this.t) this.t = this.t.redMul(zi);\n\t  this.z = this.curve.one;\n\t  this.zOne = true;\n\t  return this;\n\t};\n\t\n\tPoint.prototype.neg = function neg() {\n\t  return this.curve.point(this.x.redNeg(), this.y, this.z, this.t && this.t.redNeg());\n\t};\n\t\n\tPoint.prototype.getX = function getX() {\n\t  this.normalize();\n\t  return this.x.fromRed();\n\t};\n\t\n\tPoint.prototype.getY = function getY() {\n\t  this.normalize();\n\t  return this.y.fromRed();\n\t};\n\t\n\tPoint.prototype.eq = function eq(other) {\n\t  return this === other || this.getX().cmp(other.getX()) === 0 && this.getY().cmp(other.getY()) === 0;\n\t};\n\t\n\tPoint.prototype.eqXToP = function eqXToP(x) {\n\t  var rx = x.toRed(this.curve.red).redMul(this.z);\n\t  if (this.x.cmp(rx) === 0) return true;\n\t\n\t  var xc = x.clone();\n\t  var t = this.curve.redN.redMul(this.z);\n\t  for (;;) {\n\t    xc.iadd(this.curve.n);\n\t    if (xc.cmp(this.curve.p) >= 0) return false;\n\t\n\t    rx.redIAdd(t);\n\t    if (this.x.cmp(rx) === 0) return true;\n\t  }\n\t  return false;\n\t};\n\t\n\t// Compatibility with BaseCurve\n\tPoint.prototype.toP = Point.prototype.normalize;\n\tPoint.prototype.mixedAdd = Point.prototype.add;\n\n/***/ },\n\n/***/ 906:\n[2494, 891, 907],\n\n/***/ 907:\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = {\n\t  doubles: {\n\t    step: 4,\n\t    points: [['e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a', 'f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821'], ['8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508', '11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf'], ['175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739', 'd3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695'], ['363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640', '4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9'], ['8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c', '4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36'], ['723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda', '96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f'], ['eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa', '5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999'], ['100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0', 'cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09'], ['e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d', '9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d'], ['feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d', 'e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088'], ['da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1', '9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d'], ['53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0', '5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8'], ['8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047', '10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a'], ['385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862', '283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453'], ['6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7', '7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160'], ['3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd', '56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0'], ['85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83', '7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6'], ['948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a', '53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589'], ['6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8', 'bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17'], ['e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d', '4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda'], ['e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725', '7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd'], ['213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754', '4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2'], ['4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c', '17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6'], ['fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6', '6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f'], ['76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39', 'c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01'], ['c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891', '893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3'], ['d895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b', 'febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f'], ['b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03', '2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7'], ['e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d', 'eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78'], ['a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070', '7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1'], ['90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4', 'e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150'], ['8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da', '662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82'], ['e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11', '1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc'], ['8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e', 'efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b'], ['e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41', '2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51'], ['b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef', '67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45'], ['d68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8', 'db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120'], ['324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d', '648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84'], ['4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96', '35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d'], ['9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd', 'ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d'], ['6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5', '9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8'], ['a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266', '40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8'], ['7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71', '34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac'], ['928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac', 'c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f'], ['85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751', '1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962'], ['ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e', '493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907'], ['827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241', 'c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec'], ['eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3', 'be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d'], ['e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f', '4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414'], ['1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19', 'aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd'], ['146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be', 'b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0'], ['fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9', '6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811'], ['da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2', '8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1'], ['a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13', '7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c'], ['174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c', 'ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73'], ['959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba', '2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd'], ['d2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151', 'e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405'], ['64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073', 'd99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589'], ['8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458', '38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e'], ['13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b', '69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27'], ['bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366', 'd3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1'], ['8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa', '40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482'], ['8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0', '620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945'], ['dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787', '7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573'], ['f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e', 'ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82']]\n\t  },\n\t  naf: {\n\t    wnd: 7,\n\t    points: [['f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9', '388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672'], ['2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4', 'd8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6'], ['5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc', '6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da'], ['acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe', 'cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37'], ['774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb', 'd984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b'], ['f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8', 'ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81'], ['d7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e', '581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58'], ['defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34', '4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77'], ['2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c', '85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a'], ['352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5', '321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c'], ['2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f', '2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67'], ['9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714', '73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402'], ['daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729', 'a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55'], ['c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db', '2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482'], ['6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4', 'e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82'], ['1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5', 'b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396'], ['605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479', '2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49'], ['62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d', '80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf'], ['80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f', '1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a'], ['7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb', 'd0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7'], ['d528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9', 'eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933'], ['49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963', '758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a'], ['77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74', '958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6'], ['f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530', 'e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37'], ['463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b', '5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e'], ['f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247', 'cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6'], ['caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1', 'cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476'], ['2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120', '4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40'], ['7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435', '91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61'], ['754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18', '673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683'], ['e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8', '59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5'], ['186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb', '3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b'], ['df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f', '55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417'], ['5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143', 'efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868'], ['290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba', 'e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a'], ['af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45', 'f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6'], ['766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a', '744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996'], ['59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e', 'c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e'], ['f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8', 'e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d'], ['7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c', '30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2'], ['948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519', 'e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e'], ['7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab', '100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437'], ['3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca', 'ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311'], ['d3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf', '8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4'], ['1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610', '68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575'], ['733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4', 'f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d'], ['15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c', 'd56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d'], ['a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940', 'edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629'], ['e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980', 'a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06'], ['311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3', '66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374'], ['34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf', '9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee'], ['f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63', '4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1'], ['d7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448', 'fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b'], ['32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf', '5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661'], ['7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5', '8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6'], ['ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6', '8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e'], ['16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5', '5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d'], ['eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99', 'f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc'], ['78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51', 'f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4'], ['494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5', '42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c'], ['a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5', '204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b'], ['c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997', '4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913'], ['841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881', '73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154'], ['5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5', '39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865'], ['36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66', 'd2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc'], ['336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726', 'ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224'], ['8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede', '6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e'], ['1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94', '60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6'], ['85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31', '3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511'], ['29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51', 'b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b'], ['a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252', 'ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2'], ['4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5', 'cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c'], ['d24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b', '6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3'], ['ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4', '322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d'], ['af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f', '6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700'], ['e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889', '2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4'], ['591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246', 'b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196'], ['11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984', '998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4'], ['3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a', 'b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257'], ['cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030', 'bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13'], ['c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197', '6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096'], ['c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593', 'c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38'], ['a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef', '21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f'], ['347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38', '60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448'], ['da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a', '49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a'], ['c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111', '5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4'], ['4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502', '7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437'], ['3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea', 'be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7'], ['cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26', '8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d'], ['b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986', '39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a'], ['d4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e', '62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54'], ['48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4', '25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77'], ['dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda', 'ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517'], ['6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859', 'cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10'], ['e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f', 'f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125'], ['eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c', '6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e'], ['13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942', 'fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1'], ['ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a', '1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2'], ['b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80', '5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423'], ['ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d', '438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8'], ['8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1', 'cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758'], ['52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63', 'c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375'], ['e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352', '6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d'], ['7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193', 'ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec'], ['5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00', '9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0'], ['32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58', 'ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c'], ['e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7', 'd3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4'], ['8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8', 'c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f'], ['4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e', '67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649'], ['3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d', 'cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826'], ['674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b', '299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5'], ['d32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f', 'f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87'], ['30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6', '462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b'], ['be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297', '62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc'], ['93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a', '7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c'], ['b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c', 'ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f'], ['d5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52', '4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a'], ['d3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb', 'bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46'], ['463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065', 'bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f'], ['7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917', '603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03'], ['74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9', 'cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08'], ['30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3', '553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8'], ['9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57', '712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373'], ['176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66', 'ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3'], ['75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8', '9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8'], ['809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721', '9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1'], ['1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180', '4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9']]\n\t  }\n\t};\n\n/***/ },\n\n/***/ 908:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar BN = __webpack_require__(881);\n\tvar elliptic = __webpack_require__(891);\n\tvar utils = elliptic.utils;\n\tvar assert = utils.assert;\n\t\n\tvar KeyPair = __webpack_require__(909);\n\tvar Signature = __webpack_require__(910);\n\t\n\tfunction EC(options) {\n\t  if (!(this instanceof EC)) return new EC(options);\n\t\n\t  // Shortcut `elliptic.ec(curve-name)`\n\t  if (typeof options === 'string') {\n\t    assert(elliptic.curves.hasOwnProperty(options), 'Unknown curve ' + options);\n\t\n\t    options = elliptic.curves[options];\n\t  }\n\t\n\t  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`\n\t  if (options instanceof elliptic.curves.PresetCurve) options = { curve: options };\n\t\n\t  this.curve = options.curve.curve;\n\t  this.n = this.curve.n;\n\t  this.nh = this.n.ushrn(1);\n\t  this.g = this.curve.g;\n\t\n\t  // Point on curve\n\t  this.g = options.curve.g;\n\t  this.g.precompute(options.curve.n.bitLength() + 1);\n\t\n\t  // Hash for function for DRBG\n\t  this.hash = options.hash || options.curve.hash;\n\t}\n\tmodule.exports = EC;\n\t\n\tEC.prototype.keyPair = function keyPair(options) {\n\t  return new KeyPair(this, options);\n\t};\n\t\n\tEC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {\n\t  return KeyPair.fromPrivate(this, priv, enc);\n\t};\n\t\n\tEC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {\n\t  return KeyPair.fromPublic(this, pub, enc);\n\t};\n\t\n\tEC.prototype.genKeyPair = function genKeyPair(options) {\n\t  if (!options) options = {};\n\t\n\t  // Instantiate Hmac_DRBG\n\t  var drbg = new elliptic.hmacDRBG({\n\t    hash: this.hash,\n\t    pers: options.pers,\n\t    entropy: options.entropy || elliptic.rand(this.hash.hmacStrength),\n\t    nonce: this.n.toArray()\n\t  });\n\t\n\t  var bytes = this.n.byteLength();\n\t  var ns2 = this.n.sub(new BN(2));\n\t  do {\n\t    var priv = new BN(drbg.generate(bytes));\n\t    if (priv.cmp(ns2) > 0) continue;\n\t\n\t    priv.iaddn(1);\n\t    return this.keyFromPrivate(priv);\n\t  } while (true);\n\t};\n\t\n\tEC.prototype._truncateToN = function truncateToN(msg, truncOnly) {\n\t  var delta = msg.byteLength() * 8 - this.n.bitLength();\n\t  if (delta > 0) msg = msg.ushrn(delta);\n\t  if (!truncOnly && msg.cmp(this.n) >= 0) return msg.sub(this.n);else return msg;\n\t};\n\t\n\tEC.prototype.sign = function sign(msg, key, enc, options) {\n\t  if ((typeof enc === 'undefined' ? 'undefined' : _typeof(enc)) === 'object') {\n\t    options = enc;\n\t    enc = null;\n\t  }\n\t  if (!options) options = {};\n\t\n\t  key = this.keyFromPrivate(key, enc);\n\t  msg = this._truncateToN(new BN(msg, 16));\n\t\n\t  // Zero-extend key to provide enough entropy\n\t  var bytes = this.n.byteLength();\n\t  var bkey = key.getPrivate().toArray('be', bytes);\n\t\n\t  // Zero-extend nonce to have the same byte size as N\n\t  var nonce = msg.toArray('be', bytes);\n\t\n\t  // Instantiate Hmac_DRBG\n\t  var drbg = new elliptic.hmacDRBG({\n\t    hash: this.hash,\n\t    entropy: bkey,\n\t    nonce: nonce,\n\t    pers: options.pers,\n\t    persEnc: options.persEnc\n\t  });\n\t\n\t  // Number of bytes to generate\n\t  var ns1 = this.n.sub(new BN(1));\n\t\n\t  for (var iter = 0; true; iter++) {\n\t    var k = options.k ? options.k(iter) : new BN(drbg.generate(this.n.byteLength()));\n\t    k = this._truncateToN(k, true);\n\t    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0) continue;\n\t\n\t    var kp = this.g.mul(k);\n\t    if (kp.isInfinity()) continue;\n\t\n\t    var kpX = kp.getX();\n\t    var r = kpX.umod(this.n);\n\t    if (r.cmpn(0) === 0) continue;\n\t\n\t    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));\n\t    s = s.umod(this.n);\n\t    if (s.cmpn(0) === 0) continue;\n\t\n\t    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) | (kpX.cmp(r) !== 0 ? 2 : 0);\n\t\n\t    // Use complement of `s`, if it is > `n / 2`\n\t    if (options.canonical && s.cmp(this.nh) > 0) {\n\t      s = this.n.sub(s);\n\t      recoveryParam ^= 1;\n\t    }\n\t\n\t    return new Signature({ r: r, s: s, recoveryParam: recoveryParam });\n\t  }\n\t};\n\t\n\tEC.prototype.verify = function verify(msg, signature, key, enc) {\n\t  msg = this._truncateToN(new BN(msg, 16));\n\t  key = this.keyFromPublic(key, enc);\n\t  signature = new Signature(signature, 'hex');\n\t\n\t  // Perform primitive values validation\n\t  var r = signature.r;\n\t  var s = signature.s;\n\t  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0) return false;\n\t  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0) return false;\n\t\n\t  // Validate signature\n\t  var sinv = s.invm(this.n);\n\t  var u1 = sinv.mul(msg).umod(this.n);\n\t  var u2 = sinv.mul(r).umod(this.n);\n\t\n\t  if (!this.curve._maxwellTrick) {\n\t    var p = this.g.mulAdd(u1, key.getPublic(), u2);\n\t    if (p.isInfinity()) return false;\n\t\n\t    return p.getX().umod(this.n).cmp(r) === 0;\n\t  }\n\t\n\t  // NOTE: Greg Maxwell's trick, inspired by:\n\t  // https://git.io/vad3K\n\t\n\t  var p = this.g.jmulAdd(u1, key.getPublic(), u2);\n\t  if (p.isInfinity()) return false;\n\t\n\t  // Compare `p.x` of Jacobian point with `r`,\n\t  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the\n\t  // inverse of `p.z^2`\n\t  return p.eqXToP(r);\n\t};\n\t\n\tEC.prototype.recoverPubKey = function (msg, signature, j, enc) {\n\t  assert((3 & j) === j, 'The recovery param is more than two bits');\n\t  signature = new Signature(signature, enc);\n\t\n\t  var n = this.n;\n\t  var e = new BN(msg);\n\t  var r = signature.r;\n\t  var s = signature.s;\n\t\n\t  // A set LSB signifies that the y-coordinate is odd\n\t  var isYOdd = j & 1;\n\t  var isSecondKey = j >> 1;\n\t  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey) throw new Error('Unable to find sencond key candinate');\n\t\n\t  // 1.1. Let x = r + jn.\n\t  if (isSecondKey) r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);else r = this.curve.pointFromX(r, isYOdd);\n\t\n\t  var rInv = signature.r.invm(n);\n\t  var s1 = n.sub(e).mul(rInv).umod(n);\n\t  var s2 = s.mul(rInv).umod(n);\n\t\n\t  // 1.6.1 Compute Q = r^-1 (sR -  eG)\n\t  //               Q = r^-1 (sR + -eG)\n\t  return this.g.mulAdd(s1, r, s2);\n\t};\n\t\n\tEC.prototype.getKeyRecoveryParam = function (e, signature, Q, enc) {\n\t  signature = new Signature(signature, enc);\n\t  if (signature.recoveryParam !== null) return signature.recoveryParam;\n\t\n\t  for (var i = 0; i < 4; i++) {\n\t    var Qprime;\n\t    try {\n\t      Qprime = this.recoverPubKey(e, signature, i);\n\t    } catch (e) {\n\t      continue;\n\t    }\n\t\n\t    if (Qprime.eq(Q)) return i;\n\t  }\n\t  throw new Error('Unable to find valid recovery factor');\n\t};\n\n/***/ },\n\n/***/ 909:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar BN = __webpack_require__(881);\n\t\n\tfunction KeyPair(ec, options) {\n\t  this.ec = ec;\n\t  this.priv = null;\n\t  this.pub = null;\n\t\n\t  // KeyPair(ec, { priv: ..., pub: ... })\n\t  if (options.priv) this._importPrivate(options.priv, options.privEnc);\n\t  if (options.pub) this._importPublic(options.pub, options.pubEnc);\n\t}\n\tmodule.exports = KeyPair;\n\t\n\tKeyPair.fromPublic = function fromPublic(ec, pub, enc) {\n\t  if (pub instanceof KeyPair) return pub;\n\t\n\t  return new KeyPair(ec, {\n\t    pub: pub,\n\t    pubEnc: enc\n\t  });\n\t};\n\t\n\tKeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {\n\t  if (priv instanceof KeyPair) return priv;\n\t\n\t  return new KeyPair(ec, {\n\t    priv: priv,\n\t    privEnc: enc\n\t  });\n\t};\n\t\n\tKeyPair.prototype.validate = function validate() {\n\t  var pub = this.getPublic();\n\t\n\t  if (pub.isInfinity()) return { result: false, reason: 'Invalid public key' };\n\t  if (!pub.validate()) return { result: false, reason: 'Public key is not a point' };\n\t  if (!pub.mul(this.ec.curve.n).isInfinity()) return { result: false, reason: 'Public key * N != O' };\n\t\n\t  return { result: true, reason: null };\n\t};\n\t\n\tKeyPair.prototype.getPublic = function getPublic(compact, enc) {\n\t  // compact is optional argument\n\t  if (typeof compact === 'string') {\n\t    enc = compact;\n\t    compact = null;\n\t  }\n\t\n\t  if (!this.pub) this.pub = this.ec.g.mul(this.priv);\n\t\n\t  if (!enc) return this.pub;\n\t\n\t  return this.pub.encode(enc, compact);\n\t};\n\t\n\tKeyPair.prototype.getPrivate = function getPrivate(enc) {\n\t  if (enc === 'hex') return this.priv.toString(16, 2);else return this.priv;\n\t};\n\t\n\tKeyPair.prototype._importPrivate = function _importPrivate(key, enc) {\n\t  this.priv = new BN(key, enc || 16);\n\t\n\t  // Ensure that the priv won't be bigger than n, otherwise we may fail\n\t  // in fixed multiplication method\n\t  this.priv = this.priv.umod(this.ec.curve.n);\n\t};\n\t\n\tKeyPair.prototype._importPublic = function _importPublic(key, enc) {\n\t  if (key.x || key.y) {\n\t    this.pub = this.ec.curve.point(key.x, key.y);\n\t    return;\n\t  }\n\t  this.pub = this.ec.curve.decodePoint(key, enc);\n\t};\n\t\n\t// ECDH\n\tKeyPair.prototype.derive = function derive(pub) {\n\t  return pub.mul(this.priv).getX();\n\t};\n\t\n\t// ECDSA\n\tKeyPair.prototype.sign = function sign(msg, enc, options) {\n\t  return this.ec.sign(msg, this, enc, options);\n\t};\n\t\n\tKeyPair.prototype.verify = function verify(msg, signature) {\n\t  return this.ec.verify(msg, signature, this);\n\t};\n\t\n\tKeyPair.prototype.inspect = function inspect() {\n\t  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) + ' pub: ' + (this.pub && this.pub.inspect()) + ' >';\n\t};\n\n/***/ },\n\n/***/ 910:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar BN = __webpack_require__(881);\n\t\n\tvar elliptic = __webpack_require__(891);\n\tvar utils = elliptic.utils;\n\tvar assert = utils.assert;\n\t\n\tfunction Signature(options, enc) {\n\t  if (options instanceof Signature) return options;\n\t\n\t  if (this._importDER(options, enc)) return;\n\t\n\t  assert(options.r && options.s, 'Signature without r or s');\n\t  this.r = new BN(options.r, 16);\n\t  this.s = new BN(options.s, 16);\n\t  if (options.recoveryParam === undefined) this.recoveryParam = null;else this.recoveryParam = options.recoveryParam;\n\t}\n\tmodule.exports = Signature;\n\t\n\tfunction Position() {\n\t  this.place = 0;\n\t}\n\t\n\tfunction getLength(buf, p) {\n\t  var initial = buf[p.place++];\n\t  if (!(initial & 0x80)) {\n\t    return initial;\n\t  }\n\t  var octetLen = initial & 0xf;\n\t  var val = 0;\n\t  for (var i = 0, off = p.place; i < octetLen; i++, off++) {\n\t    val <<= 8;\n\t    val |= buf[off];\n\t  }\n\t  p.place = off;\n\t  return val;\n\t}\n\t\n\tfunction rmPadding(buf) {\n\t  var i = 0;\n\t  var len = buf.length - 1;\n\t  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {\n\t    i++;\n\t  }\n\t  if (i === 0) {\n\t    return buf;\n\t  }\n\t  return buf.slice(i);\n\t}\n\t\n\tSignature.prototype._importDER = function _importDER(data, enc) {\n\t  data = utils.toArray(data, enc);\n\t  var p = new Position();\n\t  if (data[p.place++] !== 0x30) {\n\t    return false;\n\t  }\n\t  var len = getLength(data, p);\n\t  if (len + p.place !== data.length) {\n\t    return false;\n\t  }\n\t  if (data[p.place++] !== 0x02) {\n\t    return false;\n\t  }\n\t  var rlen = getLength(data, p);\n\t  var r = data.slice(p.place, rlen + p.place);\n\t  p.place += rlen;\n\t  if (data[p.place++] !== 0x02) {\n\t    return false;\n\t  }\n\t  var slen = getLength(data, p);\n\t  if (data.length !== slen + p.place) {\n\t    return false;\n\t  }\n\t  var s = data.slice(p.place, slen + p.place);\n\t  if (r[0] === 0 && r[1] & 0x80) {\n\t    r = r.slice(1);\n\t  }\n\t  if (s[0] === 0 && s[1] & 0x80) {\n\t    s = s.slice(1);\n\t  }\n\t\n\t  this.r = new BN(r);\n\t  this.s = new BN(s);\n\t  this.recoveryParam = null;\n\t\n\t  return true;\n\t};\n\t\n\tfunction constructLength(arr, len) {\n\t  if (len < 0x80) {\n\t    arr.push(len);\n\t    return;\n\t  }\n\t  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);\n\t  arr.push(octets | 0x80);\n\t  while (--octets) {\n\t    arr.push(len >>> (octets << 3) & 0xff);\n\t  }\n\t  arr.push(len);\n\t}\n\t\n\tSignature.prototype.toDER = function toDER(enc) {\n\t  var r = this.r.toArray();\n\t  var s = this.s.toArray();\n\t\n\t  // Pad values\n\t  if (r[0] & 0x80) r = [0].concat(r);\n\t  // Pad values\n\t  if (s[0] & 0x80) s = [0].concat(s);\n\t\n\t  r = rmPadding(r);\n\t  s = rmPadding(s);\n\t\n\t  while (!s[0] && !(s[1] & 0x80)) {\n\t    s = s.slice(1);\n\t  }\n\t  var arr = [0x02];\n\t  constructLength(arr, r.length);\n\t  arr = arr.concat(r);\n\t  arr.push(0x02);\n\t  constructLength(arr, s.length);\n\t  var backHalf = arr.concat(s);\n\t  var res = [0x30];\n\t  constructLength(res, backHalf.length);\n\t  res = res.concat(backHalf);\n\t  return utils.encode(res, enc);\n\t};\n\n/***/ },\n\n/***/ 911:\n[2495, 891, 912, 913],\n\n/***/ 912:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar elliptic = __webpack_require__(891);\n\tvar utils = elliptic.utils;\n\tvar assert = utils.assert;\n\tvar parseBytes = utils.parseBytes;\n\tvar cachedProperty = utils.cachedProperty;\n\t\n\t/**\n\t* @param {EDDSA} eddsa - instance\n\t* @param {Object} params - public/private key parameters\n\t*\n\t* @param {Array<Byte>} [params.secret] - secret seed bytes\n\t* @param {Point} [params.pub] - public key point (aka `A` in eddsa terms)\n\t* @param {Array<Byte>} [params.pub] - public key point encoded as bytes\n\t*\n\t*/\n\tfunction KeyPair(eddsa, params) {\n\t  this.eddsa = eddsa;\n\t  this._secret = parseBytes(params.secret);\n\t  if (eddsa.isPoint(params.pub)) this._pub = params.pub;else this._pubBytes = parseBytes(params.pub);\n\t}\n\t\n\tKeyPair.fromPublic = function fromPublic(eddsa, pub) {\n\t  if (pub instanceof KeyPair) return pub;\n\t  return new KeyPair(eddsa, { pub: pub });\n\t};\n\t\n\tKeyPair.fromSecret = function fromSecret(eddsa, secret) {\n\t  if (secret instanceof KeyPair) return secret;\n\t  return new KeyPair(eddsa, { secret: secret });\n\t};\n\t\n\tKeyPair.prototype.secret = function secret() {\n\t  return this._secret;\n\t};\n\t\n\tcachedProperty(KeyPair, 'pubBytes', function pubBytes() {\n\t  return this.eddsa.encodePoint(this.pub());\n\t});\n\t\n\tcachedProperty(KeyPair, 'pub', function pub() {\n\t  if (this._pubBytes) return this.eddsa.decodePoint(this._pubBytes);\n\t  return this.eddsa.g.mul(this.priv());\n\t});\n\t\n\tcachedProperty(KeyPair, 'privBytes', function privBytes() {\n\t  var eddsa = this.eddsa;\n\t  var hash = this.hash();\n\t  var lastIx = eddsa.encodingLength - 1;\n\t\n\t  var a = hash.slice(0, eddsa.encodingLength);\n\t  a[0] &= 248;\n\t  a[lastIx] &= 127;\n\t  a[lastIx] |= 64;\n\t\n\t  return a;\n\t});\n\t\n\tcachedProperty(KeyPair, 'priv', function priv() {\n\t  return this.eddsa.decodeInt(this.privBytes());\n\t});\n\t\n\tcachedProperty(KeyPair, 'hash', function hash() {\n\t  return this.eddsa.hash().update(this.secret()).digest();\n\t});\n\t\n\tcachedProperty(KeyPair, 'messagePrefix', function messagePrefix() {\n\t  return this.hash().slice(this.eddsa.encodingLength);\n\t});\n\t\n\tKeyPair.prototype.sign = function sign(message) {\n\t  assert(this._secret, 'KeyPair can only verify');\n\t  return this.eddsa.sign(message, this);\n\t};\n\t\n\tKeyPair.prototype.verify = function verify(message, sig) {\n\t  return this.eddsa.verify(message, sig, this);\n\t};\n\t\n\tKeyPair.prototype.getSecret = function getSecret(enc) {\n\t  assert(this._secret, 'KeyPair is public only');\n\t  return utils.encode(this.secret(), enc);\n\t};\n\t\n\tKeyPair.prototype.getPublic = function getPublic(enc) {\n\t  return utils.encode(this.pubBytes(), enc);\n\t};\n\t\n\tmodule.exports = KeyPair;\n\n/***/ },\n\n/***/ 913:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar BN = __webpack_require__(881);\n\tvar elliptic = __webpack_require__(891);\n\tvar utils = elliptic.utils;\n\tvar assert = utils.assert;\n\tvar cachedProperty = utils.cachedProperty;\n\tvar parseBytes = utils.parseBytes;\n\t\n\t/**\n\t* @param {EDDSA} eddsa - eddsa instance\n\t* @param {Array<Bytes>|Object} sig -\n\t* @param {Array<Bytes>|Point} [sig.R] - R point as Point or bytes\n\t* @param {Array<Bytes>|bn} [sig.S] - S scalar as bn or bytes\n\t* @param {Array<Bytes>} [sig.Rencoded] - R point encoded\n\t* @param {Array<Bytes>} [sig.Sencoded] - S scalar encoded\n\t*/\n\tfunction Signature(eddsa, sig) {\n\t  this.eddsa = eddsa;\n\t\n\t  if ((typeof sig === 'undefined' ? 'undefined' : _typeof(sig)) !== 'object') sig = parseBytes(sig);\n\t\n\t  if (Array.isArray(sig)) {\n\t    sig = {\n\t      R: sig.slice(0, eddsa.encodingLength),\n\t      S: sig.slice(eddsa.encodingLength)\n\t    };\n\t  }\n\t\n\t  assert(sig.R && sig.S, 'Signature without R or S');\n\t\n\t  if (eddsa.isPoint(sig.R)) this._R = sig.R;\n\t  if (sig.S instanceof BN) this._S = sig.S;\n\t\n\t  this._Rencoded = Array.isArray(sig.R) ? sig.R : sig.Rencoded;\n\t  this._Sencoded = Array.isArray(sig.S) ? sig.S : sig.Sencoded;\n\t}\n\t\n\tcachedProperty(Signature, 'S', function S() {\n\t  return this.eddsa.decodeInt(this.Sencoded());\n\t});\n\t\n\tcachedProperty(Signature, 'R', function R() {\n\t  return this.eddsa.decodePoint(this.Rencoded());\n\t});\n\t\n\tcachedProperty(Signature, 'Rencoded', function Rencoded() {\n\t  return this.eddsa.encodePoint(this.R());\n\t});\n\t\n\tcachedProperty(Signature, 'Sencoded', function Sencoded() {\n\t  return this.eddsa.encodeInt(this.S());\n\t});\n\t\n\tSignature.prototype.toBytes = function toBytes() {\n\t  return this.Rencoded().concat(this.Sencoded());\n\t};\n\t\n\tSignature.prototype.toHex = function toHex() {\n\t  return utils.encode(this.toBytes(), 'hex').toUpperCase();\n\t};\n\t\n\tmodule.exports = Signature;\n\n/***/ },\n\n/***/ 1272:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tmodule.exports = __webpack_require__(1273)(__webpack_require__(1278));\n\n/***/ },\n\n/***/ 1273:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar assert = __webpack_require__(1274);\n\tvar der = __webpack_require__(1275);\n\tvar messages = __webpack_require__(1277);\n\t\n\tfunction initCompressedValue(value, defaultValue) {\n\t  if (value === undefined) return defaultValue;\n\t\n\t  assert.isBoolean(value, messages.COMPRESSED_TYPE_INVALID);\n\t  return value;\n\t}\n\t\n\tmodule.exports = function (secp256k1) {\n\t  return {\n\t    privateKeyVerify: function privateKeyVerify(privateKey) {\n\t      assert.isBuffer(privateKey, messages.EC_PRIVATE_KEY_TYPE_INVALID);\n\t      return privateKey.length === 32 && secp256k1.privateKeyVerify(privateKey);\n\t    },\n\t\n\t    privateKeyExport: function privateKeyExport(privateKey, compressed) {\n\t      assert.isBuffer(privateKey, messages.EC_PRIVATE_KEY_TYPE_INVALID);\n\t      assert.isBufferLength(privateKey, 32, messages.EC_PRIVATE_KEY_LENGTH_INVALID);\n\t\n\t      compressed = initCompressedValue(compressed, true);\n\t      var publicKey = secp256k1.privateKeyExport(privateKey, compressed);\n\t\n\t      return der.privateKeyExport(privateKey, publicKey, compressed);\n\t    },\n\t\n\t    privateKeyImport: function privateKeyImport(privateKey) {\n\t      assert.isBuffer(privateKey, messages.EC_PRIVATE_KEY_TYPE_INVALID);\n\t\n\t      privateKey = der.privateKeyImport(privateKey);\n\t      if (privateKey && privateKey.length === 32 && secp256k1.privateKeyVerify(privateKey)) return privateKey;\n\t\n\t      throw new Error(messages.EC_PRIVATE_KEY_IMPORT_DER_FAIL);\n\t    },\n\t\n\t    privateKeyTweakAdd: function privateKeyTweakAdd(privateKey, tweak) {\n\t      assert.isBuffer(privateKey, messages.EC_PRIVATE_KEY_TYPE_INVALID);\n\t      assert.isBufferLength(privateKey, 32, messages.EC_PRIVATE_KEY_LENGTH_INVALID);\n\t\n\t      assert.isBuffer(tweak, messages.TWEAK_TYPE_INVALID);\n\t      assert.isBufferLength(tweak, 32, messages.TWEAK_LENGTH_INVALID);\n\t\n\t      return secp256k1.privateKeyTweakAdd(privateKey, tweak);\n\t    },\n\t\n\t    privateKeyTweakMul: function privateKeyTweakMul(privateKey, tweak) {\n\t      assert.isBuffer(privateKey, messages.EC_PRIVATE_KEY_TYPE_INVALID);\n\t      assert.isBufferLength(privateKey, 32, messages.EC_PRIVATE_KEY_LENGTH_INVALID);\n\t\n\t      assert.isBuffer(tweak, messages.TWEAK_TYPE_INVALID);\n\t      assert.isBufferLength(tweak, 32, messages.TWEAK_LENGTH_INVALID);\n\t\n\t      return secp256k1.privateKeyTweakMul(privateKey, tweak);\n\t    },\n\t\n\t    publicKeyCreate: function publicKeyCreate(privateKey, compressed) {\n\t      assert.isBuffer(privateKey, messages.EC_PRIVATE_KEY_TYPE_INVALID);\n\t      assert.isBufferLength(privateKey, 32, messages.EC_PRIVATE_KEY_LENGTH_INVALID);\n\t\n\t      compressed = initCompressedValue(compressed, true);\n\t\n\t      return secp256k1.publicKeyCreate(privateKey, compressed);\n\t    },\n\t\n\t    publicKeyConvert: function publicKeyConvert(publicKey, compressed) {\n\t      assert.isBuffer(publicKey, messages.EC_PUBLIC_KEY_TYPE_INVALID);\n\t      assert.isBufferLength2(publicKey, 33, 65, messages.EC_PUBLIC_KEY_LENGTH_INVALID);\n\t\n\t      compressed = initCompressedValue(compressed, true);\n\t\n\t      return secp256k1.publicKeyConvert(publicKey, compressed);\n\t    },\n\t\n\t    publicKeyVerify: function publicKeyVerify(publicKey) {\n\t      assert.isBuffer(publicKey, messages.EC_PUBLIC_KEY_TYPE_INVALID);\n\t      return secp256k1.publicKeyVerify(publicKey);\n\t    },\n\t\n\t    publicKeyTweakAdd: function publicKeyTweakAdd(publicKey, tweak, compressed) {\n\t      assert.isBuffer(publicKey, messages.EC_PUBLIC_KEY_TYPE_INVALID);\n\t      assert.isBufferLength2(publicKey, 33, 65, messages.EC_PUBLIC_KEY_LENGTH_INVALID);\n\t\n\t      assert.isBuffer(tweak, messages.TWEAK_TYPE_INVALID);\n\t      assert.isBufferLength(tweak, 32, messages.TWEAK_LENGTH_INVALID);\n\t\n\t      compressed = initCompressedValue(compressed, true);\n\t\n\t      return secp256k1.publicKeyTweakAdd(publicKey, tweak, compressed);\n\t    },\n\t\n\t    publicKeyTweakMul: function publicKeyTweakMul(publicKey, tweak, compressed) {\n\t      assert.isBuffer(publicKey, messages.EC_PUBLIC_KEY_TYPE_INVALID);\n\t      assert.isBufferLength2(publicKey, 33, 65, messages.EC_PUBLIC_KEY_LENGTH_INVALID);\n\t\n\t      assert.isBuffer(tweak, messages.TWEAK_TYPE_INVALID);\n\t      assert.isBufferLength(tweak, 32, messages.TWEAK_LENGTH_INVALID);\n\t\n\t      compressed = initCompressedValue(compressed, true);\n\t\n\t      return secp256k1.publicKeyTweakMul(publicKey, tweak, compressed);\n\t    },\n\t\n\t    publicKeyCombine: function publicKeyCombine(publicKeys, compressed) {\n\t      assert.isArray(publicKeys, messages.EC_PUBLIC_KEYS_TYPE_INVALID);\n\t      assert.isLengthGTZero(publicKeys, messages.EC_PUBLIC_KEYS_LENGTH_INVALID);\n\t      for (var i = 0; i < publicKeys.length; ++i) {\n\t        assert.isBuffer(publicKeys[i], messages.EC_PUBLIC_KEY_TYPE_INVALID);\n\t        assert.isBufferLength2(publicKeys[i], 33, 65, messages.EC_PUBLIC_KEY_LENGTH_INVALID);\n\t      }\n\t\n\t      compressed = initCompressedValue(compressed, true);\n\t\n\t      return secp256k1.publicKeyCombine(publicKeys, compressed);\n\t    },\n\t\n\t    signatureNormalize: function signatureNormalize(signature) {\n\t      assert.isBuffer(signature, messages.ECDSA_SIGNATURE_TYPE_INVALID);\n\t      assert.isBufferLength(signature, 64, messages.ECDSA_SIGNATURE_LENGTH_INVALID);\n\t\n\t      return secp256k1.signatureNormalize(signature);\n\t    },\n\t\n\t    signatureExport: function signatureExport(signature) {\n\t      assert.isBuffer(signature, messages.ECDSA_SIGNATURE_TYPE_INVALID);\n\t      assert.isBufferLength(signature, 64, messages.ECDSA_SIGNATURE_LENGTH_INVALID);\n\t\n\t      var sigObj = secp256k1.signatureExport(signature);\n\t      return der.signatureExport(sigObj);\n\t    },\n\t\n\t    signatureImport: function signatureImport(sig) {\n\t      assert.isBuffer(sig, messages.ECDSA_SIGNATURE_TYPE_INVALID);\n\t      assert.isLengthGTZero(sig, messages.ECDSA_SIGNATURE_LENGTH_INVALID);\n\t\n\t      var sigObj = der.signatureImport(sig);\n\t      if (sigObj) return secp256k1.signatureImport(sigObj);\n\t\n\t      throw new Error(messages.ECDSA_SIGNATURE_PARSE_DER_FAIL);\n\t    },\n\t\n\t    signatureImportLax: function signatureImportLax(sig) {\n\t      assert.isBuffer(sig, messages.ECDSA_SIGNATURE_TYPE_INVALID);\n\t      assert.isLengthGTZero(sig, messages.ECDSA_SIGNATURE_LENGTH_INVALID);\n\t\n\t      var sigObj = der.signatureImportLax(sig);\n\t      if (sigObj) return secp256k1.signatureImport(sigObj);\n\t\n\t      throw new Error(messages.ECDSA_SIGNATURE_PARSE_DER_FAIL);\n\t    },\n\t\n\t    sign: function sign(message, privateKey, options) {\n\t      assert.isBuffer(message, messages.MSG32_TYPE_INVALID);\n\t      assert.isBufferLength(message, 32, messages.MSG32_LENGTH_INVALID);\n\t\n\t      assert.isBuffer(privateKey, messages.EC_PRIVATE_KEY_TYPE_INVALID);\n\t      assert.isBufferLength(privateKey, 32, messages.EC_PRIVATE_KEY_LENGTH_INVALID);\n\t\n\t      var data = null;\n\t      var noncefn = null;\n\t      if (options !== undefined) {\n\t        assert.isObject(options, messages.OPTIONS_TYPE_INVALID);\n\t\n\t        if (options.data !== undefined) {\n\t          assert.isBuffer(options.data, messages.OPTIONS_DATA_TYPE_INVALID);\n\t          assert.isBufferLength(options.data, 32, messages.OPTIONS_DATA_LENGTH_INVALID);\n\t          data = options.data;\n\t        }\n\t\n\t        if (options.noncefn !== undefined) {\n\t          assert.isFunction(options.noncefn, messages.OPTIONS_NONCEFN_TYPE_INVALID);\n\t          noncefn = options.noncefn;\n\t        }\n\t      }\n\t\n\t      return secp256k1.sign(message, privateKey, noncefn, data);\n\t    },\n\t\n\t    verify: function verify(message, signature, publicKey) {\n\t      assert.isBuffer(message, messages.MSG32_TYPE_INVALID);\n\t      assert.isBufferLength(message, 32, messages.MSG32_LENGTH_INVALID);\n\t\n\t      assert.isBuffer(signature, messages.ECDSA_SIGNATURE_TYPE_INVALID);\n\t      assert.isBufferLength(signature, 64, messages.ECDSA_SIGNATURE_LENGTH_INVALID);\n\t\n\t      assert.isBuffer(publicKey, messages.EC_PUBLIC_KEY_TYPE_INVALID);\n\t      assert.isBufferLength2(publicKey, 33, 65, messages.EC_PUBLIC_KEY_LENGTH_INVALID);\n\t\n\t      return secp256k1.verify(message, signature, publicKey);\n\t    },\n\t\n\t    recover: function recover(message, signature, recovery, compressed) {\n\t      assert.isBuffer(message, messages.MSG32_TYPE_INVALID);\n\t      assert.isBufferLength(message, 32, messages.MSG32_LENGTH_INVALID);\n\t\n\t      assert.isBuffer(signature, messages.ECDSA_SIGNATURE_TYPE_INVALID);\n\t      assert.isBufferLength(signature, 64, messages.ECDSA_SIGNATURE_LENGTH_INVALID);\n\t\n\t      assert.isNumber(recovery, messages.RECOVERY_ID_TYPE_INVALID);\n\t      assert.isNumberInInterval(recovery, -1, 4, messages.RECOVERY_ID_VALUE_INVALID);\n\t\n\t      compressed = initCompressedValue(compressed, true);\n\t\n\t      return secp256k1.recover(message, signature, recovery, compressed);\n\t    },\n\t\n\t    ecdh: function ecdh(publicKey, privateKey) {\n\t      assert.isBuffer(publicKey, messages.EC_PUBLIC_KEY_TYPE_INVALID);\n\t      assert.isBufferLength2(publicKey, 33, 65, messages.EC_PUBLIC_KEY_LENGTH_INVALID);\n\t\n\t      assert.isBuffer(privateKey, messages.EC_PRIVATE_KEY_TYPE_INVALID);\n\t      assert.isBufferLength(privateKey, 32, messages.EC_PRIVATE_KEY_LENGTH_INVALID);\n\t\n\t      return secp256k1.ecdh(publicKey, privateKey);\n\t    },\n\t\n\t    ecdhUnsafe: function ecdhUnsafe(publicKey, privateKey, compressed) {\n\t      assert.isBuffer(publicKey, messages.EC_PUBLIC_KEY_TYPE_INVALID);\n\t      assert.isBufferLength2(publicKey, 33, 65, messages.EC_PUBLIC_KEY_LENGTH_INVALID);\n\t\n\t      assert.isBuffer(privateKey, messages.EC_PRIVATE_KEY_TYPE_INVALID);\n\t      assert.isBufferLength(privateKey, 32, messages.EC_PRIVATE_KEY_LENGTH_INVALID);\n\t\n\t      compressed = initCompressedValue(compressed, true);\n\t\n\t      return secp256k1.ecdhUnsafe(publicKey, privateKey, compressed);\n\t    }\n\t  };\n\t};\n\n/***/ },\n\n/***/ 1274:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(Buffer) {'use strict';\n\t\n\tvar toString = Object.prototype.toString;\n\t\n\t// TypeError\n\texports.isArray = function (value, message) {\n\t  if (!Array.isArray(value)) throw TypeError(message);\n\t};\n\t\n\texports.isBoolean = function (value, message) {\n\t  if (toString.call(value) !== '[object Boolean]') throw TypeError(message);\n\t};\n\t\n\texports.isBuffer = function (value, message) {\n\t  if (!Buffer.isBuffer(value)) throw TypeError(message);\n\t};\n\t\n\texports.isFunction = function (value, message) {\n\t  if (toString.call(value) !== '[object Function]') throw TypeError(message);\n\t};\n\t\n\texports.isNumber = function (value, message) {\n\t  if (toString.call(value) !== '[object Number]') throw TypeError(message);\n\t};\n\t\n\texports.isObject = function (value, message) {\n\t  if (toString.call(value) !== '[object Object]') throw TypeError(message);\n\t};\n\t\n\t// RangeError\n\texports.isBufferLength = function (buffer, length, message) {\n\t  if (buffer.length !== length) throw RangeError(message);\n\t};\n\t\n\texports.isBufferLength2 = function (buffer, length1, length2, message) {\n\t  if (buffer.length !== length1 && buffer.length !== length2) throw RangeError(message);\n\t};\n\t\n\texports.isLengthGTZero = function (value, message) {\n\t  if (value.length === 0) throw RangeError(message);\n\t};\n\t\n\texports.isNumberInInterval = function (number, x, y, message) {\n\t  if (number <= x || number >= y) throw RangeError(message);\n\t};\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(807).Buffer))\n\n/***/ },\n\n/***/ 1275:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(Buffer) {'use strict';\n\t\n\tvar bip66 = __webpack_require__(1276);\n\t\n\tvar EC_PRIVKEY_EXPORT_DER_COMPRESSED = new Buffer([\n\t// begin\n\t0x30, 0x81, 0xd3, 0x02, 0x01, 0x01, 0x04, 0x20,\n\t// private key\n\t0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n\t// middle\n\t0xa0, 0x81, 0x85, 0x30, 0x81, 0x82, 0x02, 0x01, 0x01, 0x30, 0x2c, 0x06, 0x07, 0x2a, 0x86, 0x48, 0xcE, 0x3d, 0x01, 0x01, 0x02, 0x21, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfE, 0xff, 0xff, 0xfc, 0x2f, 0x30, 0x06, 0x04, 0x01, 0x00, 0x04, 0x01, 0x07, 0x04, 0x21, 0x02, 0x79, 0xbE, 0x66, 0x7E, 0xf9, 0xdc, 0xbb, 0xac, 0x55, 0xa0, 0x62, 0x95, 0xcE, 0x87, 0x0b, 0x07, 0x02, 0x9b, 0xfc, 0xdb, 0x2d, 0xcE, 0x28, 0xd9, 0x59, 0xf2, 0x81, 0x5b, 0x16, 0xf8, 0x17, 0x98, 0x02, 0x21, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfE, 0xba, 0xaE, 0xdc, 0xE6, 0xaf, 0x48, 0xa0, 0x3b, 0xbf, 0xd2, 0x5E, 0x8c, 0xd0, 0x36, 0x41, 0x41, 0x02, 0x01, 0x01, 0xa1, 0x24, 0x03, 0x22, 0x00,\n\t// public key\n\t0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00]);\n\t\n\tvar EC_PRIVKEY_EXPORT_DER_UNCOMPRESSED = new Buffer([\n\t// begin\n\t0x30, 0x82, 0x01, 0x13, 0x02, 0x01, 0x01, 0x04, 0x20,\n\t// private key\n\t0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n\t// middle\n\t0xa0, 0x81, 0xa5, 0x30, 0x81, 0xa2, 0x02, 0x01, 0x01, 0x30, 0x2c, 0x06, 0x07, 0x2a, 0x86, 0x48, 0xcE, 0x3d, 0x01, 0x01, 0x02, 0x21, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfE, 0xff, 0xff, 0xfc, 0x2f, 0x30, 0x06, 0x04, 0x01, 0x00, 0x04, 0x01, 0x07, 0x04, 0x41, 0x04, 0x79, 0xbE, 0x66, 0x7E, 0xf9, 0xdc, 0xbb, 0xac, 0x55, 0xa0, 0x62, 0x95, 0xcE, 0x87, 0x0b, 0x07, 0x02, 0x9b, 0xfc, 0xdb, 0x2d, 0xcE, 0x28, 0xd9, 0x59, 0xf2, 0x81, 0x5b, 0x16, 0xf8, 0x17, 0x98, 0x48, 0x3a, 0xda, 0x77, 0x26, 0xa3, 0xc4, 0x65, 0x5d, 0xa4, 0xfb, 0xfc, 0x0E, 0x11, 0x08, 0xa8, 0xfd, 0x17, 0xb4, 0x48, 0xa6, 0x85, 0x54, 0x19, 0x9c, 0x47, 0xd0, 0x8f, 0xfb, 0x10, 0xd4, 0xb8, 0x02, 0x21, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfE, 0xba, 0xaE, 0xdc, 0xE6, 0xaf, 0x48, 0xa0, 0x3b, 0xbf, 0xd2, 0x5E, 0x8c, 0xd0, 0x36, 0x41, 0x41, 0x02, 0x01, 0x01, 0xa1, 0x44, 0x03, 0x42, 0x00,\n\t// public key\n\t0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00]);\n\t\n\tvar ZERO_BUFFER_32 = new Buffer([0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00]);\n\t\n\texports.privateKeyExport = function (privateKey, publicKey, compressed) {\n\t  var result = new Buffer(compressed ? EC_PRIVKEY_EXPORT_DER_COMPRESSED : EC_PRIVKEY_EXPORT_DER_UNCOMPRESSED);\n\t  privateKey.copy(result, compressed ? 8 : 9);\n\t  publicKey.copy(result, compressed ? 181 : 214);\n\t  return result;\n\t};\n\t\n\texports.privateKeyImport = function (privateKey) {\n\t  var length = privateKey.length;\n\t\n\t  // sequence header\n\t  var index = 0;\n\t  if (length < index + 1 || privateKey[index] !== 0x30) return;\n\t  index += 1;\n\t\n\t  // sequence length constructor\n\t  if (length < index + 1 || !(privateKey[index] & 0x80)) return;\n\t\n\t  var lenb = privateKey[index] & 0x7f;\n\t  index += 1;\n\t  if (lenb < 1 || lenb > 2) return;\n\t  if (length < index + lenb) return;\n\t\n\t  // sequence length\n\t  var len = privateKey[index + lenb - 1] | (lenb > 1 ? privateKey[index + lenb - 2] << 8 : 0);\n\t  index += lenb;\n\t  if (length < index + len) return;\n\t\n\t  // sequence element 0: version number (=1)\n\t  if (length < index + 3 || privateKey[index] !== 0x02 || privateKey[index + 1] !== 0x01 || privateKey[index + 2] !== 0x01) {\n\t    return;\n\t  }\n\t  index += 3;\n\t\n\t  // sequence element 1: octet string, up to 32 bytes\n\t  if (length < index + 2 || privateKey[index] !== 0x04 || privateKey[index + 1] > 0x20 || length < index + 2 + privateKey[index + 1]) {\n\t    return;\n\t  }\n\t\n\t  return privateKey.slice(index + 2, index + 2 + privateKey[index + 1]);\n\t};\n\t\n\texports.signatureExport = function (sigObj) {\n\t  var r = Buffer.concat([new Buffer([0]), sigObj.r]);\n\t  for (var lenR = 33, posR = 0; lenR > 1 && r[posR] === 0x00 && !(r[posR + 1] & 0x80); --lenR, ++posR) {}\n\t\n\t  var s = Buffer.concat([new Buffer([0]), sigObj.s]);\n\t  for (var lenS = 33, posS = 0; lenS > 1 && s[posS] === 0x00 && !(s[posS + 1] & 0x80); --lenS, ++posS) {}\n\t\n\t  return bip66.encode(r.slice(posR), s.slice(posS));\n\t};\n\t\n\texports.signatureImport = function (sig) {\n\t  var r = new Buffer(ZERO_BUFFER_32);\n\t  var s = new Buffer(ZERO_BUFFER_32);\n\t\n\t  try {\n\t    var sigObj = bip66.decode(sig);\n\t    if (sigObj.r.length === 33 && sigObj.r[0] === 0x00) sigObj.r = sigObj.r.slice(1);\n\t    if (sigObj.r.length > 32) throw new Error('R length is too long');\n\t    if (sigObj.s.length === 33 && sigObj.s[0] === 0x00) sigObj.s = sigObj.s.slice(1);\n\t    if (sigObj.s.length > 32) throw new Error('S length is too long');\n\t  } catch (err) {\n\t    return;\n\t  }\n\t\n\t  sigObj.r.copy(r, 32 - sigObj.r.length);\n\t  sigObj.s.copy(s, 32 - sigObj.s.length);\n\t\n\t  return { r: r, s: s };\n\t};\n\t\n\texports.signatureImportLax = function (sig) {\n\t  var r = new Buffer(ZERO_BUFFER_32);\n\t  var s = new Buffer(ZERO_BUFFER_32);\n\t\n\t  var length = sig.length;\n\t  var index = 0;\n\t\n\t  // sequence tag byte\n\t  if (sig[index++] !== 0x30) return;\n\t\n\t  // sequence length byte\n\t  var lenbyte = sig[index++];\n\t  if (lenbyte & 0x80) {\n\t    index += lenbyte - 0x80;\n\t    if (index > length) return;\n\t  }\n\t\n\t  // sequence tag byte for r\n\t  if (sig[index++] !== 0x02) return;\n\t\n\t  // length for r\n\t  var rlen = sig[index++];\n\t  if (rlen & 0x80) {\n\t    lenbyte = rlen - 0x80;\n\t    if (index + lenbyte > length) return;\n\t    for (; lenbyte > 0 && sig[index] === 0x00; index += 1, lenbyte -= 1) {}\n\t    for (rlen = 0; lenbyte > 0; index += 1, lenbyte -= 1) {\n\t      rlen = (rlen << 8) + sig[index];\n\t    }\n\t  }\n\t  if (rlen > length - index) return;\n\t  var rindex = index;\n\t  index += rlen;\n\t\n\t  // sequence tag byte for s\n\t  if (sig[index++] !== 0x02) return;\n\t\n\t  // length for s\n\t  var slen = sig[index++];\n\t  if (slen & 0x80) {\n\t    lenbyte = slen - 0x80;\n\t    if (index + lenbyte > length) return;\n\t    for (; lenbyte > 0 && sig[index] === 0x00; index += 1, lenbyte -= 1) {}\n\t    for (slen = 0; lenbyte > 0; index += 1, lenbyte -= 1) {\n\t      slen = (slen << 8) + sig[index];\n\t    }\n\t  }\n\t  if (slen > length - index) return;\n\t  var sindex = index;\n\t  index += slen;\n\t\n\t  // ignore leading zeros in r\n\t  for (; rlen > 0 && sig[rindex] === 0x00; rlen -= 1, rindex += 1) {}\n\t  // copy r value\n\t  if (rlen > 32) return;\n\t  var rvalue = sig.slice(rindex, rindex + rlen);\n\t  rvalue.copy(r, 32 - rvalue.length);\n\t\n\t  // ignore leading zeros in s\n\t  for (; slen > 0 && sig[sindex] === 0x00; slen -= 1, sindex += 1) {}\n\t  // copy s value\n\t  if (slen > 32) return;\n\t  var svalue = sig.slice(sindex, sindex + slen);\n\t  svalue.copy(s, 32 - svalue.length);\n\t\n\t  return { r: r, s: s };\n\t};\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(807).Buffer))\n\n/***/ },\n\n/***/ 1277:\n/***/ function(module, exports) {\n\n\tmodule.exports = {\n\t\t\"COMPRESSED_TYPE_INVALID\": \"compressed should be a boolean\",\n\t\t\"EC_PRIVATE_KEY_TYPE_INVALID\": \"private key should be a Buffer\",\n\t\t\"EC_PRIVATE_KEY_LENGTH_INVALID\": \"private key length is invalid\",\n\t\t\"EC_PRIVATE_KEY_TWEAK_ADD_FAIL\": \"tweak out of range or resulting private key is invalid\",\n\t\t\"EC_PRIVATE_KEY_TWEAK_MUL_FAIL\": \"tweak out of range\",\n\t\t\"EC_PRIVATE_KEY_EXPORT_DER_FAIL\": \"couldn't export to DER format\",\n\t\t\"EC_PRIVATE_KEY_IMPORT_DER_FAIL\": \"couldn't import from DER format\",\n\t\t\"EC_PUBLIC_KEYS_TYPE_INVALID\": \"public keys should be an Array\",\n\t\t\"EC_PUBLIC_KEYS_LENGTH_INVALID\": \"public keys Array should have at least 1 element\",\n\t\t\"EC_PUBLIC_KEY_TYPE_INVALID\": \"public key should be a Buffer\",\n\t\t\"EC_PUBLIC_KEY_LENGTH_INVALID\": \"public key length is invalid\",\n\t\t\"EC_PUBLIC_KEY_PARSE_FAIL\": \"the public key could not be parsed or is invalid\",\n\t\t\"EC_PUBLIC_KEY_CREATE_FAIL\": \"private was invalid, try again\",\n\t\t\"EC_PUBLIC_KEY_TWEAK_ADD_FAIL\": \"tweak out of range or resulting public key is invalid\",\n\t\t\"EC_PUBLIC_KEY_TWEAK_MUL_FAIL\": \"tweak out of range\",\n\t\t\"EC_PUBLIC_KEY_COMBINE_FAIL\": \"the sum of the public keys is not valid\",\n\t\t\"ECDH_FAIL\": \"scalar was invalid (zero or overflow)\",\n\t\t\"ECDSA_SIGNATURE_TYPE_INVALID\": \"signature should be a Buffer\",\n\t\t\"ECDSA_SIGNATURE_LENGTH_INVALID\": \"signature length is invalid\",\n\t\t\"ECDSA_SIGNATURE_PARSE_FAIL\": \"couldn't parse signature\",\n\t\t\"ECDSA_SIGNATURE_PARSE_DER_FAIL\": \"couldn't parse DER signature\",\n\t\t\"ECDSA_SIGNATURE_SERIALIZE_DER_FAIL\": \"couldn't serialize signature to DER format\",\n\t\t\"ECDSA_SIGN_FAIL\": \"nonce generation function failed or private key is invalid\",\n\t\t\"ECDSA_RECOVER_FAIL\": \"couldn't recover public key from signature\",\n\t\t\"MSG32_TYPE_INVALID\": \"message should be a Buffer\",\n\t\t\"MSG32_LENGTH_INVALID\": \"message length is invalid\",\n\t\t\"OPTIONS_TYPE_INVALID\": \"options should be an Object\",\n\t\t\"OPTIONS_DATA_TYPE_INVALID\": \"options.data should be a Buffer\",\n\t\t\"OPTIONS_DATA_LENGTH_INVALID\": \"options.data length is invalid\",\n\t\t\"OPTIONS_NONCEFN_TYPE_INVALID\": \"options.noncefn should be a Function\",\n\t\t\"RECOVERY_ID_TYPE_INVALID\": \"recovery should be a Number\",\n\t\t\"RECOVERY_ID_VALUE_INVALID\": \"recovery should have value between -1 and 4\",\n\t\t\"TWEAK_TYPE_INVALID\": \"tweak should be a Buffer\",\n\t\t\"TWEAK_LENGTH_INVALID\": \"tweak length is invalid\"\n\t};\n\n/***/ },\n\n/***/ 1278:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(Buffer) {'use strict';\n\t\n\tvar createHash = __webpack_require__(820);\n\tvar BN = __webpack_require__(881);\n\tvar EC = __webpack_require__(891).ec;\n\t\n\tvar messages = __webpack_require__(1277);\n\t\n\tvar ec = new EC('secp256k1');\n\tvar ecparams = ec.curve;\n\t\n\tfunction loadCompressedPublicKey(first, xBuffer) {\n\t  var x = new BN(xBuffer);\n\t\n\t  // overflow\n\t  if (x.cmp(ecparams.p) >= 0) return null;\n\t  x = x.toRed(ecparams.red);\n\t\n\t  // compute corresponding Y\n\t  var y = x.redSqr().redIMul(x).redIAdd(ecparams.b).redSqrt();\n\t  if (first === 0x03 !== y.isOdd()) y = y.redNeg();\n\t\n\t  return ec.keyPair({ pub: { x: x, y: y } });\n\t}\n\t\n\tfunction loadUncompressedPublicKey(first, xBuffer, yBuffer) {\n\t  var x = new BN(xBuffer);\n\t  var y = new BN(yBuffer);\n\t\n\t  // overflow\n\t  if (x.cmp(ecparams.p) >= 0 || y.cmp(ecparams.p) >= 0) return null;\n\t\n\t  x = x.toRed(ecparams.red);\n\t  y = y.toRed(ecparams.red);\n\t\n\t  // is odd flag\n\t  if ((first === 0x06 || first === 0x07) && y.isOdd() !== (first === 0x07)) return null;\n\t\n\t  // x*x*x + b = y*y\n\t  var x3 = x.redSqr().redIMul(x);\n\t  if (!y.redSqr().redISub(x3.redIAdd(ecparams.b)).isZero()) return null;\n\t\n\t  return ec.keyPair({ pub: { x: x, y: y } });\n\t}\n\t\n\tfunction loadPublicKey(publicKey) {\n\t  var first = publicKey[0];\n\t  switch (first) {\n\t    case 0x02:\n\t    case 0x03:\n\t      if (publicKey.length !== 33) return null;\n\t      return loadCompressedPublicKey(first, publicKey.slice(1, 33));\n\t    case 0x04:\n\t    case 0x06:\n\t    case 0x07:\n\t      if (publicKey.length !== 65) return null;\n\t      return loadUncompressedPublicKey(first, publicKey.slice(1, 33), publicKey.slice(33, 65));\n\t    default:\n\t      return null;\n\t  }\n\t}\n\t\n\texports.privateKeyVerify = function (privateKey) {\n\t  var bn = new BN(privateKey);\n\t  return bn.cmp(ecparams.n) < 0 && !bn.isZero();\n\t};\n\t\n\texports.privateKeyExport = function (privateKey, compressed) {\n\t  var d = new BN(privateKey);\n\t  if (d.cmp(ecparams.n) >= 0 || d.isZero()) throw new Error(messages.EC_PRIVATE_KEY_EXPORT_DER_FAIL);\n\t\n\t  return new Buffer(ec.keyFromPrivate(privateKey).getPublic(compressed, true));\n\t};\n\t\n\texports.privateKeyTweakAdd = function (privateKey, tweak) {\n\t  var bn = new BN(tweak);\n\t  if (bn.cmp(ecparams.n) >= 0) throw new Error(messages.EC_PRIVATE_KEY_TWEAK_ADD_FAIL);\n\t\n\t  bn.iadd(new BN(privateKey));\n\t  if (bn.cmp(ecparams.n) >= 0) bn.isub(ecparams.n);\n\t  if (bn.isZero()) throw new Error(messages.EC_PRIVATE_KEY_TWEAK_ADD_FAIL);\n\t\n\t  return bn.toArrayLike(Buffer, 'be', 32);\n\t};\n\t\n\texports.privateKeyTweakMul = function (privateKey, tweak) {\n\t  var bn = new BN(tweak);\n\t  if (bn.cmp(ecparams.n) >= 0 || bn.isZero()) throw new Error(messages.EC_PRIVATE_KEY_TWEAK_MUL_FAIL);\n\t\n\t  bn.imul(new BN(privateKey));\n\t  if (bn.cmp(ecparams.n)) bn = bn.umod(ecparams.n);\n\t\n\t  return bn.toArrayLike(Buffer, 'be', 32);\n\t};\n\t\n\texports.publicKeyCreate = function (privateKey, compressed) {\n\t  var d = new BN(privateKey);\n\t  if (d.cmp(ecparams.n) >= 0 || d.isZero()) throw new Error(messages.EC_PUBLIC_KEY_CREATE_FAIL);\n\t\n\t  return new Buffer(ec.keyFromPrivate(privateKey).getPublic(compressed, true));\n\t};\n\t\n\texports.publicKeyConvert = function (publicKey, compressed) {\n\t  var pair = loadPublicKey(publicKey);\n\t  if (pair === null) throw new Error(messages.EC_PUBLIC_KEY_PARSE_FAIL);\n\t\n\t  return new Buffer(pair.getPublic(compressed, true));\n\t};\n\t\n\texports.publicKeyVerify = function (publicKey) {\n\t  return loadPublicKey(publicKey) !== null;\n\t};\n\t\n\texports.publicKeyTweakAdd = function (publicKey, tweak, compressed) {\n\t  var pair = loadPublicKey(publicKey);\n\t  if (pair === null) throw new Error(messages.EC_PUBLIC_KEY_PARSE_FAIL);\n\t\n\t  tweak = new BN(tweak);\n\t  if (tweak.cmp(ecparams.n) >= 0) throw new Error(messages.EC_PUBLIC_KEY_TWEAK_ADD_FAIL);\n\t\n\t  return new Buffer(ecparams.g.mul(tweak).add(pair.pub).encode(true, compressed));\n\t};\n\t\n\texports.publicKeyTweakMul = function (publicKey, tweak, compressed) {\n\t  var pair = loadPublicKey(publicKey);\n\t  if (pair === null) throw new Error(messages.EC_PUBLIC_KEY_PARSE_FAIL);\n\t\n\t  tweak = new BN(tweak);\n\t  if (tweak.cmp(ecparams.n) >= 0 || tweak.isZero()) throw new Error(messages.EC_PUBLIC_KEY_TWEAK_MUL_FAIL);\n\t\n\t  return new Buffer(pair.pub.mul(tweak).encode(true, compressed));\n\t};\n\t\n\texports.publicKeyCombine = function (publicKeys, compressed) {\n\t  var pairs = new Array(publicKeys.length);\n\t  for (var i = 0; i < publicKeys.length; ++i) {\n\t    pairs[i] = loadPublicKey(publicKeys[i]);\n\t    if (pairs[i] === null) throw new Error(messages.EC_PUBLIC_KEY_PARSE_FAIL);\n\t  }\n\t\n\t  var point = pairs[0].pub;\n\t  for (var j = 1; j < pairs.length; ++j) {\n\t    point = point.add(pairs[j].pub);\n\t  }if (point.isInfinity()) throw new Error(messages.EC_PUBLIC_KEY_COMBINE_FAIL);\n\t\n\t  return new Buffer(point.encode(true, compressed));\n\t};\n\t\n\texports.signatureNormalize = function (signature) {\n\t  var r = new BN(signature.slice(0, 32));\n\t  var s = new BN(signature.slice(32, 64));\n\t  if (r.cmp(ecparams.n) >= 0 || s.cmp(ecparams.n) >= 0) throw new Error(messages.ECDSA_SIGNATURE_PARSE_FAIL);\n\t\n\t  var result = new Buffer(signature);\n\t  if (s.cmp(ec.nh) === 1) ecparams.n.sub(s).toArrayLike(Buffer, 'be', 32).copy(result, 32);\n\t\n\t  return result;\n\t};\n\t\n\texports.signatureExport = function (signature) {\n\t  var r = signature.slice(0, 32);\n\t  var s = signature.slice(32, 64);\n\t  if (new BN(r).cmp(ecparams.n) >= 0 || new BN(s).cmp(ecparams.n) >= 0) throw new Error(messages.ECDSA_SIGNATURE_PARSE_FAIL);\n\t\n\t  return { r: r, s: s };\n\t};\n\t\n\texports.signatureImport = function (sigObj) {\n\t  var r = new BN(sigObj.r);\n\t  if (r.cmp(ecparams.n) >= 0) r = new BN(0);\n\t\n\t  var s = new BN(sigObj.s);\n\t  if (s.cmp(ecparams.n) >= 0) s = new BN(0);\n\t\n\t  return Buffer.concat([r.toArrayLike(Buffer, 'be', 32), s.toArrayLike(Buffer, 'be', 32)]);\n\t};\n\t\n\texports.sign = function (message, privateKey, noncefn, data) {\n\t  if (typeof noncefn === 'function') {\n\t    var getNonce = noncefn;\n\t    noncefn = function noncefn(counter) {\n\t      var nonce = getNonce(message, privateKey, null, data, counter);\n\t      if (!Buffer.isBuffer(nonce) || nonce.length !== 32) throw new Error(messages.ECDSA_SIGN_FAIL);\n\t\n\t      return new BN(nonce);\n\t    };\n\t  }\n\t\n\t  var d = new BN(privateKey);\n\t  if (d.cmp(ecparams.n) >= 0 || d.isZero()) throw new Error(messages.ECDSA_SIGN_FAIL);\n\t\n\t  var result = ec.sign(message, privateKey, { canonical: true, k: noncefn, pers: data });\n\t  return {\n\t    signature: Buffer.concat([result.r.toArrayLike(Buffer, 'be', 32), result.s.toArrayLike(Buffer, 'be', 32)]),\n\t    recovery: result.recoveryParam\n\t  };\n\t};\n\t\n\texports.verify = function (message, signature, publicKey) {\n\t  var sigObj = { r: signature.slice(0, 32), s: signature.slice(32, 64) };\n\t\n\t  var sigr = new BN(sigObj.r);\n\t  var sigs = new BN(sigObj.s);\n\t  if (sigr.cmp(ecparams.n) >= 0 || sigs.cmp(ecparams.n) >= 0) throw new Error(messages.ECDSA_SIGNATURE_PARSE_FAIL);\n\t  if (sigs.cmp(ec.nh) === 1 || sigr.isZero() || sigs.isZero()) return false;\n\t\n\t  var pair = loadPublicKey(publicKey);\n\t  if (pair === null) throw new Error(messages.EC_PUBLIC_KEY_PARSE_FAIL);\n\t\n\t  return ec.verify(message, sigObj, { x: pair.pub.x, y: pair.pub.y });\n\t};\n\t\n\texports.recover = function (message, signature, recovery, compressed) {\n\t  var sigObj = { r: signature.slice(0, 32), s: signature.slice(32, 64) };\n\t\n\t  var sigr = new BN(sigObj.r);\n\t  var sigs = new BN(sigObj.s);\n\t  if (sigr.cmp(ecparams.n) >= 0 || sigs.cmp(ecparams.n) >= 0) throw new Error(messages.ECDSA_SIGNATURE_PARSE_FAIL);\n\t\n\t  try {\n\t    if (sigr.isZero() || sigs.isZero()) throw new Error();\n\t\n\t    var point = ec.recoverPubKey(message, sigObj, recovery);\n\t    return new Buffer(point.encode(true, compressed));\n\t  } catch (err) {\n\t    throw new Error(messages.ECDSA_RECOVER_FAIL);\n\t  }\n\t};\n\t\n\texports.ecdh = function (publicKey, privateKey) {\n\t  var shared = exports.ecdhUnsafe(publicKey, privateKey, true);\n\t  return createHash('sha256').update(shared).digest();\n\t};\n\t\n\texports.ecdhUnsafe = function (publicKey, privateKey, compressed) {\n\t  var pair = loadPublicKey(publicKey);\n\t  if (pair === null) throw new Error(messages.EC_PUBLIC_KEY_PARSE_FAIL);\n\t\n\t  var scalar = new BN(privateKey);\n\t  if (scalar.cmp(ecparams.n) >= 0 || scalar.isZero()) throw new Error(messages.ECDH_FAIL);\n\t\n\t  return new Buffer(pair.pub.mul(scalar).encode(true, compressed));\n\t};\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(807).Buffer))\n\n/***/ },\n\n/***/ 1431:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tmodule.exports = typeof window !== 'undefined' && window.crypto && window.crypto.subtle ? __webpack_require__(1432) : __webpack_require__(1455);\n\n/***/ },\n\n/***/ 1432:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(Buffer, global) {'use strict';\n\t\n\tvar subtle = window.crypto.subtle;\n\tvar omit = __webpack_require__(1433);\n\tvar extend = __webpack_require__(1249);\n\tvar debug = __webpack_require__(774)('nkey-ecdsa:browser');\n\tvar nkey = __webpack_require__(1437);\n\tvar Promise = __webpack_require__(1438);\n\tvar co = __webpack_require__(1439);\n\tvar type = 'ec';\n\t\n\tvar _require = __webpack_require__(1440),\n\t    toJWK = _require.toJWK,\n\t    fromJWK = _require.fromJWK,\n\t    toJWKCurve = _require.toJWKCurve,\n\t    toArrayBuffer = _require.toArrayBuffer,\n\t    toDER = _require.toDER,\n\t    fromDER = _require.fromDER;\n\t\n\tvar ZERO_BUF = new Buffer(16);\n\tZERO_BUF.fill(0);\n\tvar EXTRACTABLE = true;\n\tvar checked = new Map();\n\tvar KEY_PROPS = ['type', 'pubKeyString', 'fingerprint', 'toJSON', 'isPrivateKey'];\n\t\n\tvar gen = co.wrap(regeneratorRuntime.mark(function _callee(opts, cb) {\n\t  var ecOpts, supported, key, raw, privJWK, imported, fingerprint;\n\t  return regeneratorRuntime.wrap(function _callee$(_context) {\n\t    while (1) {\n\t      switch (_context.prev = _context.next) {\n\t        case 0:\n\t          ecOpts = getCurveSpec(opts.curve || exports.DEFAULT_CURVE);\n\t          _context.next = 3;\n\t          return checkNative('ECDSA', ecOpts.hash.name, ecOpts.namedCurve);\n\t\n\t        case 3:\n\t          supported = _context.sent;\n\t\n\t          if (supported) {\n\t            _context.next = 6;\n\t            break;\n\t          }\n\t\n\t          return _context.abrupt('return', __webpack_require__(1455).gen(opts, cb));\n\t\n\t        case 6:\n\t          key = void 0;\n\t          _context.prev = 7;\n\t          _context.next = 10;\n\t          return subtle.generateKey(ecOpts, EXTRACTABLE, ['sign', 'verify']);\n\t\n\t        case 10:\n\t          raw = _context.sent;\n\t          _context.next = 13;\n\t          return subtle.exportKey('jwk', raw.privateKey);\n\t\n\t        case 13:\n\t          privJWK = _context.sent;\n\t          imported = fromJWK(privJWK);\n\t          _context.next = 17;\n\t          return subtle.digest({ name: 'SHA-256' }, imported.pub);\n\t\n\t        case 17:\n\t          fingerprint = _context.sent;\n\t\n\t          key = fromCryptoKey({\n\t            key: raw,\n\t            json: {\n\t              type: type,\n\t              curve: imported.curve,\n\t              priv: imported.priv.toString('hex'),\n\t              pub: imported.pub.toString('hex'),\n\t              fingerprint: new Buffer(fingerprint).toString('hex')\n\t            }\n\t          });\n\t          _context.next = 25;\n\t          break;\n\t\n\t        case 21:\n\t          _context.prev = 21;\n\t          _context.t0 = _context['catch'](7);\n\t\n\t          debug('failed to generate key', _context.t0);\n\t          return _context.abrupt('return', cb(_context.t0));\n\t\n\t        case 25:\n\t\n\t          cb(null, key);\n\t\n\t        case 26:\n\t        case 'end':\n\t          return _context.stop();\n\t      }\n\t    }\n\t  }, _callee, this, [[7, 21]]);\n\t}));\n\t\n\tfunction getCurveSpec(curve) {\n\t  return {\n\t    name: 'ECDSA',\n\t    namedCurve: toJWKCurve(curve),\n\t    hash: {\n\t      name: normalizeAlgorithm(exports.DEFAULT_ALGORITHM)\n\t    }\n\t  };\n\t}\n\t\n\tfunction fromCryptoKey(_ref) {\n\t  var key = _ref.key,\n\t      json = _ref.json;\n\t  var curve = json.curve;\n\t\n\t  var ecOpts = getCurveSpec(curve);\n\t  var api = getPropsForJSON(json);\n\t  api.sign = co.wrap(regeneratorRuntime.mark(function _callee2(data, algorithm, cb) {\n\t    var sig, der;\n\t    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n\t      while (1) {\n\t        switch (_context2.prev = _context2.next) {\n\t          case 0:\n\t            if (!(typeof algorithm === 'function')) {\n\t              _context2.next = 4;\n\t              break;\n\t            }\n\t\n\t            cb = algorithm;\n\t            _context2.next = 6;\n\t            break;\n\t\n\t          case 4:\n\t            if (!(normalizeAlgorithm(algorithm) !== exports.DEFAULT_ALGORITHM)) {\n\t              _context2.next = 6;\n\t              break;\n\t            }\n\t\n\t            return _context2.abrupt('return', cb(new Error('algorithm must be specified during key generation')));\n\t\n\t          case 6:\n\t            sig = void 0;\n\t            _context2.prev = 7;\n\t            _context2.next = 10;\n\t            return subtle.sign(ecOpts, key.privateKey, toArrayBuffer(data));\n\t\n\t          case 10:\n\t            sig = _context2.sent;\n\t            _context2.next = 16;\n\t            break;\n\t\n\t          case 13:\n\t            _context2.prev = 13;\n\t            _context2.t0 = _context2['catch'](7);\n\t            return _context2.abrupt('return', cb(_context2.t0));\n\t\n\t          case 16:\n\t            der = toDER(new Buffer(sig)).toString('hex');\n\t\n\t            cb(null, der);\n\t\n\t          case 18:\n\t          case 'end':\n\t            return _context2.stop();\n\t        }\n\t      }\n\t    }, _callee2, this, [[7, 13]]);\n\t  }));\n\t\n\t  api.verify = co.wrap(regeneratorRuntime.mark(function _callee3(data, algorithm, sig, cb) {\n\t    var concatSig, verified;\n\t    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n\t      while (1) {\n\t        switch (_context3.prev = _context3.next) {\n\t          case 0:\n\t            if (!(typeof sig === 'function')) {\n\t              _context3.next = 5;\n\t              break;\n\t            }\n\t\n\t            cb = sig;\n\t            sig = algorithm;\n\t            _context3.next = 7;\n\t            break;\n\t\n\t          case 5:\n\t            if (!(normalizeAlgorithm(algorithm) !== exports.DEFAULT_ALGORITHM)) {\n\t              _context3.next = 7;\n\t              break;\n\t            }\n\t\n\t            return _context3.abrupt('return', cb(new Error('algorithm must be specified during key generation')));\n\t\n\t          case 7:\n\t            concatSig = fromDER(new Buffer(sig, 'hex'));\n\t            verified = void 0;\n\t            _context3.prev = 9;\n\t            _context3.next = 12;\n\t            return subtle.verify(ecOpts, key.publicKey, toArrayBuffer(concatSig), toArrayBuffer(data));\n\t\n\t          case 12:\n\t            verified = _context3.sent;\n\t            _context3.next = 18;\n\t            break;\n\t\n\t          case 15:\n\t            _context3.prev = 15;\n\t            _context3.t0 = _context3['catch'](9);\n\t            return _context3.abrupt('return', cb(_context3.t0));\n\t\n\t          case 18:\n\t\n\t            cb(null, verified);\n\t\n\t          case 19:\n\t          case 'end':\n\t            return _context3.stop();\n\t        }\n\t      }\n\t    }, _callee3, this, [[9, 15]]);\n\t  }));\n\t\n\t  return nkey.wrapInstance(api);\n\t}\n\t\n\tvar HASH_ALGOS = {\n\t  'sha1': 'SHA-1',\n\t  'sha256': 'SHA-256',\n\t  'sha384': 'SHA-384',\n\t  'sha512': 'SHA-512'\n\t};\n\t\n\tfunction normalizeAlgorithm(algo) {\n\t  algo = algo.toLowerCase();\n\t  if (!HASH_ALGOS[algo]) {\n\t    throw new Error('expected one of: ' + Object.keys(HASH_ALGOS).join(', '));\n\t  }\n\t\n\t  return HASH_ALGOS[algo];\n\t}\n\t\n\tfunction getPropsForJSON(json) {\n\t  var pubKeyString = json.pub.toString('hex');\n\t  return {\n\t    type: type,\n\t    pubKeyString: pubKeyString,\n\t    fingerprint: json.fingerprint,\n\t    isPrivateKey: !!json.priv,\n\t    toJSON: function toJSON(exportPrivateKey) {\n\t      if (exportPrivateKey) {\n\t        if (!json.priv) {\n\t          throw new Error('this is a public key');\n\t        }\n\t\n\t        return json;\n\t      }\n\t\n\t      var exported = omit(json, 'priv');\n\t      if (!exported.pub) exported.pub = pubKeyString;\n\t      if (!exported.type) exported.type = type;\n\t\n\t      return exported;\n\t    }\n\t  };\n\t}\n\t\n\tfunction fromJSON(json) {\n\t  var ecOpts = getCurveSpec(json.curve);\n\t  var check = checkNative('ECDSA', ecOpts.hash.name, ecOpts.namedCurve);\n\t\n\t  var supported = void 0;\n\t  var api = co.wrap(regeneratorRuntime.mark(function _callee4() {\n\t    var ops, jwk;\n\t    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n\t      while (1) {\n\t        switch (_context4.prev = _context4.next) {\n\t          case 0:\n\t            _context4.next = 2;\n\t            return check;\n\t\n\t          case 2:\n\t            supported = _context4.sent;\n\t\n\t            if (!supported) {\n\t              _context4.next = 9;\n\t              break;\n\t            }\n\t\n\t            ops = json.priv ? ['sign'] : ['verify'];\n\t            jwk = toJWK(json);\n\t            return _context4.abrupt('return', subtle.importKey('jwk', jwk, ecOpts, EXTRACTABLE, ops));\n\t\n\t          case 9:\n\t            return _context4.abrupt('return', __webpack_require__(1455).fromJSON(json));\n\t\n\t          case 10:\n\t          case 'end':\n\t            return _context4.stop();\n\t        }\n\t      }\n\t    }, _callee4, this);\n\t  }))();\n\t\n\t  var syncProps = getPropsForJSON(json);\n\t  extend(api, syncProps);\n\t\n\t  var loadedKey = void 0;\n\t  co.wrap(regeneratorRuntime.mark(function _callee5() {\n\t    var someKey;\n\t    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n\t      while (1) {\n\t        switch (_context5.prev = _context5.next) {\n\t          case 0:\n\t            _context5.next = 2;\n\t            return api;\n\t\n\t          case 2:\n\t            someKey = _context5.sent;\n\t\n\t            if (supported) {\n\t              _context5.next = 5;\n\t              break;\n\t            }\n\t\n\t            return _context5.abrupt('return', loadedKey = someKey);\n\t\n\t          case 5:\n\t\n\t            loadedKey = fromCryptoKey({\n\t              json: json,\n\t              key: {\n\t                privateKey: json.priv && someKey,\n\t                publicKey: someKey\n\t              }\n\t            });\n\t\n\t          case 6:\n\t          case 'end':\n\t            return _context5.stop();\n\t        }\n\t      }\n\t    }, _callee5, this);\n\t  }))();\n\t\n\t  KEY_PROPS.forEach(function (prop) {\n\t    Object.defineProperty(api, prop, {\n\t      get: function get() {\n\t        return loadedKey && loadedKey[prop] || syncProps[prop];\n\t      }\n\t    });\n\t  });['sign', 'verify'].forEach(function (method) {\n\t    api[method] = co.wrap(regeneratorRuntime.mark(function _callee6() {\n\t      var _args6 = arguments;\n\t      return regeneratorRuntime.wrap(function _callee6$(_context6) {\n\t        while (1) {\n\t          switch (_context6.prev = _context6.next) {\n\t            case 0:\n\t              _context6.next = 2;\n\t              return api;\n\t\n\t            case 2:\n\t              return _context6.abrupt('return', loadedKey[method].apply(loadedKey, _args6));\n\t\n\t            case 3:\n\t            case 'end':\n\t              return _context6.stop();\n\t          }\n\t        }\n\t      }, _callee6, this);\n\t    }));\n\t  });\n\t\n\t  return nkey.wrapInstance(api);\n\t}\n\t\n\tfunction pad(buf, length) {\n\t  var padded = new Buffer(length);\n\t  for (var i = 0, l = length - buf.length; i < l; i++) {\n\t    padded[i] = 0;\n\t  }\n\t\n\t  return padded;\n\t}\n\t\n\t// https://github.com/calvinmetcalf/native-crypto/blob/master/lib/signature.js\n\tvar checkNative = co.wrap(regeneratorRuntime.mark(function _callee7(type, algo, curve) {\n\t  var id, opts, signOpts, prom, works;\n\t  return regeneratorRuntime.wrap(function _callee7$(_context7) {\n\t    while (1) {\n\t      switch (_context7.prev = _context7.next) {\n\t        case 0:\n\t          if (!(global.process && !global.process.browser)) {\n\t            _context7.next = 2;\n\t            break;\n\t          }\n\t\n\t          return _context7.abrupt('return', false);\n\t\n\t        case 2:\n\t          if (!(!subtle || !subtle.importKey || !subtle.sign || !subtle.verify)) {\n\t            _context7.next = 4;\n\t            break;\n\t          }\n\t\n\t          return _context7.abrupt('return', false);\n\t\n\t        case 4:\n\t          id = algo + '-' + type + '-' + curve;\n\t\n\t          if (!checked.has(id)) {\n\t            _context7.next = 7;\n\t            break;\n\t          }\n\t\n\t          return _context7.abrupt('return', checked.get(id));\n\t\n\t        case 7:\n\t          opts = {\n\t            name: type\n\t          };\n\t\n\t\n\t          if (curve) {\n\t            opts.namedCurve = curve;\n\t          } else {\n\t            opts.modulusLength = 1024;\n\t            opts.publicExponent = new Buffer([0x01, 0x00, 0x01]);\n\t            opts.hash = {\n\t              name: algo\n\t            };\n\t          }\n\t\n\t          signOpts = {\n\t            name: type\n\t          };\n\t\n\t\n\t          if (curve) {\n\t            signOpts.hash = {\n\t              name: algo\n\t            };\n\t          }\n\t\n\t          prom = testSign({ opts: opts, signOpts: signOpts });\n\t\n\t          checked.set(algo, prom);\n\t          _context7.next = 15;\n\t          return prom;\n\t\n\t        case 15:\n\t          works = _context7.sent;\n\t\n\t          if (works) {\n\t            debug('has working sublte crypto for type: ' + type + ' with digest ' + algo + ' ' + (curve ? 'with curve: ' + curve : ''));\n\t          }\n\t\n\t          return _context7.abrupt('return', works);\n\t\n\t        case 18:\n\t        case 'end':\n\t          return _context7.stop();\n\t      }\n\t    }\n\t  }, _callee7, this);\n\t}));\n\t\n\tvar testSign = co.wrap(regeneratorRuntime.mark(function _callee8(_ref2) {\n\t  var opts = _ref2.opts,\n\t      signOpts = _ref2.signOpts;\n\t  var key;\n\t  return regeneratorRuntime.wrap(function _callee8$(_context8) {\n\t    while (1) {\n\t      switch (_context8.prev = _context8.next) {\n\t        case 0:\n\t          _context8.prev = 0;\n\t          _context8.next = 3;\n\t          return subtle.generateKey(opts, false, ['sign']);\n\t\n\t        case 3:\n\t          key = _context8.sent;\n\t          _context8.next = 6;\n\t          return subtle.sign(signOpts, key.privateKey, ZERO_BUF);\n\t\n\t        case 6:\n\t          return _context8.abrupt('return', true);\n\t\n\t        case 9:\n\t          _context8.prev = 9;\n\t          _context8.t0 = _context8['catch'](0);\n\t\n\t          debug(_context8.t0.message);\n\t          return _context8.abrupt('return', false);\n\t\n\t        case 13:\n\t        case 'end':\n\t          return _context8.stop();\n\t      }\n\t    }\n\t  }, _callee8, this, [[0, 9]]);\n\t}));\n\t\n\tmodule.exports = exports = nkey.wrapAPI({ gen: gen, fromJSON: fromJSON });\n\texports.DEFAULT_ALGORITHM = 'sha256';\n\texports.DEFAULT_CURVE = 'p256';\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(807).Buffer, (function() { return this; }())))\n\n/***/ },\n\n/***/ 1437:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process) {'use strict';\n\t\n\tvar clone = __webpack_require__(960);\n\tvar BASE_PROPS = ['pub', 'priv', 'type'];\n\t\n\texports.wrap = wrap;\n\texports.wrapAPI = wrapAPI;\n\texports.wrapInstance = wrapInstance;\n\texports.asyncify = asyncify;\n\t\n\tfunction wrap(obj) {\n\t  return obj.gen || obj.genSync ? wrapAPI(obj) : wrapInstance(obj);\n\t}\n\t\n\tfunction wrapInstance(instance) {\n\t  var wrapper = {};\n\t  Object.keys(instance).forEach(function (k) {\n\t    if (k === 'signSync' || k === 'verifySync') {\n\t      setReadonly(wrapper, k, instance[k].bind(instance));\n\t      addAsync(wrapper, k === 'signSync' ? 'sign' : 'verify');\n\t    } else if (k === 'toJSON') {\n\t      setReadonly(wrapper, 'toJSON', function () {\n\t        return clone(customProps, instance.toJSON.apply(instance, arguments));\n\t      });\n\t    } else {\n\t      setReadonly(wrapper, k, typeof instance[k] === 'function' ? instance[k].bind(instance) : instance[k]);\n\t    }\n\t  });\n\t\n\t  var customProps = {};\n\t  setReadonly(wrapper, 'set', function (k, v) {\n\t    customProps[k] = v;\n\t    return this;\n\t  });\n\t\n\t  setReadonly(wrapper, 'get', function (k) {\n\t    return customProps[k];\n\t  });\n\t\n\t  return wrapper;\n\t}\n\t\n\tfunction wrapAPI(api) {\n\t  var wrapper = {};\n\t  Object.keys(api).forEach(function (k) {\n\t    if (k === 'genSync') {\n\t      setReadonly(wrapper, 'genSync', function () {\n\t        var result = api[k].apply(api, arguments);\n\t        if (!('isPrivateKey' in result)) {\n\t          result.isPrivateKey = true;\n\t        }\n\t\n\t        return result;\n\t      });\n\t\n\t      addAsync(wrapper, 'gen');\n\t    } else if (k === 'gen') {\n\t      setReadonly(wrapper, 'gen', function (opts, cb) {\n\t        api[k](opts, function (err, result) {\n\t          if (err) return cb(err);\n\t\n\t          if (!('isPrivateKey' in result)) {\n\t            result.isPrivateKey = true;\n\t          }\n\t\n\t          cb(null, result);\n\t        });\n\t      });\n\t    } else if (k === 'fromJSON') {\n\t      setReadonly(wrapper, 'fromJSON', function (json) {\n\t        var result = api.fromJSON.apply(api, arguments);\n\t        if (result.set) {\n\t          Object.keys(json).forEach(function (k) {\n\t            if (!result[k] && BASE_PROPS.indexOf(k) === -1) {\n\t              result.set(k, json[k]);\n\t            }\n\t          });\n\t        }\n\t\n\t        if (!('isPrivateKey' in result)) {\n\t          result.isPrivateKey = !!json.priv;\n\t        }\n\t\n\t        return result;\n\t      });\n\t    } else {\n\t      setReadonly(wrapper, k, typeof api[k] === 'function' ? api[k].bind(api) : api[k]);\n\t    }\n\t  });\n\t\n\t  return wrapper;\n\t}\n\t\n\tfunction asyncify(fn) {\n\t  return function asyncified() {\n\t    var args = [].slice.call(arguments);\n\t    var cb = args.pop();\n\t    var result = void 0;\n\t    try {\n\t      result = fn.apply(null, args);\n\t    } catch (err) {\n\t      return process.nextTick(function () {\n\t        return cb(err);\n\t      });\n\t    }\n\t\n\t    process.nextTick(function () {\n\t      return cb(null, result);\n\t    });\n\t  };\n\t}\n\t\n\tfunction addAsync(obj /* methods */) {\n\t  [].slice.call(arguments, 1).forEach(function (method) {\n\t    if (!obj[method] && obj[method + 'Sync']) {\n\t      setReadonly(obj, method, asyncify(obj[method + 'Sync']));\n\t    }\n\t  });\n\t}\n\t\n\tfunction setReadonly(obj, k, v) {\n\t  Object.defineProperty(obj, k, {\n\t    enumerable: true,\n\t    writable: false,\n\t    value: v\n\t  });\n\t}\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(295)))\n\n/***/ },\n\n/***/ 1440:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(Buffer) {'use strict';\n\t\n\tvar asn1 = __webpack_require__(1441);\n\tvar BN = __webpack_require__(881);\n\t\n\tmodule.exports = {\n\t  toJWK: toJWK,\n\t  toJWKCurve: toJWKCurve,\n\t  fromJWK: fromJWK,\n\t  toBuffer: toBuffer,\n\t  toArrayBuffer: toArrayBuffer,\n\t  fromDER: asn1SigToConcatSig,\n\t  toDER: concatSigToAsn1Sig,\n\t  assert: assert\n\t};\n\t\n\tfunction fromJWK(jwk) {\n\t  var x = new Buffer(jwk.x, 'base64');\n\t  var y = new Buffer(jwk.y, 'base64');\n\t  var pub = new Buffer(65);\n\t  pub[0] = 4;\n\t  x.copy(pub, 1);\n\t  y.copy(pub, 33);\n\t  var curve = jwk.crv.replace('-', '').toLowerCase();\n\t  var priv = jwk.d && new Buffer(jwk.d, 'base64');\n\t\n\t  return {\n\t    pub: pub,\n\t    priv: priv,\n\t    curve: curve\n\t  };\n\t}\n\t\n\tfunction toJWK(key) {\n\t  var priv = key.priv && toBuffer(key.priv);\n\t  if (priv) {\n\t    assert(priv.length === 32, 'Expected 32 byte private key');\n\t  }\n\t\n\t  var pub = toBuffer(key.pub);\n\t  assert(pub.length === 65, 'Expected non-compressed public key');\n\t  assert(pub[0] === 4, 'Unexpected key encoding, expected hex: \\'04\\' + hex(x) + hex(y)');\n\t\n\t  var jwk = {\n\t    kty: 'EC',\n\t    crv: toJWKCurve(key.curve),\n\t    x: toUnpaddedBase64(pub.slice(1, 33)),\n\t    y: toUnpaddedBase64(pub.slice(33)),\n\t    ext: true\n\t  };\n\t\n\t  if (priv) {\n\t    jwk.d = toUnpaddedBase64(priv);\n\t  }\n\t\n\t  return jwk;\n\t}\n\t\n\tfunction toBuffer(val) {\n\t  if (Buffer.isBuffer(val)) return val;\n\t  if (typeof val === 'string') return new Buffer(val, 'hex');\n\t\n\t  throw new Error('expected string or Buffer');\n\t}\n\t\n\tfunction assert(statement, message) {\n\t  if (!statement) throw new Error(message || 'assertion failed');\n\t}\n\t\n\tfunction toUnpaddedBase64(buf) {\n\t  var padded = buf.toString('base64');\n\t  return padded.replace(/[=]+$/, '').replace(/[+]/g, '-').replace(/[/]/g, '_');\n\t}\n\t\n\tfunction toJWKCurve(curve) {\n\t  return 'P-' + curve.slice(1);\n\t}\n\t\n\tfunction toArrayBuffer(val) {\n\t  if (val instanceof ArrayBuffer) return val;\n\t\n\t  if (typeof val === 'string') {\n\t    return new Buffer(val).buffer;\n\t  }\n\t\n\t  if (Buffer.isBuffer(val)) {\n\t    return val.buffer;\n\t  }\n\t\n\t  throw new Error('expected string, Buffer or ArrayBuffer');\n\t}\n\t\n\t// http://stackoverflow.com/questions/39499040/generating-ecdsa-signature-with-node-js-crypto\n\tvar EcdsaDerSig = asn1.define('ECPrivateKey', function () {\n\t  return this.seq().obj(this.key('r').int(), this.key('s').int());\n\t});\n\t\n\tfunction asn1SigToConcatSig(asn1SigBuffer) {\n\t  var rsSig = EcdsaDerSig.decode(asn1SigBuffer, 'der');\n\t  return Buffer.concat([rsSig.r.toArrayLike(Buffer, 'be', 32), rsSig.s.toArrayLike(Buffer, 'be', 32)]);\n\t}\n\t\n\tfunction concatSigToAsn1Sig(concatSigBuffer) {\n\t  var r = new BN(concatSigBuffer.slice(0, 32).toString('hex'), 16, 'be');\n\t  var s = new BN(concatSigBuffer.slice(32).toString('hex'), 16, 'be');\n\t  return EcdsaDerSig.encode({ r: r, s: s }, 'der');\n\t}\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(807).Buffer))\n\n/***/ },\n\n/***/ 1441:\n[2496, 881, 1442, 1443, 1447, 1449, 1452],\n\n/***/ 1442:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar asn1 = __webpack_require__(1441);\n\tvar inherits = __webpack_require__(821);\n\t\n\tvar api = exports;\n\t\n\tapi.define = function define(name, body) {\n\t  return new Entity(name, body);\n\t};\n\t\n\tfunction Entity(name, body) {\n\t  this.name = name;\n\t  this.body = body;\n\t\n\t  this.decoders = {};\n\t  this.encoders = {};\n\t};\n\t\n\tEntity.prototype._createNamed = function createNamed(base) {\n\t  var named;\n\t  try {\n\t    named = __webpack_require__(918).runInThisContext('(function ' + this.name + '(entity) {\\n' + '  this._initNamed(entity);\\n' + '})');\n\t  } catch (e) {\n\t    named = function named(entity) {\n\t      this._initNamed(entity);\n\t    };\n\t  }\n\t  inherits(named, base);\n\t  named.prototype._initNamed = function initnamed(entity) {\n\t    base.call(this, entity);\n\t  };\n\t\n\t  return new named(this);\n\t};\n\t\n\tEntity.prototype._getDecoder = function _getDecoder(enc) {\n\t  enc = enc || 'der';\n\t  // Lazily create decoder\n\t  if (!this.decoders.hasOwnProperty(enc)) this.decoders[enc] = this._createNamed(asn1.decoders[enc]);\n\t  return this.decoders[enc];\n\t};\n\t\n\tEntity.prototype.decode = function decode(data, enc, options) {\n\t  return this._getDecoder(enc).decode(data, options);\n\t};\n\t\n\tEntity.prototype._getEncoder = function _getEncoder(enc) {\n\t  enc = enc || 'der';\n\t  // Lazily create encoder\n\t  if (!this.encoders.hasOwnProperty(enc)) this.encoders[enc] = this._createNamed(asn1.encoders[enc]);\n\t  return this.encoders[enc];\n\t};\n\t\n\tEntity.prototype.encode = function encode(data, enc, /* internal */reporter) {\n\t  return this._getEncoder(enc).encode(data, reporter);\n\t};\n\n/***/ },\n\n/***/ 1443:\n[2497, 1444, 1445, 1445, 1446],\n\n/***/ 1444:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar inherits = __webpack_require__(821);\n\t\n\tfunction Reporter(options) {\n\t  this._reporterState = {\n\t    obj: null,\n\t    path: [],\n\t    options: options || {},\n\t    errors: []\n\t  };\n\t}\n\texports.Reporter = Reporter;\n\t\n\tReporter.prototype.isError = function isError(obj) {\n\t  return obj instanceof ReporterError;\n\t};\n\t\n\tReporter.prototype.save = function save() {\n\t  var state = this._reporterState;\n\t\n\t  return { obj: state.obj, pathLen: state.path.length };\n\t};\n\t\n\tReporter.prototype.restore = function restore(data) {\n\t  var state = this._reporterState;\n\t\n\t  state.obj = data.obj;\n\t  state.path = state.path.slice(0, data.pathLen);\n\t};\n\t\n\tReporter.prototype.enterKey = function enterKey(key) {\n\t  return this._reporterState.path.push(key);\n\t};\n\t\n\tReporter.prototype.exitKey = function exitKey(index) {\n\t  var state = this._reporterState;\n\t\n\t  state.path = state.path.slice(0, index - 1);\n\t};\n\t\n\tReporter.prototype.leaveKey = function leaveKey(index, key, value) {\n\t  var state = this._reporterState;\n\t\n\t  this.exitKey(index);\n\t  if (state.obj !== null) state.obj[key] = value;\n\t};\n\t\n\tReporter.prototype.path = function path() {\n\t  return this._reporterState.path.join('/');\n\t};\n\t\n\tReporter.prototype.enterObject = function enterObject() {\n\t  var state = this._reporterState;\n\t\n\t  var prev = state.obj;\n\t  state.obj = {};\n\t  return prev;\n\t};\n\t\n\tReporter.prototype.leaveObject = function leaveObject(prev) {\n\t  var state = this._reporterState;\n\t\n\t  var now = state.obj;\n\t  state.obj = prev;\n\t  return now;\n\t};\n\t\n\tReporter.prototype.error = function error(msg) {\n\t  var err;\n\t  var state = this._reporterState;\n\t\n\t  var inherited = msg instanceof ReporterError;\n\t  if (inherited) {\n\t    err = msg;\n\t  } else {\n\t    err = new ReporterError(state.path.map(function (elem) {\n\t      return '[' + JSON.stringify(elem) + ']';\n\t    }).join(''), msg.message || msg, msg.stack);\n\t  }\n\t\n\t  if (!state.options.partial) throw err;\n\t\n\t  if (!inherited) state.errors.push(err);\n\t\n\t  return err;\n\t};\n\t\n\tReporter.prototype.wrapResult = function wrapResult(result) {\n\t  var state = this._reporterState;\n\t  if (!state.options.partial) return result;\n\t\n\t  return {\n\t    result: this.isError(result) ? null : result,\n\t    errors: state.errors\n\t  };\n\t};\n\t\n\tfunction ReporterError(path, msg) {\n\t  this.path = path;\n\t  this.rethrow(msg);\n\t};\n\tinherits(ReporterError, Error);\n\t\n\tReporterError.prototype.rethrow = function rethrow(msg) {\n\t  this.message = msg + ' at: ' + (this.path || '(shallow)');\n\t  if (Error.captureStackTrace) Error.captureStackTrace(this, ReporterError);\n\t\n\t  if (!this.stack) {\n\t    try {\n\t      // IE only adds stack when thrown\n\t      throw new Error(this.message);\n\t    } catch (e) {\n\t      this.stack = e.stack;\n\t    }\n\t  }\n\t  return this;\n\t};\n\n/***/ },\n\n/***/ 1445:\n[2498, 1443],\n\n/***/ 1446:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar Reporter = __webpack_require__(1443).Reporter;\n\tvar EncoderBuffer = __webpack_require__(1443).EncoderBuffer;\n\tvar DecoderBuffer = __webpack_require__(1443).DecoderBuffer;\n\tvar assert = __webpack_require__(874);\n\t\n\t// Supported tags\n\tvar tags = ['seq', 'seqof', 'set', 'setof', 'objid', 'bool', 'gentime', 'utctime', 'null_', 'enum', 'int', 'objDesc', 'bitstr', 'bmpstr', 'charstr', 'genstr', 'graphstr', 'ia5str', 'iso646str', 'numstr', 'octstr', 'printstr', 't61str', 'unistr', 'utf8str', 'videostr'];\n\t\n\t// Public methods list\n\tvar methods = ['key', 'obj', 'use', 'optional', 'explicit', 'implicit', 'def', 'choice', 'any', 'contains'].concat(tags);\n\t\n\t// Overrided methods list\n\tvar overrided = ['_peekTag', '_decodeTag', '_use', '_decodeStr', '_decodeObjid', '_decodeTime', '_decodeNull', '_decodeInt', '_decodeBool', '_decodeList', '_encodeComposite', '_encodeStr', '_encodeObjid', '_encodeTime', '_encodeNull', '_encodeInt', '_encodeBool'];\n\t\n\tfunction Node(enc, parent) {\n\t  var state = {};\n\t  this._baseState = state;\n\t\n\t  state.enc = enc;\n\t\n\t  state.parent = parent || null;\n\t  state.children = null;\n\t\n\t  // State\n\t  state.tag = null;\n\t  state.args = null;\n\t  state.reverseArgs = null;\n\t  state.choice = null;\n\t  state.optional = false;\n\t  state.any = false;\n\t  state.obj = false;\n\t  state.use = null;\n\t  state.useDecoder = null;\n\t  state.key = null;\n\t  state['default'] = null;\n\t  state.explicit = null;\n\t  state.implicit = null;\n\t  state.contains = null;\n\t\n\t  // Should create new instance on each method\n\t  if (!state.parent) {\n\t    state.children = [];\n\t    this._wrap();\n\t  }\n\t}\n\tmodule.exports = Node;\n\t\n\tvar stateProps = ['enc', 'parent', 'children', 'tag', 'args', 'reverseArgs', 'choice', 'optional', 'any', 'obj', 'use', 'alteredUse', 'key', 'default', 'explicit', 'implicit', 'contains'];\n\t\n\tNode.prototype.clone = function clone() {\n\t  var state = this._baseState;\n\t  var cstate = {};\n\t  stateProps.forEach(function (prop) {\n\t    cstate[prop] = state[prop];\n\t  });\n\t  var res = new this.constructor(cstate.parent);\n\t  res._baseState = cstate;\n\t  return res;\n\t};\n\t\n\tNode.prototype._wrap = function wrap() {\n\t  var state = this._baseState;\n\t  methods.forEach(function (method) {\n\t    this[method] = function _wrappedMethod() {\n\t      var clone = new this.constructor(this);\n\t      state.children.push(clone);\n\t      return clone[method].apply(clone, arguments);\n\t    };\n\t  }, this);\n\t};\n\t\n\tNode.prototype._init = function init(body) {\n\t  var state = this._baseState;\n\t\n\t  assert(state.parent === null);\n\t  body.call(this);\n\t\n\t  // Filter children\n\t  state.children = state.children.filter(function (child) {\n\t    return child._baseState.parent === this;\n\t  }, this);\n\t  assert.equal(state.children.length, 1, 'Root node can have only one child');\n\t};\n\t\n\tNode.prototype._useArgs = function useArgs(args) {\n\t  var state = this._baseState;\n\t\n\t  // Filter children and args\n\t  var children = args.filter(function (arg) {\n\t    return arg instanceof this.constructor;\n\t  }, this);\n\t  args = args.filter(function (arg) {\n\t    return !(arg instanceof this.constructor);\n\t  }, this);\n\t\n\t  if (children.length !== 0) {\n\t    assert(state.children === null);\n\t    state.children = children;\n\t\n\t    // Replace parent to maintain backward link\n\t    children.forEach(function (child) {\n\t      child._baseState.parent = this;\n\t    }, this);\n\t  }\n\t  if (args.length !== 0) {\n\t    assert(state.args === null);\n\t    state.args = args;\n\t    state.reverseArgs = args.map(function (arg) {\n\t      if ((typeof arg === 'undefined' ? 'undefined' : _typeof(arg)) !== 'object' || arg.constructor !== Object) return arg;\n\t\n\t      var res = {};\n\t      Object.keys(arg).forEach(function (key) {\n\t        if (key == (key | 0)) key |= 0;\n\t        var value = arg[key];\n\t        res[value] = key;\n\t      });\n\t      return res;\n\t    });\n\t  }\n\t};\n\t\n\t//\n\t// Overrided methods\n\t//\n\t\n\toverrided.forEach(function (method) {\n\t  Node.prototype[method] = function _overrided() {\n\t    var state = this._baseState;\n\t    throw new Error(method + ' not implemented for encoding: ' + state.enc);\n\t  };\n\t});\n\t\n\t//\n\t// Public methods\n\t//\n\t\n\ttags.forEach(function (tag) {\n\t  Node.prototype[tag] = function _tagMethod() {\n\t    var state = this._baseState;\n\t    var args = Array.prototype.slice.call(arguments);\n\t\n\t    assert(state.tag === null);\n\t    state.tag = tag;\n\t\n\t    this._useArgs(args);\n\t\n\t    return this;\n\t  };\n\t});\n\t\n\tNode.prototype.use = function use(item) {\n\t  assert(item);\n\t  var state = this._baseState;\n\t\n\t  assert(state.use === null);\n\t  state.use = item;\n\t\n\t  return this;\n\t};\n\t\n\tNode.prototype.optional = function optional() {\n\t  var state = this._baseState;\n\t\n\t  state.optional = true;\n\t\n\t  return this;\n\t};\n\t\n\tNode.prototype.def = function def(val) {\n\t  var state = this._baseState;\n\t\n\t  assert(state['default'] === null);\n\t  state['default'] = val;\n\t  state.optional = true;\n\t\n\t  return this;\n\t};\n\t\n\tNode.prototype.explicit = function explicit(num) {\n\t  var state = this._baseState;\n\t\n\t  assert(state.explicit === null && state.implicit === null);\n\t  state.explicit = num;\n\t\n\t  return this;\n\t};\n\t\n\tNode.prototype.implicit = function implicit(num) {\n\t  var state = this._baseState;\n\t\n\t  assert(state.explicit === null && state.implicit === null);\n\t  state.implicit = num;\n\t\n\t  return this;\n\t};\n\t\n\tNode.prototype.obj = function obj() {\n\t  var state = this._baseState;\n\t  var args = Array.prototype.slice.call(arguments);\n\t\n\t  state.obj = true;\n\t\n\t  if (args.length !== 0) this._useArgs(args);\n\t\n\t  return this;\n\t};\n\t\n\tNode.prototype.key = function key(newKey) {\n\t  var state = this._baseState;\n\t\n\t  assert(state.key === null);\n\t  state.key = newKey;\n\t\n\t  return this;\n\t};\n\t\n\tNode.prototype.any = function any() {\n\t  var state = this._baseState;\n\t\n\t  state.any = true;\n\t\n\t  return this;\n\t};\n\t\n\tNode.prototype.choice = function choice(obj) {\n\t  var state = this._baseState;\n\t\n\t  assert(state.choice === null);\n\t  state.choice = obj;\n\t  this._useArgs(Object.keys(obj).map(function (key) {\n\t    return obj[key];\n\t  }));\n\t\n\t  return this;\n\t};\n\t\n\tNode.prototype.contains = function contains(item) {\n\t  var state = this._baseState;\n\t\n\t  assert(state.use === null);\n\t  state.contains = item;\n\t\n\t  return this;\n\t};\n\t\n\t//\n\t// Decoding\n\t//\n\t\n\tNode.prototype._decode = function decode(input, options) {\n\t  var state = this._baseState;\n\t\n\t  // Decode root node\n\t  if (state.parent === null) return input.wrapResult(state.children[0]._decode(input, options));\n\t\n\t  var result = state['default'];\n\t  var present = true;\n\t\n\t  var prevKey = null;\n\t  if (state.key !== null) prevKey = input.enterKey(state.key);\n\t\n\t  // Check if tag is there\n\t  if (state.optional) {\n\t    var tag = null;\n\t    if (state.explicit !== null) tag = state.explicit;else if (state.implicit !== null) tag = state.implicit;else if (state.tag !== null) tag = state.tag;\n\t\n\t    if (tag === null && !state.any) {\n\t      // Trial and Error\n\t      var save = input.save();\n\t      try {\n\t        if (state.choice === null) this._decodeGeneric(state.tag, input, options);else this._decodeChoice(input, options);\n\t        present = true;\n\t      } catch (e) {\n\t        present = false;\n\t      }\n\t      input.restore(save);\n\t    } else {\n\t      present = this._peekTag(input, tag, state.any);\n\t\n\t      if (input.isError(present)) return present;\n\t    }\n\t  }\n\t\n\t  // Push object on stack\n\t  var prevObj;\n\t  if (state.obj && present) prevObj = input.enterObject();\n\t\n\t  if (present) {\n\t    // Unwrap explicit values\n\t    if (state.explicit !== null) {\n\t      var explicit = this._decodeTag(input, state.explicit);\n\t      if (input.isError(explicit)) return explicit;\n\t      input = explicit;\n\t    }\n\t\n\t    var start = input.offset;\n\t\n\t    // Unwrap implicit and normal values\n\t    if (state.use === null && state.choice === null) {\n\t      if (state.any) var save = input.save();\n\t      var body = this._decodeTag(input, state.implicit !== null ? state.implicit : state.tag, state.any);\n\t      if (input.isError(body)) return body;\n\t\n\t      if (state.any) result = input.raw(save);else input = body;\n\t    }\n\t\n\t    if (options && options.track && state.tag !== null) options.track(input.path(), start, input.length, 'tagged');\n\t\n\t    if (options && options.track && state.tag !== null) options.track(input.path(), input.offset, input.length, 'content');\n\t\n\t    // Select proper method for tag\n\t    if (state.any) result = result;else if (state.choice === null) result = this._decodeGeneric(state.tag, input, options);else result = this._decodeChoice(input, options);\n\t\n\t    if (input.isError(result)) return result;\n\t\n\t    // Decode children\n\t    if (!state.any && state.choice === null && state.children !== null) {\n\t      state.children.forEach(function decodeChildren(child) {\n\t        // NOTE: We are ignoring errors here, to let parser continue with other\n\t        // parts of encoded data\n\t        child._decode(input, options);\n\t      });\n\t    }\n\t\n\t    // Decode contained/encoded by schema, only in bit or octet strings\n\t    if (state.contains && (state.tag === 'octstr' || state.tag === 'bitstr')) {\n\t      var data = new DecoderBuffer(result);\n\t      result = this._getUse(state.contains, input._reporterState.obj)._decode(data, options);\n\t    }\n\t  }\n\t\n\t  // Pop object\n\t  if (state.obj && present) result = input.leaveObject(prevObj);\n\t\n\t  // Set key\n\t  if (state.key !== null && (result !== null || present === true)) input.leaveKey(prevKey, state.key, result);else if (prevKey !== null) input.exitKey(prevKey);\n\t\n\t  return result;\n\t};\n\t\n\tNode.prototype._decodeGeneric = function decodeGeneric(tag, input, options) {\n\t  var state = this._baseState;\n\t\n\t  if (tag === 'seq' || tag === 'set') return null;\n\t  if (tag === 'seqof' || tag === 'setof') return this._decodeList(input, tag, state.args[0], options);else if (/str$/.test(tag)) return this._decodeStr(input, tag, options);else if (tag === 'objid' && state.args) return this._decodeObjid(input, state.args[0], state.args[1], options);else if (tag === 'objid') return this._decodeObjid(input, null, null, options);else if (tag === 'gentime' || tag === 'utctime') return this._decodeTime(input, tag, options);else if (tag === 'null_') return this._decodeNull(input, options);else if (tag === 'bool') return this._decodeBool(input, options);else if (tag === 'objDesc') return this._decodeStr(input, tag, options);else if (tag === 'int' || tag === 'enum') return this._decodeInt(input, state.args && state.args[0], options);\n\t\n\t  if (state.use !== null) {\n\t    return this._getUse(state.use, input._reporterState.obj)._decode(input, options);\n\t  } else {\n\t    return input.error('unknown tag: ' + tag);\n\t  }\n\t};\n\t\n\tNode.prototype._getUse = function _getUse(entity, obj) {\n\t\n\t  var state = this._baseState;\n\t  // Create altered use decoder if implicit is set\n\t  state.useDecoder = this._use(entity, obj);\n\t  assert(state.useDecoder._baseState.parent === null);\n\t  state.useDecoder = state.useDecoder._baseState.children[0];\n\t  if (state.implicit !== state.useDecoder._baseState.implicit) {\n\t    state.useDecoder = state.useDecoder.clone();\n\t    state.useDecoder._baseState.implicit = state.implicit;\n\t  }\n\t  return state.useDecoder;\n\t};\n\t\n\tNode.prototype._decodeChoice = function decodeChoice(input, options) {\n\t  var state = this._baseState;\n\t  var result = null;\n\t  var match = false;\n\t\n\t  Object.keys(state.choice).some(function (key) {\n\t    var save = input.save();\n\t    var node = state.choice[key];\n\t    try {\n\t      var value = node._decode(input, options);\n\t      if (input.isError(value)) return false;\n\t\n\t      result = { type: key, value: value };\n\t      match = true;\n\t    } catch (e) {\n\t      input.restore(save);\n\t      return false;\n\t    }\n\t    return true;\n\t  }, this);\n\t\n\t  if (!match) return input.error('Choice not matched');\n\t\n\t  return result;\n\t};\n\t\n\t//\n\t// Encoding\n\t//\n\t\n\tNode.prototype._createEncoderBuffer = function createEncoderBuffer(data) {\n\t  return new EncoderBuffer(data, this.reporter);\n\t};\n\t\n\tNode.prototype._encode = function encode(data, reporter, parent) {\n\t  var state = this._baseState;\n\t  if (state['default'] !== null && state['default'] === data) return;\n\t\n\t  var result = this._encodeValue(data, reporter, parent);\n\t  if (result === undefined) return;\n\t\n\t  if (this._skipDefault(result, reporter, parent)) return;\n\t\n\t  return result;\n\t};\n\t\n\tNode.prototype._encodeValue = function encode(data, reporter, parent) {\n\t  var state = this._baseState;\n\t\n\t  // Decode root node\n\t  if (state.parent === null) return state.children[0]._encode(data, reporter || new Reporter());\n\t\n\t  var result = null;\n\t\n\t  // Set reporter to share it with a child class\n\t  this.reporter = reporter;\n\t\n\t  // Check if data is there\n\t  if (state.optional && data === undefined) {\n\t    if (state['default'] !== null) data = state['default'];else return;\n\t  }\n\t\n\t  // Encode children first\n\t  var content = null;\n\t  var primitive = false;\n\t  if (state.any) {\n\t    // Anything that was given is translated to buffer\n\t    result = this._createEncoderBuffer(data);\n\t  } else if (state.choice) {\n\t    result = this._encodeChoice(data, reporter);\n\t  } else if (state.contains) {\n\t    content = this._getUse(state.contains, parent)._encode(data, reporter);\n\t    primitive = true;\n\t  } else if (state.children) {\n\t    content = state.children.map(function (child) {\n\t      if (child._baseState.tag === 'null_') return child._encode(null, reporter, data);\n\t\n\t      if (child._baseState.key === null) return reporter.error('Child should have a key');\n\t      var prevKey = reporter.enterKey(child._baseState.key);\n\t\n\t      if ((typeof data === 'undefined' ? 'undefined' : _typeof(data)) !== 'object') return reporter.error('Child expected, but input is not object');\n\t\n\t      var res = child._encode(data[child._baseState.key], reporter, data);\n\t      reporter.leaveKey(prevKey);\n\t\n\t      return res;\n\t    }, this).filter(function (child) {\n\t      return child;\n\t    });\n\t    content = this._createEncoderBuffer(content);\n\t  } else {\n\t    if (state.tag === 'seqof' || state.tag === 'setof') {\n\t      // TODO(indutny): this should be thrown on DSL level\n\t      if (!(state.args && state.args.length === 1)) return reporter.error('Too many args for : ' + state.tag);\n\t\n\t      if (!Array.isArray(data)) return reporter.error('seqof/setof, but data is not Array');\n\t\n\t      var child = this.clone();\n\t      child._baseState.implicit = null;\n\t      content = this._createEncoderBuffer(data.map(function (item) {\n\t        var state = this._baseState;\n\t\n\t        return this._getUse(state.args[0], data)._encode(item, reporter);\n\t      }, child));\n\t    } else if (state.use !== null) {\n\t      result = this._getUse(state.use, parent)._encode(data, reporter);\n\t    } else {\n\t      content = this._encodePrimitive(state.tag, data);\n\t      primitive = true;\n\t    }\n\t  }\n\t\n\t  // Encode data itself\n\t  var result;\n\t  if (!state.any && state.choice === null) {\n\t    var tag = state.implicit !== null ? state.implicit : state.tag;\n\t    var cls = state.implicit === null ? 'universal' : 'context';\n\t\n\t    if (tag === null) {\n\t      if (state.use === null) reporter.error('Tag could be ommited only for .use()');\n\t    } else {\n\t      if (state.use === null) result = this._encodeComposite(tag, primitive, cls, content);\n\t    }\n\t  }\n\t\n\t  // Wrap in explicit\n\t  if (state.explicit !== null) result = this._encodeComposite(state.explicit, false, 'context', result);\n\t\n\t  return result;\n\t};\n\t\n\tNode.prototype._encodeChoice = function encodeChoice(data, reporter) {\n\t  var state = this._baseState;\n\t\n\t  var node = state.choice[data.type];\n\t  if (!node) {\n\t    assert(false, data.type + ' not found in ' + JSON.stringify(Object.keys(state.choice)));\n\t  }\n\t  return node._encode(data.value, reporter);\n\t};\n\t\n\tNode.prototype._encodePrimitive = function encodePrimitive(tag, data) {\n\t  var state = this._baseState;\n\t\n\t  if (/str$/.test(tag)) return this._encodeStr(data, tag);else if (tag === 'objid' && state.args) return this._encodeObjid(data, state.reverseArgs[0], state.args[1]);else if (tag === 'objid') return this._encodeObjid(data, null, null);else if (tag === 'gentime' || tag === 'utctime') return this._encodeTime(data, tag);else if (tag === 'null_') return this._encodeNull();else if (tag === 'int' || tag === 'enum') return this._encodeInt(data, state.args && state.reverseArgs[0]);else if (tag === 'bool') return this._encodeBool(data);else if (tag === 'objDesc') return this._encodeStr(data, tag);else throw new Error('Unsupported tag: ' + tag);\n\t};\n\t\n\tNode.prototype._isNumstr = function isNumstr(str) {\n\t  return (/^[0-9 ]*$/.test(str)\n\t  );\n\t};\n\t\n\tNode.prototype._isPrintstr = function isPrintstr(str) {\n\t  return (/^[A-Za-z0-9 '\\(\\)\\+,\\-\\.\\/:=\\?]*$/.test(str)\n\t  );\n\t};\n\n/***/ },\n\n/***/ 1447:\n[2499, 1448],\n\n/***/ 1448:\n[2500, 1447],\n\n/***/ 1449:\n[2501, 1450, 1451],\n\n/***/ 1450:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar inherits = __webpack_require__(821);\n\t\n\tvar asn1 = __webpack_require__(1441);\n\tvar base = asn1.base;\n\tvar bignum = asn1.bignum;\n\t\n\t// Import DER constants\n\tvar der = asn1.constants.der;\n\t\n\tfunction DERDecoder(entity) {\n\t  this.enc = 'der';\n\t  this.name = entity.name;\n\t  this.entity = entity;\n\t\n\t  // Construct base tree\n\t  this.tree = new DERNode();\n\t  this.tree._init(entity.body);\n\t};\n\tmodule.exports = DERDecoder;\n\t\n\tDERDecoder.prototype.decode = function decode(data, options) {\n\t  if (!(data instanceof base.DecoderBuffer)) data = new base.DecoderBuffer(data, options);\n\t\n\t  return this.tree._decode(data, options);\n\t};\n\t\n\t// Tree methods\n\t\n\tfunction DERNode(parent) {\n\t  base.Node.call(this, 'der', parent);\n\t}\n\tinherits(DERNode, base.Node);\n\t\n\tDERNode.prototype._peekTag = function peekTag(buffer, tag, any) {\n\t  if (buffer.isEmpty()) return false;\n\t\n\t  var state = buffer.save();\n\t  var decodedTag = derDecodeTag(buffer, 'Failed to peek tag: \"' + tag + '\"');\n\t  if (buffer.isError(decodedTag)) return decodedTag;\n\t\n\t  buffer.restore(state);\n\t\n\t  return decodedTag.tag === tag || decodedTag.tagStr === tag || decodedTag.tagStr + 'of' === tag || any;\n\t};\n\t\n\tDERNode.prototype._decodeTag = function decodeTag(buffer, tag, any) {\n\t  var decodedTag = derDecodeTag(buffer, 'Failed to decode tag of \"' + tag + '\"');\n\t  if (buffer.isError(decodedTag)) return decodedTag;\n\t\n\t  var len = derDecodeLen(buffer, decodedTag.primitive, 'Failed to get length of \"' + tag + '\"');\n\t\n\t  // Failure\n\t  if (buffer.isError(len)) return len;\n\t\n\t  if (!any && decodedTag.tag !== tag && decodedTag.tagStr !== tag && decodedTag.tagStr + 'of' !== tag) {\n\t    return buffer.error('Failed to match tag: \"' + tag + '\"');\n\t  }\n\t\n\t  if (decodedTag.primitive || len !== null) return buffer.skip(len, 'Failed to match body of: \"' + tag + '\"');\n\t\n\t  // Indefinite length... find END tag\n\t  var state = buffer.save();\n\t  var res = this._skipUntilEnd(buffer, 'Failed to skip indefinite length body: \"' + this.tag + '\"');\n\t  if (buffer.isError(res)) return res;\n\t\n\t  len = buffer.offset - state.offset;\n\t  buffer.restore(state);\n\t  return buffer.skip(len, 'Failed to match body of: \"' + tag + '\"');\n\t};\n\t\n\tDERNode.prototype._skipUntilEnd = function skipUntilEnd(buffer, fail) {\n\t  while (true) {\n\t    var tag = derDecodeTag(buffer, fail);\n\t    if (buffer.isError(tag)) return tag;\n\t    var len = derDecodeLen(buffer, tag.primitive, fail);\n\t    if (buffer.isError(len)) return len;\n\t\n\t    var res;\n\t    if (tag.primitive || len !== null) res = buffer.skip(len);else res = this._skipUntilEnd(buffer, fail);\n\t\n\t    // Failure\n\t    if (buffer.isError(res)) return res;\n\t\n\t    if (tag.tagStr === 'end') break;\n\t  }\n\t};\n\t\n\tDERNode.prototype._decodeList = function decodeList(buffer, tag, decoder, options) {\n\t  var result = [];\n\t  while (!buffer.isEmpty()) {\n\t    var possibleEnd = this._peekTag(buffer, 'end');\n\t    if (buffer.isError(possibleEnd)) return possibleEnd;\n\t\n\t    var res = decoder.decode(buffer, 'der', options);\n\t    if (buffer.isError(res) && possibleEnd) break;\n\t    result.push(res);\n\t  }\n\t  return result;\n\t};\n\t\n\tDERNode.prototype._decodeStr = function decodeStr(buffer, tag) {\n\t  if (tag === 'bitstr') {\n\t    var unused = buffer.readUInt8();\n\t    if (buffer.isError(unused)) return unused;\n\t    return { unused: unused, data: buffer.raw() };\n\t  } else if (tag === 'bmpstr') {\n\t    var raw = buffer.raw();\n\t    if (raw.length % 2 === 1) return buffer.error('Decoding of string type: bmpstr length mismatch');\n\t\n\t    var str = '';\n\t    for (var i = 0; i < raw.length / 2; i++) {\n\t      str += String.fromCharCode(raw.readUInt16BE(i * 2));\n\t    }\n\t    return str;\n\t  } else if (tag === 'numstr') {\n\t    var numstr = buffer.raw().toString('ascii');\n\t    if (!this._isNumstr(numstr)) {\n\t      return buffer.error('Decoding of string type: ' + 'numstr unsupported characters');\n\t    }\n\t    return numstr;\n\t  } else if (tag === 'octstr') {\n\t    return buffer.raw();\n\t  } else if (tag === 'objDesc') {\n\t    return buffer.raw();\n\t  } else if (tag === 'printstr') {\n\t    var printstr = buffer.raw().toString('ascii');\n\t    if (!this._isPrintstr(printstr)) {\n\t      return buffer.error('Decoding of string type: ' + 'printstr unsupported characters');\n\t    }\n\t    return printstr;\n\t  } else if (/str$/.test(tag)) {\n\t    return buffer.raw().toString();\n\t  } else {\n\t    return buffer.error('Decoding of string type: ' + tag + ' unsupported');\n\t  }\n\t};\n\t\n\tDERNode.prototype._decodeObjid = function decodeObjid(buffer, values, relative) {\n\t  var result;\n\t  var identifiers = [];\n\t  var ident = 0;\n\t  while (!buffer.isEmpty()) {\n\t    var subident = buffer.readUInt8();\n\t    ident <<= 7;\n\t    ident |= subident & 0x7f;\n\t    if ((subident & 0x80) === 0) {\n\t      identifiers.push(ident);\n\t      ident = 0;\n\t    }\n\t  }\n\t  if (subident & 0x80) identifiers.push(ident);\n\t\n\t  var first = identifiers[0] / 40 | 0;\n\t  var second = identifiers[0] % 40;\n\t\n\t  if (relative) result = identifiers;else result = [first, second].concat(identifiers.slice(1));\n\t\n\t  if (values) {\n\t    var tmp = values[result.join(' ')];\n\t    if (tmp === undefined) tmp = values[result.join('.')];\n\t    if (tmp !== undefined) result = tmp;\n\t  }\n\t\n\t  return result;\n\t};\n\t\n\tDERNode.prototype._decodeTime = function decodeTime(buffer, tag) {\n\t  var str = buffer.raw().toString();\n\t  if (tag === 'gentime') {\n\t    var year = str.slice(0, 4) | 0;\n\t    var mon = str.slice(4, 6) | 0;\n\t    var day = str.slice(6, 8) | 0;\n\t    var hour = str.slice(8, 10) | 0;\n\t    var min = str.slice(10, 12) | 0;\n\t    var sec = str.slice(12, 14) | 0;\n\t  } else if (tag === 'utctime') {\n\t    var year = str.slice(0, 2) | 0;\n\t    var mon = str.slice(2, 4) | 0;\n\t    var day = str.slice(4, 6) | 0;\n\t    var hour = str.slice(6, 8) | 0;\n\t    var min = str.slice(8, 10) | 0;\n\t    var sec = str.slice(10, 12) | 0;\n\t    if (year < 70) year = 2000 + year;else year = 1900 + year;\n\t  } else {\n\t    return buffer.error('Decoding ' + tag + ' time is not supported yet');\n\t  }\n\t\n\t  return Date.UTC(year, mon - 1, day, hour, min, sec, 0);\n\t};\n\t\n\tDERNode.prototype._decodeNull = function decodeNull(buffer) {\n\t  return null;\n\t};\n\t\n\tDERNode.prototype._decodeBool = function decodeBool(buffer) {\n\t  var res = buffer.readUInt8();\n\t  if (buffer.isError(res)) return res;else return res !== 0;\n\t};\n\t\n\tDERNode.prototype._decodeInt = function decodeInt(buffer, values) {\n\t  // Bigint, return as it is (assume big endian)\n\t  var raw = buffer.raw();\n\t  var res = new bignum(raw);\n\t\n\t  if (values) res = values[res.toString(10)] || res;\n\t\n\t  return res;\n\t};\n\t\n\tDERNode.prototype._use = function use(entity, obj) {\n\t  if (typeof entity === 'function') entity = entity(obj);\n\t  return entity._getDecoder('der').tree;\n\t};\n\t\n\t// Utility methods\n\t\n\tfunction derDecodeTag(buf, fail) {\n\t  var tag = buf.readUInt8(fail);\n\t  if (buf.isError(tag)) return tag;\n\t\n\t  var cls = der.tagClass[tag >> 6];\n\t  var primitive = (tag & 0x20) === 0;\n\t\n\t  // Multi-octet tag - load\n\t  if ((tag & 0x1f) === 0x1f) {\n\t    var oct = tag;\n\t    tag = 0;\n\t    while ((oct & 0x80) === 0x80) {\n\t      oct = buf.readUInt8(fail);\n\t      if (buf.isError(oct)) return oct;\n\t\n\t      tag <<= 7;\n\t      tag |= oct & 0x7f;\n\t    }\n\t  } else {\n\t    tag &= 0x1f;\n\t  }\n\t  var tagStr = der.tag[tag];\n\t\n\t  return {\n\t    cls: cls,\n\t    primitive: primitive,\n\t    tag: tag,\n\t    tagStr: tagStr\n\t  };\n\t}\n\t\n\tfunction derDecodeLen(buf, primitive, fail) {\n\t  var len = buf.readUInt8(fail);\n\t  if (buf.isError(len)) return len;\n\t\n\t  // Indefinite form\n\t  if (!primitive && len === 0x80) return null;\n\t\n\t  // Definite form\n\t  if ((len & 0x80) === 0) {\n\t    // Short form\n\t    return len;\n\t  }\n\t\n\t  // Long form\n\t  var num = len & 0x7f;\n\t  if (num > 4) return buf.error('length octect is too long');\n\t\n\t  len = 0;\n\t  for (var i = 0; i < num; i++) {\n\t    len <<= 8;\n\t    var j = buf.readUInt8(fail);\n\t    if (buf.isError(j)) return j;\n\t    len |= j;\n\t  }\n\t\n\t  return len;\n\t}\n\n/***/ },\n\n/***/ 1451:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar inherits = __webpack_require__(821);\n\tvar Buffer = __webpack_require__(807).Buffer;\n\t\n\tvar DERDecoder = __webpack_require__(1450);\n\t\n\tfunction PEMDecoder(entity) {\n\t  DERDecoder.call(this, entity);\n\t  this.enc = 'pem';\n\t};\n\tinherits(PEMDecoder, DERDecoder);\n\tmodule.exports = PEMDecoder;\n\t\n\tPEMDecoder.prototype.decode = function decode(data, options) {\n\t  var lines = data.toString().split(/[\\r\\n]+/g);\n\t\n\t  var label = options.label.toUpperCase();\n\t\n\t  var re = /^-----(BEGIN|END) ([^-]+)-----$/;\n\t  var start = -1;\n\t  var end = -1;\n\t  for (var i = 0; i < lines.length; i++) {\n\t    var match = lines[i].match(re);\n\t    if (match === null) continue;\n\t\n\t    if (match[2] !== label) continue;\n\t\n\t    if (start === -1) {\n\t      if (match[1] !== 'BEGIN') break;\n\t      start = i;\n\t    } else {\n\t      if (match[1] !== 'END') break;\n\t      end = i;\n\t      break;\n\t    }\n\t  }\n\t  if (start === -1 || end === -1) throw new Error('PEM section not found for: ' + label);\n\t\n\t  var base64 = lines.slice(start + 1, end).join('');\n\t  // Remove excessive symbols\n\t  base64.replace(/[^a-z0-9\\+\\/=]+/gi, '');\n\t\n\t  var input = new Buffer(base64, 'base64');\n\t  return DERDecoder.prototype.decode.call(this, input, options);\n\t};\n\n/***/ },\n\n/***/ 1452:\n[2502, 1453, 1454],\n\n/***/ 1453:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar inherits = __webpack_require__(821);\n\tvar Buffer = __webpack_require__(807).Buffer;\n\t\n\tvar asn1 = __webpack_require__(1441);\n\tvar base = asn1.base;\n\t\n\t// Import DER constants\n\tvar der = asn1.constants.der;\n\t\n\tfunction DEREncoder(entity) {\n\t  this.enc = 'der';\n\t  this.name = entity.name;\n\t  this.entity = entity;\n\t\n\t  // Construct base tree\n\t  this.tree = new DERNode();\n\t  this.tree._init(entity.body);\n\t};\n\tmodule.exports = DEREncoder;\n\t\n\tDEREncoder.prototype.encode = function encode(data, reporter) {\n\t  return this.tree._encode(data, reporter).join();\n\t};\n\t\n\t// Tree methods\n\t\n\tfunction DERNode(parent) {\n\t  base.Node.call(this, 'der', parent);\n\t}\n\tinherits(DERNode, base.Node);\n\t\n\tDERNode.prototype._encodeComposite = function encodeComposite(tag, primitive, cls, content) {\n\t  var encodedTag = encodeTag(tag, primitive, cls, this.reporter);\n\t\n\t  // Short form\n\t  if (content.length < 0x80) {\n\t    var header = new Buffer(2);\n\t    header[0] = encodedTag;\n\t    header[1] = content.length;\n\t    return this._createEncoderBuffer([header, content]);\n\t  }\n\t\n\t  // Long form\n\t  // Count octets required to store length\n\t  var lenOctets = 1;\n\t  for (var i = content.length; i >= 0x100; i >>= 8) {\n\t    lenOctets++;\n\t  }var header = new Buffer(1 + 1 + lenOctets);\n\t  header[0] = encodedTag;\n\t  header[1] = 0x80 | lenOctets;\n\t\n\t  for (var i = 1 + lenOctets, j = content.length; j > 0; i--, j >>= 8) {\n\t    header[i] = j & 0xff;\n\t  }return this._createEncoderBuffer([header, content]);\n\t};\n\t\n\tDERNode.prototype._encodeStr = function encodeStr(str, tag) {\n\t  if (tag === 'bitstr') {\n\t    return this._createEncoderBuffer([str.unused | 0, str.data]);\n\t  } else if (tag === 'bmpstr') {\n\t    var buf = new Buffer(str.length * 2);\n\t    for (var i = 0; i < str.length; i++) {\n\t      buf.writeUInt16BE(str.charCodeAt(i), i * 2);\n\t    }\n\t    return this._createEncoderBuffer(buf);\n\t  } else if (tag === 'numstr') {\n\t    if (!this._isNumstr(str)) {\n\t      return this.reporter.error('Encoding of string type: numstr supports ' + 'only digits and space');\n\t    }\n\t    return this._createEncoderBuffer(str);\n\t  } else if (tag === 'printstr') {\n\t    if (!this._isPrintstr(str)) {\n\t      return this.reporter.error('Encoding of string type: printstr supports ' + 'only latin upper and lower case letters, ' + 'digits, space, apostrophe, left and rigth ' + 'parenthesis, plus sign, comma, hyphen, ' + 'dot, slash, colon, equal sign, ' + 'question mark');\n\t    }\n\t    return this._createEncoderBuffer(str);\n\t  } else if (/str$/.test(tag)) {\n\t    return this._createEncoderBuffer(str);\n\t  } else if (tag === 'objDesc') {\n\t    return this._createEncoderBuffer(str);\n\t  } else {\n\t    return this.reporter.error('Encoding of string type: ' + tag + ' unsupported');\n\t  }\n\t};\n\t\n\tDERNode.prototype._encodeObjid = function encodeObjid(id, values, relative) {\n\t  if (typeof id === 'string') {\n\t    if (!values) return this.reporter.error('string objid given, but no values map found');\n\t    if (!values.hasOwnProperty(id)) return this.reporter.error('objid not found in values map');\n\t    id = values[id].split(/[\\s\\.]+/g);\n\t    for (var i = 0; i < id.length; i++) {\n\t      id[i] |= 0;\n\t    }\n\t  } else if (Array.isArray(id)) {\n\t    id = id.slice();\n\t    for (var i = 0; i < id.length; i++) {\n\t      id[i] |= 0;\n\t    }\n\t  }\n\t\n\t  if (!Array.isArray(id)) {\n\t    return this.reporter.error('objid() should be either array or string, ' + 'got: ' + JSON.stringify(id));\n\t  }\n\t\n\t  if (!relative) {\n\t    if (id[1] >= 40) return this.reporter.error('Second objid identifier OOB');\n\t    id.splice(0, 2, id[0] * 40 + id[1]);\n\t  }\n\t\n\t  // Count number of octets\n\t  var size = 0;\n\t  for (var i = 0; i < id.length; i++) {\n\t    var ident = id[i];\n\t    for (size++; ident >= 0x80; ident >>= 7) {\n\t      size++;\n\t    }\n\t  }\n\t\n\t  var objid = new Buffer(size);\n\t  var offset = objid.length - 1;\n\t  for (var i = id.length - 1; i >= 0; i--) {\n\t    var ident = id[i];\n\t    objid[offset--] = ident & 0x7f;\n\t    while ((ident >>= 7) > 0) {\n\t      objid[offset--] = 0x80 | ident & 0x7f;\n\t    }\n\t  }\n\t\n\t  return this._createEncoderBuffer(objid);\n\t};\n\t\n\tfunction two(num) {\n\t  if (num < 10) return '0' + num;else return num;\n\t}\n\t\n\tDERNode.prototype._encodeTime = function encodeTime(time, tag) {\n\t  var str;\n\t  var date = new Date(time);\n\t\n\t  if (tag === 'gentime') {\n\t    str = [two(date.getFullYear()), two(date.getUTCMonth() + 1), two(date.getUTCDate()), two(date.getUTCHours()), two(date.getUTCMinutes()), two(date.getUTCSeconds()), 'Z'].join('');\n\t  } else if (tag === 'utctime') {\n\t    str = [two(date.getFullYear() % 100), two(date.getUTCMonth() + 1), two(date.getUTCDate()), two(date.getUTCHours()), two(date.getUTCMinutes()), two(date.getUTCSeconds()), 'Z'].join('');\n\t  } else {\n\t    this.reporter.error('Encoding ' + tag + ' time is not supported yet');\n\t  }\n\t\n\t  return this._encodeStr(str, 'octstr');\n\t};\n\t\n\tDERNode.prototype._encodeNull = function encodeNull() {\n\t  return this._createEncoderBuffer('');\n\t};\n\t\n\tDERNode.prototype._encodeInt = function encodeInt(num, values) {\n\t  if (typeof num === 'string') {\n\t    if (!values) return this.reporter.error('String int or enum given, but no values map');\n\t    if (!values.hasOwnProperty(num)) {\n\t      return this.reporter.error('Values map doesn\\'t contain: ' + JSON.stringify(num));\n\t    }\n\t    num = values[num];\n\t  }\n\t\n\t  // Bignum, assume big endian\n\t  if (typeof num !== 'number' && !Buffer.isBuffer(num)) {\n\t    var numArray = num.toArray();\n\t    if (!num.sign && numArray[0] & 0x80) {\n\t      numArray.unshift(0);\n\t    }\n\t    num = new Buffer(numArray);\n\t  }\n\t\n\t  if (Buffer.isBuffer(num)) {\n\t    var size = num.length;\n\t    if (num.length === 0) size++;\n\t\n\t    var out = new Buffer(size);\n\t    num.copy(out);\n\t    if (num.length === 0) out[0] = 0;\n\t    return this._createEncoderBuffer(out);\n\t  }\n\t\n\t  if (num < 0x80) return this._createEncoderBuffer(num);\n\t\n\t  if (num < 0x100) return this._createEncoderBuffer([0, num]);\n\t\n\t  var size = 1;\n\t  for (var i = num; i >= 0x100; i >>= 8) {\n\t    size++;\n\t  }var out = new Array(size);\n\t  for (var i = out.length - 1; i >= 0; i--) {\n\t    out[i] = num & 0xff;\n\t    num >>= 8;\n\t  }\n\t  if (out[0] & 0x80) {\n\t    out.unshift(0);\n\t  }\n\t\n\t  return this._createEncoderBuffer(new Buffer(out));\n\t};\n\t\n\tDERNode.prototype._encodeBool = function encodeBool(value) {\n\t  return this._createEncoderBuffer(value ? 0xff : 0);\n\t};\n\t\n\tDERNode.prototype._use = function use(entity, obj) {\n\t  if (typeof entity === 'function') entity = entity(obj);\n\t  return entity._getEncoder('der').tree;\n\t};\n\t\n\tDERNode.prototype._skipDefault = function skipDefault(dataBuffer, reporter, parent) {\n\t  var state = this._baseState;\n\t  var i;\n\t  if (state['default'] === null) return false;\n\t\n\t  var data = dataBuffer.join();\n\t  if (state.defaultBuffer === undefined) state.defaultBuffer = this._encodeValue(state['default'], reporter, parent).join();\n\t\n\t  if (data.length !== state.defaultBuffer.length) return false;\n\t\n\t  for (i = 0; i < data.length; i++) {\n\t    if (data[i] !== state.defaultBuffer[i]) return false;\n\t  }return true;\n\t};\n\t\n\t// Utility methods\n\t\n\tfunction encodeTag(tag, primitive, cls, reporter) {\n\t  var res;\n\t\n\t  if (tag === 'seqof') tag = 'seq';else if (tag === 'setof') tag = 'set';\n\t\n\t  if (der.tagByName.hasOwnProperty(tag)) res = der.tagByName[tag];else if (typeof tag === 'number' && (tag | 0) === tag) res = tag;else return reporter.error('Unknown tag: ' + tag);\n\t\n\t  if (res >= 0x1f) return reporter.error('Multi-octet tag encoding unsupported');\n\t\n\t  if (!primitive) res |= 0x20;\n\t\n\t  res |= der.tagClassByName[cls || 'universal'] << 6;\n\t\n\t  return res;\n\t}\n\n/***/ },\n\n/***/ 1454:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar inherits = __webpack_require__(821);\n\t\n\tvar DEREncoder = __webpack_require__(1453);\n\t\n\tfunction PEMEncoder(entity) {\n\t  DEREncoder.call(this, entity);\n\t  this.enc = 'pem';\n\t};\n\tinherits(PEMEncoder, DEREncoder);\n\tmodule.exports = PEMEncoder;\n\t\n\tPEMEncoder.prototype.encode = function encode(data, options) {\n\t  var buf = DEREncoder.prototype.encode.call(this, data);\n\t\n\t  var p = buf.toString('base64');\n\t  var out = ['-----BEGIN ' + options.label + '-----'];\n\t  for (var i = 0; i < p.length; i += 64) {\n\t    out.push(p.slice(i, i + 64));\n\t  }out.push('-----END ' + options.label + '-----');\n\t  return out.join('\\n');\n\t};\n\n/***/ },\n\n/***/ 1455:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process, Buffer) {'use strict';\n\t\n\tvar crypto = __webpack_require__(818);\n\tvar extend = __webpack_require__(960);\n\tvar KeyEncoder = __webpack_require__(1456);\n\tvar nkey = __webpack_require__(1437);\n\tvar special = {\n\t  secp256k1: __webpack_require__(1493)\n\t};\n\t\n\tvar curves = {\n\t  p192: 'prime192v1',\n\t  p256: 'prime256v1',\n\t  p384: 'secp384r1',\n\t  p521: 'secp521r1'\n\t};\n\t\n\tfunction createECDH(curve) {\n\t  return crypto.createECDH(curves[curve] || curve);\n\t}\n\t\n\tvar PUB_PROPS = ['curve', 'pub'];\n\tvar type = 'ec';\n\t\n\tvar impl = nkey.wrapAPI({\n\t  type: type,\n\t  gen: gen,\n\t  genSync: genSync,\n\t  fromJSON: fromJSON\n\t});\n\t\n\tfunction getImpl(opts) {\n\t  return special[opts.curve] || impl;\n\t}\n\t\n\tmodule.exports = exports = nkey.wrapAPI({\n\t  gen: function gen(opts, cb) {\n\t    opts = normalizeOpts(opts);\n\t    return getImpl(opts).gen(opts, cb);\n\t  },\n\t  genSync: function genSync(opts) {\n\t    opts = normalizeOpts(opts);\n\t    return getImpl(opts).genSync(opts);\n\t  },\n\t  fromJSON: function fromJSON(json) {\n\t    json = normalizeOpts(json);\n\t    return getImpl(json).fromJSON(json);\n\t  }\n\t});\n\t\n\texports.DEFAULT_ALGORITHM = 'sha256';\n\texports.DEFAULT_CURVE = 'p256';\n\texports.setImplementationForCurve = function (curve, impl) {\n\t  special[curve] = impl;\n\t};\n\t\n\tfunction normalizeOpts(opts) {\n\t  opts = opts || {};\n\t  var copy = {};\n\t  for (var p in opts) {\n\t    copy[p] = opts[p];\n\t  }if (!copy.curve) copy.curve = exports.DEFAULT_CURVE;\n\t\n\t  return copy;\n\t}\n\t\n\tfunction genSync(opts) {\n\t  var curve = opts.curve;\n\t  var ec = createECDH(curve);\n\t  ec.generateKeys();\n\t  return impl.fromJSON({\n\t    curve: curve,\n\t    priv: ec.getPrivateKey()\n\t  });\n\t}\n\t\n\tfunction gen(opts, cb) {\n\t  process.nextTick(function () {\n\t    return cb(null, genSync(opts));\n\t  });\n\t}\n\t\n\tfunction fromJSON(opts) {\n\t  if (!(opts.priv || opts.pub)) {\n\t    throw new Error('expected \"priv\" or \"pub\"');\n\t  }\n\t\n\t  if (!opts.curve) throw new Error('expected \"curve\"');\n\t\n\t  var curve = opts.curve;\n\t  var ec = createECDH(curve);\n\t  var priv = typeof opts.priv === 'string' ? new Buffer(opts.priv, 'hex') : opts.priv;\n\t  if (priv) ec.setPrivateKey(priv);\n\t\n\t  var pub = typeof opts.pub === 'string' ? new Buffer(opts.pub, 'hex') : opts.pub;\n\t  if (!pub) pub = ec.getPublicKey();\n\t\n\t  var pubKeyString = pub.toString('hex');\n\t  var fingerprint = crypto.createHash('sha256').update(pub).digest('hex');\n\t  var encoder = new KeyEncoder(curve);\n\t  var privPEM = void 0;\n\t  var pubPEM = void 0;\n\t\n\t  return nkey.wrapInstance({\n\t    type: type,\n\t    signSync: signSync,\n\t    verifySync: verifySync,\n\t    hasDeterministicSig: true,\n\t    pubKeyString: pubKeyString,\n\t    fingerprint: fingerprint,\n\t    pub: pub,\n\t    priv: priv,\n\t    toJSON: toJSON\n\t  });\n\t\n\t  function getEncodedPriv() {\n\t    return privPEM || (privPEM = encoder.encodePrivate(priv, 'raw', 'pem'));\n\t  }\n\t\n\t  function getEncodedPub() {\n\t    return pubPEM || (pubPEM = encoder.encodePublic(pub, 'raw', 'pem'));\n\t  }\n\t\n\t  function signSync(data, algorithm) {\n\t    var priv = getEncodedPriv();\n\t    algorithm = algorithm || exports.DEFAULT_ALGORITHM;\n\t    return crypto.createSign(algorithm).update(data).sign(priv, 'hex');\n\t  }\n\t\n\t  function verifySync(data, algorithm, sig) {\n\t    var pub = getEncodedPub();\n\t    if (typeof sig === 'undefined') {\n\t      sig = algorithm;\n\t      algorithm = exports.DEFAULT_ALGORITHM;\n\t    }\n\t\n\t    if (typeof sig === 'string') sig = new Buffer(sig, 'hex');\n\t\n\t    return crypto.createVerify(algorithm).update(data).verify(pub, sig);\n\t  }\n\t\n\t  function toJSON(exportPrivateKey) {\n\t    var obj = {\n\t      type: type,\n\t      curve: curve,\n\t      pub: pubKeyString,\n\t      fingerprint: fingerprint\n\t    };\n\t\n\t    if (exportPrivateKey) obj.priv = priv.toString('hex');\n\t\n\t    return obj;\n\t  }\n\t}\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(295), __webpack_require__(807).Buffer))\n\n/***/ },\n\n/***/ 1456:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tmodule.exports = __webpack_require__(1457);\n\n/***/ },\n\n/***/ 1457:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(Buffer) {'use strict';\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar asn1 = __webpack_require__(1458),\n\t    BN = __webpack_require__(881),\n\t    curves = __webpack_require__(1473);\n\t\n\tvar ECPrivateKeyASN = asn1.define('ECPrivateKey', function () {\n\t    this.seq().obj(this.key('version').int(), this.key('privateKey').octstr(), this.key('parameters').explicit(0).objid().optional(), this.key('publicKey').explicit(1).bitstr().optional());\n\t});\n\t\n\tvar SubjectPublicKeyInfoASN = asn1.define('SubjectPublicKeyInfo', function () {\n\t    this.seq().obj(this.key('algorithm').seq().obj(this.key(\"id\").objid(), this.key(\"curve\").objid()), this.key('pub').bitstr());\n\t});\n\t\n\tfunction assert(val, msg) {\n\t    if (!val) {\n\t        throw new Error(msg || 'Assertion failed');\n\t    }\n\t}\n\t\n\tfunction KeyEncoder(options) {\n\t    if (typeof options === 'string') {\n\t        assert(curves.hasOwnProperty(options), 'Unknown curve ' + options);\n\t        options = curves[options];\n\t    }\n\t    this.options = options;\n\t    this.algorithmID = [1, 2, 840, 10045, 2, 1];\n\t}\n\t\n\tKeyEncoder.ECPrivateKeyASN = ECPrivateKeyASN;\n\tKeyEncoder.SubjectPublicKeyInfoASN = SubjectPublicKeyInfoASN;\n\t\n\tKeyEncoder.prototype.privateKeyObject = function (rawPrivateKey, rawPublicKey) {\n\t    var privateKeyObject = {\n\t        version: new BN(1),\n\t        privateKey: new Buffer(rawPrivateKey, 'hex'),\n\t        parameters: this.options.curveParameters\n\t    };\n\t\n\t    if (rawPublicKey) {\n\t        privateKeyObject.publicKey = {\n\t            unused: 0,\n\t            data: new Buffer(rawPublicKey, 'hex')\n\t        };\n\t    }\n\t\n\t    return privateKeyObject;\n\t};\n\t\n\tKeyEncoder.prototype.publicKeyObject = function (rawPublicKey) {\n\t    return {\n\t        algorithm: {\n\t            id: this.algorithmID,\n\t            curve: this.options.curveParameters\n\t        },\n\t        pub: {\n\t            unused: 0,\n\t            data: new Buffer(rawPublicKey, 'hex')\n\t        }\n\t    };\n\t};\n\t\n\tKeyEncoder.prototype.encodePrivate = function (privateKey, originalFormat, destinationFormat) {\n\t    var privateKeyObject;\n\t\n\t    /* Parse the incoming private key and convert it to a private key object */\n\t    if (originalFormat === 'raw') {\n\t        if (!(typeof privateKey === 'undefined' ? 'undefined' : _typeof(privateKey)) === 'string') {\n\t            throw 'private key must be a string';\n\t        }\n\t        var privateKeyObject = this.options.curve.keyFromPrivate(privateKey, 'hex'),\n\t            rawPublicKey = privateKeyObject.getPublic('hex');\n\t        privateKeyObject = this.privateKeyObject(privateKey, rawPublicKey);\n\t    } else if (originalFormat === 'der') {\n\t        if (Buffer.isBuffer(privateKey)) {\n\t            // do nothing\n\t        } else if (typeof privateKey === 'string') {\n\t            privateKey = new Buffer(privateKey, 'hex');\n\t        } else {\n\t            throw 'private key must be a buffer or a string';\n\t        }\n\t        privateKeyObject = ECPrivateKeyASN.decode(privateKey, 'der');\n\t    } else if (originalFormat === 'pem') {\n\t        if (!(typeof privateKey === 'undefined' ? 'undefined' : _typeof(privateKey)) === 'string') {\n\t            throw 'private key must be a string';\n\t        }\n\t        privateKeyObject = ECPrivateKeyASN.decode(privateKey, 'pem', this.options.privatePEMOptions);\n\t    } else {\n\t        throw 'invalid private key format';\n\t    }\n\t\n\t    /* Export the private key object to the desired format */\n\t    if (destinationFormat === 'raw') {\n\t        return privateKeyObject.privateKey.toString('hex');\n\t    } else if (destinationFormat === 'der') {\n\t        return ECPrivateKeyASN.encode(privateKeyObject, 'der').toString('hex');\n\t    } else if (destinationFormat === 'pem') {\n\t        return ECPrivateKeyASN.encode(privateKeyObject, 'pem', this.options.privatePEMOptions);\n\t    } else {\n\t        throw 'invalid destination format for private key';\n\t    }\n\t};\n\t\n\tKeyEncoder.prototype.encodePublic = function (publicKey, originalFormat, destinationFormat) {\n\t    var publicKeyObject;\n\t\n\t    /* Parse the incoming public key and convert it to a public key object */\n\t    if (originalFormat === 'raw') {\n\t        if (!(typeof publicKey === 'undefined' ? 'undefined' : _typeof(publicKey)) === 'string') {\n\t            throw 'public key must be a string';\n\t        }\n\t        publicKeyObject = this.publicKeyObject(publicKey);\n\t    } else if (originalFormat === 'der') {\n\t        if (Buffer.isBuffer(publicKey)) {\n\t            // do nothing\n\t        } else if (typeof publicKey === 'string') {\n\t            publicKey = new Buffer(publicKey, 'hex');\n\t        } else {\n\t            throw 'public key must be a buffer or a string';\n\t        }\n\t        publicKeyObject = SubjectPublicKeyInfoASN.decode(publicKey, 'der');\n\t    } else if (originalFormat === 'pem') {\n\t        if (!(typeof publicKey === 'undefined' ? 'undefined' : _typeof(publicKey)) === 'string') {\n\t            throw 'public key must be a string';\n\t        }\n\t        publicKeyObject = SubjectPublicKeyInfoASN.decode(publicKey, 'pem', this.options.publicPEMOptions);\n\t    } else {\n\t        throw 'invalid public key format';\n\t    }\n\t\n\t    /* Export the private key object to the desired format */\n\t    if (destinationFormat === 'raw') {\n\t        return publicKeyObject.pub.data.toString('hex');\n\t    } else if (destinationFormat === 'der') {\n\t        return SubjectPublicKeyInfoASN.encode(publicKeyObject, 'der').toString('hex');\n\t    } else if (destinationFormat === 'pem') {\n\t        return SubjectPublicKeyInfoASN.encode(publicKeyObject, 'pem', this.options.publicPEMOptions);\n\t    } else {\n\t        throw 'invalid destination format for public key';\n\t    }\n\t};\n\t\n\tmodule.exports = KeyEncoder;\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(807).Buffer))\n\n/***/ },\n\n/***/ 1458:\n[2496, 1459, 1460, 1461, 1465, 1467, 1470],\n\n/***/ 1459:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(module) {'use strict';\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\t(function (module, exports) {\n\t\n\t  'use strict';\n\t\n\t  // Utils\n\t\n\t  function assert(val, msg) {\n\t    if (!val) throw new Error(msg || 'Assertion failed');\n\t  }\n\t\n\t  // Could use `inherits` module, but don't want to move from single file\n\t  // architecture yet.\n\t  function inherits(ctor, superCtor) {\n\t    ctor.super_ = superCtor;\n\t    var TempCtor = function TempCtor() {};\n\t    TempCtor.prototype = superCtor.prototype;\n\t    ctor.prototype = new TempCtor();\n\t    ctor.prototype.constructor = ctor;\n\t  }\n\t\n\t  // BN\n\t\n\t  function BN(number, base, endian) {\n\t    // May be `new BN(bn)` ?\n\t    if (number !== null && (typeof number === 'undefined' ? 'undefined' : _typeof(number)) === 'object' && Array.isArray(number.words)) {\n\t      return number;\n\t    }\n\t\n\t    this.sign = false;\n\t    this.words = null;\n\t    this.length = 0;\n\t\n\t    // Reduction context\n\t    this.red = null;\n\t\n\t    if (base === 'le' || base === 'be') {\n\t      endian = base;\n\t      base = 10;\n\t    }\n\t\n\t    if (number !== null) this._init(number || 0, base || 10, endian || 'be');\n\t  }\n\t  if ((typeof module === 'undefined' ? 'undefined' : _typeof(module)) === 'object') module.exports = BN;else exports.BN = BN;\n\t\n\t  BN.BN = BN;\n\t  BN.wordSize = 26;\n\t\n\t  BN.prototype._init = function init(number, base, endian) {\n\t    if (typeof number === 'number') {\n\t      return this._initNumber(number, base, endian);\n\t    } else if ((typeof number === 'undefined' ? 'undefined' : _typeof(number)) === 'object') {\n\t      return this._initArray(number, base, endian);\n\t    }\n\t    if (base === 'hex') base = 16;\n\t    assert(base === (base | 0) && base >= 2 && base <= 36);\n\t\n\t    number = number.toString().replace(/\\s+/g, '');\n\t    var start = 0;\n\t    if (number[0] === '-') start++;\n\t\n\t    if (base === 16) this._parseHex(number, start);else this._parseBase(number, base, start);\n\t\n\t    if (number[0] === '-') this.sign = true;\n\t\n\t    this.strip();\n\t\n\t    if (endian !== 'le') return;\n\t\n\t    this._initArray(this.toArray(), base, endian);\n\t  };\n\t\n\t  BN.prototype._initNumber = function _initNumber(number, base, endian) {\n\t    if (number < 0) {\n\t      this.sign = true;\n\t      number = -number;\n\t    }\n\t    if (number < 0x4000000) {\n\t      this.words = [number & 0x3ffffff];\n\t      this.length = 1;\n\t    } else if (number < 0x10000000000000) {\n\t      this.words = [number & 0x3ffffff, number / 0x4000000 & 0x3ffffff];\n\t      this.length = 2;\n\t    } else {\n\t      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n\t      this.words = [number & 0x3ffffff, number / 0x4000000 & 0x3ffffff, 1];\n\t      this.length = 3;\n\t    }\n\t\n\t    if (endian !== 'le') return;\n\t\n\t    // Reverse the bytes\n\t    this._initArray(this.toArray(), base, endian);\n\t  };\n\t\n\t  BN.prototype._initArray = function _initArray(number, base, endian) {\n\t    // Perhaps a Uint8Array\n\t    assert(typeof number.length === 'number');\n\t    if (number.length <= 0) {\n\t      this.words = [0];\n\t      this.length = 1;\n\t      return this;\n\t    }\n\t\n\t    this.length = Math.ceil(number.length / 3);\n\t    this.words = new Array(this.length);\n\t    for (var i = 0; i < this.length; i++) {\n\t      this.words[i] = 0;\n\t    }var off = 0;\n\t    if (endian === 'be') {\n\t      for (var i = number.length - 1, j = 0; i >= 0; i -= 3) {\n\t        var w = number[i] | number[i - 1] << 8 | number[i - 2] << 16;\n\t        this.words[j] |= w << off & 0x3ffffff;\n\t        this.words[j + 1] = w >>> 26 - off & 0x3ffffff;\n\t        off += 24;\n\t        if (off >= 26) {\n\t          off -= 26;\n\t          j++;\n\t        }\n\t      }\n\t    } else if (endian === 'le') {\n\t      for (var i = 0, j = 0; i < number.length; i += 3) {\n\t        var w = number[i] | number[i + 1] << 8 | number[i + 2] << 16;\n\t        this.words[j] |= w << off & 0x3ffffff;\n\t        this.words[j + 1] = w >>> 26 - off & 0x3ffffff;\n\t        off += 24;\n\t        if (off >= 26) {\n\t          off -= 26;\n\t          j++;\n\t        }\n\t      }\n\t    }\n\t    return this.strip();\n\t  };\n\t\n\t  function parseHex(str, start, end) {\n\t    var r = 0;\n\t    var len = Math.min(str.length, end);\n\t    for (var i = start; i < len; i++) {\n\t      var c = str.charCodeAt(i) - 48;\n\t\n\t      r <<= 4;\n\t\n\t      // 'a' - 'f'\n\t      if (c >= 49 && c <= 54) r |= c - 49 + 0xa;\n\t\n\t      // 'A' - 'F'\n\t      else if (c >= 17 && c <= 22) r |= c - 17 + 0xa;\n\t\n\t        // '0' - '9'\n\t        else r |= c & 0xf;\n\t    }\n\t    return r;\n\t  }\n\t\n\t  BN.prototype._parseHex = function _parseHex(number, start) {\n\t    // Create possibly bigger array to ensure that it fits the number\n\t    this.length = Math.ceil((number.length - start) / 6);\n\t    this.words = new Array(this.length);\n\t    for (var i = 0; i < this.length; i++) {\n\t      this.words[i] = 0;\n\t    } // Scan 24-bit chunks and add them to the number\n\t    var off = 0;\n\t    for (var i = number.length - 6, j = 0; i >= start; i -= 6) {\n\t      var w = parseHex(number, i, i + 6);\n\t      this.words[j] |= w << off & 0x3ffffff;\n\t      this.words[j + 1] |= w >>> 26 - off & 0x3fffff;\n\t      off += 24;\n\t      if (off >= 26) {\n\t        off -= 26;\n\t        j++;\n\t      }\n\t    }\n\t    if (i + 6 !== start) {\n\t      var w = parseHex(number, start, i + 6);\n\t      this.words[j] |= w << off & 0x3ffffff;\n\t      this.words[j + 1] |= w >>> 26 - off & 0x3fffff;\n\t    }\n\t    this.strip();\n\t  };\n\t\n\t  function parseBase(str, start, end, mul) {\n\t    var r = 0;\n\t    var len = Math.min(str.length, end);\n\t    for (var i = start; i < len; i++) {\n\t      var c = str.charCodeAt(i) - 48;\n\t\n\t      r *= mul;\n\t\n\t      // 'a'\n\t      if (c >= 49) r += c - 49 + 0xa;\n\t\n\t      // 'A'\n\t      else if (c >= 17) r += c - 17 + 0xa;\n\t\n\t        // '0' - '9'\n\t        else r += c;\n\t    }\n\t    return r;\n\t  }\n\t\n\t  BN.prototype._parseBase = function _parseBase(number, base, start) {\n\t    // Initialize as zero\n\t    this.words = [0];\n\t    this.length = 1;\n\t\n\t    // Find length of limb in base\n\t    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n\t      limbLen++;\n\t    }limbLen--;\n\t    limbPow = limbPow / base | 0;\n\t\n\t    var total = number.length - start;\n\t    var mod = total % limbLen;\n\t    var end = Math.min(total, total - mod) + start;\n\t\n\t    var word = 0;\n\t    for (var i = start; i < end; i += limbLen) {\n\t      word = parseBase(number, i, i + limbLen, base);\n\t\n\t      this.imuln(limbPow);\n\t      if (this.words[0] + word < 0x4000000) this.words[0] += word;else this._iaddn(word);\n\t    }\n\t\n\t    if (mod !== 0) {\n\t      var pow = 1;\n\t      var word = parseBase(number, i, number.length, base);\n\t\n\t      for (var i = 0; i < mod; i++) {\n\t        pow *= base;\n\t      }this.imuln(pow);\n\t      if (this.words[0] + word < 0x4000000) this.words[0] += word;else this._iaddn(word);\n\t    }\n\t  };\n\t\n\t  BN.prototype.copy = function copy(dest) {\n\t    dest.words = new Array(this.length);\n\t    for (var i = 0; i < this.length; i++) {\n\t      dest.words[i] = this.words[i];\n\t    }dest.length = this.length;\n\t    dest.sign = this.sign;\n\t    dest.red = this.red;\n\t  };\n\t\n\t  BN.prototype.clone = function clone() {\n\t    var r = new BN(null);\n\t    this.copy(r);\n\t    return r;\n\t  };\n\t\n\t  // Remove leading `0` from `this`\n\t  BN.prototype.strip = function strip() {\n\t    while (this.length > 1 && this.words[this.length - 1] === 0) {\n\t      this.length--;\n\t    }return this._normSign();\n\t  };\n\t\n\t  BN.prototype._normSign = function _normSign() {\n\t    // -0 = 0\n\t    if (this.length === 1 && this.words[0] === 0) this.sign = false;\n\t    return this;\n\t  };\n\t\n\t  BN.prototype.inspect = function inspect() {\n\t    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n\t  };\n\t\n\t  /*\n\t  \n\t  var zeros = [];\n\t  var groupSizes = [];\n\t  var groupBases = [];\n\t  \n\t  var s = '';\n\t  var i = -1;\n\t  while (++i < BN.wordSize) {\n\t    zeros[i] = s;\n\t    s += '0';\n\t  }\n\t  groupSizes[0] = 0;\n\t  groupSizes[1] = 0;\n\t  groupBases[0] = 0;\n\t  groupBases[1] = 0;\n\t  var base = 2 - 1;\n\t  while (++base < 36 + 1) {\n\t    var groupSize = 0;\n\t    var groupBase = 1;\n\t    while (groupBase < (1 << BN.wordSize) / base) {\n\t      groupBase *= base;\n\t      groupSize += 1;\n\t    }\n\t    groupSizes[base] = groupSize;\n\t    groupBases[base] = groupBase;\n\t  }\n\t  \n\t  */\n\t\n\t  var zeros = ['', '0', '00', '000', '0000', '00000', '000000', '0000000', '00000000', '000000000', '0000000000', '00000000000', '000000000000', '0000000000000', '00000000000000', '000000000000000', '0000000000000000', '00000000000000000', '000000000000000000', '0000000000000000000', '00000000000000000000', '000000000000000000000', '0000000000000000000000', '00000000000000000000000', '000000000000000000000000', '0000000000000000000000000'];\n\t\n\t  var groupSizes = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5];\n\t\n\t  var groupBases = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];\n\t\n\t  BN.prototype.toString = function toString(base, padding) {\n\t    base = base || 10;\n\t    if (base === 16 || base === 'hex') {\n\t      var out = '';\n\t      var off = 0;\n\t      var padding = padding | 0 || 1;\n\t      var carry = 0;\n\t      for (var i = 0; i < this.length; i++) {\n\t        var w = this.words[i];\n\t        var word = ((w << off | carry) & 0xffffff).toString(16);\n\t        carry = w >>> 24 - off & 0xffffff;\n\t        if (carry !== 0 || i !== this.length - 1) out = zeros[6 - word.length] + word + out;else out = word + out;\n\t        off += 2;\n\t        if (off >= 26) {\n\t          off -= 26;\n\t          i--;\n\t        }\n\t      }\n\t      if (carry !== 0) out = carry.toString(16) + out;\n\t      while (out.length % padding !== 0) {\n\t        out = '0' + out;\n\t      }if (this.sign) out = '-' + out;\n\t      return out;\n\t    } else if (base === (base | 0) && base >= 2 && base <= 36) {\n\t      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n\t      var groupSize = groupSizes[base];\n\t      // var groupBase = Math.pow(base, groupSize);\n\t      var groupBase = groupBases[base];\n\t      var out = '';\n\t      var c = this.clone();\n\t      c.sign = false;\n\t      while (c.cmpn(0) !== 0) {\n\t        var r = c.modn(groupBase).toString(base);\n\t        c = c.idivn(groupBase);\n\t\n\t        if (c.cmpn(0) !== 0) out = zeros[groupSize - r.length] + r + out;else out = r + out;\n\t      }\n\t      if (this.cmpn(0) === 0) out = '0' + out;\n\t      if (this.sign) out = '-' + out;\n\t      return out;\n\t    } else {\n\t      assert(false, 'Base should be between 2 and 36');\n\t    }\n\t  };\n\t\n\t  BN.prototype.toJSON = function toJSON() {\n\t    return this.toString(16);\n\t  };\n\t\n\t  BN.prototype.toArray = function toArray(endian) {\n\t    this.strip();\n\t    var res = new Array(this.byteLength());\n\t    res[0] = 0;\n\t\n\t    var q = this.clone();\n\t    if (endian !== 'le') {\n\t      // Assume big-endian\n\t      for (var i = 0; q.cmpn(0) !== 0; i++) {\n\t        var b = q.andln(0xff);\n\t        q.ishrn(8);\n\t\n\t        res[res.length - i - 1] = b;\n\t      }\n\t    } else {\n\t      // Assume little-endian\n\t      for (var i = 0; q.cmpn(0) !== 0; i++) {\n\t        var b = q.andln(0xff);\n\t        q.ishrn(8);\n\t\n\t        res[i] = b;\n\t      }\n\t    }\n\t\n\t    return res;\n\t  };\n\t\n\t  if (Math.clz32) {\n\t    BN.prototype._countBits = function _countBits(w) {\n\t      return 32 - Math.clz32(w);\n\t    };\n\t  } else {\n\t    BN.prototype._countBits = function _countBits(w) {\n\t      var t = w;\n\t      var r = 0;\n\t      if (t >= 0x1000) {\n\t        r += 13;\n\t        t >>>= 13;\n\t      }\n\t      if (t >= 0x40) {\n\t        r += 7;\n\t        t >>>= 7;\n\t      }\n\t      if (t >= 0x8) {\n\t        r += 4;\n\t        t >>>= 4;\n\t      }\n\t      if (t >= 0x02) {\n\t        r += 2;\n\t        t >>>= 2;\n\t      }\n\t      return r + t;\n\t    };\n\t  }\n\t\n\t  BN.prototype._zeroBits = function _zeroBits(w) {\n\t    // Short-cut\n\t    if (w === 0) return 26;\n\t\n\t    var t = w;\n\t    var r = 0;\n\t    if ((t & 0x1fff) === 0) {\n\t      r += 13;\n\t      t >>>= 13;\n\t    }\n\t    if ((t & 0x7f) === 0) {\n\t      r += 7;\n\t      t >>>= 7;\n\t    }\n\t    if ((t & 0xf) === 0) {\n\t      r += 4;\n\t      t >>>= 4;\n\t    }\n\t    if ((t & 0x3) === 0) {\n\t      r += 2;\n\t      t >>>= 2;\n\t    }\n\t    if ((t & 0x1) === 0) r++;\n\t    return r;\n\t  };\n\t\n\t  // Return number of used bits in a BN\n\t  BN.prototype.bitLength = function bitLength() {\n\t    var hi = 0;\n\t    var w = this.words[this.length - 1];\n\t    var hi = this._countBits(w);\n\t    return (this.length - 1) * 26 + hi;\n\t  };\n\t\n\t  // Number of trailing zero bits\n\t  BN.prototype.zeroBits = function zeroBits() {\n\t    if (this.cmpn(0) === 0) return 0;\n\t\n\t    var r = 0;\n\t    for (var i = 0; i < this.length; i++) {\n\t      var b = this._zeroBits(this.words[i]);\n\t      r += b;\n\t      if (b !== 26) break;\n\t    }\n\t    return r;\n\t  };\n\t\n\t  BN.prototype.byteLength = function byteLength() {\n\t    return Math.ceil(this.bitLength() / 8);\n\t  };\n\t\n\t  // Return negative clone of `this`\n\t  BN.prototype.neg = function neg() {\n\t    if (this.cmpn(0) === 0) return this.clone();\n\t\n\t    var r = this.clone();\n\t    r.sign = !this.sign;\n\t    return r;\n\t  };\n\t\n\t  // Or `num` with `this` in-place\n\t  BN.prototype.ior = function ior(num) {\n\t    this.sign = this.sign || num.sign;\n\t\n\t    while (this.length < num.length) {\n\t      this.words[this.length++] = 0;\n\t    }for (var i = 0; i < num.length; i++) {\n\t      this.words[i] = this.words[i] | num.words[i];\n\t    }return this.strip();\n\t  };\n\t\n\t  // Or `num` with `this`\n\t  BN.prototype.or = function or(num) {\n\t    if (this.length > num.length) return this.clone().ior(num);else return num.clone().ior(this);\n\t  };\n\t\n\t  // And `num` with `this` in-place\n\t  BN.prototype.iand = function iand(num) {\n\t    this.sign = this.sign && num.sign;\n\t\n\t    // b = min-length(num, this)\n\t    var b;\n\t    if (this.length > num.length) b = num;else b = this;\n\t\n\t    for (var i = 0; i < b.length; i++) {\n\t      this.words[i] = this.words[i] & num.words[i];\n\t    }this.length = b.length;\n\t\n\t    return this.strip();\n\t  };\n\t\n\t  // And `num` with `this`\n\t  BN.prototype.and = function and(num) {\n\t    if (this.length > num.length) return this.clone().iand(num);else return num.clone().iand(this);\n\t  };\n\t\n\t  // Xor `num` with `this` in-place\n\t  BN.prototype.ixor = function ixor(num) {\n\t    this.sign = this.sign || num.sign;\n\t\n\t    // a.length > b.length\n\t    var a;\n\t    var b;\n\t    if (this.length > num.length) {\n\t      a = this;\n\t      b = num;\n\t    } else {\n\t      a = num;\n\t      b = this;\n\t    }\n\t\n\t    for (var i = 0; i < b.length; i++) {\n\t      this.words[i] = a.words[i] ^ b.words[i];\n\t    }if (this !== a) for (; i < a.length; i++) {\n\t      this.words[i] = a.words[i];\n\t    }this.length = a.length;\n\t\n\t    return this.strip();\n\t  };\n\t\n\t  // Xor `num` with `this`\n\t  BN.prototype.xor = function xor(num) {\n\t    if (this.length > num.length) return this.clone().ixor(num);else return num.clone().ixor(this);\n\t  };\n\t\n\t  // Set `bit` of `this`\n\t  BN.prototype.setn = function setn(bit, val) {\n\t    assert(typeof bit === 'number' && bit >= 0);\n\t\n\t    var off = bit / 26 | 0;\n\t    var wbit = bit % 26;\n\t\n\t    while (this.length <= off) {\n\t      this.words[this.length++] = 0;\n\t    }if (val) this.words[off] = this.words[off] | 1 << wbit;else this.words[off] = this.words[off] & ~(1 << wbit);\n\t\n\t    return this.strip();\n\t  };\n\t\n\t  // Add `num` to `this` in-place\n\t  BN.prototype.iadd = function iadd(num) {\n\t    // negative + positive\n\t    if (this.sign && !num.sign) {\n\t      this.sign = false;\n\t      var r = this.isub(num);\n\t      this.sign = !this.sign;\n\t      return this._normSign();\n\t\n\t      // positive + negative\n\t    } else if (!this.sign && num.sign) {\n\t      num.sign = false;\n\t      var r = this.isub(num);\n\t      num.sign = true;\n\t      return r._normSign();\n\t    }\n\t\n\t    // a.length > b.length\n\t    var a;\n\t    var b;\n\t    if (this.length > num.length) {\n\t      a = this;\n\t      b = num;\n\t    } else {\n\t      a = num;\n\t      b = this;\n\t    }\n\t\n\t    var carry = 0;\n\t    for (var i = 0; i < b.length; i++) {\n\t      var r = a.words[i] + b.words[i] + carry;\n\t      this.words[i] = r & 0x3ffffff;\n\t      carry = r >>> 26;\n\t    }\n\t    for (; carry !== 0 && i < a.length; i++) {\n\t      var r = a.words[i] + carry;\n\t      this.words[i] = r & 0x3ffffff;\n\t      carry = r >>> 26;\n\t    }\n\t\n\t    this.length = a.length;\n\t    if (carry !== 0) {\n\t      this.words[this.length] = carry;\n\t      this.length++;\n\t      // Copy the rest of the words\n\t    } else if (a !== this) {\n\t      for (; i < a.length; i++) {\n\t        this.words[i] = a.words[i];\n\t      }\n\t    }\n\t\n\t    return this;\n\t  };\n\t\n\t  // Add `num` to `this`\n\t  BN.prototype.add = function add(num) {\n\t    if (num.sign && !this.sign) {\n\t      num.sign = false;\n\t      var res = this.sub(num);\n\t      num.sign = true;\n\t      return res;\n\t    } else if (!num.sign && this.sign) {\n\t      this.sign = false;\n\t      var res = num.sub(this);\n\t      this.sign = true;\n\t      return res;\n\t    }\n\t\n\t    if (this.length > num.length) return this.clone().iadd(num);else return num.clone().iadd(this);\n\t  };\n\t\n\t  // Subtract `num` from `this` in-place\n\t  BN.prototype.isub = function isub(num) {\n\t    // this - (-num) = this + num\n\t    if (num.sign) {\n\t      num.sign = false;\n\t      var r = this.iadd(num);\n\t      num.sign = true;\n\t      return r._normSign();\n\t\n\t      // -this - num = -(this + num)\n\t    } else if (this.sign) {\n\t      this.sign = false;\n\t      this.iadd(num);\n\t      this.sign = true;\n\t      return this._normSign();\n\t    }\n\t\n\t    // At this point both numbers are positive\n\t    var cmp = this.cmp(num);\n\t\n\t    // Optimization - zeroify\n\t    if (cmp === 0) {\n\t      this.sign = false;\n\t      this.length = 1;\n\t      this.words[0] = 0;\n\t      return this;\n\t    }\n\t\n\t    // a > b\n\t    var a;\n\t    var b;\n\t    if (cmp > 0) {\n\t      a = this;\n\t      b = num;\n\t    } else {\n\t      a = num;\n\t      b = this;\n\t    }\n\t\n\t    var carry = 0;\n\t    for (var i = 0; i < b.length; i++) {\n\t      var r = a.words[i] - b.words[i] + carry;\n\t      carry = r >> 26;\n\t      this.words[i] = r & 0x3ffffff;\n\t    }\n\t    for (; carry !== 0 && i < a.length; i++) {\n\t      var r = a.words[i] + carry;\n\t      carry = r >> 26;\n\t      this.words[i] = r & 0x3ffffff;\n\t    }\n\t\n\t    // Copy rest of the words\n\t    if (carry === 0 && i < a.length && a !== this) for (; i < a.length; i++) {\n\t      this.words[i] = a.words[i];\n\t    }this.length = Math.max(this.length, i);\n\t\n\t    if (a !== this) this.sign = true;\n\t\n\t    return this.strip();\n\t  };\n\t\n\t  // Subtract `num` from `this`\n\t  BN.prototype.sub = function sub(num) {\n\t    return this.clone().isub(num);\n\t  };\n\t\n\t  /*\n\t  // NOTE: This could be potentionally used to generate loop-less multiplications\n\t  function _genCombMulTo(alen, blen) {\n\t    var len = alen + blen - 1;\n\t    var src = [\n\t      'var a = this.words, b = num.words, o = out.words, c = 0, w, ' +\n\t          'mask = 0x3ffffff, shift = 0x4000000;',\n\t      'out.length = ' + len + ';'\n\t    ];\n\t    for (var k = 0; k < len; k++) {\n\t      var minJ = Math.max(0, k - alen + 1);\n\t      var maxJ = Math.min(k, blen - 1);\n\t  \n\t      for (var j = minJ; j <= maxJ; j++) {\n\t        var i = k - j;\n\t        var mul = 'a[' + i + '] * b[' + j + ']';\n\t  \n\t        if (j === minJ) {\n\t          src.push('w = ' + mul + ' + c;');\n\t          src.push('c = (w / shift) | 0;');\n\t        } else {\n\t          src.push('w += ' + mul + ';');\n\t          src.push('c += (w / shift) | 0;');\n\t        }\n\t        src.push('w &= mask;');\n\t      }\n\t      src.push('o[' + k + '] = w;');\n\t    }\n\t    src.push('if (c !== 0) {',\n\t             '  o[' + k + '] = c;',\n\t             '  out.length++;',\n\t             '}',\n\t             'return out;');\n\t  \n\t    return src.join('\\n');\n\t  }\n\t  */\n\t\n\t  BN.prototype._smallMulTo = function _smallMulTo(num, out) {\n\t    out.sign = num.sign !== this.sign;\n\t    out.length = this.length + num.length;\n\t\n\t    var carry = 0;\n\t    for (var k = 0; k < out.length - 1; k++) {\n\t      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n\t      // note that ncarry could be >= 0x3ffffff\n\t      var ncarry = carry >>> 26;\n\t      var rword = carry & 0x3ffffff;\n\t      var maxJ = Math.min(k, num.length - 1);\n\t      for (var j = Math.max(0, k - this.length + 1); j <= maxJ; j++) {\n\t        var i = k - j;\n\t        var a = this.words[i] | 0;\n\t        var b = num.words[j] | 0;\n\t        var r = a * b;\n\t\n\t        var lo = r & 0x3ffffff;\n\t        ncarry = ncarry + (r / 0x4000000 | 0) | 0;\n\t        lo = lo + rword | 0;\n\t        rword = lo & 0x3ffffff;\n\t        ncarry = ncarry + (lo >>> 26) | 0;\n\t      }\n\t      out.words[k] = rword;\n\t      carry = ncarry;\n\t    }\n\t    if (carry !== 0) {\n\t      out.words[k] = carry;\n\t    } else {\n\t      out.length--;\n\t    }\n\t\n\t    return out.strip();\n\t  };\n\t\n\t  BN.prototype._bigMulTo = function _bigMulTo(num, out) {\n\t    out.sign = num.sign !== this.sign;\n\t    out.length = this.length + num.length;\n\t\n\t    var carry = 0;\n\t    var hncarry = 0;\n\t    for (var k = 0; k < out.length - 1; k++) {\n\t      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n\t      // note that ncarry could be >= 0x3ffffff\n\t      var ncarry = hncarry;\n\t      hncarry = 0;\n\t      var rword = carry & 0x3ffffff;\n\t      var maxJ = Math.min(k, num.length - 1);\n\t      for (var j = Math.max(0, k - this.length + 1); j <= maxJ; j++) {\n\t        var i = k - j;\n\t        var a = this.words[i] | 0;\n\t        var b = num.words[j] | 0;\n\t        var r = a * b;\n\t\n\t        var lo = r & 0x3ffffff;\n\t        ncarry = ncarry + (r / 0x4000000 | 0) | 0;\n\t        lo = lo + rword | 0;\n\t        rword = lo & 0x3ffffff;\n\t        ncarry = ncarry + (lo >>> 26) | 0;\n\t\n\t        hncarry += ncarry >>> 26;\n\t        ncarry &= 0x3ffffff;\n\t      }\n\t      out.words[k] = rword;\n\t      carry = ncarry;\n\t      ncarry = hncarry;\n\t    }\n\t    if (carry !== 0) {\n\t      out.words[k] = carry;\n\t    } else {\n\t      out.length--;\n\t    }\n\t\n\t    return out.strip();\n\t  };\n\t\n\t  BN.prototype.mulTo = function mulTo(num, out) {\n\t    var res;\n\t    if (this.length + num.length < 63) res = this._smallMulTo(num, out);else res = this._bigMulTo(num, out);\n\t    return res;\n\t  };\n\t\n\t  // Multiply `this` by `num`\n\t  BN.prototype.mul = function mul(num) {\n\t    var out = new BN(null);\n\t    out.words = new Array(this.length + num.length);\n\t    return this.mulTo(num, out);\n\t  };\n\t\n\t  // In-place Multiplication\n\t  BN.prototype.imul = function imul(num) {\n\t    if (this.cmpn(0) === 0 || num.cmpn(0) === 0) {\n\t      this.words[0] = 0;\n\t      this.length = 1;\n\t      return this;\n\t    }\n\t\n\t    var tlen = this.length;\n\t    var nlen = num.length;\n\t\n\t    this.sign = num.sign !== this.sign;\n\t    this.length = this.length + num.length;\n\t    this.words[this.length - 1] = 0;\n\t\n\t    for (var k = this.length - 2; k >= 0; k--) {\n\t      // Sum all words with the same `i + j = k` and accumulate `carry`,\n\t      // note that carry could be >= 0x3ffffff\n\t      var carry = 0;\n\t      var rword = 0;\n\t      var maxJ = Math.min(k, nlen - 1);\n\t      for (var j = Math.max(0, k - tlen + 1); j <= maxJ; j++) {\n\t        var i = k - j;\n\t        var a = this.words[i];\n\t        var b = num.words[j];\n\t        var r = a * b;\n\t\n\t        var lo = r & 0x3ffffff;\n\t        carry += r / 0x4000000 | 0;\n\t        lo += rword;\n\t        rword = lo & 0x3ffffff;\n\t        carry += lo >>> 26;\n\t      }\n\t      this.words[k] = rword;\n\t      this.words[k + 1] += carry;\n\t      carry = 0;\n\t    }\n\t\n\t    // Propagate overflows\n\t    var carry = 0;\n\t    for (var i = 1; i < this.length; i++) {\n\t      var w = this.words[i] + carry;\n\t      this.words[i] = w & 0x3ffffff;\n\t      carry = w >>> 26;\n\t    }\n\t\n\t    return this.strip();\n\t  };\n\t\n\t  BN.prototype.imuln = function imuln(num) {\n\t    assert(typeof num === 'number');\n\t\n\t    // Carry\n\t    var carry = 0;\n\t    for (var i = 0; i < this.length; i++) {\n\t      var w = this.words[i] * num;\n\t      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n\t      carry >>= 26;\n\t      carry += w / 0x4000000 | 0;\n\t      // NOTE: lo is 27bit maximum\n\t      carry += lo >>> 26;\n\t      this.words[i] = lo & 0x3ffffff;\n\t    }\n\t\n\t    if (carry !== 0) {\n\t      this.words[i] = carry;\n\t      this.length++;\n\t    }\n\t\n\t    return this;\n\t  };\n\t\n\t  BN.prototype.muln = function muln(num) {\n\t    return this.clone().imuln(num);\n\t  };\n\t\n\t  // `this` * `this`\n\t  BN.prototype.sqr = function sqr() {\n\t    return this.mul(this);\n\t  };\n\t\n\t  // `this` * `this` in-place\n\t  BN.prototype.isqr = function isqr() {\n\t    return this.mul(this);\n\t  };\n\t\n\t  // Shift-left in-place\n\t  BN.prototype.ishln = function ishln(bits) {\n\t    assert(typeof bits === 'number' && bits >= 0);\n\t    var r = bits % 26;\n\t    var s = (bits - r) / 26;\n\t    var carryMask = 0x3ffffff >>> 26 - r << 26 - r;\n\t\n\t    if (r !== 0) {\n\t      var carry = 0;\n\t      for (var i = 0; i < this.length; i++) {\n\t        var newCarry = this.words[i] & carryMask;\n\t        var c = this.words[i] - newCarry << r;\n\t        this.words[i] = c | carry;\n\t        carry = newCarry >>> 26 - r;\n\t      }\n\t      if (carry) {\n\t        this.words[i] = carry;\n\t        this.length++;\n\t      }\n\t    }\n\t\n\t    if (s !== 0) {\n\t      for (var i = this.length - 1; i >= 0; i--) {\n\t        this.words[i + s] = this.words[i];\n\t      }for (var i = 0; i < s; i++) {\n\t        this.words[i] = 0;\n\t      }this.length += s;\n\t    }\n\t\n\t    return this.strip();\n\t  };\n\t\n\t  // Shift-right in-place\n\t  // NOTE: `hint` is a lowest bit before trailing zeroes\n\t  // NOTE: if `extended` is present - it will be filled with destroyed bits\n\t  BN.prototype.ishrn = function ishrn(bits, hint, extended) {\n\t    assert(typeof bits === 'number' && bits >= 0);\n\t    var h;\n\t    if (hint) h = (hint - hint % 26) / 26;else h = 0;\n\t\n\t    var r = bits % 26;\n\t    var s = Math.min((bits - r) / 26, this.length);\n\t    var mask = 0x3ffffff ^ 0x3ffffff >>> r << r;\n\t    var maskedWords = extended;\n\t\n\t    h -= s;\n\t    h = Math.max(0, h);\n\t\n\t    // Extended mode, copy masked part\n\t    if (maskedWords) {\n\t      for (var i = 0; i < s; i++) {\n\t        maskedWords.words[i] = this.words[i];\n\t      }maskedWords.length = s;\n\t    }\n\t\n\t    if (s === 0) {\n\t      // No-op, we should not move anything at all\n\t    } else if (this.length > s) {\n\t      this.length -= s;\n\t      for (var i = 0; i < this.length; i++) {\n\t        this.words[i] = this.words[i + s];\n\t      }\n\t    } else {\n\t      this.words[0] = 0;\n\t      this.length = 1;\n\t    }\n\t\n\t    var carry = 0;\n\t    for (var i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n\t      var word = this.words[i];\n\t      this.words[i] = carry << 26 - r | word >>> r;\n\t      carry = word & mask;\n\t    }\n\t\n\t    // Push carried bits as a mask\n\t    if (maskedWords && carry !== 0) maskedWords.words[maskedWords.length++] = carry;\n\t\n\t    if (this.length === 0) {\n\t      this.words[0] = 0;\n\t      this.length = 1;\n\t    }\n\t\n\t    this.strip();\n\t\n\t    return this;\n\t  };\n\t\n\t  // Shift-left\n\t  BN.prototype.shln = function shln(bits) {\n\t    return this.clone().ishln(bits);\n\t  };\n\t\n\t  // Shift-right\n\t  BN.prototype.shrn = function shrn(bits) {\n\t    return this.clone().ishrn(bits);\n\t  };\n\t\n\t  // Test if n bit is set\n\t  BN.prototype.testn = function testn(bit) {\n\t    assert(typeof bit === 'number' && bit >= 0);\n\t    var r = bit % 26;\n\t    var s = (bit - r) / 26;\n\t    var q = 1 << r;\n\t\n\t    // Fast case: bit is much higher than all existing words\n\t    if (this.length <= s) {\n\t      return false;\n\t    }\n\t\n\t    // Check bit and return\n\t    var w = this.words[s];\n\t\n\t    return !!(w & q);\n\t  };\n\t\n\t  // Return only lowers bits of number (in-place)\n\t  BN.prototype.imaskn = function imaskn(bits) {\n\t    assert(typeof bits === 'number' && bits >= 0);\n\t    var r = bits % 26;\n\t    var s = (bits - r) / 26;\n\t\n\t    assert(!this.sign, 'imaskn works only with positive numbers');\n\t\n\t    if (r !== 0) s++;\n\t    this.length = Math.min(s, this.length);\n\t\n\t    if (r !== 0) {\n\t      var mask = 0x3ffffff ^ 0x3ffffff >>> r << r;\n\t      this.words[this.length - 1] &= mask;\n\t    }\n\t\n\t    return this.strip();\n\t  };\n\t\n\t  // Return only lowers bits of number\n\t  BN.prototype.maskn = function maskn(bits) {\n\t    return this.clone().imaskn(bits);\n\t  };\n\t\n\t  // Add plain number `num` to `this`\n\t  BN.prototype.iaddn = function iaddn(num) {\n\t    assert(typeof num === 'number');\n\t    if (num < 0) return this.isubn(-num);\n\t\n\t    // Possible sign change\n\t    if (this.sign) {\n\t      if (this.length === 1 && this.words[0] < num) {\n\t        this.words[0] = num - this.words[0];\n\t        this.sign = false;\n\t        return this;\n\t      }\n\t\n\t      this.sign = false;\n\t      this.isubn(num);\n\t      this.sign = true;\n\t      return this;\n\t    }\n\t\n\t    // Add without checks\n\t    return this._iaddn(num);\n\t  };\n\t\n\t  BN.prototype._iaddn = function _iaddn(num) {\n\t    this.words[0] += num;\n\t\n\t    // Carry\n\t    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n\t      this.words[i] -= 0x4000000;\n\t      if (i === this.length - 1) this.words[i + 1] = 1;else this.words[i + 1]++;\n\t    }\n\t    this.length = Math.max(this.length, i + 1);\n\t\n\t    return this;\n\t  };\n\t\n\t  // Subtract plain number `num` from `this`\n\t  BN.prototype.isubn = function isubn(num) {\n\t    assert(typeof num === 'number');\n\t    if (num < 0) return this.iaddn(-num);\n\t\n\t    if (this.sign) {\n\t      this.sign = false;\n\t      this.iaddn(num);\n\t      this.sign = true;\n\t      return this;\n\t    }\n\t\n\t    this.words[0] -= num;\n\t\n\t    // Carry\n\t    for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n\t      this.words[i] += 0x4000000;\n\t      this.words[i + 1] -= 1;\n\t    }\n\t\n\t    return this.strip();\n\t  };\n\t\n\t  BN.prototype.addn = function addn(num) {\n\t    return this.clone().iaddn(num);\n\t  };\n\t\n\t  BN.prototype.subn = function subn(num) {\n\t    return this.clone().isubn(num);\n\t  };\n\t\n\t  BN.prototype.iabs = function iabs() {\n\t    this.sign = false;\n\t\n\t    return this;\n\t  };\n\t\n\t  BN.prototype.abs = function abs() {\n\t    return this.clone().iabs();\n\t  };\n\t\n\t  BN.prototype._ishlnsubmul = function _ishlnsubmul(num, mul, shift) {\n\t    // Bigger storage is needed\n\t    var len = num.length + shift;\n\t    var i;\n\t    if (this.words.length < len) {\n\t      var t = new Array(len);\n\t      for (var i = 0; i < this.length; i++) {\n\t        t[i] = this.words[i];\n\t      }this.words = t;\n\t    } else {\n\t      i = this.length;\n\t    }\n\t\n\t    // Zeroify rest\n\t    this.length = Math.max(this.length, len);\n\t    for (; i < this.length; i++) {\n\t      this.words[i] = 0;\n\t    }var carry = 0;\n\t    for (var i = 0; i < num.length; i++) {\n\t      var w = this.words[i + shift] + carry;\n\t      var right = num.words[i] * mul;\n\t      w -= right & 0x3ffffff;\n\t      carry = (w >> 26) - (right / 0x4000000 | 0);\n\t      this.words[i + shift] = w & 0x3ffffff;\n\t    }\n\t    for (; i < this.length - shift; i++) {\n\t      var w = this.words[i + shift] + carry;\n\t      carry = w >> 26;\n\t      this.words[i + shift] = w & 0x3ffffff;\n\t    }\n\t\n\t    if (carry === 0) return this.strip();\n\t\n\t    // Subtraction overflow\n\t    assert(carry === -1);\n\t    carry = 0;\n\t    for (var i = 0; i < this.length; i++) {\n\t      var w = -this.words[i] + carry;\n\t      carry = w >> 26;\n\t      this.words[i] = w & 0x3ffffff;\n\t    }\n\t    this.sign = true;\n\t\n\t    return this.strip();\n\t  };\n\t\n\t  BN.prototype._wordDiv = function _wordDiv(num, mode) {\n\t    var shift = this.length - num.length;\n\t\n\t    var a = this.clone();\n\t    var b = num;\n\t\n\t    // Normalize\n\t    var bhi = b.words[b.length - 1];\n\t    var bhiBits = this._countBits(bhi);\n\t    shift = 26 - bhiBits;\n\t    if (shift !== 0) {\n\t      b = b.shln(shift);\n\t      a.ishln(shift);\n\t      bhi = b.words[b.length - 1];\n\t    }\n\t\n\t    // Initialize quotient\n\t    var m = a.length - b.length;\n\t    var q;\n\t\n\t    if (mode !== 'mod') {\n\t      q = new BN(null);\n\t      q.length = m + 1;\n\t      q.words = new Array(q.length);\n\t      for (var i = 0; i < q.length; i++) {\n\t        q.words[i] = 0;\n\t      }\n\t    }\n\t\n\t    var diff = a.clone()._ishlnsubmul(b, 1, m);\n\t    if (!diff.sign) {\n\t      a = diff;\n\t      if (q) q.words[m] = 1;\n\t    }\n\t\n\t    for (var j = m - 1; j >= 0; j--) {\n\t      var qj = a.words[b.length + j] * 0x4000000 + a.words[b.length + j - 1];\n\t\n\t      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n\t      // (0x7ffffff)\n\t      qj = Math.min(qj / bhi | 0, 0x3ffffff);\n\t\n\t      a._ishlnsubmul(b, qj, j);\n\t      while (a.sign) {\n\t        qj--;\n\t        a.sign = false;\n\t        a._ishlnsubmul(b, 1, j);\n\t        if (a.cmpn(0) !== 0) a.sign = !a.sign;\n\t      }\n\t      if (q) q.words[j] = qj;\n\t    }\n\t    if (q) q.strip();\n\t    a.strip();\n\t\n\t    // Denormalize\n\t    if (mode !== 'div' && shift !== 0) a.ishrn(shift);\n\t    return { div: q ? q : null, mod: a };\n\t  };\n\t\n\t  BN.prototype.divmod = function divmod(num, mode) {\n\t    assert(num.cmpn(0) !== 0);\n\t\n\t    if (this.sign && !num.sign) {\n\t      var res = this.neg().divmod(num, mode);\n\t      var div;\n\t      var mod;\n\t      if (mode !== 'mod') div = res.div.neg();\n\t      if (mode !== 'div') mod = res.mod.cmpn(0) === 0 ? res.mod : num.sub(res.mod);\n\t      return {\n\t        div: div,\n\t        mod: mod\n\t      };\n\t    } else if (!this.sign && num.sign) {\n\t      var res = this.divmod(num.neg(), mode);\n\t      var div;\n\t      if (mode !== 'mod') div = res.div.neg();\n\t      return { div: div, mod: res.mod };\n\t    } else if (this.sign && num.sign) {\n\t      return this.neg().divmod(num.neg(), mode);\n\t    }\n\t\n\t    // Both numbers are positive at this point\n\t\n\t    // Strip both numbers to approximate shift value\n\t    if (num.length > this.length || this.cmp(num) < 0) return { div: new BN(0), mod: this };\n\t\n\t    // Very short reduction\n\t    if (num.length === 1) {\n\t      if (mode === 'div') return { div: this.divn(num.words[0]), mod: null };else if (mode === 'mod') return { div: null, mod: new BN(this.modn(num.words[0])) };\n\t      return {\n\t        div: this.divn(num.words[0]),\n\t        mod: new BN(this.modn(num.words[0]))\n\t      };\n\t    }\n\t\n\t    return this._wordDiv(num, mode);\n\t  };\n\t\n\t  // Find `this` / `num`\n\t  BN.prototype.div = function div(num) {\n\t    return this.divmod(num, 'div').div;\n\t  };\n\t\n\t  // Find `this` % `num`\n\t  BN.prototype.mod = function mod(num) {\n\t    return this.divmod(num, 'mod').mod;\n\t  };\n\t\n\t  // Find Round(`this` / `num`)\n\t  BN.prototype.divRound = function divRound(num) {\n\t    var dm = this.divmod(num);\n\t\n\t    // Fast case - exact division\n\t    if (dm.mod.cmpn(0) === 0) return dm.div;\n\t\n\t    var mod = dm.div.sign ? dm.mod.isub(num) : dm.mod;\n\t\n\t    var half = num.shrn(1);\n\t    var r2 = num.andln(1);\n\t    var cmp = mod.cmp(half);\n\t\n\t    // Round down\n\t    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\t\n\t    // Round up\n\t    return dm.div.sign ? dm.div.isubn(1) : dm.div.iaddn(1);\n\t  };\n\t\n\t  BN.prototype.modn = function modn(num) {\n\t    assert(num <= 0x3ffffff);\n\t    var p = (1 << 26) % num;\n\t\n\t    var acc = 0;\n\t    for (var i = this.length - 1; i >= 0; i--) {\n\t      acc = (p * acc + this.words[i]) % num;\n\t    }return acc;\n\t  };\n\t\n\t  // In-place division by number\n\t  BN.prototype.idivn = function idivn(num) {\n\t    assert(num <= 0x3ffffff);\n\t\n\t    var carry = 0;\n\t    for (var i = this.length - 1; i >= 0; i--) {\n\t      var w = this.words[i] + carry * 0x4000000;\n\t      this.words[i] = w / num | 0;\n\t      carry = w % num;\n\t    }\n\t\n\t    return this.strip();\n\t  };\n\t\n\t  BN.prototype.divn = function divn(num) {\n\t    return this.clone().idivn(num);\n\t  };\n\t\n\t  BN.prototype.egcd = function egcd(p) {\n\t    assert(!p.sign);\n\t    assert(p.cmpn(0) !== 0);\n\t\n\t    var x = this;\n\t    var y = p.clone();\n\t\n\t    if (x.sign) x = x.mod(p);else x = x.clone();\n\t\n\t    // A * x + B * y = x\n\t    var A = new BN(1);\n\t    var B = new BN(0);\n\t\n\t    // C * x + D * y = y\n\t    var C = new BN(0);\n\t    var D = new BN(1);\n\t\n\t    var g = 0;\n\t\n\t    while (x.isEven() && y.isEven()) {\n\t      x.ishrn(1);\n\t      y.ishrn(1);\n\t      ++g;\n\t    }\n\t\n\t    var yp = y.clone();\n\t    var xp = x.clone();\n\t\n\t    while (x.cmpn(0) !== 0) {\n\t      while (x.isEven()) {\n\t        x.ishrn(1);\n\t        if (A.isEven() && B.isEven()) {\n\t          A.ishrn(1);\n\t          B.ishrn(1);\n\t        } else {\n\t          A.iadd(yp).ishrn(1);\n\t          B.isub(xp).ishrn(1);\n\t        }\n\t      }\n\t\n\t      while (y.isEven()) {\n\t        y.ishrn(1);\n\t        if (C.isEven() && D.isEven()) {\n\t          C.ishrn(1);\n\t          D.ishrn(1);\n\t        } else {\n\t          C.iadd(yp).ishrn(1);\n\t          D.isub(xp).ishrn(1);\n\t        }\n\t      }\n\t\n\t      if (x.cmp(y) >= 0) {\n\t        x.isub(y);\n\t        A.isub(C);\n\t        B.isub(D);\n\t      } else {\n\t        y.isub(x);\n\t        C.isub(A);\n\t        D.isub(B);\n\t      }\n\t    }\n\t\n\t    return {\n\t      a: C,\n\t      b: D,\n\t      gcd: y.ishln(g)\n\t    };\n\t  };\n\t\n\t  // This is reduced incarnation of the binary EEA\n\t  // above, designated to invert members of the\n\t  // _prime_ fields F(p) at a maximal speed\n\t  BN.prototype._invmp = function _invmp(p) {\n\t    assert(!p.sign);\n\t    assert(p.cmpn(0) !== 0);\n\t\n\t    var a = this;\n\t    var b = p.clone();\n\t\n\t    if (a.sign) a = a.mod(p);else a = a.clone();\n\t\n\t    var x1 = new BN(1);\n\t    var x2 = new BN(0);\n\t\n\t    var delta = b.clone();\n\t\n\t    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n\t      while (a.isEven()) {\n\t        a.ishrn(1);\n\t        if (x1.isEven()) x1.ishrn(1);else x1.iadd(delta).ishrn(1);\n\t      }\n\t      while (b.isEven()) {\n\t        b.ishrn(1);\n\t        if (x2.isEven()) x2.ishrn(1);else x2.iadd(delta).ishrn(1);\n\t      }\n\t      if (a.cmp(b) >= 0) {\n\t        a.isub(b);\n\t        x1.isub(x2);\n\t      } else {\n\t        b.isub(a);\n\t        x2.isub(x1);\n\t      }\n\t    }\n\t    if (a.cmpn(1) === 0) return x1;else return x2;\n\t  };\n\t\n\t  BN.prototype.gcd = function gcd(num) {\n\t    if (this.cmpn(0) === 0) return num.clone();\n\t    if (num.cmpn(0) === 0) return this.clone();\n\t\n\t    var a = this.clone();\n\t    var b = num.clone();\n\t    a.sign = false;\n\t    b.sign = false;\n\t\n\t    // Remove common factor of two\n\t    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n\t      a.ishrn(1);\n\t      b.ishrn(1);\n\t    }\n\t\n\t    do {\n\t      while (a.isEven()) {\n\t        a.ishrn(1);\n\t      }while (b.isEven()) {\n\t        b.ishrn(1);\n\t      }var r = a.cmp(b);\n\t      if (r < 0) {\n\t        // Swap `a` and `b` to make `a` always bigger than `b`\n\t        var t = a;\n\t        a = b;\n\t        b = t;\n\t      } else if (r === 0 || b.cmpn(1) === 0) {\n\t        break;\n\t      }\n\t\n\t      a.isub(b);\n\t    } while (true);\n\t\n\t    return b.ishln(shift);\n\t  };\n\t\n\t  // Invert number in the field F(num)\n\t  BN.prototype.invm = function invm(num) {\n\t    return this.egcd(num).a.mod(num);\n\t  };\n\t\n\t  BN.prototype.isEven = function isEven() {\n\t    return (this.words[0] & 1) === 0;\n\t  };\n\t\n\t  BN.prototype.isOdd = function isOdd() {\n\t    return (this.words[0] & 1) === 1;\n\t  };\n\t\n\t  // And first word and num\n\t  BN.prototype.andln = function andln(num) {\n\t    return this.words[0] & num;\n\t  };\n\t\n\t  // Increment at the bit position in-line\n\t  BN.prototype.bincn = function bincn(bit) {\n\t    assert(typeof bit === 'number');\n\t    var r = bit % 26;\n\t    var s = (bit - r) / 26;\n\t    var q = 1 << r;\n\t\n\t    // Fast case: bit is much higher than all existing words\n\t    if (this.length <= s) {\n\t      for (var i = this.length; i < s + 1; i++) {\n\t        this.words[i] = 0;\n\t      }this.words[s] |= q;\n\t      this.length = s + 1;\n\t      return this;\n\t    }\n\t\n\t    // Add bit and propagate, if needed\n\t    var carry = q;\n\t    for (var i = s; carry !== 0 && i < this.length; i++) {\n\t      var w = this.words[i];\n\t      w += carry;\n\t      carry = w >>> 26;\n\t      w &= 0x3ffffff;\n\t      this.words[i] = w;\n\t    }\n\t    if (carry !== 0) {\n\t      this.words[i] = carry;\n\t      this.length++;\n\t    }\n\t    return this;\n\t  };\n\t\n\t  BN.prototype.cmpn = function cmpn(num) {\n\t    var sign = num < 0;\n\t    if (sign) num = -num;\n\t\n\t    if (this.sign && !sign) return -1;else if (!this.sign && sign) return 1;\n\t\n\t    num &= 0x3ffffff;\n\t    this.strip();\n\t\n\t    var res;\n\t    if (this.length > 1) {\n\t      res = 1;\n\t    } else {\n\t      var w = this.words[0];\n\t      res = w === num ? 0 : w < num ? -1 : 1;\n\t    }\n\t    if (this.sign) res = -res;\n\t    return res;\n\t  };\n\t\n\t  // Compare two numbers and return:\n\t  // 1 - if `this` > `num`\n\t  // 0 - if `this` == `num`\n\t  // -1 - if `this` < `num`\n\t  BN.prototype.cmp = function cmp(num) {\n\t    if (this.sign && !num.sign) return -1;else if (!this.sign && num.sign) return 1;\n\t\n\t    var res = this.ucmp(num);\n\t    if (this.sign) return -res;else return res;\n\t  };\n\t\n\t  // Unsigned comparison\n\t  BN.prototype.ucmp = function ucmp(num) {\n\t    // At this point both numbers have the same sign\n\t    if (this.length > num.length) return 1;else if (this.length < num.length) return -1;\n\t\n\t    var res = 0;\n\t    for (var i = this.length - 1; i >= 0; i--) {\n\t      var a = this.words[i];\n\t      var b = num.words[i];\n\t\n\t      if (a === b) continue;\n\t      if (a < b) res = -1;else if (a > b) res = 1;\n\t      break;\n\t    }\n\t    return res;\n\t  };\n\t\n\t  //\n\t  // A reduce context, could be using montgomery or something better, depending\n\t  // on the `m` itself.\n\t  //\n\t  BN.red = function red(num) {\n\t    return new Red(num);\n\t  };\n\t\n\t  BN.prototype.toRed = function toRed(ctx) {\n\t    assert(!this.red, 'Already a number in reduction context');\n\t    assert(!this.sign, 'red works only with positives');\n\t    return ctx.convertTo(this)._forceRed(ctx);\n\t  };\n\t\n\t  BN.prototype.fromRed = function fromRed() {\n\t    assert(this.red, 'fromRed works only with numbers in reduction context');\n\t    return this.red.convertFrom(this);\n\t  };\n\t\n\t  BN.prototype._forceRed = function _forceRed(ctx) {\n\t    this.red = ctx;\n\t    return this;\n\t  };\n\t\n\t  BN.prototype.forceRed = function forceRed(ctx) {\n\t    assert(!this.red, 'Already a number in reduction context');\n\t    return this._forceRed(ctx);\n\t  };\n\t\n\t  BN.prototype.redAdd = function redAdd(num) {\n\t    assert(this.red, 'redAdd works only with red numbers');\n\t    return this.red.add(this, num);\n\t  };\n\t\n\t  BN.prototype.redIAdd = function redIAdd(num) {\n\t    assert(this.red, 'redIAdd works only with red numbers');\n\t    return this.red.iadd(this, num);\n\t  };\n\t\n\t  BN.prototype.redSub = function redSub(num) {\n\t    assert(this.red, 'redSub works only with red numbers');\n\t    return this.red.sub(this, num);\n\t  };\n\t\n\t  BN.prototype.redISub = function redISub(num) {\n\t    assert(this.red, 'redISub works only with red numbers');\n\t    return this.red.isub(this, num);\n\t  };\n\t\n\t  BN.prototype.redShl = function redShl(num) {\n\t    assert(this.red, 'redShl works only with red numbers');\n\t    return this.red.shl(this, num);\n\t  };\n\t\n\t  BN.prototype.redMul = function redMul(num) {\n\t    assert(this.red, 'redMul works only with red numbers');\n\t    this.red._verify2(this, num);\n\t    return this.red.mul(this, num);\n\t  };\n\t\n\t  BN.prototype.redIMul = function redIMul(num) {\n\t    assert(this.red, 'redMul works only with red numbers');\n\t    this.red._verify2(this, num);\n\t    return this.red.imul(this, num);\n\t  };\n\t\n\t  BN.prototype.redSqr = function redSqr() {\n\t    assert(this.red, 'redSqr works only with red numbers');\n\t    this.red._verify1(this);\n\t    return this.red.sqr(this);\n\t  };\n\t\n\t  BN.prototype.redISqr = function redISqr() {\n\t    assert(this.red, 'redISqr works only with red numbers');\n\t    this.red._verify1(this);\n\t    return this.red.isqr(this);\n\t  };\n\t\n\t  // Square root over p\n\t  BN.prototype.redSqrt = function redSqrt() {\n\t    assert(this.red, 'redSqrt works only with red numbers');\n\t    this.red._verify1(this);\n\t    return this.red.sqrt(this);\n\t  };\n\t\n\t  BN.prototype.redInvm = function redInvm() {\n\t    assert(this.red, 'redInvm works only with red numbers');\n\t    this.red._verify1(this);\n\t    return this.red.invm(this);\n\t  };\n\t\n\t  // Return negative clone of `this` % `red modulo`\n\t  BN.prototype.redNeg = function redNeg() {\n\t    assert(this.red, 'redNeg works only with red numbers');\n\t    this.red._verify1(this);\n\t    return this.red.neg(this);\n\t  };\n\t\n\t  BN.prototype.redPow = function redPow(num) {\n\t    assert(this.red && !num.red, 'redPow(normalNum)');\n\t    this.red._verify1(this);\n\t    return this.red.pow(this, num);\n\t  };\n\t\n\t  // Prime numbers with efficient reduction\n\t  var primes = {\n\t    k256: null,\n\t    p224: null,\n\t    p192: null,\n\t    p25519: null\n\t  };\n\t\n\t  // Pseudo-Mersenne prime\n\t  function MPrime(name, p) {\n\t    // P = 2 ^ N - K\n\t    this.name = name;\n\t    this.p = new BN(p, 16);\n\t    this.n = this.p.bitLength();\n\t    this.k = new BN(1).ishln(this.n).isub(this.p);\n\t\n\t    this.tmp = this._tmp();\n\t  }\n\t\n\t  MPrime.prototype._tmp = function _tmp() {\n\t    var tmp = new BN(null);\n\t    tmp.words = new Array(Math.ceil(this.n / 13));\n\t    return tmp;\n\t  };\n\t\n\t  MPrime.prototype.ireduce = function ireduce(num) {\n\t    // Assumes that `num` is less than `P^2`\n\t    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n\t    var r = num;\n\t    var rlen;\n\t\n\t    do {\n\t      this.split(r, this.tmp);\n\t      r = this.imulK(r);\n\t      r = r.iadd(this.tmp);\n\t      rlen = r.bitLength();\n\t    } while (rlen > this.n);\n\t\n\t    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n\t    if (cmp === 0) {\n\t      r.words[0] = 0;\n\t      r.length = 1;\n\t    } else if (cmp > 0) {\n\t      r.isub(this.p);\n\t    } else {\n\t      r.strip();\n\t    }\n\t\n\t    return r;\n\t  };\n\t\n\t  MPrime.prototype.split = function split(input, out) {\n\t    input.ishrn(this.n, 0, out);\n\t  };\n\t\n\t  MPrime.prototype.imulK = function imulK(num) {\n\t    return num.imul(this.k);\n\t  };\n\t\n\t  function K256() {\n\t    MPrime.call(this, 'k256', 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n\t  }\n\t  inherits(K256, MPrime);\n\t\n\t  K256.prototype.split = function split(input, output) {\n\t    // 256 = 9 * 26 + 22\n\t    var mask = 0x3fffff;\n\t\n\t    var outLen = Math.min(input.length, 9);\n\t    for (var i = 0; i < outLen; i++) {\n\t      output.words[i] = input.words[i];\n\t    }output.length = outLen;\n\t\n\t    if (input.length <= 9) {\n\t      input.words[0] = 0;\n\t      input.length = 1;\n\t      return;\n\t    }\n\t\n\t    // Shift by 9 limbs\n\t    var prev = input.words[9];\n\t    output.words[output.length++] = prev & mask;\n\t\n\t    for (var i = 10; i < input.length; i++) {\n\t      var next = input.words[i];\n\t      input.words[i - 10] = (next & mask) << 4 | prev >>> 22;\n\t      prev = next;\n\t    }\n\t    input.words[i - 10] = prev >>> 22;\n\t    input.length -= 9;\n\t  };\n\t\n\t  K256.prototype.imulK = function imulK(num) {\n\t    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n\t    num.words[num.length] = 0;\n\t    num.words[num.length + 1] = 0;\n\t    num.length += 2;\n\t\n\t    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n\t    var hi;\n\t    var lo = 0;\n\t    for (var i = 0; i < num.length; i++) {\n\t      var w = num.words[i];\n\t      hi = w * 0x40;\n\t      lo += w * 0x3d1;\n\t      hi += lo / 0x4000000 | 0;\n\t      lo &= 0x3ffffff;\n\t\n\t      num.words[i] = lo;\n\t\n\t      lo = hi;\n\t    }\n\t\n\t    // Fast length reduction\n\t    if (num.words[num.length - 1] === 0) {\n\t      num.length--;\n\t      if (num.words[num.length - 1] === 0) num.length--;\n\t    }\n\t    return num;\n\t  };\n\t\n\t  function P224() {\n\t    MPrime.call(this, 'p224', 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n\t  }\n\t  inherits(P224, MPrime);\n\t\n\t  function P192() {\n\t    MPrime.call(this, 'p192', 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n\t  }\n\t  inherits(P192, MPrime);\n\t\n\t  function P25519() {\n\t    // 2 ^ 255 - 19\n\t    MPrime.call(this, '25519', '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n\t  }\n\t  inherits(P25519, MPrime);\n\t\n\t  P25519.prototype.imulK = function imulK(num) {\n\t    // K = 0x13\n\t    var carry = 0;\n\t    for (var i = 0; i < num.length; i++) {\n\t      var hi = num.words[i] * 0x13 + carry;\n\t      var lo = hi & 0x3ffffff;\n\t      hi >>>= 26;\n\t\n\t      num.words[i] = lo;\n\t      carry = hi;\n\t    }\n\t    if (carry !== 0) num.words[num.length++] = carry;\n\t    return num;\n\t  };\n\t\n\t  // Exported mostly for testing purposes, use plain name instead\n\t  BN._prime = function prime(name) {\n\t    // Cached version of prime\n\t    if (primes[name]) return primes[name];\n\t\n\t    var prime;\n\t    if (name === 'k256') prime = new K256();else if (name === 'p224') prime = new P224();else if (name === 'p192') prime = new P192();else if (name === 'p25519') prime = new P25519();else throw new Error('Unknown prime ' + name);\n\t    primes[name] = prime;\n\t\n\t    return prime;\n\t  };\n\t\n\t  //\n\t  // Base reduction engine\n\t  //\n\t  function Red(m) {\n\t    if (typeof m === 'string') {\n\t      var prime = BN._prime(m);\n\t      this.m = prime.p;\n\t      this.prime = prime;\n\t    } else {\n\t      this.m = m;\n\t      this.prime = null;\n\t    }\n\t  }\n\t\n\t  Red.prototype._verify1 = function _verify1(a) {\n\t    assert(!a.sign, 'red works only with positives');\n\t    assert(a.red, 'red works only with red numbers');\n\t  };\n\t\n\t  Red.prototype._verify2 = function _verify2(a, b) {\n\t    assert(!a.sign && !b.sign, 'red works only with positives');\n\t    assert(a.red && a.red === b.red, 'red works only with red numbers');\n\t  };\n\t\n\t  Red.prototype.imod = function imod(a) {\n\t    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\t    return a.mod(this.m)._forceRed(this);\n\t  };\n\t\n\t  Red.prototype.neg = function neg(a) {\n\t    var r = a.clone();\n\t    r.sign = !r.sign;\n\t    return r.iadd(this.m)._forceRed(this);\n\t  };\n\t\n\t  Red.prototype.add = function add(a, b) {\n\t    this._verify2(a, b);\n\t\n\t    var res = a.add(b);\n\t    if (res.cmp(this.m) >= 0) res.isub(this.m);\n\t    return res._forceRed(this);\n\t  };\n\t\n\t  Red.prototype.iadd = function iadd(a, b) {\n\t    this._verify2(a, b);\n\t\n\t    var res = a.iadd(b);\n\t    if (res.cmp(this.m) >= 0) res.isub(this.m);\n\t    return res;\n\t  };\n\t\n\t  Red.prototype.sub = function sub(a, b) {\n\t    this._verify2(a, b);\n\t\n\t    var res = a.sub(b);\n\t    if (res.cmpn(0) < 0) res.iadd(this.m);\n\t    return res._forceRed(this);\n\t  };\n\t\n\t  Red.prototype.isub = function isub(a, b) {\n\t    this._verify2(a, b);\n\t\n\t    var res = a.isub(b);\n\t    if (res.cmpn(0) < 0) res.iadd(this.m);\n\t    return res;\n\t  };\n\t\n\t  Red.prototype.shl = function shl(a, num) {\n\t    this._verify1(a);\n\t    return this.imod(a.shln(num));\n\t  };\n\t\n\t  Red.prototype.imul = function imul(a, b) {\n\t    this._verify2(a, b);\n\t    return this.imod(a.imul(b));\n\t  };\n\t\n\t  Red.prototype.mul = function mul(a, b) {\n\t    this._verify2(a, b);\n\t    return this.imod(a.mul(b));\n\t  };\n\t\n\t  Red.prototype.isqr = function isqr(a) {\n\t    return this.imul(a, a);\n\t  };\n\t\n\t  Red.prototype.sqr = function sqr(a) {\n\t    return this.mul(a, a);\n\t  };\n\t\n\t  Red.prototype.sqrt = function sqrt(a) {\n\t    if (a.cmpn(0) === 0) return a.clone();\n\t\n\t    var mod3 = this.m.andln(3);\n\t    assert(mod3 % 2 === 1);\n\t\n\t    // Fast case\n\t    if (mod3 === 3) {\n\t      var pow = this.m.add(new BN(1)).ishrn(2);\n\t      var r = this.pow(a, pow);\n\t      return r;\n\t    }\n\t\n\t    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n\t    //\n\t    // Find Q and S, that Q * 2 ^ S = (P - 1)\n\t    var q = this.m.subn(1);\n\t    var s = 0;\n\t    while (q.cmpn(0) !== 0 && q.andln(1) === 0) {\n\t      s++;\n\t      q.ishrn(1);\n\t    }\n\t    assert(q.cmpn(0) !== 0);\n\t\n\t    var one = new BN(1).toRed(this);\n\t    var nOne = one.redNeg();\n\t\n\t    // Find quadratic non-residue\n\t    // NOTE: Max is such because of generalized Riemann hypothesis.\n\t    var lpow = this.m.subn(1).ishrn(1);\n\t    var z = this.m.bitLength();\n\t    z = new BN(2 * z * z).toRed(this);\n\t    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n\t      z.redIAdd(nOne);\n\t    }var c = this.pow(z, q);\n\t    var r = this.pow(a, q.addn(1).ishrn(1));\n\t    var t = this.pow(a, q);\n\t    var m = s;\n\t    while (t.cmp(one) !== 0) {\n\t      var tmp = t;\n\t      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n\t        tmp = tmp.redSqr();\n\t      }assert(i < m);\n\t      var b = this.pow(c, new BN(1).ishln(m - i - 1));\n\t\n\t      r = r.redMul(b);\n\t      c = b.redSqr();\n\t      t = t.redMul(c);\n\t      m = i;\n\t    }\n\t\n\t    return r;\n\t  };\n\t\n\t  Red.prototype.invm = function invm(a) {\n\t    var inv = a._invmp(this.m);\n\t    if (inv.sign) {\n\t      inv.sign = false;\n\t      return this.imod(inv).redNeg();\n\t    } else {\n\t      return this.imod(inv);\n\t    }\n\t  };\n\t\n\t  Red.prototype.pow = function pow(a, num) {\n\t    var w = [];\n\t\n\t    if (num.cmpn(0) === 0) return new BN(1);\n\t\n\t    var q = num.clone();\n\t\n\t    while (q.cmpn(0) !== 0) {\n\t      w.push(q.andln(1));\n\t      q.ishrn(1);\n\t    }\n\t\n\t    // Skip leading zeroes\n\t    var res = a;\n\t    for (var i = 0; i < w.length; i++, res = this.sqr(res)) {\n\t      if (w[i] !== 0) break;\n\t    }if (++i < w.length) {\n\t      for (var q = this.sqr(res); i < w.length; i++, q = this.sqr(q)) {\n\t        if (w[i] === 0) continue;\n\t        res = this.mul(res, q);\n\t      }\n\t    }\n\t\n\t    return res;\n\t  };\n\t\n\t  Red.prototype.convertTo = function convertTo(num) {\n\t    var r = num.mod(this.m);\n\t    if (r === num) return r.clone();else return r;\n\t  };\n\t\n\t  Red.prototype.convertFrom = function convertFrom(num) {\n\t    var res = num.clone();\n\t    res.red = null;\n\t    return res;\n\t  };\n\t\n\t  //\n\t  // Montgomery method engine\n\t  //\n\t\n\t  BN.mont = function mont(num) {\n\t    return new Mont(num);\n\t  };\n\t\n\t  function Mont(m) {\n\t    Red.call(this, m);\n\t\n\t    this.shift = this.m.bitLength();\n\t    if (this.shift % 26 !== 0) this.shift += 26 - this.shift % 26;\n\t    this.r = new BN(1).ishln(this.shift);\n\t    this.r2 = this.imod(this.r.sqr());\n\t    this.rinv = this.r._invmp(this.m);\n\t\n\t    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n\t    this.minv.sign = true;\n\t    this.minv = this.minv.mod(this.r);\n\t  }\n\t  inherits(Mont, Red);\n\t\n\t  Mont.prototype.convertTo = function convertTo(num) {\n\t    return this.imod(num.shln(this.shift));\n\t  };\n\t\n\t  Mont.prototype.convertFrom = function convertFrom(num) {\n\t    var r = this.imod(num.mul(this.rinv));\n\t    r.red = null;\n\t    return r;\n\t  };\n\t\n\t  Mont.prototype.imul = function imul(a, b) {\n\t    if (a.cmpn(0) === 0 || b.cmpn(0) === 0) {\n\t      a.words[0] = 0;\n\t      a.length = 1;\n\t      return a;\n\t    }\n\t\n\t    var t = a.imul(b);\n\t    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n\t    var u = t.isub(c).ishrn(this.shift);\n\t    var res = u;\n\t    if (u.cmp(this.m) >= 0) res = u.isub(this.m);else if (u.cmpn(0) < 0) res = u.iadd(this.m);\n\t\n\t    return res._forceRed(this);\n\t  };\n\t\n\t  Mont.prototype.mul = function mul(a, b) {\n\t    if (a.cmpn(0) === 0 || b.cmpn(0) === 0) return new BN(0)._forceRed(this);\n\t\n\t    var t = a.mul(b);\n\t    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n\t    var u = t.isub(c).ishrn(this.shift);\n\t    var res = u;\n\t    if (u.cmp(this.m) >= 0) res = u.isub(this.m);else if (u.cmpn(0) < 0) res = u.iadd(this.m);\n\t\n\t    return res._forceRed(this);\n\t  };\n\t\n\t  Mont.prototype.invm = function invm(a) {\n\t    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n\t    var res = this.imod(a._invmp(this.m).mul(this.r2));\n\t    return res._forceRed(this);\n\t  };\n\t})(typeof module === 'undefined' || module, undefined);\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(294)(module)))\n\n/***/ },\n\n/***/ 1460:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar asn1 = __webpack_require__(1458);\n\tvar inherits = __webpack_require__(821);\n\t\n\tvar api = exports;\n\t\n\tapi.define = function define(name, body) {\n\t  return new Entity(name, body);\n\t};\n\t\n\tfunction Entity(name, body) {\n\t  this.name = name;\n\t  this.body = body;\n\t\n\t  this.decoders = {};\n\t  this.encoders = {};\n\t};\n\t\n\tEntity.prototype._createNamed = function createNamed(base) {\n\t  var named;\n\t  try {\n\t    named = __webpack_require__(918).runInThisContext('(function ' + this.name + '(entity) {\\n' + '  this._initNamed(entity);\\n' + '})');\n\t  } catch (e) {\n\t    named = function named(entity) {\n\t      this._initNamed(entity);\n\t    };\n\t  }\n\t  inherits(named, base);\n\t  named.prototype._initNamed = function initnamed(entity) {\n\t    base.call(this, entity);\n\t  };\n\t\n\t  return new named(this);\n\t};\n\t\n\tEntity.prototype._getDecoder = function _getDecoder(enc) {\n\t  // Lazily create decoder\n\t  if (!this.decoders.hasOwnProperty(enc)) this.decoders[enc] = this._createNamed(asn1.decoders[enc]);\n\t  return this.decoders[enc];\n\t};\n\t\n\tEntity.prototype.decode = function decode(data, enc, options) {\n\t  return this._getDecoder(enc).decode(data, options);\n\t};\n\t\n\tEntity.prototype._getEncoder = function _getEncoder(enc) {\n\t  // Lazily create encoder\n\t  if (!this.encoders.hasOwnProperty(enc)) this.encoders[enc] = this._createNamed(asn1.encoders[enc]);\n\t  return this.encoders[enc];\n\t};\n\t\n\tEntity.prototype.encode = function encode(data, enc, /* internal */reporter) {\n\t  return this._getEncoder(enc).encode(data, reporter);\n\t};\n\n/***/ },\n\n/***/ 1461:\n[2497, 1462, 1463, 1463, 1464],\n\n/***/ 1462:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar inherits = __webpack_require__(821);\n\t\n\tfunction Reporter(options) {\n\t  this._reporterState = {\n\t    obj: null,\n\t    path: [],\n\t    options: options || {},\n\t    errors: []\n\t  };\n\t}\n\texports.Reporter = Reporter;\n\t\n\tReporter.prototype.isError = function isError(obj) {\n\t  return obj instanceof ReporterError;\n\t};\n\t\n\tReporter.prototype.save = function save() {\n\t  var state = this._reporterState;\n\t\n\t  return { obj: state.obj, pathLen: state.path.length };\n\t};\n\t\n\tReporter.prototype.restore = function restore(data) {\n\t  var state = this._reporterState;\n\t\n\t  state.obj = data.obj;\n\t  state.path = state.path.slice(0, data.pathLen);\n\t};\n\t\n\tReporter.prototype.enterKey = function enterKey(key) {\n\t  return this._reporterState.path.push(key);\n\t};\n\t\n\tReporter.prototype.leaveKey = function leaveKey(index, key, value) {\n\t  var state = this._reporterState;\n\t\n\t  state.path = state.path.slice(0, index - 1);\n\t  if (state.obj !== null) state.obj[key] = value;\n\t};\n\t\n\tReporter.prototype.enterObject = function enterObject() {\n\t  var state = this._reporterState;\n\t\n\t  var prev = state.obj;\n\t  state.obj = {};\n\t  return prev;\n\t};\n\t\n\tReporter.prototype.leaveObject = function leaveObject(prev) {\n\t  var state = this._reporterState;\n\t\n\t  var now = state.obj;\n\t  state.obj = prev;\n\t  return now;\n\t};\n\t\n\tReporter.prototype.error = function error(msg) {\n\t  var err;\n\t  var state = this._reporterState;\n\t\n\t  var inherited = msg instanceof ReporterError;\n\t  if (inherited) {\n\t    err = msg;\n\t  } else {\n\t    err = new ReporterError(state.path.map(function (elem) {\n\t      return '[' + JSON.stringify(elem) + ']';\n\t    }).join(''), msg.message || msg, msg.stack);\n\t  }\n\t\n\t  if (!state.options.partial) throw err;\n\t\n\t  if (!inherited) state.errors.push(err);\n\t\n\t  return err;\n\t};\n\t\n\tReporter.prototype.wrapResult = function wrapResult(result) {\n\t  var state = this._reporterState;\n\t  if (!state.options.partial) return result;\n\t\n\t  return {\n\t    result: this.isError(result) ? null : result,\n\t    errors: state.errors\n\t  };\n\t};\n\t\n\tfunction ReporterError(path, msg) {\n\t  this.path = path;\n\t  this.rethrow(msg);\n\t};\n\tinherits(ReporterError, Error);\n\t\n\tReporterError.prototype.rethrow = function rethrow(msg) {\n\t  this.message = msg + ' at: ' + (this.path || '(shallow)');\n\t  Error.captureStackTrace(this, ReporterError);\n\t\n\t  return this;\n\t};\n\n/***/ },\n\n/***/ 1463:\n[2498, 1461],\n\n/***/ 1464:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar Reporter = __webpack_require__(1461).Reporter;\n\tvar EncoderBuffer = __webpack_require__(1461).EncoderBuffer;\n\tvar assert = __webpack_require__(874);\n\t\n\t// Supported tags\n\tvar tags = ['seq', 'seqof', 'set', 'setof', 'octstr', 'bitstr', 'objid', 'bool', 'gentime', 'utctime', 'null_', 'enum', 'int', 'ia5str', 'utf8str'];\n\t\n\t// Public methods list\n\tvar methods = ['key', 'obj', 'use', 'optional', 'explicit', 'implicit', 'def', 'choice', 'any'].concat(tags);\n\t\n\t// Overrided methods list\n\tvar overrided = ['_peekTag', '_decodeTag', '_use', '_decodeStr', '_decodeObjid', '_decodeTime', '_decodeNull', '_decodeInt', '_decodeBool', '_decodeList', '_encodeComposite', '_encodeStr', '_encodeObjid', '_encodeTime', '_encodeNull', '_encodeInt', '_encodeBool'];\n\t\n\tfunction Node(enc, parent) {\n\t  var state = {};\n\t  this._baseState = state;\n\t\n\t  state.enc = enc;\n\t\n\t  state.parent = parent || null;\n\t  state.children = null;\n\t\n\t  // State\n\t  state.tag = null;\n\t  state.args = null;\n\t  state.reverseArgs = null;\n\t  state.choice = null;\n\t  state.optional = false;\n\t  state.any = false;\n\t  state.obj = false;\n\t  state.use = null;\n\t  state.useDecoder = null;\n\t  state.key = null;\n\t  state['default'] = null;\n\t  state.explicit = null;\n\t  state.implicit = null;\n\t\n\t  // Should create new instance on each method\n\t  if (!state.parent) {\n\t    state.children = [];\n\t    this._wrap();\n\t  }\n\t}\n\tmodule.exports = Node;\n\t\n\tvar stateProps = ['enc', 'parent', 'children', 'tag', 'args', 'reverseArgs', 'choice', 'optional', 'any', 'obj', 'use', 'alteredUse', 'key', 'default', 'explicit', 'implicit'];\n\t\n\tNode.prototype.clone = function clone() {\n\t  var state = this._baseState;\n\t  var cstate = {};\n\t  stateProps.forEach(function (prop) {\n\t    cstate[prop] = state[prop];\n\t  });\n\t  var res = new this.constructor(cstate.parent);\n\t  res._baseState = cstate;\n\t  return res;\n\t};\n\t\n\tNode.prototype._wrap = function wrap() {\n\t  var state = this._baseState;\n\t  methods.forEach(function (method) {\n\t    this[method] = function _wrappedMethod() {\n\t      var clone = new this.constructor(this);\n\t      state.children.push(clone);\n\t      return clone[method].apply(clone, arguments);\n\t    };\n\t  }, this);\n\t};\n\t\n\tNode.prototype._init = function init(body) {\n\t  var state = this._baseState;\n\t\n\t  assert(state.parent === null);\n\t  body.call(this);\n\t\n\t  // Filter children\n\t  state.children = state.children.filter(function (child) {\n\t    return child._baseState.parent === this;\n\t  }, this);\n\t  assert.equal(state.children.length, 1, 'Root node can have only one child');\n\t};\n\t\n\tNode.prototype._useArgs = function useArgs(args) {\n\t  var state = this._baseState;\n\t\n\t  // Filter children and args\n\t  var children = args.filter(function (arg) {\n\t    return arg instanceof this.constructor;\n\t  }, this);\n\t  args = args.filter(function (arg) {\n\t    return !(arg instanceof this.constructor);\n\t  }, this);\n\t\n\t  if (children.length !== 0) {\n\t    assert(state.children === null);\n\t    state.children = children;\n\t\n\t    // Replace parent to maintain backward link\n\t    children.forEach(function (child) {\n\t      child._baseState.parent = this;\n\t    }, this);\n\t  }\n\t  if (args.length !== 0) {\n\t    assert(state.args === null);\n\t    state.args = args;\n\t    state.reverseArgs = args.map(function (arg) {\n\t      if ((typeof arg === 'undefined' ? 'undefined' : _typeof(arg)) !== 'object' || arg.constructor !== Object) return arg;\n\t\n\t      var res = {};\n\t      Object.keys(arg).forEach(function (key) {\n\t        if (key == (key | 0)) key |= 0;\n\t        var value = arg[key];\n\t        res[value] = key;\n\t      });\n\t      return res;\n\t    });\n\t  }\n\t};\n\t\n\t//\n\t// Overrided methods\n\t//\n\t\n\toverrided.forEach(function (method) {\n\t  Node.prototype[method] = function _overrided() {\n\t    var state = this._baseState;\n\t    throw new Error(method + ' not implemented for encoding: ' + state.enc);\n\t  };\n\t});\n\t\n\t//\n\t// Public methods\n\t//\n\t\n\ttags.forEach(function (tag) {\n\t  Node.prototype[tag] = function _tagMethod() {\n\t    var state = this._baseState;\n\t    var args = Array.prototype.slice.call(arguments);\n\t\n\t    assert(state.tag === null);\n\t    state.tag = tag;\n\t\n\t    this._useArgs(args);\n\t\n\t    return this;\n\t  };\n\t});\n\t\n\tNode.prototype.use = function use(item) {\n\t  var state = this._baseState;\n\t\n\t  assert(state.use === null);\n\t  state.use = item;\n\t\n\t  return this;\n\t};\n\t\n\tNode.prototype.optional = function optional() {\n\t  var state = this._baseState;\n\t\n\t  state.optional = true;\n\t\n\t  return this;\n\t};\n\t\n\tNode.prototype.def = function def(val) {\n\t  var state = this._baseState;\n\t\n\t  assert(state['default'] === null);\n\t  state['default'] = val;\n\t  state.optional = true;\n\t\n\t  return this;\n\t};\n\t\n\tNode.prototype.explicit = function explicit(num) {\n\t  var state = this._baseState;\n\t\n\t  assert(state.explicit === null && state.implicit === null);\n\t  state.explicit = num;\n\t\n\t  return this;\n\t};\n\t\n\tNode.prototype.implicit = function implicit(num) {\n\t  var state = this._baseState;\n\t\n\t  assert(state.explicit === null && state.implicit === null);\n\t  state.implicit = num;\n\t\n\t  return this;\n\t};\n\t\n\tNode.prototype.obj = function obj() {\n\t  var state = this._baseState;\n\t  var args = Array.prototype.slice.call(arguments);\n\t\n\t  state.obj = true;\n\t\n\t  if (args.length !== 0) this._useArgs(args);\n\t\n\t  return this;\n\t};\n\t\n\tNode.prototype.key = function key(newKey) {\n\t  var state = this._baseState;\n\t\n\t  assert(state.key === null);\n\t  state.key = newKey;\n\t\n\t  return this;\n\t};\n\t\n\tNode.prototype.any = function any() {\n\t  var state = this._baseState;\n\t\n\t  state.any = true;\n\t\n\t  return this;\n\t};\n\t\n\tNode.prototype.choice = function choice(obj) {\n\t  var state = this._baseState;\n\t\n\t  assert(state.choice === null);\n\t  state.choice = obj;\n\t  this._useArgs(Object.keys(obj).map(function (key) {\n\t    return obj[key];\n\t  }));\n\t\n\t  return this;\n\t};\n\t\n\t//\n\t// Decoding\n\t//\n\t\n\tNode.prototype._decode = function decode(input) {\n\t  var state = this._baseState;\n\t\n\t  // Decode root node\n\t  if (state.parent === null) return input.wrapResult(state.children[0]._decode(input));\n\t\n\t  var result = state['default'];\n\t  var present = true;\n\t\n\t  var prevKey;\n\t  if (state.key !== null) prevKey = input.enterKey(state.key);\n\t\n\t  // Check if tag is there\n\t  if (state.optional) {\n\t    var tag = null;\n\t    if (state.explicit !== null) tag = state.explicit;else if (state.implicit !== null) tag = state.implicit;else if (state.tag !== null) tag = state.tag;\n\t\n\t    if (tag === null && !state.any) {\n\t      // Trial and Error\n\t      var save = input.save();\n\t      try {\n\t        if (state.choice === null) this._decodeGeneric(state.tag, input);else this._decodeChoice(input);\n\t        present = true;\n\t      } catch (e) {\n\t        present = false;\n\t      }\n\t      input.restore(save);\n\t    } else {\n\t      present = this._peekTag(input, tag, state.any);\n\t\n\t      if (input.isError(present)) return present;\n\t    }\n\t  }\n\t\n\t  // Push object on stack\n\t  var prevObj;\n\t  if (state.obj && present) prevObj = input.enterObject();\n\t\n\t  if (present) {\n\t    // Unwrap explicit values\n\t    if (state.explicit !== null) {\n\t      var explicit = this._decodeTag(input, state.explicit);\n\t      if (input.isError(explicit)) return explicit;\n\t      input = explicit;\n\t    }\n\t\n\t    // Unwrap implicit and normal values\n\t    if (state.use === null && state.choice === null) {\n\t      if (state.any) var save = input.save();\n\t      var body = this._decodeTag(input, state.implicit !== null ? state.implicit : state.tag, state.any);\n\t      if (input.isError(body)) return body;\n\t\n\t      if (state.any) result = input.raw(save);else input = body;\n\t    }\n\t\n\t    // Select proper method for tag\n\t    if (state.any) result = result;else if (state.choice === null) result = this._decodeGeneric(state.tag, input);else result = this._decodeChoice(input);\n\t\n\t    if (input.isError(result)) return result;\n\t\n\t    // Decode children\n\t    if (!state.any && state.choice === null && state.children !== null) {\n\t      var fail = state.children.some(function decodeChildren(child) {\n\t        // NOTE: We are ignoring errors here, to let parser continue with other\n\t        // parts of encoded data\n\t        child._decode(input);\n\t      });\n\t      if (fail) return err;\n\t    }\n\t  }\n\t\n\t  // Pop object\n\t  if (state.obj && present) result = input.leaveObject(prevObj);\n\t\n\t  // Set key\n\t  if (state.key !== null && (result !== null || present === true)) input.leaveKey(prevKey, state.key, result);\n\t\n\t  return result;\n\t};\n\t\n\tNode.prototype._decodeGeneric = function decodeGeneric(tag, input) {\n\t  var state = this._baseState;\n\t\n\t  if (tag === 'seq' || tag === 'set') return null;\n\t  if (tag === 'seqof' || tag === 'setof') return this._decodeList(input, tag, state.args[0]);else if (tag === 'octstr' || tag === 'bitstr') return this._decodeStr(input, tag);else if (tag === 'ia5str' || tag === 'utf8str') return this._decodeStr(input, tag);else if (tag === 'objid' && state.args) return this._decodeObjid(input, state.args[0], state.args[1]);else if (tag === 'objid') return this._decodeObjid(input, null, null);else if (tag === 'gentime' || tag === 'utctime') return this._decodeTime(input, tag);else if (tag === 'null_') return this._decodeNull(input);else if (tag === 'bool') return this._decodeBool(input);else if (tag === 'int' || tag === 'enum') return this._decodeInt(input, state.args && state.args[0]);else if (state.use !== null) return this._getUse(state.use, input._reporterState.obj)._decode(input);else return input.error('unknown tag: ' + tag);\n\t\n\t  return null;\n\t};\n\t\n\tNode.prototype._getUse = function _getUse(entity, obj) {\n\t\n\t  var state = this._baseState;\n\t  // Create altered use decoder if implicit is set\n\t  state.useDecoder = this._use(entity, obj);\n\t  assert(state.useDecoder._baseState.parent === null);\n\t  state.useDecoder = state.useDecoder._baseState.children[0];\n\t  if (state.implicit !== state.useDecoder._baseState.implicit) {\n\t    state.useDecoder = state.useDecoder.clone();\n\t    state.useDecoder._baseState.implicit = state.implicit;\n\t  }\n\t  return state.useDecoder;\n\t};\n\t\n\tNode.prototype._decodeChoice = function decodeChoice(input) {\n\t  var state = this._baseState;\n\t  var result = null;\n\t  var match = false;\n\t\n\t  Object.keys(state.choice).some(function (key) {\n\t    var save = input.save();\n\t    var node = state.choice[key];\n\t    try {\n\t      var value = node._decode(input);\n\t      if (input.isError(value)) return false;\n\t\n\t      result = { type: key, value: value };\n\t      match = true;\n\t    } catch (e) {\n\t      input.restore(save);\n\t      return false;\n\t    }\n\t    return true;\n\t  }, this);\n\t\n\t  if (!match) return input.error('Choice not matched');\n\t\n\t  return result;\n\t};\n\t\n\t//\n\t// Encoding\n\t//\n\t\n\tNode.prototype._createEncoderBuffer = function createEncoderBuffer(data) {\n\t  return new EncoderBuffer(data, this.reporter);\n\t};\n\t\n\tNode.prototype._encode = function encode(data, reporter, parent) {\n\t  var state = this._baseState;\n\t  if (state['default'] !== null && state['default'] === data) return;\n\t\n\t  var result = this._encodeValue(data, reporter, parent);\n\t  if (result === undefined) return;\n\t\n\t  if (this._skipDefault(result, reporter, parent)) return;\n\t\n\t  return result;\n\t};\n\t\n\tNode.prototype._encodeValue = function encode(data, reporter, parent) {\n\t  var state = this._baseState;\n\t\n\t  // Decode root node\n\t  if (state.parent === null) return state.children[0]._encode(data, reporter || new Reporter());\n\t\n\t  var result = null;\n\t  var present = true;\n\t\n\t  // Set reporter to share it with a child class\n\t  this.reporter = reporter;\n\t\n\t  // Check if data is there\n\t  if (state.optional && data === undefined) {\n\t    if (state['default'] !== null) data = state['default'];else return;\n\t  }\n\t\n\t  // For error reporting\n\t  var prevKey;\n\t\n\t  // Encode children first\n\t  var content = null;\n\t  var primitive = false;\n\t  if (state.any) {\n\t    // Anything that was given is translated to buffer\n\t    result = this._createEncoderBuffer(data);\n\t  } else if (state.choice) {\n\t    result = this._encodeChoice(data, reporter);\n\t  } else if (state.children) {\n\t    content = state.children.map(function (child) {\n\t      if (child._baseState.tag === 'null_') return child._encode(null, reporter, data);\n\t\n\t      if (child._baseState.key === null) return reporter.error('Child should have a key');\n\t      var prevKey = reporter.enterKey(child._baseState.key);\n\t\n\t      if ((typeof data === 'undefined' ? 'undefined' : _typeof(data)) !== 'object') return reporter.error('Child expected, but input is not object');\n\t\n\t      var res = child._encode(data[child._baseState.key], reporter, data);\n\t      reporter.leaveKey(prevKey);\n\t\n\t      return res;\n\t    }, this).filter(function (child) {\n\t      return child;\n\t    });\n\t\n\t    content = this._createEncoderBuffer(content);\n\t  } else {\n\t    if (state.tag === 'seqof' || state.tag === 'setof') {\n\t      // TODO(indutny): this should be thrown on DSL level\n\t      if (!(state.args && state.args.length === 1)) return reporter.error('Too many args for : ' + state.tag);\n\t\n\t      if (!Array.isArray(data)) return reporter.error('seqof/setof, but data is not Array');\n\t\n\t      var child = this.clone();\n\t      child._baseState.implicit = null;\n\t      content = this._createEncoderBuffer(data.map(function (item) {\n\t        var state = this._baseState;\n\t\n\t        return this._getUse(state.args[0], data)._encode(item, reporter);\n\t      }, child));\n\t    } else if (state.use !== null) {\n\t      result = this._getUse(state.use, parent)._encode(data, reporter);\n\t    } else {\n\t      content = this._encodePrimitive(state.tag, data);\n\t      primitive = true;\n\t    }\n\t  }\n\t\n\t  // Encode data itself\n\t  var result;\n\t  if (!state.any && state.choice === null) {\n\t    var tag = state.implicit !== null ? state.implicit : state.tag;\n\t    var cls = state.implicit === null ? 'universal' : 'context';\n\t\n\t    if (tag === null) {\n\t      if (state.use === null) reporter.error('Tag could be ommited only for .use()');\n\t    } else {\n\t      if (state.use === null) result = this._encodeComposite(tag, primitive, cls, content);\n\t    }\n\t  }\n\t\n\t  // Wrap in explicit\n\t  if (state.explicit !== null) result = this._encodeComposite(state.explicit, false, 'context', result);\n\t\n\t  return result;\n\t};\n\t\n\tNode.prototype._encodeChoice = function encodeChoice(data, reporter) {\n\t  var state = this._baseState;\n\t\n\t  var node = state.choice[data.type];\n\t  if (!node) {\n\t    assert(false, data.type + ' not found in ' + JSON.stringify(Object.keys(state.choice)));\n\t  }\n\t  return node._encode(data.value, reporter);\n\t};\n\t\n\tNode.prototype._encodePrimitive = function encodePrimitive(tag, data) {\n\t  var state = this._baseState;\n\t\n\t  if (tag === 'octstr' || tag === 'bitstr' || tag === 'ia5str') return this._encodeStr(data, tag);else if (tag === 'utf8str') return this._encodeStr(data, tag);else if (tag === 'objid' && state.args) return this._encodeObjid(data, state.reverseArgs[0], state.args[1]);else if (tag === 'objid') return this._encodeObjid(data, null, null);else if (tag === 'gentime' || tag === 'utctime') return this._encodeTime(data, tag);else if (tag === 'null_') return this._encodeNull();else if (tag === 'int' || tag === 'enum') return this._encodeInt(data, state.args && state.reverseArgs[0]);else if (tag === 'bool') return this._encodeBool(data);else throw new Error('Unsupported tag: ' + tag);\n\t};\n\n/***/ },\n\n/***/ 1465:\n[2499, 1466],\n\n/***/ 1466:\n[2500, 1465],\n\n/***/ 1467:\n[2501, 1468, 1469],\n\n/***/ 1468:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar inherits = __webpack_require__(821);\n\t\n\tvar asn1 = __webpack_require__(1458);\n\tvar base = asn1.base;\n\tvar bignum = asn1.bignum;\n\t\n\t// Import DER constants\n\tvar der = asn1.constants.der;\n\t\n\tfunction DERDecoder(entity) {\n\t  this.enc = 'der';\n\t  this.name = entity.name;\n\t  this.entity = entity;\n\t\n\t  // Construct base tree\n\t  this.tree = new DERNode();\n\t  this.tree._init(entity.body);\n\t};\n\tmodule.exports = DERDecoder;\n\t\n\tDERDecoder.prototype.decode = function decode(data, options) {\n\t  if (!(data instanceof base.DecoderBuffer)) data = new base.DecoderBuffer(data, options);\n\t\n\t  return this.tree._decode(data, options);\n\t};\n\t\n\t// Tree methods\n\t\n\tfunction DERNode(parent) {\n\t  base.Node.call(this, 'der', parent);\n\t}\n\tinherits(DERNode, base.Node);\n\t\n\tDERNode.prototype._peekTag = function peekTag(buffer, tag, any) {\n\t  if (buffer.isEmpty()) return false;\n\t\n\t  var state = buffer.save();\n\t  var decodedTag = derDecodeTag(buffer, 'Failed to peek tag: \"' + tag + '\"');\n\t  if (buffer.isError(decodedTag)) return decodedTag;\n\t\n\t  buffer.restore(state);\n\t\n\t  return decodedTag.tag === tag || decodedTag.tagStr === tag || any;\n\t};\n\t\n\tDERNode.prototype._decodeTag = function decodeTag(buffer, tag, any) {\n\t  var decodedTag = derDecodeTag(buffer, 'Failed to decode tag of \"' + tag + '\"');\n\t  if (buffer.isError(decodedTag)) return decodedTag;\n\t\n\t  var len = derDecodeLen(buffer, decodedTag.primitive, 'Failed to get length of \"' + tag + '\"');\n\t\n\t  // Failure\n\t  if (buffer.isError(len)) return len;\n\t\n\t  if (!any && decodedTag.tag !== tag && decodedTag.tagStr !== tag && decodedTag.tagStr + 'of' !== tag) {\n\t    return buffer.error('Failed to match tag: \"' + tag + '\"');\n\t  }\n\t\n\t  if (decodedTag.primitive || len !== null) return buffer.skip(len, 'Failed to match body of: \"' + tag + '\"');\n\t\n\t  // Indefinite length... find END tag\n\t  var state = buffer.save();\n\t  var res = this._skipUntilEnd(buffer, 'Failed to skip indefinite length body: \"' + this.tag + '\"');\n\t  if (buffer.isError(res)) return res;\n\t\n\t  len = buffer.offset - state.offset;\n\t  buffer.restore(state);\n\t  return buffer.skip(len, 'Failed to match body of: \"' + tag + '\"');\n\t};\n\t\n\tDERNode.prototype._skipUntilEnd = function skipUntilEnd(buffer, fail) {\n\t  while (true) {\n\t    var tag = derDecodeTag(buffer, fail);\n\t    if (buffer.isError(tag)) return tag;\n\t    var len = derDecodeLen(buffer, tag.primitive, fail);\n\t    if (buffer.isError(len)) return len;\n\t\n\t    var res;\n\t    if (tag.primitive || len !== null) res = buffer.skip(len);else res = this._skipUntilEnd(buffer, fail);\n\t\n\t    // Failure\n\t    if (buffer.isError(res)) return res;\n\t\n\t    if (tag.tagStr === 'end') break;\n\t  }\n\t};\n\t\n\tDERNode.prototype._decodeList = function decodeList(buffer, tag, decoder) {\n\t  var result = [];\n\t  while (!buffer.isEmpty()) {\n\t    var possibleEnd = this._peekTag(buffer, 'end');\n\t    if (buffer.isError(possibleEnd)) return possibleEnd;\n\t\n\t    var res = decoder.decode(buffer, 'der');\n\t    if (buffer.isError(res) && possibleEnd) break;\n\t    result.push(res);\n\t  }\n\t  return result;\n\t};\n\t\n\tDERNode.prototype._decodeStr = function decodeStr(buffer, tag) {\n\t  if (tag === 'octstr') {\n\t    return buffer.raw();\n\t  } else if (tag === 'bitstr') {\n\t    var unused = buffer.readUInt8();\n\t    if (buffer.isError(unused)) return unused;\n\t\n\t    return { unused: unused, data: buffer.raw() };\n\t  } else if (tag === 'ia5str' || tag === 'utf8str') {\n\t    return buffer.raw().toString();\n\t  } else {\n\t    return this.error('Decoding of string type: ' + tag + ' unsupported');\n\t  }\n\t};\n\t\n\tDERNode.prototype._decodeObjid = function decodeObjid(buffer, values, relative) {\n\t  var identifiers = [];\n\t  var ident = 0;\n\t  while (!buffer.isEmpty()) {\n\t    var subident = buffer.readUInt8();\n\t    ident <<= 7;\n\t    ident |= subident & 0x7f;\n\t    if ((subident & 0x80) === 0) {\n\t      identifiers.push(ident);\n\t      ident = 0;\n\t    }\n\t  }\n\t  if (subident & 0x80) identifiers.push(ident);\n\t\n\t  var first = identifiers[0] / 40 | 0;\n\t  var second = identifiers[0] % 40;\n\t\n\t  if (relative) result = identifiers;else result = [first, second].concat(identifiers.slice(1));\n\t\n\t  if (values) result = values[result.join(' ')];\n\t\n\t  return result;\n\t};\n\t\n\tDERNode.prototype._decodeTime = function decodeTime(buffer, tag) {\n\t  var str = buffer.raw().toString();\n\t  if (tag === 'gentime') {\n\t    var year = str.slice(0, 4) | 0;\n\t    var mon = str.slice(4, 6) | 0;\n\t    var day = str.slice(6, 8) | 0;\n\t    var hour = str.slice(8, 10) | 0;\n\t    var min = str.slice(10, 12) | 0;\n\t    var sec = str.slice(12, 14) | 0;\n\t  } else if (tag === 'utctime') {\n\t    var year = str.slice(0, 2) | 0;\n\t    var mon = str.slice(2, 4) | 0;\n\t    var day = str.slice(4, 6) | 0;\n\t    var hour = str.slice(6, 8) | 0;\n\t    var min = str.slice(8, 10) | 0;\n\t    var sec = str.slice(10, 12) | 0;\n\t    if (year < 70) year = 2000 + year;else year = 1900 + year;\n\t  } else {\n\t    return this.error('Decoding ' + tag + ' time is not supported yet');\n\t  }\n\t\n\t  return Date.UTC(year, mon - 1, day, hour, min, sec, 0);\n\t};\n\t\n\tDERNode.prototype._decodeNull = function decodeNull(buffer) {\n\t  return null;\n\t};\n\t\n\tDERNode.prototype._decodeBool = function decodeBool(buffer) {\n\t  var res = buffer.readUInt8();\n\t  if (buffer.isError(res)) return res;else return res !== 0;\n\t};\n\t\n\tDERNode.prototype._decodeInt = function decodeInt(buffer, values) {\n\t  // Bigint, return as it is (assume big endian)\n\t  var raw = buffer.raw();\n\t  var res = new bignum(raw);\n\t\n\t  if (values) res = values[res.toString(10)] || res;\n\t\n\t  return res;\n\t};\n\t\n\tDERNode.prototype._use = function use(entity, obj) {\n\t  if (typeof entity === 'function') entity = entity(obj);\n\t  return entity._getDecoder('der').tree;\n\t};\n\t\n\t// Utility methods\n\t\n\tfunction derDecodeTag(buf, fail) {\n\t  var tag = buf.readUInt8(fail);\n\t  if (buf.isError(tag)) return tag;\n\t\n\t  var cls = der.tagClass[tag >> 6];\n\t  var primitive = (tag & 0x20) === 0;\n\t\n\t  // Multi-octet tag - load\n\t  if ((tag & 0x1f) === 0x1f) {\n\t    var oct = tag;\n\t    tag = 0;\n\t    while ((oct & 0x80) === 0x80) {\n\t      oct = buf.readUInt8(fail);\n\t      if (buf.isError(oct)) return oct;\n\t\n\t      tag <<= 7;\n\t      tag |= oct & 0x7f;\n\t    }\n\t  } else {\n\t    tag &= 0x1f;\n\t  }\n\t  var tagStr = der.tag[tag];\n\t\n\t  return {\n\t    cls: cls,\n\t    primitive: primitive,\n\t    tag: tag,\n\t    tagStr: tagStr\n\t  };\n\t}\n\t\n\tfunction derDecodeLen(buf, primitive, fail) {\n\t  var len = buf.readUInt8(fail);\n\t  if (buf.isError(len)) return len;\n\t\n\t  // Indefinite form\n\t  if (!primitive && len === 0x80) return null;\n\t\n\t  // Definite form\n\t  if ((len & 0x80) === 0) {\n\t    // Short form\n\t    return len;\n\t  }\n\t\n\t  // Long form\n\t  var num = len & 0x7f;\n\t  if (num >= 4) return buf.error('length octect is too long');\n\t\n\t  len = 0;\n\t  for (var i = 0; i < num; i++) {\n\t    len <<= 8;\n\t    var j = buf.readUInt8(fail);\n\t    if (buf.isError(j)) return j;\n\t    len |= j;\n\t  }\n\t\n\t  return len;\n\t}\n\n/***/ },\n\n/***/ 1469:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar inherits = __webpack_require__(821);\n\tvar Buffer = __webpack_require__(807).Buffer;\n\t\n\tvar asn1 = __webpack_require__(1458);\n\tvar DERDecoder = __webpack_require__(1468);\n\t\n\tfunction PEMDecoder(entity) {\n\t  DERDecoder.call(this, entity);\n\t  this.enc = 'pem';\n\t};\n\tinherits(PEMDecoder, DERDecoder);\n\tmodule.exports = PEMDecoder;\n\t\n\tPEMDecoder.prototype.decode = function decode(data, options) {\n\t  var lines = data.toString().split(/[\\r\\n]+/g);\n\t\n\t  var label = options.label.toUpperCase();\n\t\n\t  var re = /^-----(BEGIN|END) ([^-]+)-----$/;\n\t  var start = -1;\n\t  var end = -1;\n\t  for (var i = 0; i < lines.length; i++) {\n\t    var match = lines[i].match(re);\n\t    if (match === null) continue;\n\t\n\t    if (match[2] !== label) continue;\n\t\n\t    if (start === -1) {\n\t      if (match[1] !== 'BEGIN') break;\n\t      start = i;\n\t    } else {\n\t      if (match[1] !== 'END') break;\n\t      end = i;\n\t      break;\n\t    }\n\t  }\n\t  if (start === -1 || end === -1) throw new Error('PEM section not found for: ' + label);\n\t\n\t  var base64 = lines.slice(start + 1, end).join('');\n\t  // Remove excessive symbols\n\t  base64.replace(/[^a-z0-9\\+\\/=]+/gi, '');\n\t\n\t  var input = new Buffer(base64, 'base64');\n\t  return DERDecoder.prototype.decode.call(this, input, options);\n\t};\n\n/***/ },\n\n/***/ 1470:\n[2502, 1471, 1472],\n\n/***/ 1471:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar inherits = __webpack_require__(821);\n\tvar Buffer = __webpack_require__(807).Buffer;\n\t\n\tvar asn1 = __webpack_require__(1458);\n\tvar base = asn1.base;\n\tvar bignum = asn1.bignum;\n\t\n\t// Import DER constants\n\tvar der = asn1.constants.der;\n\t\n\tfunction DEREncoder(entity) {\n\t  this.enc = 'der';\n\t  this.name = entity.name;\n\t  this.entity = entity;\n\t\n\t  // Construct base tree\n\t  this.tree = new DERNode();\n\t  this.tree._init(entity.body);\n\t};\n\tmodule.exports = DEREncoder;\n\t\n\tDEREncoder.prototype.encode = function encode(data, reporter) {\n\t  return this.tree._encode(data, reporter).join();\n\t};\n\t\n\t// Tree methods\n\t\n\tfunction DERNode(parent) {\n\t  base.Node.call(this, 'der', parent);\n\t}\n\tinherits(DERNode, base.Node);\n\t\n\tDERNode.prototype._encodeComposite = function encodeComposite(tag, primitive, cls, content) {\n\t  var encodedTag = encodeTag(tag, primitive, cls, this.reporter);\n\t\n\t  // Short form\n\t  if (content.length < 0x80) {\n\t    var header = new Buffer(2);\n\t    header[0] = encodedTag;\n\t    header[1] = content.length;\n\t    return this._createEncoderBuffer([header, content]);\n\t  }\n\t\n\t  // Long form\n\t  // Count octets required to store length\n\t  var lenOctets = 1;\n\t  for (var i = content.length; i >= 0x100; i >>= 8) {\n\t    lenOctets++;\n\t  }var header = new Buffer(1 + 1 + lenOctets);\n\t  header[0] = encodedTag;\n\t  header[1] = 0x80 | lenOctets;\n\t\n\t  for (var i = 1 + lenOctets, j = content.length; j > 0; i--, j >>= 8) {\n\t    header[i] = j & 0xff;\n\t  }return this._createEncoderBuffer([header, content]);\n\t};\n\t\n\tDERNode.prototype._encodeStr = function encodeStr(str, tag) {\n\t  if (tag === 'octstr') return this._createEncoderBuffer(str);else if (tag === 'bitstr') return this._createEncoderBuffer([str.unused | 0, str.data]);else if (tag === 'ia5str' || tag === 'utf8str') return this._createEncoderBuffer(str);\n\t  return this.reporter.error('Encoding of string type: ' + tag + ' unsupported');\n\t};\n\t\n\tDERNode.prototype._encodeObjid = function encodeObjid(id, values, relative) {\n\t  if (typeof id === 'string') {\n\t    if (!values) return this.reporter.error('string objid given, but no values map found');\n\t    if (!values.hasOwnProperty(id)) return this.reporter.error('objid not found in values map');\n\t    id = values[id].split(/[\\s\\.]+/g);\n\t    for (var i = 0; i < id.length; i++) {\n\t      id[i] |= 0;\n\t    }\n\t  } else if (Array.isArray(id)) {\n\t    id = id.slice();\n\t    for (var i = 0; i < id.length; i++) {\n\t      id[i] |= 0;\n\t    }\n\t  }\n\t\n\t  if (!Array.isArray(id)) {\n\t    return this.reporter.error('objid() should be either array or string, ' + 'got: ' + JSON.stringify(id));\n\t  }\n\t\n\t  if (!relative) {\n\t    if (id[1] >= 40) return this.reporter.error('Second objid identifier OOB');\n\t    id.splice(0, 2, id[0] * 40 + id[1]);\n\t  }\n\t\n\t  // Count number of octets\n\t  var size = 0;\n\t  for (var i = 0; i < id.length; i++) {\n\t    var ident = id[i];\n\t    for (size++; ident >= 0x80; ident >>= 7) {\n\t      size++;\n\t    }\n\t  }\n\t\n\t  var objid = new Buffer(size);\n\t  var offset = objid.length - 1;\n\t  for (var i = id.length - 1; i >= 0; i--) {\n\t    var ident = id[i];\n\t    objid[offset--] = ident & 0x7f;\n\t    while ((ident >>= 7) > 0) {\n\t      objid[offset--] = 0x80 | ident & 0x7f;\n\t    }\n\t  }\n\t\n\t  return this._createEncoderBuffer(objid);\n\t};\n\t\n\tfunction two(num) {\n\t  if (num < 10) return '0' + num;else return num;\n\t}\n\t\n\tDERNode.prototype._encodeTime = function encodeTime(time, tag) {\n\t  var str;\n\t  var date = new Date(time);\n\t\n\t  if (tag === 'gentime') {\n\t    str = [two(date.getFullYear()), two(date.getUTCMonth() + 1), two(date.getUTCDate()), two(date.getUTCHours()), two(date.getUTCMinutes()), two(date.getUTCSeconds()), 'Z'].join('');\n\t  } else if (tag === 'utctime') {\n\t    str = [two(date.getFullYear() % 100), two(date.getUTCMonth() + 1), two(date.getUTCDate()), two(date.getUTCHours()), two(date.getUTCMinutes()), two(date.getUTCSeconds()), 'Z'].join('');\n\t  } else {\n\t    this.reporter.error('Encoding ' + tag + ' time is not supported yet');\n\t  }\n\t\n\t  return this._encodeStr(str, 'octstr');\n\t};\n\t\n\tDERNode.prototype._encodeNull = function encodeNull() {\n\t  return this._createEncoderBuffer('');\n\t};\n\t\n\tDERNode.prototype._encodeInt = function encodeInt(num, values) {\n\t  if (typeof num === 'string') {\n\t    if (!values) return this.reporter.error('String int or enum given, but no values map');\n\t    if (!values.hasOwnProperty(num)) {\n\t      return this.reporter.error('Values map doesn\\'t contain: ' + JSON.stringify(num));\n\t    }\n\t    num = values[num];\n\t  }\n\t\n\t  // Bignum, assume big endian\n\t  if (typeof num !== 'number' && !Buffer.isBuffer(num)) {\n\t    var numArray = num.toArray();\n\t    if (num.sign === false && numArray[0] & 0x80) {\n\t      numArray.unshift(0);\n\t    }\n\t    num = new Buffer(numArray);\n\t  }\n\t\n\t  if (Buffer.isBuffer(num)) {\n\t    var size = num.length;\n\t    if (num.length === 0) size++;\n\t\n\t    var out = new Buffer(size);\n\t    num.copy(out);\n\t    if (num.length === 0) out[0] = 0;\n\t    return this._createEncoderBuffer(out);\n\t  }\n\t\n\t  if (num < 0x80) return this._createEncoderBuffer(num);\n\t\n\t  if (num < 0x100) return this._createEncoderBuffer([0, num]);\n\t\n\t  var size = 1;\n\t  for (var i = num; i >= 0x100; i >>= 8) {\n\t    size++;\n\t  }var out = new Array(size);\n\t  for (var i = out.length - 1; i >= 0; i--) {\n\t    out[i] = num & 0xff;\n\t    num >>= 8;\n\t  }\n\t  if (out[0] & 0x80) {\n\t    out.unshift(0);\n\t  }\n\t\n\t  return this._createEncoderBuffer(new Buffer(out));\n\t};\n\t\n\tDERNode.prototype._encodeBool = function encodeBool(value) {\n\t  return this._createEncoderBuffer(value ? 0xff : 0);\n\t};\n\t\n\tDERNode.prototype._use = function use(entity, obj) {\n\t  if (typeof entity === 'function') entity = entity(obj);\n\t  return entity._getEncoder('der').tree;\n\t};\n\t\n\tDERNode.prototype._skipDefault = function skipDefault(dataBuffer, reporter, parent) {\n\t  var state = this._baseState;\n\t  var i;\n\t  if (state['default'] === null) return false;\n\t\n\t  var data = dataBuffer.join();\n\t  if (state.defaultBuffer === undefined) state.defaultBuffer = this._encodeValue(state['default'], reporter, parent).join();\n\t\n\t  if (data.length !== state.defaultBuffer.length) return false;\n\t\n\t  for (i = 0; i < data.length; i++) {\n\t    if (data[i] !== state.defaultBuffer[i]) return false;\n\t  }return true;\n\t};\n\t\n\t// Utility methods\n\t\n\tfunction encodeTag(tag, primitive, cls, reporter) {\n\t  var res;\n\t\n\t  if (tag === 'seqof') tag = 'seq';else if (tag === 'setof') tag = 'set';\n\t\n\t  if (der.tagByName.hasOwnProperty(tag)) res = der.tagByName[tag];else if (typeof tag === 'number' && (tag | 0) === tag) res = tag;else return reporter.error('Unknown tag: ' + tag);\n\t\n\t  if (res >= 0x1f) return reporter.error('Multi-octet tag encoding unsupported');\n\t\n\t  if (!primitive) res |= 0x20;\n\t\n\t  res |= der.tagClassByName[cls || 'universal'] << 6;\n\t\n\t  return res;\n\t}\n\n/***/ },\n\n/***/ 1472:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar inherits = __webpack_require__(821);\n\tvar Buffer = __webpack_require__(807).Buffer;\n\t\n\tvar asn1 = __webpack_require__(1458);\n\tvar DEREncoder = __webpack_require__(1471);\n\t\n\tfunction PEMEncoder(entity) {\n\t  DEREncoder.call(this, entity);\n\t  this.enc = 'pem';\n\t};\n\tinherits(PEMEncoder, DEREncoder);\n\tmodule.exports = PEMEncoder;\n\t\n\tPEMEncoder.prototype.encode = function encode(data, options) {\n\t  var buf = DEREncoder.prototype.encode.call(this, data);\n\t\n\t  var p = buf.toString('base64');\n\t  var out = ['-----BEGIN ' + options.label + '-----'];\n\t  for (var i = 0; i < p.length; i += 64) {\n\t    out.push(p.slice(i, i + 64));\n\t  }out.push('-----END ' + options.label + '-----');\n\t  return out.join('\\n');\n\t};\n\n/***/ },\n\n/***/ 1473:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar EC = __webpack_require__(1474).ec;\n\tvar aliases = __webpack_require__(1492);\n\tvar parameters = {\n\t  secp256k1: [1, 3, 132, 0, 10],\n\t  p192: [1, 2, 840, 10045, 3, 1, 1],\n\t  p224: [1, 3, 132, 0, 33],\n\t  p256: [1, 2, 840, 10045, 3, 1, 7],\n\t  p384: [1, 3, 132, 0, 34],\n\t  p521: [1, 3, 132, 0, 35]\n\t};\n\t\n\tfunction toCurves(parameters) {\n\t  var curves = {};\n\t  Object.keys(parameters).forEach(function (curve) {\n\t    var cParams;\n\t    // be lazy\n\t    Object.defineProperty(curves, curve, {\n\t      get: function get() {\n\t        if (!cParams) {\n\t          cParams = {\n\t            curveParameters: parameters[curve],\n\t            privatePEMOptions: { label: 'EC PRIVATE KEY' },\n\t            publicPEMOptions: { label: 'PUBLIC KEY' },\n\t            curve: new EC(curve)\n\t          };\n\t        }\n\t\n\t        return cParams;\n\t      }\n\t    });\n\t\n\t    if (aliases[curve]) {\n\t      Object.defineProperty(curves, aliases[curve], {\n\t        get: function get() {\n\t          return curves[curve];\n\t        }\n\t      });\n\t    }\n\t  });\n\t\n\t  return curves;\n\t}\n\t\n\tmodule.exports = toCurves(parameters);\n\n/***/ },\n\n/***/ 1474:\n[2491, 1475, 1476, 1478, 1479, 1484, 1486, 1489],\n\n/***/ 1475:\n/***/ function(module, exports) {\n\n\tmodule.exports = {\n\t\t\"_args\": [\n\t\t\t[\n\t\t\t\t{\n\t\t\t\t\t\"raw\": \"elliptic@^5.1.0\",\n\t\t\t\t\t\"scope\": null,\n\t\t\t\t\t\"escapedName\": \"elliptic\",\n\t\t\t\t\t\"name\": \"elliptic\",\n\t\t\t\t\t\"rawSpec\": \"^5.1.0\",\n\t\t\t\t\t\"spec\": \">=5.1.0 <6.0.0\",\n\t\t\t\t\t\"type\": \"range\"\n\t\t\t\t},\n\t\t\t\t\"/Users/tenaciousmv/Code/tradle-app-web/node_modules/nkey-ecdsa/node_modules/key-encoder\"\n\t\t\t]\n\t\t],\n\t\t\"_from\": \"elliptic@>=5.1.0 <6.0.0\",\n\t\t\"_id\": \"elliptic@5.2.1\",\n\t\t\"_inCache\": true,\n\t\t\"_installable\": true,\n\t\t\"_location\": \"/nkey-ecdsa/elliptic\",\n\t\t\"_nodeVersion\": \"4.2.1\",\n\t\t\"_npmUser\": {\n\t\t\t\"name\": \"indutny\",\n\t\t\t\"email\": \"fedor@indutny.com\"\n\t\t},\n\t\t\"_npmVersion\": \"2.14.7\",\n\t\t\"_phantomChildren\": {},\n\t\t\"_requested\": {\n\t\t\t\"raw\": \"elliptic@^5.1.0\",\n\t\t\t\"scope\": null,\n\t\t\t\"escapedName\": \"elliptic\",\n\t\t\t\"name\": \"elliptic\",\n\t\t\t\"rawSpec\": \"^5.1.0\",\n\t\t\t\"spec\": \">=5.1.0 <6.0.0\",\n\t\t\t\"type\": \"range\"\n\t\t},\n\t\t\"_requiredBy\": [\n\t\t\t\"/nkey-ecdsa/key-encoder\"\n\t\t],\n\t\t\"_resolved\": \"https://registry.npmjs.org/elliptic/-/elliptic-5.2.1.tgz\",\n\t\t\"_shasum\": \"fa294b6563c6ddbc9ba3dc8594687ae840858f10\",\n\t\t\"_shrinkwrap\": null,\n\t\t\"_spec\": \"elliptic@^5.1.0\",\n\t\t\"_where\": \"/Users/tenaciousmv/Code/tradle-app-web/node_modules/nkey-ecdsa/node_modules/key-encoder\",\n\t\t\"author\": {\n\t\t\t\"name\": \"Fedor Indutny\",\n\t\t\t\"email\": \"fedor@indutny.com\"\n\t\t},\n\t\t\"bugs\": {\n\t\t\t\"url\": \"https://github.com/indutny/elliptic/issues\"\n\t\t},\n\t\t\"dependencies\": {\n\t\t\t\"bn.js\": \"^3.1.1\",\n\t\t\t\"brorand\": \"^1.0.1\",\n\t\t\t\"hash.js\": \"^1.0.0\",\n\t\t\t\"inherits\": \"^2.0.1\"\n\t\t},\n\t\t\"description\": \"EC cryptography\",\n\t\t\"devDependencies\": {\n\t\t\t\"browserify\": \"^3.44.2\",\n\t\t\t\"coveralls\": \"^2.11.3\",\n\t\t\t\"istanbul\": \"^0.3.17\",\n\t\t\t\"jscs\": \"^1.11.3\",\n\t\t\t\"jshint\": \"^2.6.0\",\n\t\t\t\"mocha\": \"^2.1.0\",\n\t\t\t\"uglify-js\": \"^2.4.13\"\n\t\t},\n\t\t\"directories\": {},\n\t\t\"dist\": {\n\t\t\t\"shasum\": \"fa294b6563c6ddbc9ba3dc8594687ae840858f10\",\n\t\t\t\"tarball\": \"https://registry.npmjs.org/elliptic/-/elliptic-5.2.1.tgz\"\n\t\t},\n\t\t\"gitHead\": \"676db36e64399e5b4c0e31ae5aa4cdf8e8362014\",\n\t\t\"homepage\": \"https://github.com/indutny/elliptic\",\n\t\t\"keywords\": [\n\t\t\t\"EC\",\n\t\t\t\"Elliptic\",\n\t\t\t\"curve\",\n\t\t\t\"Cryptography\"\n\t\t],\n\t\t\"license\": \"MIT\",\n\t\t\"main\": \"lib/elliptic.js\",\n\t\t\"maintainers\": [\n\t\t\t{\n\t\t\t\t\"name\": \"indutny\",\n\t\t\t\t\"email\": \"fedor@indutny.com\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"elliptic\",\n\t\t\"optionalDependencies\": {},\n\t\t\"readme\": \"ERROR: No README data found!\",\n\t\t\"repository\": {\n\t\t\t\"type\": \"git\",\n\t\t\t\"url\": \"git+ssh://git@github.com/indutny/elliptic.git\"\n\t\t},\n\t\t\"scripts\": {\n\t\t\t\"coveralls\": \"cat ./coverage/lcov.info | coveralls\",\n\t\t\t\"test\": \"make lint && istanbul test _mocha --reporter=spec test/*-test.js\"\n\t\t},\n\t\t\"version\": \"5.2.1\"\n\t};\n\n/***/ },\n\n/***/ 1476:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar utils = exports;\n\tvar bn = __webpack_require__(1477);\n\t\n\tutils.assert = function assert(val, msg) {\n\t  if (!val) throw new Error(msg || 'Assertion failed');\n\t};\n\t\n\tfunction toArray(msg, enc) {\n\t  if (Array.isArray(msg)) return msg.slice();\n\t  if (!msg) return [];\n\t  var res = [];\n\t  if (typeof msg !== 'string') {\n\t    for (var i = 0; i < msg.length; i++) {\n\t      res[i] = msg[i] | 0;\n\t    }return res;\n\t  }\n\t  if (!enc) {\n\t    for (var i = 0; i < msg.length; i++) {\n\t      var c = msg.charCodeAt(i);\n\t      var hi = c >> 8;\n\t      var lo = c & 0xff;\n\t      if (hi) res.push(hi, lo);else res.push(lo);\n\t    }\n\t  } else if (enc === 'hex') {\n\t    msg = msg.replace(/[^a-z0-9]+/ig, '');\n\t    if (msg.length % 2 !== 0) msg = '0' + msg;\n\t    for (var i = 0; i < msg.length; i += 2) {\n\t      res.push(parseInt(msg[i] + msg[i + 1], 16));\n\t    }\n\t  }\n\t  return res;\n\t}\n\tutils.toArray = toArray;\n\t\n\tfunction zero2(word) {\n\t  if (word.length === 1) return '0' + word;else return word;\n\t}\n\tutils.zero2 = zero2;\n\t\n\tfunction toHex(msg) {\n\t  var res = '';\n\t  for (var i = 0; i < msg.length; i++) {\n\t    res += zero2(msg[i].toString(16));\n\t  }return res;\n\t}\n\tutils.toHex = toHex;\n\t\n\tutils.encode = function encode(arr, enc) {\n\t  if (enc === 'hex') return toHex(arr);else return arr;\n\t};\n\t\n\t// Represent num in a w-NAF form\n\tfunction getNAF(num, w) {\n\t  var naf = [];\n\t  var ws = 1 << w + 1;\n\t  var k = num.clone();\n\t  while (k.cmpn(1) >= 0) {\n\t    var z;\n\t    if (k.isOdd()) {\n\t      var mod = k.andln(ws - 1);\n\t      if (mod > (ws >> 1) - 1) z = (ws >> 1) - mod;else z = mod;\n\t      k.isubn(z);\n\t    } else {\n\t      z = 0;\n\t    }\n\t    naf.push(z);\n\t\n\t    // Optimization, shift by word if possible\n\t    var shift = k.cmpn(0) !== 0 && k.andln(ws - 1) === 0 ? w + 1 : 1;\n\t    for (var i = 1; i < shift; i++) {\n\t      naf.push(0);\n\t    }k.iushrn(shift);\n\t  }\n\t\n\t  return naf;\n\t}\n\tutils.getNAF = getNAF;\n\t\n\t// Represent k1, k2 in a Joint Sparse Form\n\tfunction getJSF(k1, k2) {\n\t  var jsf = [[], []];\n\t\n\t  k1 = k1.clone();\n\t  k2 = k2.clone();\n\t  var d1 = 0;\n\t  var d2 = 0;\n\t  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {\n\t\n\t    // First phase\n\t    var m14 = k1.andln(3) + d1 & 3;\n\t    var m24 = k2.andln(3) + d2 & 3;\n\t    if (m14 === 3) m14 = -1;\n\t    if (m24 === 3) m24 = -1;\n\t    var u1;\n\t    if ((m14 & 1) === 0) {\n\t      u1 = 0;\n\t    } else {\n\t      var m8 = k1.andln(7) + d1 & 7;\n\t      if ((m8 === 3 || m8 === 5) && m24 === 2) u1 = -m14;else u1 = m14;\n\t    }\n\t    jsf[0].push(u1);\n\t\n\t    var u2;\n\t    if ((m24 & 1) === 0) {\n\t      u2 = 0;\n\t    } else {\n\t      var m8 = k2.andln(7) + d2 & 7;\n\t      if ((m8 === 3 || m8 === 5) && m14 === 2) u2 = -m24;else u2 = m24;\n\t    }\n\t    jsf[1].push(u2);\n\t\n\t    // Second phase\n\t    if (2 * d1 === u1 + 1) d1 = 1 - d1;\n\t    if (2 * d2 === u2 + 1) d2 = 1 - d2;\n\t    k1.iushrn(1);\n\t    k2.iushrn(1);\n\t  }\n\t\n\t  return jsf;\n\t}\n\tutils.getJSF = getJSF;\n\t\n\tfunction cachedProperty(obj, computer) {\n\t  var name = computer.name;\n\t  var key = '_' + name;\n\t  obj.prototype[name] = function cachedProperty() {\n\t    return this[key] !== undefined ? this[key] : this[key] = computer.call(this);\n\t  };\n\t}\n\tutils.cachedProperty = cachedProperty;\n\t\n\tfunction parseBytes(bytes) {\n\t  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') : bytes;\n\t}\n\tutils.parseBytes = parseBytes;\n\t\n\tfunction intFromLE(bytes) {\n\t  return new bn(bytes, 'hex', 'le');\n\t}\n\tutils.intFromLE = intFromLE;\n\n/***/ },\n\n/***/ 1477:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(module) {'use strict';\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\t(function (module, exports) {\n\t\n\t  'use strict';\n\t\n\t  // Utils\n\t\n\t  function assert(val, msg) {\n\t    if (!val) throw new Error(msg || 'Assertion failed');\n\t  }\n\t\n\t  // Could use `inherits` module, but don't want to move from single file\n\t  // architecture yet.\n\t  function inherits(ctor, superCtor) {\n\t    ctor.super_ = superCtor;\n\t    var TempCtor = function TempCtor() {};\n\t    TempCtor.prototype = superCtor.prototype;\n\t    ctor.prototype = new TempCtor();\n\t    ctor.prototype.constructor = ctor;\n\t  }\n\t\n\t  // BN\n\t\n\t  function BN(number, base, endian) {\n\t    // May be `new BN(bn)` ?\n\t    if (number !== null && (typeof number === 'undefined' ? 'undefined' : _typeof(number)) === 'object' && Array.isArray(number.words)) {\n\t      return number;\n\t    }\n\t\n\t    this.sign = false;\n\t    this.words = null;\n\t    this.length = 0;\n\t\n\t    // Reduction context\n\t    this.red = null;\n\t\n\t    if (base === 'le' || base === 'be') {\n\t      endian = base;\n\t      base = 10;\n\t    }\n\t\n\t    if (number !== null) this._init(number || 0, base || 10, endian || 'be');\n\t  }\n\t  if ((typeof module === 'undefined' ? 'undefined' : _typeof(module)) === 'object') module.exports = BN;else exports.BN = BN;\n\t\n\t  BN.BN = BN;\n\t  BN.wordSize = 26;\n\t\n\t  BN.max = function max(left, right) {\n\t    if (left.cmp(right) > 0) return left;else return right;\n\t  };\n\t\n\t  BN.min = function min(left, right) {\n\t    if (left.cmp(right) < 0) return left;else return right;\n\t  };\n\t\n\t  BN.prototype._init = function init(number, base, endian) {\n\t    if (typeof number === 'number') {\n\t      return this._initNumber(number, base, endian);\n\t    } else if ((typeof number === 'undefined' ? 'undefined' : _typeof(number)) === 'object') {\n\t      return this._initArray(number, base, endian);\n\t    }\n\t    if (base === 'hex') base = 16;\n\t    assert(base === (base | 0) && base >= 2 && base <= 36);\n\t\n\t    number = number.toString().replace(/\\s+/g, '');\n\t    var start = 0;\n\t    if (number[0] === '-') start++;\n\t\n\t    if (base === 16) this._parseHex(number, start);else this._parseBase(number, base, start);\n\t\n\t    if (number[0] === '-') this.sign = true;\n\t\n\t    this.strip();\n\t\n\t    if (endian !== 'le') return;\n\t\n\t    this._initArray(this.toArray(), base, endian);\n\t  };\n\t\n\t  BN.prototype._initNumber = function _initNumber(number, base, endian) {\n\t    if (number < 0) {\n\t      this.sign = true;\n\t      number = -number;\n\t    }\n\t    if (number < 0x4000000) {\n\t      this.words = [number & 0x3ffffff];\n\t      this.length = 1;\n\t    } else if (number < 0x10000000000000) {\n\t      this.words = [number & 0x3ffffff, number / 0x4000000 & 0x3ffffff];\n\t      this.length = 2;\n\t    } else {\n\t      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n\t      this.words = [number & 0x3ffffff, number / 0x4000000 & 0x3ffffff, 1];\n\t      this.length = 3;\n\t    }\n\t\n\t    if (endian !== 'le') return;\n\t\n\t    // Reverse the bytes\n\t    this._initArray(this.toArray(), base, endian);\n\t  };\n\t\n\t  BN.prototype._initArray = function _initArray(number, base, endian) {\n\t    // Perhaps a Uint8Array\n\t    assert(typeof number.length === 'number');\n\t    if (number.length <= 0) {\n\t      this.words = [0];\n\t      this.length = 1;\n\t      return this;\n\t    }\n\t\n\t    this.length = Math.ceil(number.length / 3);\n\t    this.words = new Array(this.length);\n\t    for (var i = 0; i < this.length; i++) {\n\t      this.words[i] = 0;\n\t    }var off = 0;\n\t    if (endian === 'be') {\n\t      for (var i = number.length - 1, j = 0; i >= 0; i -= 3) {\n\t        var w = number[i] | number[i - 1] << 8 | number[i - 2] << 16;\n\t        this.words[j] |= w << off & 0x3ffffff;\n\t        this.words[j + 1] = w >>> 26 - off & 0x3ffffff;\n\t        off += 24;\n\t        if (off >= 26) {\n\t          off -= 26;\n\t          j++;\n\t        }\n\t      }\n\t    } else if (endian === 'le') {\n\t      for (var i = 0, j = 0; i < number.length; i += 3) {\n\t        var w = number[i] | number[i + 1] << 8 | number[i + 2] << 16;\n\t        this.words[j] |= w << off & 0x3ffffff;\n\t        this.words[j + 1] = w >>> 26 - off & 0x3ffffff;\n\t        off += 24;\n\t        if (off >= 26) {\n\t          off -= 26;\n\t          j++;\n\t        }\n\t      }\n\t    }\n\t    return this.strip();\n\t  };\n\t\n\t  function parseHex(str, start, end) {\n\t    var r = 0;\n\t    var len = Math.min(str.length, end);\n\t    for (var i = start; i < len; i++) {\n\t      var c = str.charCodeAt(i) - 48;\n\t\n\t      r <<= 4;\n\t\n\t      // 'a' - 'f'\n\t      if (c >= 49 && c <= 54) r |= c - 49 + 0xa;\n\t\n\t      // 'A' - 'F'\n\t      else if (c >= 17 && c <= 22) r |= c - 17 + 0xa;\n\t\n\t        // '0' - '9'\n\t        else r |= c & 0xf;\n\t    }\n\t    return r;\n\t  }\n\t\n\t  BN.prototype._parseHex = function _parseHex(number, start) {\n\t    // Create possibly bigger array to ensure that it fits the number\n\t    this.length = Math.ceil((number.length - start) / 6);\n\t    this.words = new Array(this.length);\n\t    for (var i = 0; i < this.length; i++) {\n\t      this.words[i] = 0;\n\t    } // Scan 24-bit chunks and add them to the number\n\t    var off = 0;\n\t    for (var i = number.length - 6, j = 0; i >= start; i -= 6) {\n\t      var w = parseHex(number, i, i + 6);\n\t      this.words[j] |= w << off & 0x3ffffff;\n\t      this.words[j + 1] |= w >>> 26 - off & 0x3fffff;\n\t      off += 24;\n\t      if (off >= 26) {\n\t        off -= 26;\n\t        j++;\n\t      }\n\t    }\n\t    if (i + 6 !== start) {\n\t      var w = parseHex(number, start, i + 6);\n\t      this.words[j] |= w << off & 0x3ffffff;\n\t      this.words[j + 1] |= w >>> 26 - off & 0x3fffff;\n\t    }\n\t    this.strip();\n\t  };\n\t\n\t  function parseBase(str, start, end, mul) {\n\t    var r = 0;\n\t    var len = Math.min(str.length, end);\n\t    for (var i = start; i < len; i++) {\n\t      var c = str.charCodeAt(i) - 48;\n\t\n\t      r *= mul;\n\t\n\t      // 'a'\n\t      if (c >= 49) r += c - 49 + 0xa;\n\t\n\t      // 'A'\n\t      else if (c >= 17) r += c - 17 + 0xa;\n\t\n\t        // '0' - '9'\n\t        else r += c;\n\t    }\n\t    return r;\n\t  }\n\t\n\t  BN.prototype._parseBase = function _parseBase(number, base, start) {\n\t    // Initialize as zero\n\t    this.words = [0];\n\t    this.length = 1;\n\t\n\t    // Find length of limb in base\n\t    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n\t      limbLen++;\n\t    }limbLen--;\n\t    limbPow = limbPow / base | 0;\n\t\n\t    var total = number.length - start;\n\t    var mod = total % limbLen;\n\t    var end = Math.min(total, total - mod) + start;\n\t\n\t    var word = 0;\n\t    for (var i = start; i < end; i += limbLen) {\n\t      word = parseBase(number, i, i + limbLen, base);\n\t\n\t      this.imuln(limbPow);\n\t      if (this.words[0] + word < 0x4000000) this.words[0] += word;else this._iaddn(word);\n\t    }\n\t\n\t    if (mod !== 0) {\n\t      var pow = 1;\n\t      var word = parseBase(number, i, number.length, base);\n\t\n\t      for (var i = 0; i < mod; i++) {\n\t        pow *= base;\n\t      }this.imuln(pow);\n\t      if (this.words[0] + word < 0x4000000) this.words[0] += word;else this._iaddn(word);\n\t    }\n\t  };\n\t\n\t  BN.prototype.copy = function copy(dest) {\n\t    dest.words = new Array(this.length);\n\t    for (var i = 0; i < this.length; i++) {\n\t      dest.words[i] = this.words[i];\n\t    }dest.length = this.length;\n\t    dest.sign = this.sign;\n\t    dest.red = this.red;\n\t  };\n\t\n\t  BN.prototype.clone = function clone() {\n\t    var r = new BN(null);\n\t    this.copy(r);\n\t    return r;\n\t  };\n\t\n\t  // Remove leading `0` from `this`\n\t  BN.prototype.strip = function strip() {\n\t    while (this.length > 1 && this.words[this.length - 1] === 0) {\n\t      this.length--;\n\t    }return this._normSign();\n\t  };\n\t\n\t  BN.prototype._normSign = function _normSign() {\n\t    // -0 = 0\n\t    if (this.length === 1 && this.words[0] === 0) this.sign = false;\n\t    return this;\n\t  };\n\t\n\t  BN.prototype.inspect = function inspect() {\n\t    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n\t  };\n\t\n\t  /*\n\t  \n\t  var zeros = [];\n\t  var groupSizes = [];\n\t  var groupBases = [];\n\t  \n\t  var s = '';\n\t  var i = -1;\n\t  while (++i < BN.wordSize) {\n\t    zeros[i] = s;\n\t    s += '0';\n\t  }\n\t  groupSizes[0] = 0;\n\t  groupSizes[1] = 0;\n\t  groupBases[0] = 0;\n\t  groupBases[1] = 0;\n\t  var base = 2 - 1;\n\t  while (++base < 36 + 1) {\n\t    var groupSize = 0;\n\t    var groupBase = 1;\n\t    while (groupBase < (1 << BN.wordSize) / base) {\n\t      groupBase *= base;\n\t      groupSize += 1;\n\t    }\n\t    groupSizes[base] = groupSize;\n\t    groupBases[base] = groupBase;\n\t  }\n\t  \n\t  */\n\t\n\t  var zeros = ['', '0', '00', '000', '0000', '00000', '000000', '0000000', '00000000', '000000000', '0000000000', '00000000000', '000000000000', '0000000000000', '00000000000000', '000000000000000', '0000000000000000', '00000000000000000', '000000000000000000', '0000000000000000000', '00000000000000000000', '000000000000000000000', '0000000000000000000000', '00000000000000000000000', '000000000000000000000000', '0000000000000000000000000'];\n\t\n\t  var groupSizes = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5];\n\t\n\t  var groupBases = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];\n\t\n\t  BN.prototype.toString = function toString(base, padding) {\n\t    base = base || 10;\n\t    var padding = padding | 0 || 1;\n\t    if (base === 16 || base === 'hex') {\n\t      var out = '';\n\t      var off = 0;\n\t      var carry = 0;\n\t      for (var i = 0; i < this.length; i++) {\n\t        var w = this.words[i];\n\t        var word = ((w << off | carry) & 0xffffff).toString(16);\n\t        carry = w >>> 24 - off & 0xffffff;\n\t        if (carry !== 0 || i !== this.length - 1) out = zeros[6 - word.length] + word + out;else out = word + out;\n\t        off += 2;\n\t        if (off >= 26) {\n\t          off -= 26;\n\t          i--;\n\t        }\n\t      }\n\t      if (carry !== 0) out = carry.toString(16) + out;\n\t      while (out.length % padding !== 0) {\n\t        out = '0' + out;\n\t      }if (this.sign) out = '-' + out;\n\t      return out;\n\t    } else if (base === (base | 0) && base >= 2 && base <= 36) {\n\t      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n\t      var groupSize = groupSizes[base];\n\t      // var groupBase = Math.pow(base, groupSize);\n\t      var groupBase = groupBases[base];\n\t      var out = '';\n\t      var c = this.clone();\n\t      c.sign = false;\n\t      while (c.cmpn(0) !== 0) {\n\t        var r = c.modn(groupBase).toString(base);\n\t        c = c.idivn(groupBase);\n\t\n\t        if (c.cmpn(0) !== 0) out = zeros[groupSize - r.length] + r + out;else out = r + out;\n\t      }\n\t      if (this.cmpn(0) === 0) out = '0' + out;\n\t      while (out.length % padding !== 0) {\n\t        out = '0' + out;\n\t      }if (this.sign) out = '-' + out;\n\t      return out;\n\t    } else {\n\t      assert(false, 'Base should be between 2 and 36');\n\t    }\n\t  };\n\t\n\t  BN.prototype.toJSON = function toJSON() {\n\t    return this.toString(16);\n\t  };\n\t\n\t  BN.prototype.toArray = function toArray(endian, length) {\n\t    this.strip();\n\t    var littleEndian = endian === 'le';\n\t    var res = new Array(this.byteLength());\n\t    res[0] = 0;\n\t\n\t    var q = this.clone();\n\t    if (!littleEndian) {\n\t      // Assume big-endian\n\t      for (var i = 0; q.cmpn(0) !== 0; i++) {\n\t        var b = q.andln(0xff);\n\t        q.iushrn(8);\n\t\n\t        res[res.length - i - 1] = b;\n\t      }\n\t    } else {\n\t      for (var i = 0; q.cmpn(0) !== 0; i++) {\n\t        var b = q.andln(0xff);\n\t        q.iushrn(8);\n\t\n\t        res[i] = b;\n\t      }\n\t    }\n\t\n\t    if (length) {\n\t      assert(res.length <= length, 'byte array longer than desired length');\n\t\n\t      while (res.length < length) {\n\t        if (littleEndian) res.push(0);else res.unshift(0);\n\t      }\n\t    }\n\t\n\t    return res;\n\t  };\n\t\n\t  if (Math.clz32) {\n\t    BN.prototype._countBits = function _countBits(w) {\n\t      return 32 - Math.clz32(w);\n\t    };\n\t  } else {\n\t    BN.prototype._countBits = function _countBits(w) {\n\t      var t = w;\n\t      var r = 0;\n\t      if (t >= 0x1000) {\n\t        r += 13;\n\t        t >>>= 13;\n\t      }\n\t      if (t >= 0x40) {\n\t        r += 7;\n\t        t >>>= 7;\n\t      }\n\t      if (t >= 0x8) {\n\t        r += 4;\n\t        t >>>= 4;\n\t      }\n\t      if (t >= 0x02) {\n\t        r += 2;\n\t        t >>>= 2;\n\t      }\n\t      return r + t;\n\t    };\n\t  }\n\t\n\t  BN.prototype._zeroBits = function _zeroBits(w) {\n\t    // Short-cut\n\t    if (w === 0) return 26;\n\t\n\t    var t = w;\n\t    var r = 0;\n\t    if ((t & 0x1fff) === 0) {\n\t      r += 13;\n\t      t >>>= 13;\n\t    }\n\t    if ((t & 0x7f) === 0) {\n\t      r += 7;\n\t      t >>>= 7;\n\t    }\n\t    if ((t & 0xf) === 0) {\n\t      r += 4;\n\t      t >>>= 4;\n\t    }\n\t    if ((t & 0x3) === 0) {\n\t      r += 2;\n\t      t >>>= 2;\n\t    }\n\t    if ((t & 0x1) === 0) r++;\n\t    return r;\n\t  };\n\t\n\t  // Return number of used bits in a BN\n\t  BN.prototype.bitLength = function bitLength() {\n\t    var hi = 0;\n\t    var w = this.words[this.length - 1];\n\t    var hi = this._countBits(w);\n\t    return (this.length - 1) * 26 + hi;\n\t  };\n\t\n\t  function toBitArray(num) {\n\t    var w = new Array(num.bitLength());\n\t\n\t    for (var bit = 0; bit < w.length; bit++) {\n\t      var off = bit / 26 | 0;\n\t      var wbit = bit % 26;\n\t\n\t      w[bit] = (num.words[off] & 1 << wbit) >>> wbit;\n\t    }\n\t\n\t    return w;\n\t  }\n\t\n\t  // Number of trailing zero bits\n\t  BN.prototype.zeroBits = function zeroBits() {\n\t    if (this.cmpn(0) === 0) return 0;\n\t\n\t    var r = 0;\n\t    for (var i = 0; i < this.length; i++) {\n\t      var b = this._zeroBits(this.words[i]);\n\t      r += b;\n\t      if (b !== 26) break;\n\t    }\n\t    return r;\n\t  };\n\t\n\t  BN.prototype.byteLength = function byteLength() {\n\t    return Math.ceil(this.bitLength() / 8);\n\t  };\n\t\n\t  // Return negative clone of `this`\n\t  BN.prototype.neg = function neg() {\n\t    if (this.cmpn(0) === 0) return this.clone();\n\t\n\t    var r = this.clone();\n\t    r.sign = !this.sign;\n\t    return r;\n\t  };\n\t\n\t  // Or `num` with `this` in-place\n\t  BN.prototype.iuor = function iuor(num) {\n\t    while (this.length < num.length) {\n\t      this.words[this.length++] = 0;\n\t    }for (var i = 0; i < num.length; i++) {\n\t      this.words[i] = this.words[i] | num.words[i];\n\t    }return this.strip();\n\t  };\n\t\n\t  BN.prototype.ior = function ior(num) {\n\t    assert(!this.sign && !num.sign);\n\t    return this.iuor(num);\n\t  };\n\t\n\t  // Or `num` with `this`\n\t  BN.prototype.or = function or(num) {\n\t    if (this.length > num.length) return this.clone().ior(num);else return num.clone().ior(this);\n\t  };\n\t\n\t  BN.prototype.uor = function uor(num) {\n\t    if (this.length > num.length) return this.clone().iuor(num);else return num.clone().iuor(this);\n\t  };\n\t\n\t  // And `num` with `this` in-place\n\t  BN.prototype.iuand = function iuand(num) {\n\t    // b = min-length(num, this)\n\t    var b;\n\t    if (this.length > num.length) b = num;else b = this;\n\t\n\t    for (var i = 0; i < b.length; i++) {\n\t      this.words[i] = this.words[i] & num.words[i];\n\t    }this.length = b.length;\n\t\n\t    return this.strip();\n\t  };\n\t\n\t  BN.prototype.iand = function iand(num) {\n\t    assert(!this.sign && !num.sign);\n\t    return this.iuand(num);\n\t  };\n\t\n\t  // And `num` with `this`\n\t  BN.prototype.and = function and(num) {\n\t    if (this.length > num.length) return this.clone().iand(num);else return num.clone().iand(this);\n\t  };\n\t\n\t  BN.prototype.uand = function uand(num) {\n\t    if (this.length > num.length) return this.clone().iuand(num);else return num.clone().iuand(this);\n\t  };\n\t\n\t  // Xor `num` with `this` in-place\n\t  BN.prototype.iuxor = function iuxor(num) {\n\t    // a.length > b.length\n\t    var a;\n\t    var b;\n\t    if (this.length > num.length) {\n\t      a = this;\n\t      b = num;\n\t    } else {\n\t      a = num;\n\t      b = this;\n\t    }\n\t\n\t    for (var i = 0; i < b.length; i++) {\n\t      this.words[i] = a.words[i] ^ b.words[i];\n\t    }if (this !== a) for (; i < a.length; i++) {\n\t      this.words[i] = a.words[i];\n\t    }this.length = a.length;\n\t\n\t    return this.strip();\n\t  };\n\t\n\t  BN.prototype.ixor = function ixor(num) {\n\t    assert(!this.sign && !num.sign);\n\t    return this.iuxor(num);\n\t  };\n\t\n\t  // Xor `num` with `this`\n\t  BN.prototype.xor = function xor(num) {\n\t    if (this.length > num.length) return this.clone().ixor(num);else return num.clone().ixor(this);\n\t  };\n\t\n\t  BN.prototype.uxor = function uxor(num) {\n\t    if (this.length > num.length) return this.clone().iuxor(num);else return num.clone().iuxor(this);\n\t  };\n\t\n\t  // Set `bit` of `this`\n\t  BN.prototype.setn = function setn(bit, val) {\n\t    assert(typeof bit === 'number' && bit >= 0);\n\t\n\t    var off = bit / 26 | 0;\n\t    var wbit = bit % 26;\n\t\n\t    while (this.length <= off) {\n\t      this.words[this.length++] = 0;\n\t    }if (val) this.words[off] = this.words[off] | 1 << wbit;else this.words[off] = this.words[off] & ~(1 << wbit);\n\t\n\t    return this.strip();\n\t  };\n\t\n\t  // Add `num` to `this` in-place\n\t  BN.prototype.iadd = function iadd(num) {\n\t    // negative + positive\n\t    if (this.sign && !num.sign) {\n\t      this.sign = false;\n\t      var r = this.isub(num);\n\t      this.sign = !this.sign;\n\t      return this._normSign();\n\t\n\t      // positive + negative\n\t    } else if (!this.sign && num.sign) {\n\t      num.sign = false;\n\t      var r = this.isub(num);\n\t      num.sign = true;\n\t      return r._normSign();\n\t    }\n\t\n\t    // a.length > b.length\n\t    var a;\n\t    var b;\n\t    if (this.length > num.length) {\n\t      a = this;\n\t      b = num;\n\t    } else {\n\t      a = num;\n\t      b = this;\n\t    }\n\t\n\t    var carry = 0;\n\t    for (var i = 0; i < b.length; i++) {\n\t      var r = a.words[i] + b.words[i] + carry;\n\t      this.words[i] = r & 0x3ffffff;\n\t      carry = r >>> 26;\n\t    }\n\t    for (; carry !== 0 && i < a.length; i++) {\n\t      var r = a.words[i] + carry;\n\t      this.words[i] = r & 0x3ffffff;\n\t      carry = r >>> 26;\n\t    }\n\t\n\t    this.length = a.length;\n\t    if (carry !== 0) {\n\t      this.words[this.length] = carry;\n\t      this.length++;\n\t      // Copy the rest of the words\n\t    } else if (a !== this) {\n\t      for (; i < a.length; i++) {\n\t        this.words[i] = a.words[i];\n\t      }\n\t    }\n\t\n\t    return this;\n\t  };\n\t\n\t  // Add `num` to `this`\n\t  BN.prototype.add = function add(num) {\n\t    if (num.sign && !this.sign) {\n\t      num.sign = false;\n\t      var res = this.sub(num);\n\t      num.sign = true;\n\t      return res;\n\t    } else if (!num.sign && this.sign) {\n\t      this.sign = false;\n\t      var res = num.sub(this);\n\t      this.sign = true;\n\t      return res;\n\t    }\n\t\n\t    if (this.length > num.length) return this.clone().iadd(num);else return num.clone().iadd(this);\n\t  };\n\t\n\t  // Subtract `num` from `this` in-place\n\t  BN.prototype.isub = function isub(num) {\n\t    // this - (-num) = this + num\n\t    if (num.sign) {\n\t      num.sign = false;\n\t      var r = this.iadd(num);\n\t      num.sign = true;\n\t      return r._normSign();\n\t\n\t      // -this - num = -(this + num)\n\t    } else if (this.sign) {\n\t      this.sign = false;\n\t      this.iadd(num);\n\t      this.sign = true;\n\t      return this._normSign();\n\t    }\n\t\n\t    // At this point both numbers are positive\n\t    var cmp = this.cmp(num);\n\t\n\t    // Optimization - zeroify\n\t    if (cmp === 0) {\n\t      this.sign = false;\n\t      this.length = 1;\n\t      this.words[0] = 0;\n\t      return this;\n\t    }\n\t\n\t    // a > b\n\t    var a;\n\t    var b;\n\t    if (cmp > 0) {\n\t      a = this;\n\t      b = num;\n\t    } else {\n\t      a = num;\n\t      b = this;\n\t    }\n\t\n\t    var carry = 0;\n\t    for (var i = 0; i < b.length; i++) {\n\t      var r = a.words[i] - b.words[i] + carry;\n\t      carry = r >> 26;\n\t      this.words[i] = r & 0x3ffffff;\n\t    }\n\t    for (; carry !== 0 && i < a.length; i++) {\n\t      var r = a.words[i] + carry;\n\t      carry = r >> 26;\n\t      this.words[i] = r & 0x3ffffff;\n\t    }\n\t\n\t    // Copy rest of the words\n\t    if (carry === 0 && i < a.length && a !== this) for (; i < a.length; i++) {\n\t      this.words[i] = a.words[i];\n\t    }this.length = Math.max(this.length, i);\n\t\n\t    if (a !== this) this.sign = true;\n\t\n\t    return this.strip();\n\t  };\n\t\n\t  // Subtract `num` from `this`\n\t  BN.prototype.sub = function sub(num) {\n\t    return this.clone().isub(num);\n\t  };\n\t\n\t  /*\n\t  // NOTE: This could be potentionally used to generate loop-less multiplications\n\t  function _genCombMulTo(alen, blen) {\n\t    var len = alen + blen - 1;\n\t    var src = [\n\t      'var a = this.words, b = num.words, o = out.words, c = 0, w, ' +\n\t          'mask = 0x3ffffff, shift = 0x4000000;',\n\t      'out.length = ' + len + ';'\n\t    ];\n\t    for (var k = 0; k < len; k++) {\n\t      var minJ = Math.max(0, k - alen + 1);\n\t      var maxJ = Math.min(k, blen - 1);\n\t  \n\t      for (var j = minJ; j <= maxJ; j++) {\n\t        var i = k - j;\n\t        var mul = 'a[' + i + '] * b[' + j + ']';\n\t  \n\t        if (j === minJ) {\n\t          src.push('w = ' + mul + ' + c;');\n\t          src.push('c = (w / shift) | 0;');\n\t        } else {\n\t          src.push('w += ' + mul + ';');\n\t          src.push('c += (w / shift) | 0;');\n\t        }\n\t        src.push('w &= mask;');\n\t      }\n\t      src.push('o[' + k + '] = w;');\n\t    }\n\t    src.push('if (c !== 0) {',\n\t             '  o[' + k + '] = c;',\n\t             '  out.length++;',\n\t             '}',\n\t             'return out;');\n\t  \n\t    return src.join('\\n');\n\t  }\n\t  */\n\t\n\t  BN.prototype._smallMulTo = function _smallMulTo(num, out) {\n\t    out.sign = num.sign !== this.sign;\n\t    out.length = this.length + num.length;\n\t\n\t    var carry = 0;\n\t    for (var k = 0; k < out.length - 1; k++) {\n\t      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n\t      // note that ncarry could be >= 0x3ffffff\n\t      var ncarry = carry >>> 26;\n\t      var rword = carry & 0x3ffffff;\n\t      var maxJ = Math.min(k, num.length - 1);\n\t      for (var j = Math.max(0, k - this.length + 1); j <= maxJ; j++) {\n\t        var i = k - j;\n\t        var a = this.words[i] | 0;\n\t        var b = num.words[j] | 0;\n\t        var r = a * b;\n\t\n\t        var lo = r & 0x3ffffff;\n\t        ncarry = ncarry + (r / 0x4000000 | 0) | 0;\n\t        lo = lo + rword | 0;\n\t        rword = lo & 0x3ffffff;\n\t        ncarry = ncarry + (lo >>> 26) | 0;\n\t      }\n\t      out.words[k] = rword;\n\t      carry = ncarry;\n\t    }\n\t    if (carry !== 0) {\n\t      out.words[k] = carry;\n\t    } else {\n\t      out.length--;\n\t    }\n\t\n\t    return out.strip();\n\t  };\n\t\n\t  BN.prototype._bigMulTo = function _bigMulTo(num, out) {\n\t    out.sign = num.sign !== this.sign;\n\t    out.length = this.length + num.length;\n\t\n\t    var carry = 0;\n\t    var hncarry = 0;\n\t    for (var k = 0; k < out.length - 1; k++) {\n\t      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n\t      // note that ncarry could be >= 0x3ffffff\n\t      var ncarry = hncarry;\n\t      hncarry = 0;\n\t      var rword = carry & 0x3ffffff;\n\t      var maxJ = Math.min(k, num.length - 1);\n\t      for (var j = Math.max(0, k - this.length + 1); j <= maxJ; j++) {\n\t        var i = k - j;\n\t        var a = this.words[i] | 0;\n\t        var b = num.words[j] | 0;\n\t        var r = a * b;\n\t\n\t        var lo = r & 0x3ffffff;\n\t        ncarry = ncarry + (r / 0x4000000 | 0) | 0;\n\t        lo = lo + rword | 0;\n\t        rword = lo & 0x3ffffff;\n\t        ncarry = ncarry + (lo >>> 26) | 0;\n\t\n\t        hncarry += ncarry >>> 26;\n\t        ncarry &= 0x3ffffff;\n\t      }\n\t      out.words[k] = rword;\n\t      carry = ncarry;\n\t      ncarry = hncarry;\n\t    }\n\t    if (carry !== 0) {\n\t      out.words[k] = carry;\n\t    } else {\n\t      out.length--;\n\t    }\n\t\n\t    return out.strip();\n\t  };\n\t\n\t  BN.prototype.mulTo = function mulTo(num, out) {\n\t    var res;\n\t    if (this.length + num.length < 63) res = this._smallMulTo(num, out);else res = this._bigMulTo(num, out);\n\t    return res;\n\t  };\n\t\n\t  // Multiply `this` by `num`\n\t  BN.prototype.mul = function mul(num) {\n\t    var out = new BN(null);\n\t    out.words = new Array(this.length + num.length);\n\t    return this.mulTo(num, out);\n\t  };\n\t\n\t  // In-place Multiplication\n\t  BN.prototype.imul = function imul(num) {\n\t    if (this.cmpn(0) === 0 || num.cmpn(0) === 0) {\n\t      this.words[0] = 0;\n\t      this.length = 1;\n\t      return this;\n\t    }\n\t\n\t    var tlen = this.length;\n\t    var nlen = num.length;\n\t\n\t    this.sign = num.sign !== this.sign;\n\t    this.length = this.length + num.length;\n\t    this.words[this.length - 1] = 0;\n\t\n\t    for (var k = this.length - 2; k >= 0; k--) {\n\t      // Sum all words with the same `i + j = k` and accumulate `carry`,\n\t      // note that carry could be >= 0x3ffffff\n\t      var carry = 0;\n\t      var rword = 0;\n\t      var maxJ = Math.min(k, nlen - 1);\n\t      for (var j = Math.max(0, k - tlen + 1); j <= maxJ; j++) {\n\t        var i = k - j;\n\t        var a = this.words[i];\n\t        var b = num.words[j];\n\t        var r = a * b;\n\t\n\t        var lo = r & 0x3ffffff;\n\t        carry += r / 0x4000000 | 0;\n\t        lo += rword;\n\t        rword = lo & 0x3ffffff;\n\t        carry += lo >>> 26;\n\t      }\n\t      this.words[k] = rword;\n\t      this.words[k + 1] += carry;\n\t      carry = 0;\n\t    }\n\t\n\t    // Propagate overflows\n\t    var carry = 0;\n\t    for (var i = 1; i < this.length; i++) {\n\t      var w = this.words[i] + carry;\n\t      this.words[i] = w & 0x3ffffff;\n\t      carry = w >>> 26;\n\t    }\n\t\n\t    return this.strip();\n\t  };\n\t\n\t  BN.prototype.imuln = function imuln(num) {\n\t    assert(typeof num === 'number');\n\t\n\t    // Carry\n\t    var carry = 0;\n\t    for (var i = 0; i < this.length; i++) {\n\t      var w = this.words[i] * num;\n\t      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n\t      carry >>= 26;\n\t      carry += w / 0x4000000 | 0;\n\t      // NOTE: lo is 27bit maximum\n\t      carry += lo >>> 26;\n\t      this.words[i] = lo & 0x3ffffff;\n\t    }\n\t\n\t    if (carry !== 0) {\n\t      this.words[i] = carry;\n\t      this.length++;\n\t    }\n\t\n\t    return this;\n\t  };\n\t\n\t  BN.prototype.muln = function muln(num) {\n\t    return this.clone().imuln(num);\n\t  };\n\t\n\t  // `this` * `this`\n\t  BN.prototype.sqr = function sqr() {\n\t    return this.mul(this);\n\t  };\n\t\n\t  // `this` * `this` in-place\n\t  BN.prototype.isqr = function isqr() {\n\t    return this.mul(this);\n\t  };\n\t\n\t  // Math.pow(`this`, `num`)\n\t  BN.prototype.pow = function pow(num) {\n\t    var w = toBitArray(num);\n\t    if (w.length === 0) return new BN(1);\n\t\n\t    // Skip leading zeroes\n\t    var res = this;\n\t    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n\t      if (w[i] !== 0) break;\n\t    }if (++i < w.length) {\n\t      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n\t        if (w[i] === 0) continue;\n\t        res = res.mul(q);\n\t      }\n\t    }\n\t\n\t    return res;\n\t  };\n\t\n\t  // Shift-left in-place\n\t  BN.prototype.iushln = function iushln(bits) {\n\t    assert(typeof bits === 'number' && bits >= 0);\n\t    var r = bits % 26;\n\t    var s = (bits - r) / 26;\n\t    var carryMask = 0x3ffffff >>> 26 - r << 26 - r;\n\t\n\t    if (r !== 0) {\n\t      var carry = 0;\n\t      for (var i = 0; i < this.length; i++) {\n\t        var newCarry = this.words[i] & carryMask;\n\t        var c = this.words[i] - newCarry << r;\n\t        this.words[i] = c | carry;\n\t        carry = newCarry >>> 26 - r;\n\t      }\n\t      if (carry) {\n\t        this.words[i] = carry;\n\t        this.length++;\n\t      }\n\t    }\n\t\n\t    if (s !== 0) {\n\t      for (var i = this.length - 1; i >= 0; i--) {\n\t        this.words[i + s] = this.words[i];\n\t      }for (var i = 0; i < s; i++) {\n\t        this.words[i] = 0;\n\t      }this.length += s;\n\t    }\n\t\n\t    return this.strip();\n\t  };\n\t\n\t  BN.prototype.ishln = function ishln(bits) {\n\t    // TODO(indutny): implement me\n\t    assert(!this.sign);\n\t    return this.iushln(bits);\n\t  };\n\t\n\t  // Shift-right in-place\n\t  // NOTE: `hint` is a lowest bit before trailing zeroes\n\t  // NOTE: if `extended` is present - it will be filled with destroyed bits\n\t  BN.prototype.iushrn = function iushrn(bits, hint, extended) {\n\t    assert(typeof bits === 'number' && bits >= 0);\n\t    var h;\n\t    if (hint) h = (hint - hint % 26) / 26;else h = 0;\n\t\n\t    var r = bits % 26;\n\t    var s = Math.min((bits - r) / 26, this.length);\n\t    var mask = 0x3ffffff ^ 0x3ffffff >>> r << r;\n\t    var maskedWords = extended;\n\t\n\t    h -= s;\n\t    h = Math.max(0, h);\n\t\n\t    // Extended mode, copy masked part\n\t    if (maskedWords) {\n\t      for (var i = 0; i < s; i++) {\n\t        maskedWords.words[i] = this.words[i];\n\t      }maskedWords.length = s;\n\t    }\n\t\n\t    if (s === 0) {\n\t      // No-op, we should not move anything at all\n\t    } else if (this.length > s) {\n\t      this.length -= s;\n\t      for (var i = 0; i < this.length; i++) {\n\t        this.words[i] = this.words[i + s];\n\t      }\n\t    } else {\n\t      this.words[0] = 0;\n\t      this.length = 1;\n\t    }\n\t\n\t    var carry = 0;\n\t    for (var i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n\t      var word = this.words[i];\n\t      this.words[i] = carry << 26 - r | word >>> r;\n\t      carry = word & mask;\n\t    }\n\t\n\t    // Push carried bits as a mask\n\t    if (maskedWords && carry !== 0) maskedWords.words[maskedWords.length++] = carry;\n\t\n\t    if (this.length === 0) {\n\t      this.words[0] = 0;\n\t      this.length = 1;\n\t    }\n\t\n\t    this.strip();\n\t\n\t    return this;\n\t  };\n\t\n\t  BN.prototype.ishrn = function ishrn(bits, hint, extended) {\n\t    // TODO(indutny): implement me\n\t    assert(!this.sign);\n\t    return this.iushrn(bits, hint, extended);\n\t  };\n\t\n\t  // Shift-left\n\t  BN.prototype.shln = function shln(bits) {\n\t    return this.clone().ishln(bits);\n\t  };\n\t\n\t  BN.prototype.ushln = function ushln(bits) {\n\t    return this.clone().iushln(bits);\n\t  };\n\t\n\t  // Shift-right\n\t  BN.prototype.shrn = function shrn(bits) {\n\t    return this.clone().ishrn(bits);\n\t  };\n\t\n\t  BN.prototype.ushrn = function ushrn(bits) {\n\t    return this.clone().iushrn(bits);\n\t  };\n\t\n\t  // Test if n bit is set\n\t  BN.prototype.testn = function testn(bit) {\n\t    assert(typeof bit === 'number' && bit >= 0);\n\t    var r = bit % 26;\n\t    var s = (bit - r) / 26;\n\t    var q = 1 << r;\n\t\n\t    // Fast case: bit is much higher than all existing words\n\t    if (this.length <= s) {\n\t      return false;\n\t    }\n\t\n\t    // Check bit and return\n\t    var w = this.words[s];\n\t\n\t    return !!(w & q);\n\t  };\n\t\n\t  // Return only lowers bits of number (in-place)\n\t  BN.prototype.imaskn = function imaskn(bits) {\n\t    assert(typeof bits === 'number' && bits >= 0);\n\t    var r = bits % 26;\n\t    var s = (bits - r) / 26;\n\t\n\t    assert(!this.sign, 'imaskn works only with positive numbers');\n\t\n\t    if (r !== 0) s++;\n\t    this.length = Math.min(s, this.length);\n\t\n\t    if (r !== 0) {\n\t      var mask = 0x3ffffff ^ 0x3ffffff >>> r << r;\n\t      this.words[this.length - 1] &= mask;\n\t    }\n\t\n\t    return this.strip();\n\t  };\n\t\n\t  // Return only lowers bits of number\n\t  BN.prototype.maskn = function maskn(bits) {\n\t    return this.clone().imaskn(bits);\n\t  };\n\t\n\t  // Add plain number `num` to `this`\n\t  BN.prototype.iaddn = function iaddn(num) {\n\t    assert(typeof num === 'number');\n\t    if (num < 0) return this.isubn(-num);\n\t\n\t    // Possible sign change\n\t    if (this.sign) {\n\t      if (this.length === 1 && this.words[0] < num) {\n\t        this.words[0] = num - this.words[0];\n\t        this.sign = false;\n\t        return this;\n\t      }\n\t\n\t      this.sign = false;\n\t      this.isubn(num);\n\t      this.sign = true;\n\t      return this;\n\t    }\n\t\n\t    // Add without checks\n\t    return this._iaddn(num);\n\t  };\n\t\n\t  BN.prototype._iaddn = function _iaddn(num) {\n\t    this.words[0] += num;\n\t\n\t    // Carry\n\t    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n\t      this.words[i] -= 0x4000000;\n\t      if (i === this.length - 1) this.words[i + 1] = 1;else this.words[i + 1]++;\n\t    }\n\t    this.length = Math.max(this.length, i + 1);\n\t\n\t    return this;\n\t  };\n\t\n\t  // Subtract plain number `num` from `this`\n\t  BN.prototype.isubn = function isubn(num) {\n\t    assert(typeof num === 'number');\n\t    if (num < 0) return this.iaddn(-num);\n\t\n\t    if (this.sign) {\n\t      this.sign = false;\n\t      this.iaddn(num);\n\t      this.sign = true;\n\t      return this;\n\t    }\n\t\n\t    this.words[0] -= num;\n\t\n\t    // Carry\n\t    for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n\t      this.words[i] += 0x4000000;\n\t      this.words[i + 1] -= 1;\n\t    }\n\t\n\t    return this.strip();\n\t  };\n\t\n\t  BN.prototype.addn = function addn(num) {\n\t    return this.clone().iaddn(num);\n\t  };\n\t\n\t  BN.prototype.subn = function subn(num) {\n\t    return this.clone().isubn(num);\n\t  };\n\t\n\t  BN.prototype.iabs = function iabs() {\n\t    this.sign = false;\n\t\n\t    return this;\n\t  };\n\t\n\t  BN.prototype.abs = function abs() {\n\t    return this.clone().iabs();\n\t  };\n\t\n\t  BN.prototype._ishlnsubmul = function _ishlnsubmul(num, mul, shift) {\n\t    // Bigger storage is needed\n\t    var len = num.length + shift;\n\t    var i;\n\t    if (this.words.length < len) {\n\t      var t = new Array(len);\n\t      for (var i = 0; i < this.length; i++) {\n\t        t[i] = this.words[i];\n\t      }this.words = t;\n\t    } else {\n\t      i = this.length;\n\t    }\n\t\n\t    // Zeroify rest\n\t    this.length = Math.max(this.length, len);\n\t    for (; i < this.length; i++) {\n\t      this.words[i] = 0;\n\t    }var carry = 0;\n\t    for (var i = 0; i < num.length; i++) {\n\t      var w = this.words[i + shift] + carry;\n\t      var right = num.words[i] * mul;\n\t      w -= right & 0x3ffffff;\n\t      carry = (w >> 26) - (right / 0x4000000 | 0);\n\t      this.words[i + shift] = w & 0x3ffffff;\n\t    }\n\t    for (; i < this.length - shift; i++) {\n\t      var w = this.words[i + shift] + carry;\n\t      carry = w >> 26;\n\t      this.words[i + shift] = w & 0x3ffffff;\n\t    }\n\t\n\t    if (carry === 0) return this.strip();\n\t\n\t    // Subtraction overflow\n\t    assert(carry === -1);\n\t    carry = 0;\n\t    for (var i = 0; i < this.length; i++) {\n\t      var w = -this.words[i] + carry;\n\t      carry = w >> 26;\n\t      this.words[i] = w & 0x3ffffff;\n\t    }\n\t    this.sign = true;\n\t\n\t    return this.strip();\n\t  };\n\t\n\t  BN.prototype._wordDiv = function _wordDiv(num, mode) {\n\t    var shift = this.length - num.length;\n\t\n\t    var a = this.clone();\n\t    var b = num;\n\t\n\t    // Normalize\n\t    var bhi = b.words[b.length - 1];\n\t    var bhiBits = this._countBits(bhi);\n\t    shift = 26 - bhiBits;\n\t    if (shift !== 0) {\n\t      b = b.ushln(shift);\n\t      a.iushln(shift);\n\t      bhi = b.words[b.length - 1];\n\t    }\n\t\n\t    // Initialize quotient\n\t    var m = a.length - b.length;\n\t    var q;\n\t\n\t    if (mode !== 'mod') {\n\t      q = new BN(null);\n\t      q.length = m + 1;\n\t      q.words = new Array(q.length);\n\t      for (var i = 0; i < q.length; i++) {\n\t        q.words[i] = 0;\n\t      }\n\t    }\n\t\n\t    var diff = a.clone()._ishlnsubmul(b, 1, m);\n\t    if (!diff.sign) {\n\t      a = diff;\n\t      if (q) q.words[m] = 1;\n\t    }\n\t\n\t    for (var j = m - 1; j >= 0; j--) {\n\t      var qj = a.words[b.length + j] * 0x4000000 + a.words[b.length + j - 1];\n\t\n\t      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n\t      // (0x7ffffff)\n\t      qj = Math.min(qj / bhi | 0, 0x3ffffff);\n\t\n\t      a._ishlnsubmul(b, qj, j);\n\t      while (a.sign) {\n\t        qj--;\n\t        a.sign = false;\n\t        a._ishlnsubmul(b, 1, j);\n\t        if (a.cmpn(0) !== 0) a.sign = !a.sign;\n\t      }\n\t      if (q) q.words[j] = qj;\n\t    }\n\t    if (q) q.strip();\n\t    a.strip();\n\t\n\t    // Denormalize\n\t    if (mode !== 'div' && shift !== 0) a.iushrn(shift);\n\t    return { div: q ? q : null, mod: a };\n\t  };\n\t\n\t  BN.prototype.divmod = function divmod(num, mode, positive) {\n\t    assert(num.cmpn(0) !== 0);\n\t\n\t    if (this.sign && !num.sign) {\n\t      var res = this.neg().divmod(num, mode);\n\t      var div;\n\t      var mod;\n\t      if (mode !== 'mod') div = res.div.neg();\n\t      if (mode !== 'div') {\n\t        mod = res.mod.neg();\n\t        if (positive && mod.neg) mod = mod.add(num);\n\t      }\n\t      return {\n\t        div: div,\n\t        mod: mod\n\t      };\n\t    } else if (!this.sign && num.sign) {\n\t      var res = this.divmod(num.neg(), mode);\n\t      var div;\n\t      if (mode !== 'mod') div = res.div.neg();\n\t      return { div: div, mod: res.mod };\n\t    } else if (this.sign && num.sign) {\n\t      var res = this.neg().divmod(num.neg(), mode);\n\t      var mod;\n\t      if (mode !== 'div') {\n\t        mod = res.mod.neg();\n\t        if (positive && mod.neg) mod = mod.isub(num);\n\t      }\n\t      return {\n\t        div: res.div,\n\t        mod: mod\n\t      };\n\t    }\n\t\n\t    // Both numbers are positive at this point\n\t\n\t    // Strip both numbers to approximate shift value\n\t    if (num.length > this.length || this.cmp(num) < 0) return { div: new BN(0), mod: this };\n\t\n\t    // Very short reduction\n\t    if (num.length === 1) {\n\t      if (mode === 'div') return { div: this.divn(num.words[0]), mod: null };else if (mode === 'mod') return { div: null, mod: new BN(this.modn(num.words[0])) };\n\t      return {\n\t        div: this.divn(num.words[0]),\n\t        mod: new BN(this.modn(num.words[0]))\n\t      };\n\t    }\n\t\n\t    return this._wordDiv(num, mode);\n\t  };\n\t\n\t  // Find `this` / `num`\n\t  BN.prototype.div = function div(num) {\n\t    return this.divmod(num, 'div', false).div;\n\t  };\n\t\n\t  // Find `this` % `num`\n\t  BN.prototype.mod = function mod(num) {\n\t    return this.divmod(num, 'mod', false).mod;\n\t  };\n\t\n\t  BN.prototype.umod = function umod(num) {\n\t    return this.divmod(num, 'mod', true).mod;\n\t  };\n\t\n\t  // Find Round(`this` / `num`)\n\t  BN.prototype.divRound = function divRound(num) {\n\t    var dm = this.divmod(num);\n\t\n\t    // Fast case - exact division\n\t    if (dm.mod.cmpn(0) === 0) return dm.div;\n\t\n\t    var mod = dm.div.sign ? dm.mod.isub(num) : dm.mod;\n\t\n\t    var half = num.ushrn(1);\n\t    var r2 = num.andln(1);\n\t    var cmp = mod.cmp(half);\n\t\n\t    // Round down\n\t    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\t\n\t    // Round up\n\t    return dm.div.sign ? dm.div.isubn(1) : dm.div.iaddn(1);\n\t  };\n\t\n\t  BN.prototype.modn = function modn(num) {\n\t    assert(num <= 0x3ffffff);\n\t    var p = (1 << 26) % num;\n\t\n\t    var acc = 0;\n\t    for (var i = this.length - 1; i >= 0; i--) {\n\t      acc = (p * acc + this.words[i]) % num;\n\t    }return acc;\n\t  };\n\t\n\t  // In-place division by number\n\t  BN.prototype.idivn = function idivn(num) {\n\t    assert(num <= 0x3ffffff);\n\t\n\t    var carry = 0;\n\t    for (var i = this.length - 1; i >= 0; i--) {\n\t      var w = this.words[i] + carry * 0x4000000;\n\t      this.words[i] = w / num | 0;\n\t      carry = w % num;\n\t    }\n\t\n\t    return this.strip();\n\t  };\n\t\n\t  BN.prototype.divn = function divn(num) {\n\t    return this.clone().idivn(num);\n\t  };\n\t\n\t  BN.prototype.egcd = function egcd(p) {\n\t    assert(!p.sign);\n\t    assert(p.cmpn(0) !== 0);\n\t\n\t    var x = this;\n\t    var y = p.clone();\n\t\n\t    if (x.sign) x = x.umod(p);else x = x.clone();\n\t\n\t    // A * x + B * y = x\n\t    var A = new BN(1);\n\t    var B = new BN(0);\n\t\n\t    // C * x + D * y = y\n\t    var C = new BN(0);\n\t    var D = new BN(1);\n\t\n\t    var g = 0;\n\t\n\t    while (x.isEven() && y.isEven()) {\n\t      x.iushrn(1);\n\t      y.iushrn(1);\n\t      ++g;\n\t    }\n\t\n\t    var yp = y.clone();\n\t    var xp = x.clone();\n\t\n\t    while (x.cmpn(0) !== 0) {\n\t      while (x.isEven()) {\n\t        x.iushrn(1);\n\t        if (A.isEven() && B.isEven()) {\n\t          A.iushrn(1);\n\t          B.iushrn(1);\n\t        } else {\n\t          A.iadd(yp).iushrn(1);\n\t          B.isub(xp).iushrn(1);\n\t        }\n\t      }\n\t\n\t      while (y.isEven()) {\n\t        y.iushrn(1);\n\t        if (C.isEven() && D.isEven()) {\n\t          C.iushrn(1);\n\t          D.iushrn(1);\n\t        } else {\n\t          C.iadd(yp).iushrn(1);\n\t          D.isub(xp).iushrn(1);\n\t        }\n\t      }\n\t\n\t      if (x.cmp(y) >= 0) {\n\t        x.isub(y);\n\t        A.isub(C);\n\t        B.isub(D);\n\t      } else {\n\t        y.isub(x);\n\t        C.isub(A);\n\t        D.isub(B);\n\t      }\n\t    }\n\t\n\t    return {\n\t      a: C,\n\t      b: D,\n\t      gcd: y.iushln(g)\n\t    };\n\t  };\n\t\n\t  // This is reduced incarnation of the binary EEA\n\t  // above, designated to invert members of the\n\t  // _prime_ fields F(p) at a maximal speed\n\t  BN.prototype._invmp = function _invmp(p) {\n\t    assert(!p.sign);\n\t    assert(p.cmpn(0) !== 0);\n\t\n\t    var a = this;\n\t    var b = p.clone();\n\t\n\t    if (a.sign) a = a.umod(p);else a = a.clone();\n\t\n\t    var x1 = new BN(1);\n\t    var x2 = new BN(0);\n\t\n\t    var delta = b.clone();\n\t\n\t    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n\t      while (a.isEven()) {\n\t        a.iushrn(1);\n\t        if (x1.isEven()) x1.iushrn(1);else x1.iadd(delta).iushrn(1);\n\t      }\n\t      while (b.isEven()) {\n\t        b.iushrn(1);\n\t        if (x2.isEven()) x2.iushrn(1);else x2.iadd(delta).iushrn(1);\n\t      }\n\t      if (a.cmp(b) >= 0) {\n\t        a.isub(b);\n\t        x1.isub(x2);\n\t      } else {\n\t        b.isub(a);\n\t        x2.isub(x1);\n\t      }\n\t    }\n\t\n\t    var res;\n\t    if (a.cmpn(1) === 0) res = x1;else res = x2;\n\t\n\t    if (res.cmpn(0) < 0) res.iadd(p);\n\t\n\t    return res;\n\t  };\n\t\n\t  BN.prototype.gcd = function gcd(num) {\n\t    if (this.cmpn(0) === 0) return num.clone();\n\t    if (num.cmpn(0) === 0) return this.clone();\n\t\n\t    var a = this.clone();\n\t    var b = num.clone();\n\t    a.sign = false;\n\t    b.sign = false;\n\t\n\t    // Remove common factor of two\n\t    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n\t      a.iushrn(1);\n\t      b.iushrn(1);\n\t    }\n\t\n\t    do {\n\t      while (a.isEven()) {\n\t        a.iushrn(1);\n\t      }while (b.isEven()) {\n\t        b.iushrn(1);\n\t      }var r = a.cmp(b);\n\t      if (r < 0) {\n\t        // Swap `a` and `b` to make `a` always bigger than `b`\n\t        var t = a;\n\t        a = b;\n\t        b = t;\n\t      } else if (r === 0 || b.cmpn(1) === 0) {\n\t        break;\n\t      }\n\t\n\t      a.isub(b);\n\t    } while (true);\n\t\n\t    return b.iushln(shift);\n\t  };\n\t\n\t  // Invert number in the field F(num)\n\t  BN.prototype.invm = function invm(num) {\n\t    return this.egcd(num).a.umod(num);\n\t  };\n\t\n\t  BN.prototype.isEven = function isEven() {\n\t    return (this.words[0] & 1) === 0;\n\t  };\n\t\n\t  BN.prototype.isOdd = function isOdd() {\n\t    return (this.words[0] & 1) === 1;\n\t  };\n\t\n\t  // And first word and num\n\t  BN.prototype.andln = function andln(num) {\n\t    return this.words[0] & num;\n\t  };\n\t\n\t  // Increment at the bit position in-line\n\t  BN.prototype.bincn = function bincn(bit) {\n\t    assert(typeof bit === 'number');\n\t    var r = bit % 26;\n\t    var s = (bit - r) / 26;\n\t    var q = 1 << r;\n\t\n\t    // Fast case: bit is much higher than all existing words\n\t    if (this.length <= s) {\n\t      for (var i = this.length; i < s + 1; i++) {\n\t        this.words[i] = 0;\n\t      }this.words[s] |= q;\n\t      this.length = s + 1;\n\t      return this;\n\t    }\n\t\n\t    // Add bit and propagate, if needed\n\t    var carry = q;\n\t    for (var i = s; carry !== 0 && i < this.length; i++) {\n\t      var w = this.words[i];\n\t      w += carry;\n\t      carry = w >>> 26;\n\t      w &= 0x3ffffff;\n\t      this.words[i] = w;\n\t    }\n\t    if (carry !== 0) {\n\t      this.words[i] = carry;\n\t      this.length++;\n\t    }\n\t    return this;\n\t  };\n\t\n\t  BN.prototype.cmpn = function cmpn(num) {\n\t    var sign = num < 0;\n\t    if (sign) num = -num;\n\t\n\t    if (this.sign && !sign) return -1;else if (!this.sign && sign) return 1;\n\t\n\t    num &= 0x3ffffff;\n\t    this.strip();\n\t\n\t    var res;\n\t    if (this.length > 1) {\n\t      res = 1;\n\t    } else {\n\t      var w = this.words[0];\n\t      res = w === num ? 0 : w < num ? -1 : 1;\n\t    }\n\t    if (this.sign) res = -res;\n\t    return res;\n\t  };\n\t\n\t  // Compare two numbers and return:\n\t  // 1 - if `this` > `num`\n\t  // 0 - if `this` == `num`\n\t  // -1 - if `this` < `num`\n\t  BN.prototype.cmp = function cmp(num) {\n\t    if (this.sign && !num.sign) return -1;else if (!this.sign && num.sign) return 1;\n\t\n\t    var res = this.ucmp(num);\n\t    if (this.sign) return -res;else return res;\n\t  };\n\t\n\t  // Unsigned comparison\n\t  BN.prototype.ucmp = function ucmp(num) {\n\t    // At this point both numbers have the same sign\n\t    if (this.length > num.length) return 1;else if (this.length < num.length) return -1;\n\t\n\t    var res = 0;\n\t    for (var i = this.length - 1; i >= 0; i--) {\n\t      var a = this.words[i];\n\t      var b = num.words[i];\n\t\n\t      if (a === b) continue;\n\t      if (a < b) res = -1;else if (a > b) res = 1;\n\t      break;\n\t    }\n\t    return res;\n\t  };\n\t\n\t  //\n\t  // A reduce context, could be using montgomery or something better, depending\n\t  // on the `m` itself.\n\t  //\n\t  BN.red = function red(num) {\n\t    return new Red(num);\n\t  };\n\t\n\t  BN.prototype.toRed = function toRed(ctx) {\n\t    assert(!this.red, 'Already a number in reduction context');\n\t    assert(!this.sign, 'red works only with positives');\n\t    return ctx.convertTo(this)._forceRed(ctx);\n\t  };\n\t\n\t  BN.prototype.fromRed = function fromRed() {\n\t    assert(this.red, 'fromRed works only with numbers in reduction context');\n\t    return this.red.convertFrom(this);\n\t  };\n\t\n\t  BN.prototype._forceRed = function _forceRed(ctx) {\n\t    this.red = ctx;\n\t    return this;\n\t  };\n\t\n\t  BN.prototype.forceRed = function forceRed(ctx) {\n\t    assert(!this.red, 'Already a number in reduction context');\n\t    return this._forceRed(ctx);\n\t  };\n\t\n\t  BN.prototype.redAdd = function redAdd(num) {\n\t    assert(this.red, 'redAdd works only with red numbers');\n\t    return this.red.add(this, num);\n\t  };\n\t\n\t  BN.prototype.redIAdd = function redIAdd(num) {\n\t    assert(this.red, 'redIAdd works only with red numbers');\n\t    return this.red.iadd(this, num);\n\t  };\n\t\n\t  BN.prototype.redSub = function redSub(num) {\n\t    assert(this.red, 'redSub works only with red numbers');\n\t    return this.red.sub(this, num);\n\t  };\n\t\n\t  BN.prototype.redISub = function redISub(num) {\n\t    assert(this.red, 'redISub works only with red numbers');\n\t    return this.red.isub(this, num);\n\t  };\n\t\n\t  BN.prototype.redShl = function redShl(num) {\n\t    assert(this.red, 'redShl works only with red numbers');\n\t    return this.red.ushl(this, num);\n\t  };\n\t\n\t  BN.prototype.redMul = function redMul(num) {\n\t    assert(this.red, 'redMul works only with red numbers');\n\t    this.red._verify2(this, num);\n\t    return this.red.mul(this, num);\n\t  };\n\t\n\t  BN.prototype.redIMul = function redIMul(num) {\n\t    assert(this.red, 'redMul works only with red numbers');\n\t    this.red._verify2(this, num);\n\t    return this.red.imul(this, num);\n\t  };\n\t\n\t  BN.prototype.redSqr = function redSqr() {\n\t    assert(this.red, 'redSqr works only with red numbers');\n\t    this.red._verify1(this);\n\t    return this.red.sqr(this);\n\t  };\n\t\n\t  BN.prototype.redISqr = function redISqr() {\n\t    assert(this.red, 'redISqr works only with red numbers');\n\t    this.red._verify1(this);\n\t    return this.red.isqr(this);\n\t  };\n\t\n\t  // Square root over p\n\t  BN.prototype.redSqrt = function redSqrt() {\n\t    assert(this.red, 'redSqrt works only with red numbers');\n\t    this.red._verify1(this);\n\t    return this.red.sqrt(this);\n\t  };\n\t\n\t  BN.prototype.redInvm = function redInvm() {\n\t    assert(this.red, 'redInvm works only with red numbers');\n\t    this.red._verify1(this);\n\t    return this.red.invm(this);\n\t  };\n\t\n\t  // Return negative clone of `this` % `red modulo`\n\t  BN.prototype.redNeg = function redNeg() {\n\t    assert(this.red, 'redNeg works only with red numbers');\n\t    this.red._verify1(this);\n\t    return this.red.neg(this);\n\t  };\n\t\n\t  BN.prototype.redPow = function redPow(num) {\n\t    assert(this.red && !num.red, 'redPow(normalNum)');\n\t    this.red._verify1(this);\n\t    return this.red.pow(this, num);\n\t  };\n\t\n\t  // Prime numbers with efficient reduction\n\t  var primes = {\n\t    k256: null,\n\t    p224: null,\n\t    p192: null,\n\t    p25519: null\n\t  };\n\t\n\t  // Pseudo-Mersenne prime\n\t  function MPrime(name, p) {\n\t    // P = 2 ^ N - K\n\t    this.name = name;\n\t    this.p = new BN(p, 16);\n\t    this.n = this.p.bitLength();\n\t    this.k = new BN(1).iushln(this.n).isub(this.p);\n\t\n\t    this.tmp = this._tmp();\n\t  }\n\t\n\t  MPrime.prototype._tmp = function _tmp() {\n\t    var tmp = new BN(null);\n\t    tmp.words = new Array(Math.ceil(this.n / 13));\n\t    return tmp;\n\t  };\n\t\n\t  MPrime.prototype.ireduce = function ireduce(num) {\n\t    // Assumes that `num` is less than `P^2`\n\t    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n\t    var r = num;\n\t    var rlen;\n\t\n\t    do {\n\t      this.split(r, this.tmp);\n\t      r = this.imulK(r);\n\t      r = r.iadd(this.tmp);\n\t      rlen = r.bitLength();\n\t    } while (rlen > this.n);\n\t\n\t    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n\t    if (cmp === 0) {\n\t      r.words[0] = 0;\n\t      r.length = 1;\n\t    } else if (cmp > 0) {\n\t      r.isub(this.p);\n\t    } else {\n\t      r.strip();\n\t    }\n\t\n\t    return r;\n\t  };\n\t\n\t  MPrime.prototype.split = function split(input, out) {\n\t    input.iushrn(this.n, 0, out);\n\t  };\n\t\n\t  MPrime.prototype.imulK = function imulK(num) {\n\t    return num.imul(this.k);\n\t  };\n\t\n\t  function K256() {\n\t    MPrime.call(this, 'k256', 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n\t  }\n\t  inherits(K256, MPrime);\n\t\n\t  K256.prototype.split = function split(input, output) {\n\t    // 256 = 9 * 26 + 22\n\t    var mask = 0x3fffff;\n\t\n\t    var outLen = Math.min(input.length, 9);\n\t    for (var i = 0; i < outLen; i++) {\n\t      output.words[i] = input.words[i];\n\t    }output.length = outLen;\n\t\n\t    if (input.length <= 9) {\n\t      input.words[0] = 0;\n\t      input.length = 1;\n\t      return;\n\t    }\n\t\n\t    // Shift by 9 limbs\n\t    var prev = input.words[9];\n\t    output.words[output.length++] = prev & mask;\n\t\n\t    for (var i = 10; i < input.length; i++) {\n\t      var next = input.words[i];\n\t      input.words[i - 10] = (next & mask) << 4 | prev >>> 22;\n\t      prev = next;\n\t    }\n\t    input.words[i - 10] = prev >>> 22;\n\t    input.length -= 9;\n\t  };\n\t\n\t  K256.prototype.imulK = function imulK(num) {\n\t    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n\t    num.words[num.length] = 0;\n\t    num.words[num.length + 1] = 0;\n\t    num.length += 2;\n\t\n\t    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n\t    var hi;\n\t    var lo = 0;\n\t    for (var i = 0; i < num.length; i++) {\n\t      var w = num.words[i];\n\t      hi = w * 0x40;\n\t      lo += w * 0x3d1;\n\t      hi += lo / 0x4000000 | 0;\n\t      lo &= 0x3ffffff;\n\t\n\t      num.words[i] = lo;\n\t\n\t      lo = hi;\n\t    }\n\t\n\t    // Fast length reduction\n\t    if (num.words[num.length - 1] === 0) {\n\t      num.length--;\n\t      if (num.words[num.length - 1] === 0) num.length--;\n\t    }\n\t    return num;\n\t  };\n\t\n\t  function P224() {\n\t    MPrime.call(this, 'p224', 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n\t  }\n\t  inherits(P224, MPrime);\n\t\n\t  function P192() {\n\t    MPrime.call(this, 'p192', 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n\t  }\n\t  inherits(P192, MPrime);\n\t\n\t  function P25519() {\n\t    // 2 ^ 255 - 19\n\t    MPrime.call(this, '25519', '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n\t  }\n\t  inherits(P25519, MPrime);\n\t\n\t  P25519.prototype.imulK = function imulK(num) {\n\t    // K = 0x13\n\t    var carry = 0;\n\t    for (var i = 0; i < num.length; i++) {\n\t      var hi = num.words[i] * 0x13 + carry;\n\t      var lo = hi & 0x3ffffff;\n\t      hi >>>= 26;\n\t\n\t      num.words[i] = lo;\n\t      carry = hi;\n\t    }\n\t    if (carry !== 0) num.words[num.length++] = carry;\n\t    return num;\n\t  };\n\t\n\t  // Exported mostly for testing purposes, use plain name instead\n\t  BN._prime = function prime(name) {\n\t    // Cached version of prime\n\t    if (primes[name]) return primes[name];\n\t\n\t    var prime;\n\t    if (name === 'k256') prime = new K256();else if (name === 'p224') prime = new P224();else if (name === 'p192') prime = new P192();else if (name === 'p25519') prime = new P25519();else throw new Error('Unknown prime ' + name);\n\t    primes[name] = prime;\n\t\n\t    return prime;\n\t  };\n\t\n\t  //\n\t  // Base reduction engine\n\t  //\n\t  function Red(m) {\n\t    if (typeof m === 'string') {\n\t      var prime = BN._prime(m);\n\t      this.m = prime.p;\n\t      this.prime = prime;\n\t    } else {\n\t      this.m = m;\n\t      this.prime = null;\n\t    }\n\t  }\n\t\n\t  Red.prototype._verify1 = function _verify1(a) {\n\t    assert(!a.sign, 'red works only with positives');\n\t    assert(a.red, 'red works only with red numbers');\n\t  };\n\t\n\t  Red.prototype._verify2 = function _verify2(a, b) {\n\t    assert(!a.sign && !b.sign, 'red works only with positives');\n\t    assert(a.red && a.red === b.red, 'red works only with red numbers');\n\t  };\n\t\n\t  Red.prototype.imod = function imod(a) {\n\t    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\t    return a.umod(this.m)._forceRed(this);\n\t  };\n\t\n\t  Red.prototype.neg = function neg(a) {\n\t    var r = a.clone();\n\t    r.sign = !r.sign;\n\t    return r.iadd(this.m)._forceRed(this);\n\t  };\n\t\n\t  Red.prototype.add = function add(a, b) {\n\t    this._verify2(a, b);\n\t\n\t    var res = a.add(b);\n\t    if (res.cmp(this.m) >= 0) res.isub(this.m);\n\t    return res._forceRed(this);\n\t  };\n\t\n\t  Red.prototype.iadd = function iadd(a, b) {\n\t    this._verify2(a, b);\n\t\n\t    var res = a.iadd(b);\n\t    if (res.cmp(this.m) >= 0) res.isub(this.m);\n\t    return res;\n\t  };\n\t\n\t  Red.prototype.sub = function sub(a, b) {\n\t    this._verify2(a, b);\n\t\n\t    var res = a.sub(b);\n\t    if (res.cmpn(0) < 0) res.iadd(this.m);\n\t    return res._forceRed(this);\n\t  };\n\t\n\t  Red.prototype.isub = function isub(a, b) {\n\t    this._verify2(a, b);\n\t\n\t    var res = a.isub(b);\n\t    if (res.cmpn(0) < 0) res.iadd(this.m);\n\t    return res;\n\t  };\n\t\n\t  Red.prototype.shl = function shl(a, num) {\n\t    this._verify1(a);\n\t    return this.imod(a.ushln(num));\n\t  };\n\t\n\t  Red.prototype.imul = function imul(a, b) {\n\t    this._verify2(a, b);\n\t    return this.imod(a.imul(b));\n\t  };\n\t\n\t  Red.prototype.mul = function mul(a, b) {\n\t    this._verify2(a, b);\n\t    return this.imod(a.mul(b));\n\t  };\n\t\n\t  Red.prototype.isqr = function isqr(a) {\n\t    return this.imul(a, a);\n\t  };\n\t\n\t  Red.prototype.sqr = function sqr(a) {\n\t    return this.mul(a, a);\n\t  };\n\t\n\t  Red.prototype.sqrt = function sqrt(a) {\n\t    if (a.cmpn(0) === 0) return a.clone();\n\t\n\t    var mod3 = this.m.andln(3);\n\t    assert(mod3 % 2 === 1);\n\t\n\t    // Fast case\n\t    if (mod3 === 3) {\n\t      var pow = this.m.add(new BN(1)).iushrn(2);\n\t      var r = this.pow(a, pow);\n\t      return r;\n\t    }\n\t\n\t    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n\t    //\n\t    // Find Q and S, that Q * 2 ^ S = (P - 1)\n\t    var q = this.m.subn(1);\n\t    var s = 0;\n\t    while (q.cmpn(0) !== 0 && q.andln(1) === 0) {\n\t      s++;\n\t      q.iushrn(1);\n\t    }\n\t    assert(q.cmpn(0) !== 0);\n\t\n\t    var one = new BN(1).toRed(this);\n\t    var nOne = one.redNeg();\n\t\n\t    // Find quadratic non-residue\n\t    // NOTE: Max is such because of generalized Riemann hypothesis.\n\t    var lpow = this.m.subn(1).iushrn(1);\n\t    var z = this.m.bitLength();\n\t    z = new BN(2 * z * z).toRed(this);\n\t    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n\t      z.redIAdd(nOne);\n\t    }var c = this.pow(z, q);\n\t    var r = this.pow(a, q.addn(1).iushrn(1));\n\t    var t = this.pow(a, q);\n\t    var m = s;\n\t    while (t.cmp(one) !== 0) {\n\t      var tmp = t;\n\t      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n\t        tmp = tmp.redSqr();\n\t      }assert(i < m);\n\t      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\t\n\t      r = r.redMul(b);\n\t      c = b.redSqr();\n\t      t = t.redMul(c);\n\t      m = i;\n\t    }\n\t\n\t    return r;\n\t  };\n\t\n\t  Red.prototype.invm = function invm(a) {\n\t    var inv = a._invmp(this.m);\n\t    if (inv.sign) {\n\t      inv.sign = false;\n\t      return this.imod(inv).redNeg();\n\t    } else {\n\t      return this.imod(inv);\n\t    }\n\t  };\n\t\n\t  Red.prototype.pow = function pow(a, num) {\n\t    var w = toBitArray(num);\n\t    if (w.length === 0) return new BN(1);\n\t\n\t    // Skip leading zeroes\n\t    var res = a;\n\t    for (var i = 0; i < w.length; i++, res = this.sqr(res)) {\n\t      if (w[i] !== 0) break;\n\t    }if (++i < w.length) {\n\t      for (var q = this.sqr(res); i < w.length; i++, q = this.sqr(q)) {\n\t        if (w[i] === 0) continue;\n\t        res = this.mul(res, q);\n\t      }\n\t    }\n\t\n\t    return res;\n\t  };\n\t\n\t  Red.prototype.convertTo = function convertTo(num) {\n\t    var r = num.umod(this.m);\n\t    if (r === num) return r.clone();else return r;\n\t  };\n\t\n\t  Red.prototype.convertFrom = function convertFrom(num) {\n\t    var res = num.clone();\n\t    res.red = null;\n\t    return res;\n\t  };\n\t\n\t  //\n\t  // Montgomery method engine\n\t  //\n\t\n\t  BN.mont = function mont(num) {\n\t    return new Mont(num);\n\t  };\n\t\n\t  function Mont(m) {\n\t    Red.call(this, m);\n\t\n\t    this.shift = this.m.bitLength();\n\t    if (this.shift % 26 !== 0) this.shift += 26 - this.shift % 26;\n\t    this.r = new BN(1).iushln(this.shift);\n\t    this.r2 = this.imod(this.r.sqr());\n\t    this.rinv = this.r._invmp(this.m);\n\t\n\t    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n\t    this.minv = this.minv.umod(this.r);\n\t    this.minv = this.r.sub(this.minv);\n\t  }\n\t  inherits(Mont, Red);\n\t\n\t  Mont.prototype.convertTo = function convertTo(num) {\n\t    return this.imod(num.ushln(this.shift));\n\t  };\n\t\n\t  Mont.prototype.convertFrom = function convertFrom(num) {\n\t    var r = this.imod(num.mul(this.rinv));\n\t    r.red = null;\n\t    return r;\n\t  };\n\t\n\t  Mont.prototype.imul = function imul(a, b) {\n\t    if (a.cmpn(0) === 0 || b.cmpn(0) === 0) {\n\t      a.words[0] = 0;\n\t      a.length = 1;\n\t      return a;\n\t    }\n\t\n\t    var t = a.imul(b);\n\t    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n\t    var u = t.isub(c).iushrn(this.shift);\n\t    var res = u;\n\t    if (u.cmp(this.m) >= 0) res = u.isub(this.m);else if (u.cmpn(0) < 0) res = u.iadd(this.m);\n\t\n\t    return res._forceRed(this);\n\t  };\n\t\n\t  Mont.prototype.mul = function mul(a, b) {\n\t    if (a.cmpn(0) === 0 || b.cmpn(0) === 0) return new BN(0)._forceRed(this);\n\t\n\t    var t = a.mul(b);\n\t    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n\t    var u = t.isub(c).iushrn(this.shift);\n\t    var res = u;\n\t    if (u.cmp(this.m) >= 0) res = u.isub(this.m);else if (u.cmpn(0) < 0) res = u.iadd(this.m);\n\t\n\t    return res._forceRed(this);\n\t  };\n\t\n\t  Mont.prototype.invm = function invm(a) {\n\t    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n\t    var res = this.imod(a._invmp(this.m).mul(this.r2));\n\t    return res._forceRed(this);\n\t  };\n\t})(typeof module === 'undefined' || module, undefined);\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(294)(module)))\n\n/***/ },\n\n/***/ 1478:\n[2492, 1474],\n\n/***/ 1479:\n[2493, 1480, 1481, 1482, 1483],\n\n/***/ 1480:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar bn = __webpack_require__(1477);\n\tvar elliptic = __webpack_require__(1474);\n\tvar utils = elliptic.utils;\n\tvar getNAF = utils.getNAF;\n\tvar getJSF = utils.getJSF;\n\tvar assert = utils.assert;\n\t\n\tfunction BaseCurve(type, conf) {\n\t  this.type = type;\n\t  this.p = new bn(conf.p, 16);\n\t\n\t  // Use Montgomery, when there is no fast reduction for the prime\n\t  this.red = conf.prime ? bn.red(conf.prime) : bn.mont(this.p);\n\t\n\t  // Useful for many curves\n\t  this.zero = new bn(0).toRed(this.red);\n\t  this.one = new bn(1).toRed(this.red);\n\t  this.two = new bn(2).toRed(this.red);\n\t\n\t  // Curve configuration, optional\n\t  this.n = conf.n && new bn(conf.n, 16);\n\t  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);\n\t\n\t  // Temporary arrays\n\t  this._wnafT1 = new Array(4);\n\t  this._wnafT2 = new Array(4);\n\t  this._wnafT3 = new Array(4);\n\t  this._wnafT4 = new Array(4);\n\t}\n\tmodule.exports = BaseCurve;\n\t\n\tBaseCurve.prototype.point = function point() {\n\t  throw new Error('Not implemented');\n\t};\n\t\n\tBaseCurve.prototype.validate = function validate() {\n\t  throw new Error('Not implemented');\n\t};\n\t\n\tBaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {\n\t  assert(p.precomputed);\n\t  var doubles = p._getDoubles();\n\t\n\t  var naf = getNAF(k, 1);\n\t  var I = (1 << doubles.step + 1) - (doubles.step % 2 === 0 ? 2 : 1);\n\t  I /= 3;\n\t\n\t  // Translate into more windowed form\n\t  var repr = [];\n\t  for (var j = 0; j < naf.length; j += doubles.step) {\n\t    var nafW = 0;\n\t    for (var k = j + doubles.step - 1; k >= j; k--) {\n\t      nafW = (nafW << 1) + naf[k];\n\t    }repr.push(nafW);\n\t  }\n\t\n\t  var a = this.jpoint(null, null, null);\n\t  var b = this.jpoint(null, null, null);\n\t  for (var i = I; i > 0; i--) {\n\t    for (var j = 0; j < repr.length; j++) {\n\t      var nafW = repr[j];\n\t      if (nafW === i) b = b.mixedAdd(doubles.points[j]);else if (nafW === -i) b = b.mixedAdd(doubles.points[j].neg());\n\t    }\n\t    a = a.add(b);\n\t  }\n\t  return a.toP();\n\t};\n\t\n\tBaseCurve.prototype._wnafMul = function _wnafMul(p, k) {\n\t  var w = 4;\n\t\n\t  // Precompute window\n\t  var nafPoints = p._getNAFPoints(w);\n\t  w = nafPoints.wnd;\n\t  var wnd = nafPoints.points;\n\t\n\t  // Get NAF form\n\t  var naf = getNAF(k, w);\n\t\n\t  // Add `this`*(N+1) for every w-NAF index\n\t  var acc = this.jpoint(null, null, null);\n\t  for (var i = naf.length - 1; i >= 0; i--) {\n\t    // Count zeroes\n\t    for (var k = 0; i >= 0 && naf[i] === 0; i--) {\n\t      k++;\n\t    }if (i >= 0) k++;\n\t    acc = acc.dblp(k);\n\t\n\t    if (i < 0) break;\n\t    var z = naf[i];\n\t    assert(z !== 0);\n\t    if (p.type === 'affine') {\n\t      // J +- P\n\t      if (z > 0) acc = acc.mixedAdd(wnd[z - 1 >> 1]);else acc = acc.mixedAdd(wnd[-z - 1 >> 1].neg());\n\t    } else {\n\t      // J +- J\n\t      if (z > 0) acc = acc.add(wnd[z - 1 >> 1]);else acc = acc.add(wnd[-z - 1 >> 1].neg());\n\t    }\n\t  }\n\t  return p.type === 'affine' ? acc.toP() : acc;\n\t};\n\t\n\tBaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW, points, coeffs, len) {\n\t  var wndWidth = this._wnafT1;\n\t  var wnd = this._wnafT2;\n\t  var naf = this._wnafT3;\n\t\n\t  // Fill all arrays\n\t  var max = 0;\n\t  for (var i = 0; i < len; i++) {\n\t    var p = points[i];\n\t    var nafPoints = p._getNAFPoints(defW);\n\t    wndWidth[i] = nafPoints.wnd;\n\t    wnd[i] = nafPoints.points;\n\t  }\n\t\n\t  // Comb small window NAFs\n\t  for (var i = len - 1; i >= 1; i -= 2) {\n\t    var a = i - 1;\n\t    var b = i;\n\t    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {\n\t      naf[a] = getNAF(coeffs[a], wndWidth[a]);\n\t      naf[b] = getNAF(coeffs[b], wndWidth[b]);\n\t      max = Math.max(naf[a].length, max);\n\t      max = Math.max(naf[b].length, max);\n\t      continue;\n\t    }\n\t\n\t    var comb = [points[a], /* 1 */\n\t    null, /* 3 */\n\t    null, /* 5 */\n\t    points[b] /* 7 */\n\t    ];\n\t\n\t    // Try to avoid Projective points, if possible\n\t    if (points[a].y.cmp(points[b].y) === 0) {\n\t      comb[1] = points[a].add(points[b]);\n\t      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n\t    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {\n\t      comb[1] = points[a].toJ().mixedAdd(points[b]);\n\t      comb[2] = points[a].add(points[b].neg());\n\t    } else {\n\t      comb[1] = points[a].toJ().mixedAdd(points[b]);\n\t      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n\t    }\n\t\n\t    var index = [-3, /* -1 -1 */\n\t    -1, /* -1 0 */\n\t    -5, /* -1 1 */\n\t    -7, /* 0 -1 */\n\t    0, /* 0 0 */\n\t    7, /* 0 1 */\n\t    5, /* 1 -1 */\n\t    1, /* 1 0 */\n\t    3 /* 1 1 */\n\t    ];\n\t\n\t    var jsf = getJSF(coeffs[a], coeffs[b]);\n\t    max = Math.max(jsf[0].length, max);\n\t    naf[a] = new Array(max);\n\t    naf[b] = new Array(max);\n\t    for (var j = 0; j < max; j++) {\n\t      var ja = jsf[0][j] | 0;\n\t      var jb = jsf[1][j] | 0;\n\t\n\t      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];\n\t      naf[b][j] = 0;\n\t      wnd[a] = comb;\n\t    }\n\t  }\n\t\n\t  var acc = this.jpoint(null, null, null);\n\t  var tmp = this._wnafT4;\n\t  for (var i = max; i >= 0; i--) {\n\t    var k = 0;\n\t\n\t    while (i >= 0) {\n\t      var zero = true;\n\t      for (var j = 0; j < len; j++) {\n\t        tmp[j] = naf[j][i] | 0;\n\t        if (tmp[j] !== 0) zero = false;\n\t      }\n\t      if (!zero) break;\n\t      k++;\n\t      i--;\n\t    }\n\t    if (i >= 0) k++;\n\t    acc = acc.dblp(k);\n\t    if (i < 0) break;\n\t\n\t    for (var j = 0; j < len; j++) {\n\t      var z = tmp[j];\n\t      var p;\n\t      if (z === 0) continue;else if (z > 0) p = wnd[j][z - 1 >> 1];else if (z < 0) p = wnd[j][-z - 1 >> 1].neg();\n\t\n\t      if (p.type === 'affine') acc = acc.mixedAdd(p);else acc = acc.add(p);\n\t    }\n\t  }\n\t  // Zeroify references\n\t  for (var i = 0; i < len; i++) {\n\t    wnd[i] = null;\n\t  }return acc.toP();\n\t};\n\t\n\tfunction BasePoint(curve, type) {\n\t  this.curve = curve;\n\t  this.type = type;\n\t  this.precomputed = null;\n\t}\n\tBaseCurve.BasePoint = BasePoint;\n\t\n\tBasePoint.prototype.eq = function eq() /*other*/{\n\t  throw new Error('Not implemented');\n\t};\n\t\n\tBasePoint.prototype.validate = function validate() {\n\t  return this.curve.validate(this);\n\t};\n\t\n\tBaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n\t  bytes = utils.toArray(bytes, enc);\n\t\n\t  var len = this.p.byteLength();\n\t  if (bytes[0] === 0x04 && bytes.length - 1 === 2 * len) {\n\t    return this.point(bytes.slice(1, 1 + len), bytes.slice(1 + len, 1 + 2 * len));\n\t  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) && bytes.length - 1 === len) {\n\t    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);\n\t  }\n\t  throw new Error('Unknown point format');\n\t};\n\t\n\tBasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {\n\t  return this.encode(enc, true);\n\t};\n\t\n\tBasePoint.prototype._encode = function _encode(compact) {\n\t  var len = this.curve.p.byteLength();\n\t  var x = this.getX().toArray('be', len);\n\t\n\t  if (compact) return [this.getY().isEven() ? 0x02 : 0x03].concat(x);\n\t\n\t  return [0x04].concat(x, this.getY().toArray('be', len));\n\t};\n\t\n\tBasePoint.prototype.encode = function encode(enc, compact) {\n\t  return utils.encode(this._encode(compact), enc);\n\t};\n\t\n\tBasePoint.prototype.precompute = function precompute(power) {\n\t  if (this.precomputed) return this;\n\t\n\t  var precomputed = {\n\t    doubles: null,\n\t    naf: null,\n\t    beta: null\n\t  };\n\t  precomputed.naf = this._getNAFPoints(8);\n\t  precomputed.doubles = this._getDoubles(4, power);\n\t  precomputed.beta = this._getBeta();\n\t  this.precomputed = precomputed;\n\t\n\t  return this;\n\t};\n\t\n\tBasePoint.prototype._hasDoubles = function _hasDoubles(k) {\n\t  if (!this.precomputed) return false;\n\t\n\t  var doubles = this.precomputed.doubles;\n\t  if (!doubles) return false;\n\t\n\t  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);\n\t};\n\t\n\tBasePoint.prototype._getDoubles = function _getDoubles(step, power) {\n\t  if (this.precomputed && this.precomputed.doubles) return this.precomputed.doubles;\n\t\n\t  var doubles = [this];\n\t  var acc = this;\n\t  for (var i = 0; i < power; i += step) {\n\t    for (var j = 0; j < step; j++) {\n\t      acc = acc.dbl();\n\t    }doubles.push(acc);\n\t  }\n\t  return {\n\t    step: step,\n\t    points: doubles\n\t  };\n\t};\n\t\n\tBasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {\n\t  if (this.precomputed && this.precomputed.naf) return this.precomputed.naf;\n\t\n\t  var res = [this];\n\t  var max = (1 << wnd) - 1;\n\t  var dbl = max === 1 ? null : this.dbl();\n\t  for (var i = 1; i < max; i++) {\n\t    res[i] = res[i - 1].add(dbl);\n\t  }return {\n\t    wnd: wnd,\n\t    points: res\n\t  };\n\t};\n\t\n\tBasePoint.prototype._getBeta = function _getBeta() {\n\t  return null;\n\t};\n\t\n\tBasePoint.prototype.dblp = function dblp(k) {\n\t  var r = this;\n\t  for (var i = 0; i < k; i++) {\n\t    r = r.dbl();\n\t  }return r;\n\t};\n\n/***/ },\n\n/***/ 1481:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar curve = __webpack_require__(1479);\n\tvar elliptic = __webpack_require__(1474);\n\tvar bn = __webpack_require__(1477);\n\tvar inherits = __webpack_require__(821);\n\tvar Base = curve.base;\n\t\n\tvar assert = elliptic.utils.assert;\n\t\n\tfunction ShortCurve(conf) {\n\t  Base.call(this, 'short', conf);\n\t\n\t  this.a = new bn(conf.a, 16).toRed(this.red);\n\t  this.b = new bn(conf.b, 16).toRed(this.red);\n\t  this.tinv = this.two.redInvm();\n\t\n\t  this.zeroA = this.a.fromRed().cmpn(0) === 0;\n\t  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;\n\t\n\t  // If the curve is endomorphic, precalculate beta and lambda\n\t  this.endo = this._getEndomorphism(conf);\n\t  this._endoWnafT1 = new Array(4);\n\t  this._endoWnafT2 = new Array(4);\n\t}\n\tinherits(ShortCurve, Base);\n\tmodule.exports = ShortCurve;\n\t\n\tShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {\n\t  // No efficient endomorphism\n\t  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1) return;\n\t\n\t  // Compute beta and lambda, that lambda * P = (beta * Px; Py)\n\t  var beta;\n\t  var lambda;\n\t  if (conf.beta) {\n\t    beta = new bn(conf.beta, 16).toRed(this.red);\n\t  } else {\n\t    var betas = this._getEndoRoots(this.p);\n\t    // Choose the smallest beta\n\t    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];\n\t    beta = beta.toRed(this.red);\n\t  }\n\t  if (conf.lambda) {\n\t    lambda = new bn(conf.lambda, 16);\n\t  } else {\n\t    // Choose the lambda that is matching selected beta\n\t    var lambdas = this._getEndoRoots(this.n);\n\t    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {\n\t      lambda = lambdas[0];\n\t    } else {\n\t      lambda = lambdas[1];\n\t      assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);\n\t    }\n\t  }\n\t\n\t  // Get basis vectors, used for balanced length-two representation\n\t  var basis;\n\t  if (conf.basis) {\n\t    basis = conf.basis.map(function (vec) {\n\t      return {\n\t        a: new bn(vec.a, 16),\n\t        b: new bn(vec.b, 16)\n\t      };\n\t    });\n\t  } else {\n\t    basis = this._getEndoBasis(lambda);\n\t  }\n\t\n\t  return {\n\t    beta: beta,\n\t    lambda: lambda,\n\t    basis: basis\n\t  };\n\t};\n\t\n\tShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {\n\t  // Find roots of for x^2 + x + 1 in F\n\t  // Root = (-1 +- Sqrt(-3)) / 2\n\t  //\n\t  var red = num === this.p ? this.red : bn.mont(num);\n\t  var tinv = new bn(2).toRed(red).redInvm();\n\t  var ntinv = tinv.redNeg();\n\t\n\t  var s = new bn(3).toRed(red).redNeg().redSqrt().redMul(tinv);\n\t\n\t  var l1 = ntinv.redAdd(s).fromRed();\n\t  var l2 = ntinv.redSub(s).fromRed();\n\t  return [l1, l2];\n\t};\n\t\n\tShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {\n\t  // aprxSqrt >= sqrt(this.n)\n\t  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));\n\t\n\t  // 3.74\n\t  // Run EGCD, until r(L + 1) < aprxSqrt\n\t  var u = lambda;\n\t  var v = this.n.clone();\n\t  var x1 = new bn(1);\n\t  var y1 = new bn(0);\n\t  var x2 = new bn(0);\n\t  var y2 = new bn(1);\n\t\n\t  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)\n\t  var a0;\n\t  var b0;\n\t  // First vector\n\t  var a1;\n\t  var b1;\n\t  // Second vector\n\t  var a2;\n\t  var b2;\n\t\n\t  var prevR;\n\t  var i = 0;\n\t  var r;\n\t  var x;\n\t  while (u.cmpn(0) !== 0) {\n\t    var q = v.div(u);\n\t    r = v.sub(q.mul(u));\n\t    x = x2.sub(q.mul(x1));\n\t    var y = y2.sub(q.mul(y1));\n\t\n\t    if (!a1 && r.cmp(aprxSqrt) < 0) {\n\t      a0 = prevR.neg();\n\t      b0 = x1;\n\t      a1 = r.neg();\n\t      b1 = x;\n\t    } else if (a1 && ++i === 2) {\n\t      break;\n\t    }\n\t    prevR = r;\n\t\n\t    v = u;\n\t    u = r;\n\t    x2 = x1;\n\t    x1 = x;\n\t    y2 = y1;\n\t    y1 = y;\n\t  }\n\t  a2 = r.neg();\n\t  b2 = x;\n\t\n\t  var len1 = a1.sqr().add(b1.sqr());\n\t  var len2 = a2.sqr().add(b2.sqr());\n\t  if (len2.cmp(len1) >= 0) {\n\t    a2 = a0;\n\t    b2 = b0;\n\t  }\n\t\n\t  // Normalize signs\n\t  if (a1.sign) {\n\t    a1 = a1.neg();\n\t    b1 = b1.neg();\n\t  }\n\t  if (a2.sign) {\n\t    a2 = a2.neg();\n\t    b2 = b2.neg();\n\t  }\n\t\n\t  return [{ a: a1, b: b1 }, { a: a2, b: b2 }];\n\t};\n\t\n\tShortCurve.prototype._endoSplit = function _endoSplit(k) {\n\t  var basis = this.endo.basis;\n\t  var v1 = basis[0];\n\t  var v2 = basis[1];\n\t\n\t  var c1 = v2.b.mul(k).divRound(this.n);\n\t  var c2 = v1.b.neg().mul(k).divRound(this.n);\n\t\n\t  var p1 = c1.mul(v1.a);\n\t  var p2 = c2.mul(v2.a);\n\t  var q1 = c1.mul(v1.b);\n\t  var q2 = c2.mul(v2.b);\n\t\n\t  // Calculate answer\n\t  var k1 = k.sub(p1).sub(p2);\n\t  var k2 = q1.add(q2).neg();\n\t  return { k1: k1, k2: k2 };\n\t};\n\t\n\tShortCurve.prototype.pointFromX = function pointFromX(x, odd) {\n\t  x = new bn(x, 16);\n\t  if (!x.red) x = x.toRed(this.red);\n\t\n\t  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);\n\t  var y = y2.redSqrt();\n\t\n\t  // XXX Is there any way to tell if the number is odd without converting it\n\t  // to non-red form?\n\t  var isOdd = y.fromRed().isOdd();\n\t  if (odd && !isOdd || !odd && isOdd) y = y.redNeg();\n\t\n\t  return this.point(x, y);\n\t};\n\t\n\tShortCurve.prototype.validate = function validate(point) {\n\t  if (point.inf) return true;\n\t\n\t  var x = point.x;\n\t  var y = point.y;\n\t\n\t  var ax = this.a.redMul(x);\n\t  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);\n\t  return y.redSqr().redISub(rhs).cmpn(0) === 0;\n\t};\n\t\n\tShortCurve.prototype._endoWnafMulAdd = function _endoWnafMulAdd(points, coeffs) {\n\t  var npoints = this._endoWnafT1;\n\t  var ncoeffs = this._endoWnafT2;\n\t  for (var i = 0; i < points.length; i++) {\n\t    var split = this._endoSplit(coeffs[i]);\n\t    var p = points[i];\n\t    var beta = p._getBeta();\n\t\n\t    if (split.k1.sign) {\n\t      split.k1.sign = !split.k1.sign;\n\t      p = p.neg(true);\n\t    }\n\t    if (split.k2.sign) {\n\t      split.k2.sign = !split.k2.sign;\n\t      beta = beta.neg(true);\n\t    }\n\t\n\t    npoints[i * 2] = p;\n\t    npoints[i * 2 + 1] = beta;\n\t    ncoeffs[i * 2] = split.k1;\n\t    ncoeffs[i * 2 + 1] = split.k2;\n\t  }\n\t  var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2);\n\t\n\t  // Clean-up references to points and coefficients\n\t  for (var j = 0; j < i * 2; j++) {\n\t    npoints[j] = null;\n\t    ncoeffs[j] = null;\n\t  }\n\t  return res;\n\t};\n\t\n\tfunction Point(curve, x, y, isRed) {\n\t  Base.BasePoint.call(this, curve, 'affine');\n\t  if (x === null && y === null) {\n\t    this.x = null;\n\t    this.y = null;\n\t    this.inf = true;\n\t  } else {\n\t    this.x = new bn(x, 16);\n\t    this.y = new bn(y, 16);\n\t    // Force redgomery representation when loading from JSON\n\t    if (isRed) {\n\t      this.x.forceRed(this.curve.red);\n\t      this.y.forceRed(this.curve.red);\n\t    }\n\t    if (!this.x.red) this.x = this.x.toRed(this.curve.red);\n\t    if (!this.y.red) this.y = this.y.toRed(this.curve.red);\n\t    this.inf = false;\n\t  }\n\t}\n\tinherits(Point, Base.BasePoint);\n\t\n\tShortCurve.prototype.point = function point(x, y, isRed) {\n\t  return new Point(this, x, y, isRed);\n\t};\n\t\n\tShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {\n\t  return Point.fromJSON(this, obj, red);\n\t};\n\t\n\tPoint.prototype._getBeta = function _getBeta() {\n\t  if (!this.curve.endo) return;\n\t\n\t  var pre = this.precomputed;\n\t  if (pre && pre.beta) return pre.beta;\n\t\n\t  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);\n\t  if (pre) {\n\t    var curve = this.curve;\n\t    var endoMul = function endoMul(p) {\n\t      return curve.point(p.x.redMul(curve.endo.beta), p.y);\n\t    };\n\t    pre.beta = beta;\n\t    beta.precomputed = {\n\t      beta: null,\n\t      naf: pre.naf && {\n\t        wnd: pre.naf.wnd,\n\t        points: pre.naf.points.map(endoMul)\n\t      },\n\t      doubles: pre.doubles && {\n\t        step: pre.doubles.step,\n\t        points: pre.doubles.points.map(endoMul)\n\t      }\n\t    };\n\t  }\n\t  return beta;\n\t};\n\t\n\tPoint.prototype.toJSON = function toJSON() {\n\t  if (!this.precomputed) return [this.x, this.y];\n\t\n\t  return [this.x, this.y, this.precomputed && {\n\t    doubles: this.precomputed.doubles && {\n\t      step: this.precomputed.doubles.step,\n\t      points: this.precomputed.doubles.points.slice(1)\n\t    },\n\t    naf: this.precomputed.naf && {\n\t      wnd: this.precomputed.naf.wnd,\n\t      points: this.precomputed.naf.points.slice(1)\n\t    }\n\t  }];\n\t};\n\t\n\tPoint.fromJSON = function fromJSON(curve, obj, red) {\n\t  if (typeof obj === 'string') obj = JSON.parse(obj);\n\t  var res = curve.point(obj[0], obj[1], red);\n\t  if (!obj[2]) return res;\n\t\n\t  function obj2point(obj) {\n\t    return curve.point(obj[0], obj[1], red);\n\t  }\n\t\n\t  var pre = obj[2];\n\t  res.precomputed = {\n\t    beta: null,\n\t    doubles: pre.doubles && {\n\t      step: pre.doubles.step,\n\t      points: [res].concat(pre.doubles.points.map(obj2point))\n\t    },\n\t    naf: pre.naf && {\n\t      wnd: pre.naf.wnd,\n\t      points: [res].concat(pre.naf.points.map(obj2point))\n\t    }\n\t  };\n\t  return res;\n\t};\n\t\n\tPoint.prototype.inspect = function inspect() {\n\t  if (this.isInfinity()) return '<EC Point Infinity>';\n\t  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) + ' y: ' + this.y.fromRed().toString(16, 2) + '>';\n\t};\n\t\n\tPoint.prototype.isInfinity = function isInfinity() {\n\t  return this.inf;\n\t};\n\t\n\tPoint.prototype.add = function add(p) {\n\t  // O + P = P\n\t  if (this.inf) return p;\n\t\n\t  // P + O = P\n\t  if (p.inf) return this;\n\t\n\t  // P + P = 2P\n\t  if (this.eq(p)) return this.dbl();\n\t\n\t  // P + (-P) = O\n\t  if (this.neg().eq(p)) return this.curve.point(null, null);\n\t\n\t  // P + Q = O\n\t  if (this.x.cmp(p.x) === 0) return this.curve.point(null, null);\n\t\n\t  var c = this.y.redSub(p.y);\n\t  if (c.cmpn(0) !== 0) c = c.redMul(this.x.redSub(p.x).redInvm());\n\t  var nx = c.redSqr().redISub(this.x).redISub(p.x);\n\t  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n\t  return this.curve.point(nx, ny);\n\t};\n\t\n\tPoint.prototype.dbl = function dbl() {\n\t  if (this.inf) return this;\n\t\n\t  // 2P = O\n\t  var ys1 = this.y.redAdd(this.y);\n\t  if (ys1.cmpn(0) === 0) return this.curve.point(null, null);\n\t\n\t  var a = this.curve.a;\n\t\n\t  var x2 = this.x.redSqr();\n\t  var dyinv = ys1.redInvm();\n\t  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);\n\t\n\t  var nx = c.redSqr().redISub(this.x.redAdd(this.x));\n\t  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n\t  return this.curve.point(nx, ny);\n\t};\n\t\n\tPoint.prototype.getX = function getX() {\n\t  return this.x.fromRed();\n\t};\n\t\n\tPoint.prototype.getY = function getY() {\n\t  return this.y.fromRed();\n\t};\n\t\n\tPoint.prototype.mul = function mul(k) {\n\t  k = new bn(k, 16);\n\t\n\t  if (this._hasDoubles(k)) return this.curve._fixedNafMul(this, k);else if (this.curve.endo) return this.curve._endoWnafMulAdd([this], [k]);else return this.curve._wnafMul(this, k);\n\t};\n\t\n\tPoint.prototype.mulAdd = function mulAdd(k1, p2, k2) {\n\t  var points = [this, p2];\n\t  var coeffs = [k1, k2];\n\t  if (this.curve.endo) return this.curve._endoWnafMulAdd(points, coeffs);else return this.curve._wnafMulAdd(1, points, coeffs, 2);\n\t};\n\t\n\tPoint.prototype.eq = function eq(p) {\n\t  return this === p || this.inf === p.inf && (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);\n\t};\n\t\n\tPoint.prototype.neg = function neg(_precompute) {\n\t  if (this.inf) return this;\n\t\n\t  var res = this.curve.point(this.x, this.y.redNeg());\n\t  if (_precompute && this.precomputed) {\n\t    var pre = this.precomputed;\n\t    var negate = function negate(p) {\n\t      return p.neg();\n\t    };\n\t    res.precomputed = {\n\t      naf: pre.naf && {\n\t        wnd: pre.naf.wnd,\n\t        points: pre.naf.points.map(negate)\n\t      },\n\t      doubles: pre.doubles && {\n\t        step: pre.doubles.step,\n\t        points: pre.doubles.points.map(negate)\n\t      }\n\t    };\n\t  }\n\t  return res;\n\t};\n\t\n\tPoint.prototype.toJ = function toJ() {\n\t  if (this.inf) return this.curve.jpoint(null, null, null);\n\t\n\t  var res = this.curve.jpoint(this.x, this.y, this.curve.one);\n\t  return res;\n\t};\n\t\n\tfunction JPoint(curve, x, y, z) {\n\t  Base.BasePoint.call(this, curve, 'jacobian');\n\t  if (x === null && y === null && z === null) {\n\t    this.x = this.curve.one;\n\t    this.y = this.curve.one;\n\t    this.z = new bn(0);\n\t  } else {\n\t    this.x = new bn(x, 16);\n\t    this.y = new bn(y, 16);\n\t    this.z = new bn(z, 16);\n\t  }\n\t  if (!this.x.red) this.x = this.x.toRed(this.curve.red);\n\t  if (!this.y.red) this.y = this.y.toRed(this.curve.red);\n\t  if (!this.z.red) this.z = this.z.toRed(this.curve.red);\n\t\n\t  this.zOne = this.z === this.curve.one;\n\t}\n\tinherits(JPoint, Base.BasePoint);\n\t\n\tShortCurve.prototype.jpoint = function jpoint(x, y, z) {\n\t  return new JPoint(this, x, y, z);\n\t};\n\t\n\tJPoint.prototype.toP = function toP() {\n\t  if (this.isInfinity()) return this.curve.point(null, null);\n\t\n\t  var zinv = this.z.redInvm();\n\t  var zinv2 = zinv.redSqr();\n\t  var ax = this.x.redMul(zinv2);\n\t  var ay = this.y.redMul(zinv2).redMul(zinv);\n\t\n\t  return this.curve.point(ax, ay);\n\t};\n\t\n\tJPoint.prototype.neg = function neg() {\n\t  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);\n\t};\n\t\n\tJPoint.prototype.add = function add(p) {\n\t  // O + P = P\n\t  if (this.isInfinity()) return p;\n\t\n\t  // P + O = P\n\t  if (p.isInfinity()) return this;\n\t\n\t  // 12M + 4S + 7A\n\t  var pz2 = p.z.redSqr();\n\t  var z2 = this.z.redSqr();\n\t  var u1 = this.x.redMul(pz2);\n\t  var u2 = p.x.redMul(z2);\n\t  var s1 = this.y.redMul(pz2.redMul(p.z));\n\t  var s2 = p.y.redMul(z2.redMul(this.z));\n\t\n\t  var h = u1.redSub(u2);\n\t  var r = s1.redSub(s2);\n\t  if (h.cmpn(0) === 0) {\n\t    if (r.cmpn(0) !== 0) return this.curve.jpoint(null, null, null);else return this.dbl();\n\t  }\n\t\n\t  var h2 = h.redSqr();\n\t  var h3 = h2.redMul(h);\n\t  var v = u1.redMul(h2);\n\t\n\t  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n\t  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n\t  var nz = this.z.redMul(p.z).redMul(h);\n\t\n\t  return this.curve.jpoint(nx, ny, nz);\n\t};\n\t\n\tJPoint.prototype.mixedAdd = function mixedAdd(p) {\n\t  // O + P = P\n\t  if (this.isInfinity()) return p.toJ();\n\t\n\t  // P + O = P\n\t  if (p.isInfinity()) return this;\n\t\n\t  // 8M + 3S + 7A\n\t  var z2 = this.z.redSqr();\n\t  var u1 = this.x;\n\t  var u2 = p.x.redMul(z2);\n\t  var s1 = this.y;\n\t  var s2 = p.y.redMul(z2).redMul(this.z);\n\t\n\t  var h = u1.redSub(u2);\n\t  var r = s1.redSub(s2);\n\t  if (h.cmpn(0) === 0) {\n\t    if (r.cmpn(0) !== 0) return this.curve.jpoint(null, null, null);else return this.dbl();\n\t  }\n\t\n\t  var h2 = h.redSqr();\n\t  var h3 = h2.redMul(h);\n\t  var v = u1.redMul(h2);\n\t\n\t  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n\t  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n\t  var nz = this.z.redMul(h);\n\t\n\t  return this.curve.jpoint(nx, ny, nz);\n\t};\n\t\n\tJPoint.prototype.dblp = function dblp(pow) {\n\t  if (pow === 0) return this;\n\t  if (this.isInfinity()) return this;\n\t  if (!pow) return this.dbl();\n\t\n\t  if (this.curve.zeroA || this.curve.threeA) {\n\t    var r = this;\n\t    for (var i = 0; i < pow; i++) {\n\t      r = r.dbl();\n\t    }return r;\n\t  }\n\t\n\t  // 1M + 2S + 1A + N * (4S + 5M + 8A)\n\t  // N = 1 => 6M + 6S + 9A\n\t  var a = this.curve.a;\n\t  var tinv = this.curve.tinv;\n\t\n\t  var jx = this.x;\n\t  var jy = this.y;\n\t  var jz = this.z;\n\t  var jz4 = jz.redSqr().redSqr();\n\t\n\t  // Reuse results\n\t  var jyd = jy.redAdd(jy);\n\t  for (var i = 0; i < pow; i++) {\n\t    var jx2 = jx.redSqr();\n\t    var jyd2 = jyd.redSqr();\n\t    var jyd4 = jyd2.redSqr();\n\t    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\t\n\t    var t1 = jx.redMul(jyd2);\n\t    var nx = c.redSqr().redISub(t1.redAdd(t1));\n\t    var t2 = t1.redISub(nx);\n\t    var dny = c.redMul(t2);\n\t    dny = dny.redIAdd(dny).redISub(jyd4);\n\t    var nz = jyd.redMul(jz);\n\t    if (i + 1 < pow) jz4 = jz4.redMul(jyd4);\n\t\n\t    jx = nx;\n\t    jz = nz;\n\t    jyd = dny;\n\t  }\n\t\n\t  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);\n\t};\n\t\n\tJPoint.prototype.dbl = function dbl() {\n\t  if (this.isInfinity()) return this;\n\t\n\t  if (this.curve.zeroA) return this._zeroDbl();else if (this.curve.threeA) return this._threeDbl();else return this._dbl();\n\t};\n\t\n\tJPoint.prototype._zeroDbl = function _zeroDbl() {\n\t  var nx;\n\t  var ny;\n\t  var nz;\n\t  // Z = 1\n\t  if (this.zOne) {\n\t    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n\t    //     #doubling-mdbl-2007-bl\n\t    // 1M + 5S + 14A\n\t\n\t    // XX = X1^2\n\t    var xx = this.x.redSqr();\n\t    // YY = Y1^2\n\t    var yy = this.y.redSqr();\n\t    // YYYY = YY^2\n\t    var yyyy = yy.redSqr();\n\t    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n\t    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n\t    s = s.redIAdd(s);\n\t    // M = 3 * XX + a; a = 0\n\t    var m = xx.redAdd(xx).redIAdd(xx);\n\t    // T = M ^ 2 - 2*S\n\t    var t = m.redSqr().redISub(s).redISub(s);\n\t\n\t    // 8 * YYYY\n\t    var yyyy8 = yyyy.redIAdd(yyyy);\n\t    yyyy8 = yyyy8.redIAdd(yyyy8);\n\t    yyyy8 = yyyy8.redIAdd(yyyy8);\n\t\n\t    // X3 = T\n\t    nx = t;\n\t    // Y3 = M * (S - T) - 8 * YYYY\n\t    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n\t    // Z3 = 2*Y1\n\t    nz = this.y.redAdd(this.y);\n\t  } else {\n\t    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n\t    //     #doubling-dbl-2009-l\n\t    // 2M + 5S + 13A\n\t\n\t    // A = X1^2\n\t    var a = this.x.redSqr();\n\t    // B = Y1^2\n\t    var b = this.y.redSqr();\n\t    // C = B^2\n\t    var c = b.redSqr();\n\t    // D = 2 * ((X1 + B)^2 - A - C)\n\t    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);\n\t    d = d.redIAdd(d);\n\t    // E = 3 * A\n\t    var e = a.redAdd(a).redIAdd(a);\n\t    // F = E^2\n\t    var f = e.redSqr();\n\t\n\t    // 8 * C\n\t    var c8 = c.redIAdd(c);\n\t    c8 = c8.redIAdd(c8);\n\t    c8 = c8.redIAdd(c8);\n\t\n\t    // X3 = F - 2 * D\n\t    nx = f.redISub(d).redISub(d);\n\t    // Y3 = E * (D - X3) - 8 * C\n\t    ny = e.redMul(d.redISub(nx)).redISub(c8);\n\t    // Z3 = 2 * Y1 * Z1\n\t    nz = this.y.redMul(this.z);\n\t    nz = nz.redIAdd(nz);\n\t  }\n\t\n\t  return this.curve.jpoint(nx, ny, nz);\n\t};\n\t\n\tJPoint.prototype._threeDbl = function _threeDbl() {\n\t  var nx;\n\t  var ny;\n\t  var nz;\n\t  // Z = 1\n\t  if (this.zOne) {\n\t    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html\n\t    //     #doubling-mdbl-2007-bl\n\t    // 1M + 5S + 15A\n\t\n\t    // XX = X1^2\n\t    var xx = this.x.redSqr();\n\t    // YY = Y1^2\n\t    var yy = this.y.redSqr();\n\t    // YYYY = YY^2\n\t    var yyyy = yy.redSqr();\n\t    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n\t    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n\t    s = s.redIAdd(s);\n\t    // M = 3 * XX + a\n\t    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);\n\t    // T = M^2 - 2 * S\n\t    var t = m.redSqr().redISub(s).redISub(s);\n\t    // X3 = T\n\t    nx = t;\n\t    // Y3 = M * (S - T) - 8 * YYYY\n\t    var yyyy8 = yyyy.redIAdd(yyyy);\n\t    yyyy8 = yyyy8.redIAdd(yyyy8);\n\t    yyyy8 = yyyy8.redIAdd(yyyy8);\n\t    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n\t    // Z3 = 2 * Y1\n\t    nz = this.y.redAdd(this.y);\n\t  } else {\n\t    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b\n\t    // 3M + 5S\n\t\n\t    // delta = Z1^2\n\t    var delta = this.z.redSqr();\n\t    // gamma = Y1^2\n\t    var gamma = this.y.redSqr();\n\t    // beta = X1 * gamma\n\t    var beta = this.x.redMul(gamma);\n\t    // alpha = 3 * (X1 - delta) * (X1 + delta)\n\t    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));\n\t    alpha = alpha.redAdd(alpha).redIAdd(alpha);\n\t    // X3 = alpha^2 - 8 * beta\n\t    var beta4 = beta.redIAdd(beta);\n\t    beta4 = beta4.redIAdd(beta4);\n\t    var beta8 = beta4.redAdd(beta4);\n\t    nx = alpha.redSqr().redISub(beta8);\n\t    // Z3 = (Y1 + Z1)^2 - gamma - delta\n\t    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);\n\t    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2\n\t    var ggamma8 = gamma.redSqr();\n\t    ggamma8 = ggamma8.redIAdd(ggamma8);\n\t    ggamma8 = ggamma8.redIAdd(ggamma8);\n\t    ggamma8 = ggamma8.redIAdd(ggamma8);\n\t    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);\n\t  }\n\t\n\t  return this.curve.jpoint(nx, ny, nz);\n\t};\n\t\n\tJPoint.prototype._dbl = function _dbl() {\n\t  var a = this.curve.a;\n\t\n\t  // 4M + 6S + 10A\n\t  var jx = this.x;\n\t  var jy = this.y;\n\t  var jz = this.z;\n\t  var jz4 = jz.redSqr().redSqr();\n\t\n\t  var jx2 = jx.redSqr();\n\t  var jy2 = jy.redSqr();\n\t\n\t  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\t\n\t  var jxd4 = jx.redAdd(jx);\n\t  jxd4 = jxd4.redIAdd(jxd4);\n\t  var t1 = jxd4.redMul(jy2);\n\t  var nx = c.redSqr().redISub(t1.redAdd(t1));\n\t  var t2 = t1.redISub(nx);\n\t\n\t  var jyd8 = jy2.redSqr();\n\t  jyd8 = jyd8.redIAdd(jyd8);\n\t  jyd8 = jyd8.redIAdd(jyd8);\n\t  jyd8 = jyd8.redIAdd(jyd8);\n\t  var ny = c.redMul(t2).redISub(jyd8);\n\t  var nz = jy.redAdd(jy).redMul(jz);\n\t\n\t  return this.curve.jpoint(nx, ny, nz);\n\t};\n\t\n\tJPoint.prototype.trpl = function trpl() {\n\t  if (!this.curve.zeroA) return this.dbl().add(this);\n\t\n\t  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl\n\t  // 5M + 10S + ...\n\t\n\t  // XX = X1^2\n\t  var xx = this.x.redSqr();\n\t  // YY = Y1^2\n\t  var yy = this.y.redSqr();\n\t  // ZZ = Z1^2\n\t  var zz = this.z.redSqr();\n\t  // YYYY = YY^2\n\t  var yyyy = yy.redSqr();\n\t  // M = 3 * XX + a * ZZ2; a = 0\n\t  var m = xx.redAdd(xx).redIAdd(xx);\n\t  // MM = M^2\n\t  var mm = m.redSqr();\n\t  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM\n\t  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n\t  e = e.redIAdd(e);\n\t  e = e.redAdd(e).redIAdd(e);\n\t  e = e.redISub(mm);\n\t  // EE = E^2\n\t  var ee = e.redSqr();\n\t  // T = 16*YYYY\n\t  var t = yyyy.redIAdd(yyyy);\n\t  t = t.redIAdd(t);\n\t  t = t.redIAdd(t);\n\t  t = t.redIAdd(t);\n\t  // U = (M + E)^2 - MM - EE - T\n\t  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);\n\t  // X3 = 4 * (X1 * EE - 4 * YY * U)\n\t  var yyu4 = yy.redMul(u);\n\t  yyu4 = yyu4.redIAdd(yyu4);\n\t  yyu4 = yyu4.redIAdd(yyu4);\n\t  var nx = this.x.redMul(ee).redISub(yyu4);\n\t  nx = nx.redIAdd(nx);\n\t  nx = nx.redIAdd(nx);\n\t  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)\n\t  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));\n\t  ny = ny.redIAdd(ny);\n\t  ny = ny.redIAdd(ny);\n\t  ny = ny.redIAdd(ny);\n\t  // Z3 = (Z1 + E)^2 - ZZ - EE\n\t  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);\n\t\n\t  return this.curve.jpoint(nx, ny, nz);\n\t};\n\t\n\tJPoint.prototype.mul = function mul(k, kbase) {\n\t  k = new bn(k, kbase);\n\t\n\t  return this.curve._wnafMul(this, k);\n\t};\n\t\n\tJPoint.prototype.eq = function eq(p) {\n\t  if (p.type === 'affine') return this.eq(p.toJ());\n\t\n\t  if (this === p) return true;\n\t\n\t  // x1 * z2^2 == x2 * z1^2\n\t  var z2 = this.z.redSqr();\n\t  var pz2 = p.z.redSqr();\n\t  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0) return false;\n\t\n\t  // y1 * z2^3 == y2 * z1^3\n\t  var z3 = z2.redMul(this.z);\n\t  var pz3 = pz2.redMul(p.z);\n\t  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;\n\t};\n\t\n\tJPoint.prototype.inspect = function inspect() {\n\t  if (this.isInfinity()) return '<EC JPoint Infinity>';\n\t  return '<EC JPoint x: ' + this.x.toString(16, 2) + ' y: ' + this.y.toString(16, 2) + ' z: ' + this.z.toString(16, 2) + '>';\n\t};\n\t\n\tJPoint.prototype.isInfinity = function isInfinity() {\n\t  // XXX This code assumes that zero is always zero in red\n\t  return this.z.cmpn(0) === 0;\n\t};\n\n/***/ },\n\n/***/ 1482:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar curve = __webpack_require__(1479);\n\tvar bn = __webpack_require__(1477);\n\tvar inherits = __webpack_require__(821);\n\tvar Base = curve.base;\n\t\n\tvar elliptic = __webpack_require__(1474);\n\tvar utils = elliptic.utils;\n\t\n\tfunction MontCurve(conf) {\n\t  Base.call(this, 'mont', conf);\n\t\n\t  this.a = new bn(conf.a, 16).toRed(this.red);\n\t  this.b = new bn(conf.b, 16).toRed(this.red);\n\t  this.i4 = new bn(4).toRed(this.red).redInvm();\n\t  this.two = new bn(2).toRed(this.red);\n\t  this.a24 = this.i4.redMul(this.a.redAdd(this.two));\n\t}\n\tinherits(MontCurve, Base);\n\tmodule.exports = MontCurve;\n\t\n\tMontCurve.prototype.validate = function validate(point) {\n\t  var x = point.normalize().x;\n\t  var x2 = x.redSqr();\n\t  var rhs = x2.redMul(x).redAdd(x2.redMul(this.a)).redAdd(x);\n\t  var y = rhs.redSqrt();\n\t\n\t  return y.redSqr().cmp(rhs) === 0;\n\t};\n\t\n\tfunction Point(curve, x, z) {\n\t  Base.BasePoint.call(this, curve, 'projective');\n\t  if (x === null && z === null) {\n\t    this.x = this.curve.one;\n\t    this.z = this.curve.zero;\n\t  } else {\n\t    this.x = new bn(x, 16);\n\t    this.z = new bn(z, 16);\n\t    if (!this.x.red) this.x = this.x.toRed(this.curve.red);\n\t    if (!this.z.red) this.z = this.z.toRed(this.curve.red);\n\t  }\n\t}\n\tinherits(Point, Base.BasePoint);\n\t\n\tMontCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n\t  return this.point(utils.toArray(bytes, enc), 1);\n\t};\n\t\n\tMontCurve.prototype.point = function point(x, z) {\n\t  return new Point(this, x, z);\n\t};\n\t\n\tMontCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n\t  return Point.fromJSON(this, obj);\n\t};\n\t\n\tPoint.prototype.precompute = function precompute() {\n\t  // No-op\n\t};\n\t\n\tPoint.prototype._encode = function _encode() {\n\t  return this.getX().toArray('be', this.curve.p.byteLength());\n\t};\n\t\n\tPoint.fromJSON = function fromJSON(curve, obj) {\n\t  return new Point(curve, obj[0], obj[1] || curve.one);\n\t};\n\t\n\tPoint.prototype.inspect = function inspect() {\n\t  if (this.isInfinity()) return '<EC Point Infinity>';\n\t  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) + ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n\t};\n\t\n\tPoint.prototype.isInfinity = function isInfinity() {\n\t  // XXX This code assumes that zero is always zero in red\n\t  return this.z.cmpn(0) === 0;\n\t};\n\t\n\tPoint.prototype.dbl = function dbl() {\n\t  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#doubling-dbl-1987-m-3\n\t  // 2M + 2S + 4A\n\t\n\t  // A = X1 + Z1\n\t  var a = this.x.redAdd(this.z);\n\t  // AA = A^2\n\t  var aa = a.redSqr();\n\t  // B = X1 - Z1\n\t  var b = this.x.redSub(this.z);\n\t  // BB = B^2\n\t  var bb = b.redSqr();\n\t  // C = AA - BB\n\t  var c = aa.redSub(bb);\n\t  // X3 = AA * BB\n\t  var nx = aa.redMul(bb);\n\t  // Z3 = C * (BB + A24 * C)\n\t  var nz = c.redMul(bb.redAdd(this.curve.a24.redMul(c)));\n\t  return this.curve.point(nx, nz);\n\t};\n\t\n\tPoint.prototype.add = function add() {\n\t  throw new Error('Not supported on Montgomery curve');\n\t};\n\t\n\tPoint.prototype.diffAdd = function diffAdd(p, diff) {\n\t  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#diffadd-dadd-1987-m-3\n\t  // 4M + 2S + 6A\n\t\n\t  // A = X2 + Z2\n\t  var a = this.x.redAdd(this.z);\n\t  // B = X2 - Z2\n\t  var b = this.x.redSub(this.z);\n\t  // C = X3 + Z3\n\t  var c = p.x.redAdd(p.z);\n\t  // D = X3 - Z3\n\t  var d = p.x.redSub(p.z);\n\t  // DA = D * A\n\t  var da = d.redMul(a);\n\t  // CB = C * B\n\t  var cb = c.redMul(b);\n\t  // X5 = Z1 * (DA + CB)^2\n\t  var nx = diff.z.redMul(da.redAdd(cb).redSqr());\n\t  // Z5 = X1 * (DA - CB)^2\n\t  var nz = diff.x.redMul(da.redISub(cb).redSqr());\n\t  return this.curve.point(nx, nz);\n\t};\n\t\n\tPoint.prototype.mul = function mul(k) {\n\t  var t = k.clone();\n\t  var a = this; // (N / 2) * Q + Q\n\t  var b = this.curve.point(null, null); // (N / 2) * Q\n\t  var c = this; // Q\n\t\n\t  for (var bits = []; t.cmpn(0) !== 0; t.iushrn(1)) {\n\t    bits.push(t.andln(1));\n\t  }for (var i = bits.length - 1; i >= 0; i--) {\n\t    if (bits[i] === 0) {\n\t      // N * Q + Q = ((N / 2) * Q + Q)) + (N / 2) * Q\n\t      a = a.diffAdd(b, c);\n\t      // N * Q = 2 * ((N / 2) * Q + Q))\n\t      b = b.dbl();\n\t    } else {\n\t      // N * Q = ((N / 2) * Q + Q) + ((N / 2) * Q)\n\t      b = a.diffAdd(b, c);\n\t      // N * Q + Q = 2 * ((N / 2) * Q + Q)\n\t      a = a.dbl();\n\t    }\n\t  }\n\t  return b;\n\t};\n\t\n\tPoint.prototype.mulAdd = function mulAdd() {\n\t  throw new Error('Not supported on Montgomery curve');\n\t};\n\t\n\tPoint.prototype.eq = function eq(other) {\n\t  return this.getX().cmp(other.getX()) === 0;\n\t};\n\t\n\tPoint.prototype.normalize = function normalize() {\n\t  this.x = this.x.redMul(this.z.redInvm());\n\t  this.z = this.curve.one;\n\t  return this;\n\t};\n\t\n\tPoint.prototype.getX = function getX() {\n\t  // Normalize coordinates\n\t  this.normalize();\n\t\n\t  return this.x.fromRed();\n\t};\n\n/***/ },\n\n/***/ 1483:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar curve = __webpack_require__(1479);\n\tvar elliptic = __webpack_require__(1474);\n\tvar bn = __webpack_require__(1477);\n\tvar inherits = __webpack_require__(821);\n\tvar Base = curve.base;\n\t\n\tvar assert = elliptic.utils.assert;\n\t\n\tfunction EdwardsCurve(conf) {\n\t  // NOTE: Important as we are creating point in Base.call()\n\t  this.twisted = (conf.a | 0) !== 1;\n\t  this.mOneA = this.twisted && (conf.a | 0) === -1;\n\t  this.extended = this.mOneA;\n\t\n\t  Base.call(this, 'edwards', conf);\n\t\n\t  this.a = new bn(conf.a, 16).umod(this.red.m);\n\t  this.a = this.a.toRed(this.red);\n\t  this.c = new bn(conf.c, 16).toRed(this.red);\n\t  this.c2 = this.c.redSqr();\n\t  this.d = new bn(conf.d, 16).toRed(this.red);\n\t  this.dd = this.d.redAdd(this.d);\n\t\n\t  assert(!this.twisted || this.c.fromRed().cmpn(1) === 0);\n\t  this.oneC = (conf.c | 0) === 1;\n\t}\n\tinherits(EdwardsCurve, Base);\n\tmodule.exports = EdwardsCurve;\n\t\n\tEdwardsCurve.prototype._mulA = function _mulA(num) {\n\t  if (this.mOneA) return num.redNeg();else return this.a.redMul(num);\n\t};\n\t\n\tEdwardsCurve.prototype._mulC = function _mulC(num) {\n\t  if (this.oneC) return num;else return this.c.redMul(num);\n\t};\n\t\n\t// Just for compatibility with Short curve\n\tEdwardsCurve.prototype.jpoint = function jpoint(x, y, z, t) {\n\t  return this.point(x, y, z, t);\n\t};\n\t\n\tEdwardsCurve.prototype.pointFromX = function pointFromX(x, odd) {\n\t  x = new bn(x, 16);\n\t  if (!x.red) x = x.toRed(this.red);\n\t\n\t  var x2 = x.redSqr();\n\t  var rhs = this.c2.redSub(this.a.redMul(x2));\n\t  var lhs = this.one.redSub(this.c2.redMul(this.d).redMul(x2));\n\t\n\t  var y = rhs.redMul(lhs.redInvm()).redSqrt();\n\t  var isOdd = y.fromRed().isOdd();\n\t  if (odd && !isOdd || !odd && isOdd) y = y.redNeg();\n\t\n\t  return this.point(x, y);\n\t};\n\t\n\tEdwardsCurve.prototype.pointFromY = function pointFromY(y, odd) {\n\t  y = new bn(y, 16);\n\t  if (!y.red) y = y.toRed(this.red);\n\t\n\t  // x^2 = (y^2 - 1) / (d y^2 + 1)\n\t  var y2 = y.redSqr();\n\t  var lhs = y2.redSub(this.one);\n\t  var rhs = y2.redMul(this.d).redAdd(this.one);\n\t  var x2 = lhs.redMul(rhs.redInvm());\n\t\n\t  if (x2.cmp(this.zero) === 0) {\n\t    if (odd) throw new Error('invalid point');else return this.point(this.zero, y);\n\t  }\n\t\n\t  var x = x2.redSqrt();\n\t  if (x.redSqr().redSub(x2).cmp(this.zero) !== 0) throw new Error('invalid point');\n\t\n\t  if (x.isOdd() !== odd) x = x.redNeg();\n\t\n\t  return this.point(x, y);\n\t};\n\t\n\tEdwardsCurve.prototype.validate = function validate(point) {\n\t  if (point.isInfinity()) return true;\n\t\n\t  // Curve: A * X^2 + Y^2 = C^2 * (1 + D * X^2 * Y^2)\n\t  point.normalize();\n\t\n\t  var x2 = point.x.redSqr();\n\t  var y2 = point.y.redSqr();\n\t  var lhs = x2.redMul(this.a).redAdd(y2);\n\t  var rhs = this.c2.redMul(this.one.redAdd(this.d.redMul(x2).redMul(y2)));\n\t\n\t  return lhs.cmp(rhs) === 0;\n\t};\n\t\n\tfunction Point(curve, x, y, z, t) {\n\t  Base.BasePoint.call(this, curve, 'projective');\n\t  if (x === null && y === null && z === null) {\n\t    this.x = this.curve.zero;\n\t    this.y = this.curve.one;\n\t    this.z = this.curve.one;\n\t    this.t = this.curve.zero;\n\t    this.zOne = true;\n\t  } else {\n\t    this.x = new bn(x, 16);\n\t    this.y = new bn(y, 16);\n\t    this.z = z ? new bn(z, 16) : this.curve.one;\n\t    this.t = t && new bn(t, 16);\n\t    if (!this.x.red) this.x = this.x.toRed(this.curve.red);\n\t    if (!this.y.red) this.y = this.y.toRed(this.curve.red);\n\t    if (!this.z.red) this.z = this.z.toRed(this.curve.red);\n\t    if (this.t && !this.t.red) this.t = this.t.toRed(this.curve.red);\n\t    this.zOne = this.z === this.curve.one;\n\t\n\t    // Use extended coordinates\n\t    if (this.curve.extended && !this.t) {\n\t      this.t = this.x.redMul(this.y);\n\t      if (!this.zOne) this.t = this.t.redMul(this.z.redInvm());\n\t    }\n\t  }\n\t}\n\tinherits(Point, Base.BasePoint);\n\t\n\tEdwardsCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n\t  return Point.fromJSON(this, obj);\n\t};\n\t\n\tEdwardsCurve.prototype.point = function point(x, y, z, t) {\n\t  return new Point(this, x, y, z, t);\n\t};\n\t\n\tPoint.fromJSON = function fromJSON(curve, obj) {\n\t  return new Point(curve, obj[0], obj[1], obj[2]);\n\t};\n\t\n\tPoint.prototype.inspect = function inspect() {\n\t  if (this.isInfinity()) return '<EC Point Infinity>';\n\t  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) + ' y: ' + this.y.fromRed().toString(16, 2) + ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n\t};\n\t\n\tPoint.prototype.isInfinity = function isInfinity() {\n\t  // XXX This code assumes that zero is always zero in red\n\t  return this.x.cmpn(0) === 0 && this.y.cmp(this.z) === 0;\n\t};\n\t\n\tPoint.prototype._extDbl = function _extDbl() {\n\t  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html\n\t  //     #doubling-dbl-2008-hwcd\n\t  // 4M + 4S\n\t\n\t  // A = X1^2\n\t  var a = this.x.redSqr();\n\t  // B = Y1^2\n\t  var b = this.y.redSqr();\n\t  // C = 2 * Z1^2\n\t  var c = this.z.redSqr();\n\t  c = c.redIAdd(c);\n\t  // D = a * A\n\t  var d = this.curve._mulA(a);\n\t  // E = (X1 + Y1)^2 - A - B\n\t  var e = this.x.redAdd(this.y).redSqr().redISub(a).redISub(b);\n\t  // G = D + B\n\t  var g = d.redAdd(b);\n\t  // F = G - C\n\t  var f = g.redSub(c);\n\t  // H = D - B\n\t  var h = d.redSub(b);\n\t  // X3 = E * F\n\t  var nx = e.redMul(f);\n\t  // Y3 = G * H\n\t  var ny = g.redMul(h);\n\t  // T3 = E * H\n\t  var nt = e.redMul(h);\n\t  // Z3 = F * G\n\t  var nz = f.redMul(g);\n\t  return this.curve.point(nx, ny, nz, nt);\n\t};\n\t\n\tPoint.prototype._projDbl = function _projDbl() {\n\t  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html\n\t  //     #doubling-dbl-2008-bbjlp\n\t  //     #doubling-dbl-2007-bl\n\t  // and others\n\t  // Generally 3M + 4S or 2M + 4S\n\t\n\t  // B = (X1 + Y1)^2\n\t  var b = this.x.redAdd(this.y).redSqr();\n\t  // C = X1^2\n\t  var c = this.x.redSqr();\n\t  // D = Y1^2\n\t  var d = this.y.redSqr();\n\t\n\t  var nx;\n\t  var ny;\n\t  var nz;\n\t  if (this.curve.twisted) {\n\t    // E = a * C\n\t    var e = this.curve._mulA(c);\n\t    // F = E + D\n\t    var f = e.redAdd(d);\n\t    if (this.zOne) {\n\t      // X3 = (B - C - D) * (F - 2)\n\t      nx = b.redSub(c).redSub(d).redMul(f.redSub(this.curve.two));\n\t      // Y3 = F * (E - D)\n\t      ny = f.redMul(e.redSub(d));\n\t      // Z3 = F^2 - 2 * F\n\t      nz = f.redSqr().redSub(f).redSub(f);\n\t    } else {\n\t      // H = Z1^2\n\t      var h = this.z.redSqr();\n\t      // J = F - 2 * H\n\t      var j = f.redSub(h).redISub(h);\n\t      // X3 = (B-C-D)*J\n\t      nx = b.redSub(c).redISub(d).redMul(j);\n\t      // Y3 = F * (E - D)\n\t      ny = f.redMul(e.redSub(d));\n\t      // Z3 = F * J\n\t      nz = f.redMul(j);\n\t    }\n\t  } else {\n\t    // E = C + D\n\t    var e = c.redAdd(d);\n\t    // H = (c * Z1)^2\n\t    var h = this.curve._mulC(this.c.redMul(this.z)).redSqr();\n\t    // J = E - 2 * H\n\t    var j = e.redSub(h).redSub(h);\n\t    // X3 = c * (B - E) * J\n\t    nx = this.curve._mulC(b.redISub(e)).redMul(j);\n\t    // Y3 = c * E * (C - D)\n\t    ny = this.curve._mulC(e).redMul(c.redISub(d));\n\t    // Z3 = E * J\n\t    nz = e.redMul(j);\n\t  }\n\t  return this.curve.point(nx, ny, nz);\n\t};\n\t\n\tPoint.prototype.dbl = function dbl() {\n\t  if (this.isInfinity()) return this;\n\t\n\t  // Double in extended coordinates\n\t  if (this.curve.extended) return this._extDbl();else return this._projDbl();\n\t};\n\t\n\tPoint.prototype._extAdd = function _extAdd(p) {\n\t  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html\n\t  //     #addition-add-2008-hwcd-3\n\t  // 8M\n\t\n\t  // A = (Y1 - X1) * (Y2 - X2)\n\t  var a = this.y.redSub(this.x).redMul(p.y.redSub(p.x));\n\t  // B = (Y1 + X1) * (Y2 + X2)\n\t  var b = this.y.redAdd(this.x).redMul(p.y.redAdd(p.x));\n\t  // C = T1 * k * T2\n\t  var c = this.t.redMul(this.curve.dd).redMul(p.t);\n\t  // D = Z1 * 2 * Z2\n\t  var d = this.z.redMul(p.z.redAdd(p.z));\n\t  // E = B - A\n\t  var e = b.redSub(a);\n\t  // F = D - C\n\t  var f = d.redSub(c);\n\t  // G = D + C\n\t  var g = d.redAdd(c);\n\t  // H = B + A\n\t  var h = b.redAdd(a);\n\t  // X3 = E * F\n\t  var nx = e.redMul(f);\n\t  // Y3 = G * H\n\t  var ny = g.redMul(h);\n\t  // T3 = E * H\n\t  var nt = e.redMul(h);\n\t  // Z3 = F * G\n\t  var nz = f.redMul(g);\n\t  return this.curve.point(nx, ny, nz, nt);\n\t};\n\t\n\tPoint.prototype._projAdd = function _projAdd(p) {\n\t  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html\n\t  //     #addition-add-2008-bbjlp\n\t  //     #addition-add-2007-bl\n\t  // 10M + 1S\n\t\n\t  // A = Z1 * Z2\n\t  var a = this.z.redMul(p.z);\n\t  // B = A^2\n\t  var b = a.redSqr();\n\t  // C = X1 * X2\n\t  var c = this.x.redMul(p.x);\n\t  // D = Y1 * Y2\n\t  var d = this.y.redMul(p.y);\n\t  // E = d * C * D\n\t  var e = this.curve.d.redMul(c).redMul(d);\n\t  // F = B - E\n\t  var f = b.redSub(e);\n\t  // G = B + E\n\t  var g = b.redAdd(e);\n\t  // X3 = A * F * ((X1 + Y1) * (X2 + Y2) - C - D)\n\t  var tmp = this.x.redAdd(this.y).redMul(p.x.redAdd(p.y)).redISub(c).redISub(d);\n\t  var nx = a.redMul(f).redMul(tmp);\n\t  var ny;\n\t  var nz;\n\t  if (this.curve.twisted) {\n\t    // Y3 = A * G * (D - a * C)\n\t    ny = a.redMul(g).redMul(d.redSub(this.curve._mulA(c)));\n\t    // Z3 = F * G\n\t    nz = f.redMul(g);\n\t  } else {\n\t    // Y3 = A * G * (D - C)\n\t    ny = a.redMul(g).redMul(d.redSub(c));\n\t    // Z3 = c * F * G\n\t    nz = this.curve._mulC(f).redMul(g);\n\t  }\n\t  return this.curve.point(nx, ny, nz);\n\t};\n\t\n\tPoint.prototype.add = function add(p) {\n\t  if (this.isInfinity()) return p;\n\t  if (p.isInfinity()) return this;\n\t\n\t  if (this.curve.extended) return this._extAdd(p);else return this._projAdd(p);\n\t};\n\t\n\tPoint.prototype.mul = function mul(k) {\n\t  if (this._hasDoubles(k)) return this.curve._fixedNafMul(this, k);else return this.curve._wnafMul(this, k);\n\t};\n\t\n\tPoint.prototype.mulAdd = function mulAdd(k1, p, k2) {\n\t  return this.curve._wnafMulAdd(1, [this, p], [k1, k2], 2);\n\t};\n\t\n\tPoint.prototype.normalize = function normalize() {\n\t  if (this.zOne) return this;\n\t\n\t  // Normalize coordinates\n\t  var zi = this.z.redInvm();\n\t  this.x = this.x.redMul(zi);\n\t  this.y = this.y.redMul(zi);\n\t  if (this.t) this.t = this.t.redMul(zi);\n\t  this.z = this.curve.one;\n\t  this.zOne = true;\n\t  return this;\n\t};\n\t\n\tPoint.prototype.neg = function neg() {\n\t  return this.curve.point(this.x.redNeg(), this.y, this.z, this.t && this.t.redNeg());\n\t};\n\t\n\tPoint.prototype.getX = function getX() {\n\t  this.normalize();\n\t  return this.x.fromRed();\n\t};\n\t\n\tPoint.prototype.getY = function getY() {\n\t  this.normalize();\n\t  return this.y.fromRed();\n\t};\n\t\n\tPoint.prototype.eq = function eq(other) {\n\t  return this === other || this.getX().cmp(other.getX()) === 0 && this.getY().cmp(other.getY()) === 0;\n\t};\n\t\n\t// Compatibility with BaseCurve\n\tPoint.prototype.toP = Point.prototype.normalize;\n\tPoint.prototype.mixedAdd = Point.prototype.add;\n\n/***/ },\n\n/***/ 1484:\n[2494, 1474, 1485],\n\n/***/ 1485:\n907,\n\n/***/ 1486:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar bn = __webpack_require__(1477);\n\tvar elliptic = __webpack_require__(1474);\n\tvar utils = elliptic.utils;\n\tvar assert = utils.assert;\n\t\n\tvar KeyPair = __webpack_require__(1487);\n\tvar Signature = __webpack_require__(1488);\n\t\n\tfunction EC(options) {\n\t  if (!(this instanceof EC)) return new EC(options);\n\t\n\t  // Shortcut `elliptic.ec(curve-name)`\n\t  if (typeof options === 'string') {\n\t    assert(elliptic.curves.hasOwnProperty(options), 'Unknown curve ' + options);\n\t\n\t    options = elliptic.curves[options];\n\t  }\n\t\n\t  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`\n\t  if (options instanceof elliptic.curves.PresetCurve) options = { curve: options };\n\t\n\t  this.curve = options.curve.curve;\n\t  this.n = this.curve.n;\n\t  this.nh = this.n.ushrn(1);\n\t  this.g = this.curve.g;\n\t\n\t  // Point on curve\n\t  this.g = options.curve.g;\n\t  this.g.precompute(options.curve.n.bitLength() + 1);\n\t\n\t  // Hash for function for DRBG\n\t  this.hash = options.hash || options.curve.hash;\n\t}\n\tmodule.exports = EC;\n\t\n\tEC.prototype.keyPair = function keyPair(options) {\n\t  return new KeyPair(this, options);\n\t};\n\t\n\tEC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {\n\t  return KeyPair.fromPrivate(this, priv, enc);\n\t};\n\t\n\tEC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {\n\t  return KeyPair.fromPublic(this, pub, enc);\n\t};\n\t\n\tEC.prototype.genKeyPair = function genKeyPair(options) {\n\t  if (!options) options = {};\n\t\n\t  // Instantiate Hmac_DRBG\n\t  var drbg = new elliptic.hmacDRBG({\n\t    hash: this.hash,\n\t    pers: options.pers,\n\t    entropy: options.entropy || elliptic.rand(this.hash.hmacStrength),\n\t    nonce: this.n.toArray()\n\t  });\n\t\n\t  var bytes = this.n.byteLength();\n\t  var ns2 = this.n.sub(new bn(2));\n\t  do {\n\t    var priv = new bn(drbg.generate(bytes));\n\t    if (priv.cmp(ns2) > 0) continue;\n\t\n\t    priv.iaddn(1);\n\t    return this.keyFromPrivate(priv);\n\t  } while (true);\n\t};\n\t\n\tEC.prototype._truncateToN = function truncateToN(msg, truncOnly) {\n\t  var delta = msg.byteLength() * 8 - this.n.bitLength();\n\t  if (delta > 0) msg = msg.ushrn(delta);\n\t  if (!truncOnly && msg.cmp(this.n) >= 0) return msg.sub(this.n);else return msg;\n\t};\n\t\n\tEC.prototype.sign = function sign(msg, key, enc, options) {\n\t  if ((typeof enc === 'undefined' ? 'undefined' : _typeof(enc)) === 'object') {\n\t    options = enc;\n\t    enc = null;\n\t  }\n\t  if (!options) options = {};\n\t\n\t  key = this.keyFromPrivate(key, enc);\n\t  msg = this._truncateToN(new bn(msg, 16));\n\t\n\t  // Zero-extend key to provide enough entropy\n\t  var bytes = this.n.byteLength();\n\t  var bkey = key.getPrivate().toArray();\n\t  for (var i = bkey.length; i < bytes; i++) {\n\t    bkey.unshift(0);\n\t  } // Zero-extend nonce to have the same byte size as N\n\t  var nonce = msg.toArray();\n\t  for (var i = nonce.length; i < bytes; i++) {\n\t    nonce.unshift(0);\n\t  } // Instantiate Hmac_DRBG\n\t  var drbg = new elliptic.hmacDRBG({\n\t    hash: this.hash,\n\t    entropy: bkey,\n\t    nonce: nonce\n\t  });\n\t\n\t  // Number of bytes to generate\n\t  var ns1 = this.n.sub(new bn(1));\n\t  do {\n\t    var k = new bn(drbg.generate(this.n.byteLength()));\n\t    k = this._truncateToN(k, true);\n\t    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0) continue;\n\t\n\t    var kp = this.g.mul(k);\n\t    if (kp.isInfinity()) continue;\n\t\n\t    var kpX = kp.getX();\n\t    var r = kpX.umod(this.n);\n\t    if (r.cmpn(0) === 0) continue;\n\t\n\t    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));\n\t    s = s.umod(this.n);\n\t    if (s.cmpn(0) === 0) continue;\n\t\n\t    // Use complement of `s`, if it is > `n / 2`\n\t    if (options.canonical && s.cmp(this.nh) > 0) s = this.n.sub(s);\n\t\n\t    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) | (kpX.cmp(r) !== 0 ? 2 : 0);\n\t\n\t    return new Signature({ r: r, s: s, recoveryParam: recoveryParam });\n\t  } while (true);\n\t};\n\t\n\tEC.prototype.verify = function verify(msg, signature, key, enc) {\n\t  msg = this._truncateToN(new bn(msg, 16));\n\t  key = this.keyFromPublic(key, enc);\n\t  signature = new Signature(signature, 'hex');\n\t\n\t  // Perform primitive values validation\n\t  var r = signature.r;\n\t  var s = signature.s;\n\t  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0) return false;\n\t  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0) return false;\n\t\n\t  // Validate signature\n\t  var sinv = s.invm(this.n);\n\t  var u1 = sinv.mul(msg).umod(this.n);\n\t  var u2 = sinv.mul(r).umod(this.n);\n\t\n\t  var p = this.g.mulAdd(u1, key.getPublic(), u2);\n\t  if (p.isInfinity()) return false;\n\t\n\t  return p.getX().umod(this.n).cmp(r) === 0;\n\t};\n\t\n\tEC.prototype.recoverPubKey = function (msg, signature, j, enc) {\n\t  assert((3 & j) === j, 'The recovery param is more than two bits');\n\t  signature = new Signature(signature, enc);\n\t\n\t  var n = this.n;\n\t  var e = new bn(msg);\n\t  var r = signature.r;\n\t  var s = signature.s;\n\t\n\t  // A set LSB signifies that the y-coordinate is odd\n\t  var isYOdd = j & 1;\n\t  var isSecondKey = j >> 1;\n\t  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey) throw new Error('Unable to find sencond key candinate');\n\t\n\t  // 1.1. Let x = r + jn.\n\t  r = this.curve.pointFromX(r, isYOdd);\n\t  var eNeg = e.neg().umod(n);\n\t\n\t  // 1.6.1 Compute Q = r^-1 (sR -  eG)\n\t  //               Q = r^-1 (sR + -eG)\n\t  var rInv = signature.r.invm(n);\n\t  return r.mul(s).add(this.g.mul(eNeg)).mul(rInv);\n\t};\n\t\n\tEC.prototype.getKeyRecoveryParam = function (e, signature, Q, enc) {\n\t  signature = new Signature(signature, enc);\n\t  if (signature.recoveryParam !== null) return signature.recoveryParam;\n\t\n\t  for (var i = 0; i < 4; i++) {\n\t    var Qprime = this.recoverPubKey(e, signature, i);\n\t\n\t    if (Qprime.eq(Q)) return i;\n\t  }\n\t  throw new Error('Unable to find valid recovery factor');\n\t};\n\n/***/ },\n\n/***/ 1487:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar bn = __webpack_require__(1477);\n\t\n\tfunction KeyPair(ec, options) {\n\t  this.ec = ec;\n\t  this.priv = null;\n\t  this.pub = null;\n\t\n\t  // KeyPair(ec, { priv: ..., pub: ... })\n\t  if (options.priv) this._importPrivate(options.priv, options.privEnc);\n\t  if (options.pub) this._importPublic(options.pub, options.pubEnc);\n\t}\n\tmodule.exports = KeyPair;\n\t\n\tKeyPair.fromPublic = function fromPublic(ec, pub, enc) {\n\t  if (pub instanceof KeyPair) return pub;\n\t\n\t  return new KeyPair(ec, {\n\t    pub: pub,\n\t    pubEnc: enc\n\t  });\n\t};\n\t\n\tKeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {\n\t  if (priv instanceof KeyPair) return priv;\n\t\n\t  return new KeyPair(ec, {\n\t    priv: priv,\n\t    privEnc: enc\n\t  });\n\t};\n\t\n\tKeyPair.prototype.validate = function validate() {\n\t  var pub = this.getPublic();\n\t\n\t  if (pub.isInfinity()) return { result: false, reason: 'Invalid public key' };\n\t  if (!pub.validate()) return { result: false, reason: 'Public key is not a point' };\n\t  if (!pub.mul(this.ec.curve.n).isInfinity()) return { result: false, reason: 'Public key * N != O' };\n\t\n\t  return { result: true, reason: null };\n\t};\n\t\n\tKeyPair.prototype.getPublic = function getPublic(compact, enc) {\n\t  // compact is optional argument\n\t  if (typeof compact === 'string') {\n\t    enc = compact;\n\t    compact = null;\n\t  }\n\t\n\t  if (!this.pub) this.pub = this.ec.g.mul(this.priv);\n\t\n\t  if (!enc) return this.pub;\n\t\n\t  return this.pub.encode(enc, compact);\n\t};\n\t\n\tKeyPair.prototype.getPrivate = function getPrivate(enc) {\n\t  if (enc === 'hex') return this.priv.toString(16, 2);else return this.priv;\n\t};\n\t\n\tKeyPair.prototype._importPrivate = function _importPrivate(key, enc) {\n\t  this.priv = new bn(key, enc || 16);\n\t\n\t  // Ensure that the priv won't be bigger than n, otherwise we may fail\n\t  // in fixed multiplication method\n\t  this.priv = this.priv.umod(this.ec.curve.n);\n\t};\n\t\n\tKeyPair.prototype._importPublic = function _importPublic(key, enc) {\n\t  if (key.x || key.y) {\n\t    this.pub = this.ec.curve.point(key.x, key.y);\n\t    return;\n\t  }\n\t  this.pub = this.ec.curve.decodePoint(key, enc);\n\t};\n\t\n\t// ECDH\n\tKeyPair.prototype.derive = function derive(pub) {\n\t  return pub.mul(this.priv).getX();\n\t};\n\t\n\t// ECDSA\n\tKeyPair.prototype.sign = function sign(msg, enc, options) {\n\t  return this.ec.sign(msg, this, enc, options);\n\t};\n\t\n\tKeyPair.prototype.verify = function verify(msg, signature) {\n\t  return this.ec.verify(msg, signature, this);\n\t};\n\t\n\tKeyPair.prototype.inspect = function inspect() {\n\t  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) + ' pub: ' + (this.pub && this.pub.inspect()) + ' >';\n\t};\n\n/***/ },\n\n/***/ 1488:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar bn = __webpack_require__(1477);\n\t\n\tvar elliptic = __webpack_require__(1474);\n\tvar utils = elliptic.utils;\n\tvar assert = utils.assert;\n\t\n\tfunction Signature(options, enc) {\n\t  if (options instanceof Signature) return options;\n\t\n\t  if (this._importDER(options, enc)) return;\n\t\n\t  assert(options.r && options.s, 'Signature without r or s');\n\t  this.r = new bn(options.r, 16);\n\t  this.s = new bn(options.s, 16);\n\t  if (options.recoveryParam !== null) this.recoveryParam = options.recoveryParam;else this.recoveryParam = null;\n\t}\n\tmodule.exports = Signature;\n\t\n\tfunction Position() {\n\t  this.place = 0;\n\t}\n\t\n\tfunction getLength(buf, p) {\n\t  var initial = buf[p.place++];\n\t  if (!(initial & 0x80)) {\n\t    return initial;\n\t  }\n\t  var octetLen = initial & 0xf;\n\t  var val = 0;\n\t  for (var i = 0, off = p.place; i < octetLen; i++, off++) {\n\t    val <<= 8;\n\t    val |= buf[off];\n\t  }\n\t  p.place = off;\n\t  return val;\n\t}\n\t\n\tfunction rmPadding(buf) {\n\t  var i = 0;\n\t  var len = buf.length - 1;\n\t  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {\n\t    i++;\n\t  }\n\t  if (i === 0) {\n\t    return buf;\n\t  }\n\t  return buf.slice(i);\n\t}\n\t\n\tSignature.prototype._importDER = function _importDER(data, enc) {\n\t  data = utils.toArray(data, enc);\n\t  var p = new Position();\n\t  if (data[p.place++] !== 0x30) {\n\t    return false;\n\t  }\n\t  var len = getLength(data, p);\n\t  if (len + p.place !== data.length) {\n\t    return false;\n\t  }\n\t  if (data[p.place++] !== 0x02) {\n\t    return false;\n\t  }\n\t  var rlen = getLength(data, p);\n\t  var r = data.slice(p.place, rlen + p.place);\n\t  p.place += rlen;\n\t  if (data[p.place++] !== 0x02) {\n\t    return false;\n\t  }\n\t  var slen = getLength(data, p);\n\t  if (data.length !== slen + p.place) {\n\t    return false;\n\t  }\n\t  var s = data.slice(p.place, slen + p.place);\n\t  if (r[0] === 0 && r[1] & 0x80) {\n\t    r = r.slice(1);\n\t  }\n\t  if (s[0] === 0 && s[1] & 0x80) {\n\t    s = s.slice(1);\n\t  }\n\t\n\t  this.r = new bn(r);\n\t  this.s = new bn(s);\n\t  this.recoveryParam = null;\n\t\n\t  return true;\n\t};\n\t\n\tfunction constructLength(arr, len) {\n\t  if (len < 0x80) {\n\t    arr.push(len);\n\t    return;\n\t  }\n\t  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);\n\t  arr.push(octets | 0x80);\n\t  while (--octets) {\n\t    arr.push(len >>> (octets << 3) & 0xff);\n\t  }\n\t  arr.push(len);\n\t}\n\t\n\tSignature.prototype.toDER = function toDER(enc) {\n\t  var r = this.r.toArray();\n\t  var s = this.s.toArray();\n\t\n\t  // Pad values\n\t  if (r[0] & 0x80) r = [0].concat(r);\n\t  // Pad values\n\t  if (s[0] & 0x80) s = [0].concat(s);\n\t\n\t  r = rmPadding(r);\n\t  s = rmPadding(s);\n\t\n\t  while (!s[0] && !(s[1] & 0x80)) {\n\t    s = s.slice(1);\n\t  }\n\t  var arr = [0x02];\n\t  constructLength(arr, r.length);\n\t  arr = arr.concat(r);\n\t  arr.push(0x02);\n\t  constructLength(arr, s.length);\n\t  var backHalf = arr.concat(s);\n\t  var res = [0x30];\n\t  constructLength(res, backHalf.length);\n\t  res = res.concat(backHalf);\n\t  return utils.encode(res, enc);\n\t};\n\n/***/ },\n\n/***/ 1489:\n[2495, 1474, 1490, 1491],\n\n/***/ 1490:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar elliptic = __webpack_require__(1474);\n\tvar utils = elliptic.utils;\n\tvar assert = utils.assert;\n\tvar parseBytes = utils.parseBytes;\n\tvar cachedProperty = utils.cachedProperty;\n\t\n\t/**\n\t* @param {EDDSA} eddsa - instance\n\t* @param {Object} params - public/private key parameters\n\t*\n\t* @param {Array<Byte>} [params.secret] - secret seed bytes\n\t* @param {Point} [params.pub] - public key point (aka `A` in eddsa terms)\n\t* @param {Array<Byte>} [params.pub] - public key point encoded as bytes\n\t*\n\t*/\n\tfunction KeyPair(eddsa, params) {\n\t  this.eddsa = eddsa;\n\t  this._secret = parseBytes(params.secret);\n\t  if (eddsa.isPoint(params.pub)) this._pub = params.pub;else this._pubBytes = parseBytes(params.pub);\n\t}\n\t\n\tKeyPair.fromPublic = function fromPublic(eddsa, pub) {\n\t  if (pub instanceof KeyPair) return pub;\n\t  return new KeyPair(eddsa, { pub: pub });\n\t};\n\t\n\tKeyPair.fromSecret = function fromSecret(eddsa, secret) {\n\t  if (secret instanceof KeyPair) return secret;\n\t  return new KeyPair(eddsa, { secret: secret });\n\t};\n\t\n\tKeyPair.prototype.secret = function secret() {\n\t  return this._secret;\n\t};\n\t\n\tcachedProperty(KeyPair, function pubBytes() {\n\t  return this.eddsa.encodePoint(this.pub());\n\t});\n\t\n\tcachedProperty(KeyPair, function pub() {\n\t  if (this._pubBytes) return this.eddsa.decodePoint(this._pubBytes);\n\t  return this.eddsa.g.mul(this.priv());\n\t});\n\t\n\tcachedProperty(KeyPair, function privBytes() {\n\t  var eddsa = this.eddsa;\n\t  var hash = this.hash();\n\t  var lastIx = eddsa.encodingLength - 1;\n\t\n\t  var a = hash.slice(0, eddsa.encodingLength);\n\t  a[0] &= 248;\n\t  a[lastIx] &= 127;\n\t  a[lastIx] |= 64;\n\t\n\t  return a;\n\t});\n\t\n\tcachedProperty(KeyPair, function priv() {\n\t  return this.eddsa.decodeInt(this.privBytes());\n\t});\n\t\n\tcachedProperty(KeyPair, function hash() {\n\t  return this.eddsa.hash().update(this.secret()).digest();\n\t});\n\t\n\tcachedProperty(KeyPair, function messagePrefix() {\n\t  return this.hash().slice(this.eddsa.encodingLength);\n\t});\n\t\n\tKeyPair.prototype.sign = function sign(message) {\n\t  assert(this._secret, 'KeyPair can only verify');\n\t  return this.eddsa.sign(message, this);\n\t};\n\t\n\tKeyPair.prototype.verify = function verify(message, sig) {\n\t  return this.eddsa.verify(message, sig, this);\n\t};\n\t\n\tKeyPair.prototype.getSecret = function getSecret(enc) {\n\t  assert(this._secret, 'KeyPair is public only');\n\t  return utils.encode(this.secret(), enc);\n\t};\n\t\n\tKeyPair.prototype.getPublic = function getPublic(enc) {\n\t  return utils.encode(this.pubBytes(), enc);\n\t};\n\t\n\tmodule.exports = KeyPair;\n\n/***/ },\n\n/***/ 1491:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar bn = __webpack_require__(1477);\n\tvar elliptic = __webpack_require__(1474);\n\tvar utils = elliptic.utils;\n\tvar assert = utils.assert;\n\tvar cachedProperty = utils.cachedProperty;\n\tvar parseBytes = utils.parseBytes;\n\t\n\t/**\n\t* @param {EDDSA} eddsa - eddsa instance\n\t* @param {Array<Bytes>|Object} sig -\n\t* @param {Array<Bytes>|Point} [sig.R] - R point as Point or bytes\n\t* @param {Array<Bytes>|bn} [sig.S] - S scalar as bn or bytes\n\t* @param {Array<Bytes>} [sig.Rencoded] - R point encoded\n\t* @param {Array<Bytes>} [sig.Sencoded] - S scalar encoded\n\t*/\n\tfunction Signature(eddsa, sig) {\n\t  this.eddsa = eddsa;\n\t\n\t  if ((typeof sig === 'undefined' ? 'undefined' : _typeof(sig)) !== 'object') sig = parseBytes(sig);\n\t\n\t  if (Array.isArray(sig)) {\n\t    sig = {\n\t      R: sig.slice(0, eddsa.encodingLength),\n\t      S: sig.slice(eddsa.encodingLength)\n\t    };\n\t  }\n\t\n\t  assert(sig.R && sig.S, 'Signature without R or S');\n\t\n\t  if (eddsa.isPoint(sig.R)) this._R = sig.R;\n\t  if (sig.S instanceof bn) this._S = sig.S;\n\t\n\t  this._Rencoded = Array.isArray(sig.R) ? sig.R : sig.Rencoded;\n\t  this._Sencoded = Array.isArray(sig.S) ? sig.S : sig.Sencoded;\n\t}\n\t\n\tcachedProperty(Signature, function S() {\n\t  return this.eddsa.decodeInt(this.Sencoded());\n\t});\n\t\n\tcachedProperty(Signature, function R() {\n\t  return this.eddsa.decodePoint(this.Rencoded());\n\t});\n\t\n\tcachedProperty(Signature, function Rencoded() {\n\t  return this.eddsa.encodePoint(this.R());\n\t});\n\t\n\tcachedProperty(Signature, function Sencoded() {\n\t  return this.eddsa.encodeInt(this.S());\n\t});\n\t\n\tSignature.prototype.toBytes = function toBytes() {\n\t  return this.Rencoded().concat(this.Sencoded());\n\t};\n\t\n\tSignature.prototype.toHex = function toHex() {\n\t  return utils.encode(this.toBytes(), 'hex').toUpperCase();\n\t};\n\t\n\tmodule.exports = Signature;\n\n/***/ },\n\n/***/ 1492:\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = {\n\t  p192: 'prime192v1',\n\t  p224: 'secp224r1',\n\t  p256: 'prime256v1',\n\t  p384: 'secp384r1',\n\t  p521: 'secp521r1'\n\t};\n\n/***/ },\n\n/***/ 1493:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(Buffer) {'use strict';\n\t\n\tvar crypto = __webpack_require__(818);\n\tvar secp256k1 = __webpack_require__(1272);\n\tvar nkey = __webpack_require__(1437);\n\tvar type = 'ec';\n\t\n\tvar impl = nkey.wrap({\n\t  type: type,\n\t  genSync: genSync,\n\t  fromJSON: fromJSON\n\t});\n\t\n\tmodule.exports = impl;\n\t\n\tfunction genSync() {\n\t  var priv = void 0;\n\t  do {\n\t    priv = crypto.randomBytes(32);\n\t  } while (!secp256k1.privateKeyVerify(priv));\n\t\n\t  return impl.fromJSON({ priv: priv });\n\t}\n\t\n\tfunction fromJSON(opts) {\n\t  if (!(opts.priv || opts.pub)) {\n\t    throw new Error('expected \"priv\" or \"pub\"');\n\t  }\n\t\n\t  var priv = typeof opts.priv === 'string' ? new Buffer(opts.priv, 'hex') : opts.priv;\n\t  var pub = typeof opts.pub === 'string' ? new Buffer(opts.pub, 'hex') : opts.pub || pubFromPriv(priv);\n\t  var privEnc = typeof priv === 'string' && 'hex';\n\t  var pubEnc = typeof pub === 'string' && 'hex';\n\t  var pubKeyString = pub.toString('hex');\n\t  var privKeyString = priv && secp256k1.privateKeyExport(priv);\n\t  var fingerprint = crypto.createHash('sha256').update(pub).digest('hex');\n\t\n\t  return nkey.wrap({\n\t    type: type,\n\t    signSync: signSync,\n\t    verifySync: verifySync,\n\t    hasDeterministicSig: false,\n\t    pubKeyString: pubKeyString,\n\t    fingerprint: fingerprint,\n\t    pub: pub,\n\t    priv: priv,\n\t    toJSON: toJSON\n\t  });\n\t\n\t  function signSync(msg) {\n\t    if (!priv) throw new Error('this is a public key');\n\t\n\t    var sig = secp256k1.sign(msg, priv);\n\t\n\t    // Ensure low S value\n\t    sig = secp256k1.signatureNormalize(sig.signature);\n\t\n\t    // Convert to DER array\n\t    return new Buffer(secp256k1.signatureExport(sig)).toString('hex');\n\t  }\n\t\n\t  function verifySync(msg, sig) {\n\t    if (typeof sig === 'string') sig = new Buffer(sig, 'hex');\n\t\n\t    sig = secp256k1.signatureImport(sig);\n\t    return secp256k1.verify(msg, sig, pub);\n\t  }\n\t\n\t  function pubFromPriv(priv) {\n\t    return secp256k1.publicKeyCreate(priv);\n\t  }\n\t\n\t  function toJSON(exportPrivate) {\n\t    var obj = {\n\t      type: 'ec',\n\t      curve: 'secp256k1',\n\t      pub: pubKeyString,\n\t      fingerprint: fingerprint\n\t    };\n\t\n\t    if (exportPrivate) obj.priv = privKeyString;\n\t\n\t    return obj;\n\t  }\n\t}\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(807).Buffer))\n\n/***/ },\n\n/***/ 1494:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(Buffer) {'use strict';\n\t\n\tvar crypto = __webpack_require__(818);\n\tvar curve25519 = __webpack_require__(1495).box;\n\tvar nkey = __webpack_require__(1437);\n\tvar type = 'ec';\n\t\n\tvar impl = nkey.wrap({\n\t  type: type,\n\t  genSync: genSync,\n\t  fromJSON: fromJSON\n\t});\n\t\n\tmodule.exports = impl;\n\t\n\tfunction genSync() {\n\t  var priv = curve25519.keyPair();\n\t  return impl.fromJSON({ priv: priv });\n\t}\n\t\n\tfunction fromJSON(opts) {\n\t  if (!(opts.priv || opts.pub)) {\n\t    throw new Error('expected \"priv\" or \"pub\"');\n\t  }\n\t\n\t  var priv = typeof opts.priv === 'string' ? new Buffer(opts.priv, 'hex') : opts.priv && opts.priv.secretKey ? new Buffer(opts.priv.secretKey) : opts.priv;\n\t\n\t  var privArr = priv && toUint8Array(priv);\n\t  var pub = typeof opts.pub === 'string' ? new Buffer(opts.pub, 'hex') : opts.pub || opts.priv && opts.priv.publicKey && new Buffer(opts.priv.publicKey) || pubFromPriv(priv);\n\t\n\t  var privEnc = typeof priv === 'string' && 'hex';\n\t  var pubEnc = typeof pub === 'string' && 'hex';\n\t  var pubKeyString = pub.toString('hex');\n\t  var privKeyString = priv && priv.toString('hex');\n\t  var fingerprint = crypto.createHash('sha256').update(pub).digest('hex');\n\t\n\t  return nkey.wrap({\n\t    type: type,\n\t    pubKeyString: pubKeyString,\n\t    fingerprint: fingerprint,\n\t    pub: pub,\n\t    priv: priv,\n\t    ecdh: function ecdh(pub) {\n\t      if (!priv) throw new Error('this is a public key!');\n\t\n\t      pub = toUint8Array(pub);\n\t      var sharedKey = curve25519.before(pub, privArr);\n\t      return new Buffer(sharedKey);\n\t    },\n\t    toJSON: toJSON\n\t  });\n\t\n\t  function pubFromPriv(priv) {\n\t    var arr = priv.secretKey || curve25519.keyPair.fromSecretKey(priv).publicKey;\n\t    return new Buffer(arr);\n\t  }\n\t\n\t  function toJSON(exportPrivate) {\n\t    var obj = {\n\t      type: 'ec',\n\t      curve: 'curve25519',\n\t      pub: pubKeyString,\n\t      fingerprint: fingerprint\n\t    };\n\t\n\t    if (exportPrivate) obj.priv = privKeyString;\n\t\n\t    return obj;\n\t  }\n\t}\n\t\n\tfunction toUint8Array(buf) {\n\t  if (buf instanceof Uint8Array) return buf;\n\t  if (!Buffer.isBuffer(buf)) {\n\t    throw new Error('expected Buffer or Uint8Array');\n\t  }\n\t\n\t  var arr = new Uint8Array(buf.length);\n\t  for (var i = 0; i < buf.length; i++) {\n\t    arr[i] = buf[i];\n\t  }\n\t\n\t  return arr;\n\t}\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(807).Buffer))\n\n/***/ },\n\n/***/ 1497:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar crypto = __webpack_require__(818);\n\tvar bitcoin = __webpack_require__(1394);\n\tvar nkey = __webpack_require__(1437);\n\tvar type = 'bitcoin';\n\tvar impl = nkey.wrap({\n\t  type: type,\n\t  genSync: genSync,\n\t  fromJSON: fromJSON\n\t});\n\t\n\tmodule.exports = exports = impl;\n\t\n\texports.DEFAULT_NETWORK = 'bitcoin';\n\t\n\tfunction genSync(opts) {\n\t  var networkName = opts.networkName || exports.DEFAULT_NETWORK;\n\t  return impl.fromJSON({\n\t    priv: bitcoin.ECKey.makeRandom(),\n\t    networkName: networkName\n\t  });\n\t}\n\t\n\tfunction fromJSON(opts) {\n\t  if (!(opts.priv || opts.pub)) {\n\t    throw new Error('expected \"priv\" or \"pub\"');\n\t  }\n\t\n\t  var networkName = opts.networkName;\n\t  var network = bitcoin.networks[networkName];\n\t  if (!network) throw new Error('invalid \"networkName\"');\n\t\n\t  var key = void 0;\n\t  var priv = opts.priv;\n\t  var pub = opts.pub;\n\t  var privKeyString = void 0;\n\t  var pubKeyString = void 0;\n\t  if (typeof priv === 'string') {\n\t    privKeyString = priv;\n\t    key = bitcoin.ECKey.fromWIF(priv);\n\t  } else if (priv) {\n\t    privKeyString = priv.toWIF(network);\n\t    key = priv;\n\t  } else if (typeof pub === 'string') {\n\t    pubKeyString = pub;\n\t    key = bitcoin.ECPubKey.fromHex(pub);\n\t    pub = key;\n\t  } else {\n\t    key = pub;\n\t  }\n\t\n\t  // if (!pubKeyString) pubKeyString = pub.toString('hex')\n\t\n\t  var fingerprint = void 0;\n\t  var api = {\n\t    type: type,\n\t    signSync: signSync,\n\t    verifySync: verifySync,\n\t    privKeyString: privKeyString,\n\t    toJSON: toJSON,\n\t    hasDeterministicSig: true,\n\t    wif: privKeyString\n\t    // pubKeyString,\n\t    // fingerprint,\n\t    // pub,\n\t    // priv,\n\t  };\n\t\n\t  // lazy, could be expensive\n\t  Object.defineProperty(api, 'pub', {\n\t    enumerable: true,\n\t    get: function get() {\n\t      return key.pub || key;\n\t    }\n\t  });\n\t\n\t  Object.defineProperty(api, 'pubKeyString', {\n\t    enumerable: true,\n\t    get: function get() {\n\t      if (!pubKeyString) {\n\t        pubKeyString = api.pub.toHex();\n\t      }\n\t\n\t      return pubKeyString;\n\t    }\n\t  });\n\t\n\t  Object.defineProperty(api, 'fingerprint', {\n\t    enumerable: true,\n\t    get: function get() {\n\t      if (!fingerprint) {\n\t        fingerprint = api.pub.getAddress(network).toString();\n\t      }\n\t\n\t      return fingerprint;\n\t    }\n\t  });\n\t\n\t  return nkey.wrap(api);\n\t\n\t  function signSync(msg) {\n\t    if (!priv) throw new Error('this is a public key');\n\t\n\t    return key.sign(msg).toDER();\n\t  }\n\t\n\t  function verifySync(msg, sig) {\n\t    return api.pub.verify(msg, bitcoin.ECSignature.fromDER(sig));\n\t  }\n\t\n\t  function toJSON(exportPrivate) {\n\t    var obj = {\n\t      type: type,\n\t      networkName: networkName,\n\t      fingerprint: api.fingerprint,\n\t      pub: api.pubKeyString\n\t    };\n\t\n\t    if (exportPrivate) obj.priv = privKeyString;\n\t\n\t    return obj;\n\t  }\n\t}\n\n/***/ },\n\n/***/ 2491:\n/***/ function(module, exports, __webpack_require__, __webpack_module_template_argument_0__, __webpack_module_template_argument_1__, __webpack_module_template_argument_2__, __webpack_module_template_argument_3__, __webpack_module_template_argument_4__, __webpack_module_template_argument_5__, __webpack_module_template_argument_6__) {\n\n\t'use strict';\n\t\n\tvar elliptic = exports;\n\t\n\telliptic.version = __webpack_require__(__webpack_module_template_argument_0__).version;\n\telliptic.utils = __webpack_require__(__webpack_module_template_argument_1__);\n\telliptic.rand = __webpack_require__(883);\n\telliptic.hmacDRBG = __webpack_require__(__webpack_module_template_argument_2__);\n\telliptic.curve = __webpack_require__(__webpack_module_template_argument_3__);\n\telliptic.curves = __webpack_require__(__webpack_module_template_argument_4__);\n\t\n\t// Protocols\n\telliptic.ec = __webpack_require__(__webpack_module_template_argument_5__);\n\telliptic.eddsa = __webpack_require__(__webpack_module_template_argument_6__);\n\n/***/ },\n\n/***/ 2492:\n/***/ function(module, exports, __webpack_require__, __webpack_module_template_argument_0__) {\n\n\t'use strict';\n\t\n\tvar hash = __webpack_require__(895);\n\tvar elliptic = __webpack_require__(__webpack_module_template_argument_0__);\n\tvar utils = elliptic.utils;\n\tvar assert = utils.assert;\n\t\n\tfunction HmacDRBG(options) {\n\t  if (!(this instanceof HmacDRBG)) return new HmacDRBG(options);\n\t  this.hash = options.hash;\n\t  this.predResist = !!options.predResist;\n\t\n\t  this.outLen = this.hash.outSize;\n\t  this.minEntropy = options.minEntropy || this.hash.hmacStrength;\n\t\n\t  this.reseed = null;\n\t  this.reseedInterval = null;\n\t  this.K = null;\n\t  this.V = null;\n\t\n\t  var entropy = utils.toArray(options.entropy, options.entropyEnc);\n\t  var nonce = utils.toArray(options.nonce, options.nonceEnc);\n\t  var pers = utils.toArray(options.pers, options.persEnc);\n\t  assert(entropy.length >= this.minEntropy / 8, 'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n\t  this._init(entropy, nonce, pers);\n\t}\n\tmodule.exports = HmacDRBG;\n\t\n\tHmacDRBG.prototype._init = function init(entropy, nonce, pers) {\n\t  var seed = entropy.concat(nonce).concat(pers);\n\t\n\t  this.K = new Array(this.outLen / 8);\n\t  this.V = new Array(this.outLen / 8);\n\t  for (var i = 0; i < this.V.length; i++) {\n\t    this.K[i] = 0x00;\n\t    this.V[i] = 0x01;\n\t  }\n\t\n\t  this._update(seed);\n\t  this.reseed = 1;\n\t  this.reseedInterval = 0x1000000000000; // 2^48\n\t};\n\t\n\tHmacDRBG.prototype._hmac = function hmac() {\n\t  return new hash.hmac(this.hash, this.K);\n\t};\n\t\n\tHmacDRBG.prototype._update = function update(seed) {\n\t  var kmac = this._hmac().update(this.V).update([0x00]);\n\t  if (seed) kmac = kmac.update(seed);\n\t  this.K = kmac.digest();\n\t  this.V = this._hmac().update(this.V).digest();\n\t  if (!seed) return;\n\t\n\t  this.K = this._hmac().update(this.V).update([0x01]).update(seed).digest();\n\t  this.V = this._hmac().update(this.V).digest();\n\t};\n\t\n\tHmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {\n\t  // Optional entropy enc\n\t  if (typeof entropyEnc !== 'string') {\n\t    addEnc = add;\n\t    add = entropyEnc;\n\t    entropyEnc = null;\n\t  }\n\t\n\t  entropy = utils.toBuffer(entropy, entropyEnc);\n\t  add = utils.toBuffer(add, addEnc);\n\t\n\t  assert(entropy.length >= this.minEntropy / 8, 'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n\t\n\t  this._update(entropy.concat(add || []));\n\t  this.reseed = 1;\n\t};\n\t\n\tHmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {\n\t  if (this.reseed > this.reseedInterval) throw new Error('Reseed is required');\n\t\n\t  // Optional encoding\n\t  if (typeof enc !== 'string') {\n\t    addEnc = add;\n\t    add = enc;\n\t    enc = null;\n\t  }\n\t\n\t  // Optional additional data\n\t  if (add) {\n\t    add = utils.toArray(add, addEnc);\n\t    this._update(add);\n\t  }\n\t\n\t  var temp = [];\n\t  while (temp.length < len) {\n\t    this.V = this._hmac().update(this.V).digest();\n\t    temp = temp.concat(this.V);\n\t  }\n\t\n\t  var res = temp.slice(0, len);\n\t  this._update(add);\n\t  this.reseed++;\n\t  return utils.encode(res, enc);\n\t};\n\n/***/ },\n\n/***/ 2493:\n/***/ function(module, exports, __webpack_require__, __webpack_module_template_argument_0__, __webpack_module_template_argument_1__, __webpack_module_template_argument_2__, __webpack_module_template_argument_3__) {\n\n\t'use strict';\n\t\n\tvar curve = exports;\n\t\n\tcurve.base = __webpack_require__(__webpack_module_template_argument_0__);\n\tcurve.short = __webpack_require__(__webpack_module_template_argument_1__);\n\tcurve.mont = __webpack_require__(__webpack_module_template_argument_2__);\n\tcurve.edwards = __webpack_require__(__webpack_module_template_argument_3__);\n\n/***/ },\n\n/***/ 2494:\n/***/ function(module, exports, __webpack_require__, __webpack_module_template_argument_0__, __webpack_module_template_argument_1__) {\n\n\t'use strict';\n\t\n\tvar curves = exports;\n\t\n\tvar hash = __webpack_require__(895);\n\tvar elliptic = __webpack_require__(__webpack_module_template_argument_0__);\n\t\n\tvar assert = elliptic.utils.assert;\n\t\n\tfunction PresetCurve(options) {\n\t  if (options.type === 'short') this.curve = new elliptic.curve.short(options);else if (options.type === 'edwards') this.curve = new elliptic.curve.edwards(options);else this.curve = new elliptic.curve.mont(options);\n\t  this.g = this.curve.g;\n\t  this.n = this.curve.n;\n\t  this.hash = options.hash;\n\t\n\t  assert(this.g.validate(), 'Invalid curve');\n\t  assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');\n\t}\n\tcurves.PresetCurve = PresetCurve;\n\t\n\tfunction defineCurve(name, options) {\n\t  Object.defineProperty(curves, name, {\n\t    configurable: true,\n\t    enumerable: true,\n\t    get: function get() {\n\t      var curve = new PresetCurve(options);\n\t      Object.defineProperty(curves, name, {\n\t        configurable: true,\n\t        enumerable: true,\n\t        value: curve\n\t      });\n\t      return curve;\n\t    }\n\t  });\n\t}\n\t\n\tdefineCurve('p192', {\n\t  type: 'short',\n\t  prime: 'p192',\n\t  p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',\n\t  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',\n\t  b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',\n\t  n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',\n\t  hash: hash.sha256,\n\t  gRed: false,\n\t  g: ['188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012', '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811']\n\t});\n\t\n\tdefineCurve('p224', {\n\t  type: 'short',\n\t  prime: 'p224',\n\t  p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',\n\t  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',\n\t  b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',\n\t  n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',\n\t  hash: hash.sha256,\n\t  gRed: false,\n\t  g: ['b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21', 'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34']\n\t});\n\t\n\tdefineCurve('p256', {\n\t  type: 'short',\n\t  prime: null,\n\t  p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',\n\t  a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',\n\t  b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',\n\t  n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',\n\t  hash: hash.sha256,\n\t  gRed: false,\n\t  g: ['6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296', '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5']\n\t});\n\t\n\tdefineCurve('p384', {\n\t  type: 'short',\n\t  prime: null,\n\t  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'fffffffe ffffffff 00000000 00000000 ffffffff',\n\t  a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'fffffffe ffffffff 00000000 00000000 fffffffc',\n\t  b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' + '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',\n\t  n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' + 'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',\n\t  hash: hash.sha384,\n\t  gRed: false,\n\t  g: ['aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' + '5502f25d bf55296c 3a545e38 72760ab7', '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' + '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f']\n\t});\n\t\n\tdefineCurve('p521', {\n\t  type: 'short',\n\t  prime: null,\n\t  p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'ffffffff ffffffff ffffffff ffffffff ffffffff',\n\t  a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'ffffffff ffffffff ffffffff ffffffff fffffffc',\n\t  b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' + '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' + '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',\n\t  n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' + 'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',\n\t  hash: hash.sha512,\n\t  gRed: false,\n\t  g: ['000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' + '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' + 'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66', '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' + '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' + '3fad0761 353c7086 a272c240 88be9476 9fd16650']\n\t});\n\t\n\tdefineCurve('curve25519', {\n\t  type: 'mont',\n\t  prime: 'p25519',\n\t  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n\t  a: '76d06',\n\t  b: '0',\n\t  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n\t  hash: hash.sha256,\n\t  gRed: false,\n\t  g: ['9']\n\t});\n\t\n\tdefineCurve('ed25519', {\n\t  type: 'edwards',\n\t  prime: 'p25519',\n\t  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n\t  a: '-1',\n\t  c: '1',\n\t  // -121665 * (121666^(-1)) (mod P)\n\t  d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',\n\t  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n\t  hash: hash.sha256,\n\t  gRed: false,\n\t  g: ['216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a',\n\t\n\t  // 4/5\n\t  '6666666666666666666666666666666666666666666666666666666666666658']\n\t});\n\t\n\tvar pre;\n\ttry {\n\t  pre = __webpack_require__(__webpack_module_template_argument_1__);\n\t} catch (e) {\n\t  pre = undefined;\n\t}\n\t\n\tdefineCurve('secp256k1', {\n\t  type: 'short',\n\t  prime: 'k256',\n\t  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',\n\t  a: '0',\n\t  b: '7',\n\t  n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',\n\t  h: '1',\n\t  hash: hash.sha256,\n\t\n\t  // Precomputed endomorphism\n\t  beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',\n\t  lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',\n\t  basis: [{\n\t    a: '3086d221a7d46bcde86c90e49284eb15',\n\t    b: '-e4437ed6010e88286f547fa90abfe4c3'\n\t  }, {\n\t    a: '114ca50f7a8e2f3f657c1108d9d44cfd8',\n\t    b: '3086d221a7d46bcde86c90e49284eb15'\n\t  }],\n\t\n\t  gRed: false,\n\t  g: ['79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798', '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8', pre]\n\t});\n\n/***/ },\n\n/***/ 2495:\n/***/ function(module, exports, __webpack_require__, __webpack_module_template_argument_0__, __webpack_module_template_argument_1__, __webpack_module_template_argument_2__) {\n\n\t'use strict';\n\t\n\tvar hash = __webpack_require__(895);\n\tvar elliptic = __webpack_require__(__webpack_module_template_argument_0__);\n\tvar utils = elliptic.utils;\n\tvar assert = utils.assert;\n\tvar parseBytes = utils.parseBytes;\n\tvar KeyPair = __webpack_require__(__webpack_module_template_argument_1__);\n\tvar Signature = __webpack_require__(__webpack_module_template_argument_2__);\n\t\n\tfunction EDDSA(curve) {\n\t  assert(curve === 'ed25519', 'only tested with ed25519 so far');\n\t\n\t  if (!(this instanceof EDDSA)) return new EDDSA(curve);\n\t\n\t  var curve = elliptic.curves[curve].curve;\n\t  this.curve = curve;\n\t  this.g = curve.g;\n\t  this.g.precompute(curve.n.bitLength() + 1);\n\t\n\t  this.pointClass = curve.point().constructor;\n\t  this.encodingLength = Math.ceil(curve.n.bitLength() / 8);\n\t  this.hash = hash.sha512;\n\t}\n\t\n\tmodule.exports = EDDSA;\n\t\n\t/**\n\t* @param {Array|String} message - message bytes\n\t* @param {Array|String|KeyPair} secret - secret bytes or a keypair\n\t* @returns {Signature} - signature\n\t*/\n\tEDDSA.prototype.sign = function sign(message, secret) {\n\t  message = parseBytes(message);\n\t  var key = this.keyFromSecret(secret);\n\t  var r = this.hashInt(key.messagePrefix(), message);\n\t  var R = this.g.mul(r);\n\t  var Rencoded = this.encodePoint(R);\n\t  var s_ = this.hashInt(Rencoded, key.pubBytes(), message).mul(key.priv());\n\t  var S = r.add(s_).umod(this.curve.n);\n\t  return this.makeSignature({ R: R, S: S, Rencoded: Rencoded });\n\t};\n\t\n\t/**\n\t* @param {Array} message - message bytes\n\t* @param {Array|String|Signature} sig - sig bytes\n\t* @param {Array|String|Point|KeyPair} pub - public key\n\t* @returns {Boolean} - true if public key matches sig of message\n\t*/\n\tEDDSA.prototype.verify = function verify(message, sig, pub) {\n\t  message = parseBytes(message);\n\t  sig = this.makeSignature(sig);\n\t  var key = this.keyFromPublic(pub);\n\t  var h = this.hashInt(sig.Rencoded(), key.pubBytes(), message);\n\t  var SG = this.g.mul(sig.S());\n\t  var RplusAh = sig.R().add(key.pub().mul(h));\n\t  return RplusAh.eq(SG);\n\t};\n\t\n\tEDDSA.prototype.hashInt = function hashInt() {\n\t  var hash = this.hash();\n\t  for (var i = 0; i < arguments.length; i++) {\n\t    hash.update(arguments[i]);\n\t  }return utils.intFromLE(hash.digest()).umod(this.curve.n);\n\t};\n\t\n\tEDDSA.prototype.keyFromPublic = function keyFromPublic(pub) {\n\t  return KeyPair.fromPublic(this, pub);\n\t};\n\t\n\tEDDSA.prototype.keyFromSecret = function keyFromSecret(secret) {\n\t  return KeyPair.fromSecret(this, secret);\n\t};\n\t\n\tEDDSA.prototype.makeSignature = function makeSignature(sig) {\n\t  if (sig instanceof Signature) return sig;\n\t  return new Signature(this, sig);\n\t};\n\t\n\t/**\n\t* * https://tools.ietf.org/html/draft-josefsson-eddsa-ed25519-03#section-5.2\n\t*\n\t* EDDSA defines methods for encoding and decoding points and integers. These are\n\t* helper convenience methods, that pass along to utility functions implied\n\t* parameters.\n\t*\n\t*/\n\tEDDSA.prototype.encodePoint = function encodePoint(point) {\n\t  var enc = point.getY().toArray('le', this.encodingLength);\n\t  enc[this.encodingLength - 1] |= point.getX().isOdd() ? 0x80 : 0;\n\t  return enc;\n\t};\n\t\n\tEDDSA.prototype.decodePoint = function decodePoint(bytes) {\n\t  bytes = utils.parseBytes(bytes);\n\t\n\t  var lastIx = bytes.length - 1;\n\t  var normed = bytes.slice(0, lastIx).concat(bytes[lastIx] & ~0x80);\n\t  var xIsOdd = (bytes[lastIx] & 0x80) !== 0;\n\t\n\t  var y = utils.intFromLE(normed);\n\t  return this.curve.pointFromY(y, xIsOdd);\n\t};\n\t\n\tEDDSA.prototype.encodeInt = function encodeInt(num) {\n\t  return num.toArray('le', this.encodingLength);\n\t};\n\t\n\tEDDSA.prototype.decodeInt = function decodeInt(bytes) {\n\t  return utils.intFromLE(bytes);\n\t};\n\t\n\tEDDSA.prototype.isPoint = function isPoint(val) {\n\t  return val instanceof this.pointClass;\n\t};\n\n/***/ },\n\n/***/ 2496:\n/***/ function(module, exports, __webpack_require__, __webpack_module_template_argument_0__, __webpack_module_template_argument_1__, __webpack_module_template_argument_2__, __webpack_module_template_argument_3__, __webpack_module_template_argument_4__, __webpack_module_template_argument_5__) {\n\n\t'use strict';\n\t\n\tvar asn1 = exports;\n\t\n\tasn1.bignum = __webpack_require__(__webpack_module_template_argument_0__);\n\t\n\tasn1.define = __webpack_require__(__webpack_module_template_argument_1__).define;\n\tasn1.base = __webpack_require__(__webpack_module_template_argument_2__);\n\tasn1.constants = __webpack_require__(__webpack_module_template_argument_3__);\n\tasn1.decoders = __webpack_require__(__webpack_module_template_argument_4__);\n\tasn1.encoders = __webpack_require__(__webpack_module_template_argument_5__);\n\n/***/ },\n\n/***/ 2497:\n/***/ function(module, exports, __webpack_require__, __webpack_module_template_argument_0__, __webpack_module_template_argument_1__, __webpack_module_template_argument_2__, __webpack_module_template_argument_3__) {\n\n\t'use strict';\n\t\n\tvar base = exports;\n\t\n\tbase.Reporter = __webpack_require__(__webpack_module_template_argument_0__).Reporter;\n\tbase.DecoderBuffer = __webpack_require__(__webpack_module_template_argument_1__).DecoderBuffer;\n\tbase.EncoderBuffer = __webpack_require__(__webpack_module_template_argument_2__).EncoderBuffer;\n\tbase.Node = __webpack_require__(__webpack_module_template_argument_3__);\n\n/***/ },\n\n/***/ 2498:\n/***/ function(module, exports, __webpack_require__, __webpack_module_template_argument_0__) {\n\n\t'use strict';\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar inherits = __webpack_require__(821);\n\tvar Reporter = __webpack_require__(__webpack_module_template_argument_0__).Reporter;\n\tvar Buffer = __webpack_require__(807).Buffer;\n\t\n\tfunction DecoderBuffer(base, options) {\n\t  Reporter.call(this, options);\n\t  if (!Buffer.isBuffer(base)) {\n\t    this.error('Input not Buffer');\n\t    return;\n\t  }\n\t\n\t  this.base = base;\n\t  this.offset = 0;\n\t  this.length = base.length;\n\t}\n\tinherits(DecoderBuffer, Reporter);\n\texports.DecoderBuffer = DecoderBuffer;\n\t\n\tDecoderBuffer.prototype.save = function save() {\n\t  return { offset: this.offset, reporter: Reporter.prototype.save.call(this) };\n\t};\n\t\n\tDecoderBuffer.prototype.restore = function restore(save) {\n\t  // Return skipped data\n\t  var res = new DecoderBuffer(this.base);\n\t  res.offset = save.offset;\n\t  res.length = this.offset;\n\t\n\t  this.offset = save.offset;\n\t  Reporter.prototype.restore.call(this, save.reporter);\n\t\n\t  return res;\n\t};\n\t\n\tDecoderBuffer.prototype.isEmpty = function isEmpty() {\n\t  return this.offset === this.length;\n\t};\n\t\n\tDecoderBuffer.prototype.readUInt8 = function readUInt8(fail) {\n\t  if (this.offset + 1 <= this.length) return this.base.readUInt8(this.offset++, true);else return this.error(fail || 'DecoderBuffer overrun');\n\t};\n\t\n\tDecoderBuffer.prototype.skip = function skip(bytes, fail) {\n\t  if (!(this.offset + bytes <= this.length)) return this.error(fail || 'DecoderBuffer overrun');\n\t\n\t  var res = new DecoderBuffer(this.base);\n\t\n\t  // Share reporter state\n\t  res._reporterState = this._reporterState;\n\t\n\t  res.offset = this.offset;\n\t  res.length = this.offset + bytes;\n\t  this.offset += bytes;\n\t  return res;\n\t};\n\t\n\tDecoderBuffer.prototype.raw = function raw(save) {\n\t  return this.base.slice(save ? save.offset : this.offset, this.length);\n\t};\n\t\n\tfunction EncoderBuffer(value, reporter) {\n\t  if (Array.isArray(value)) {\n\t    this.length = 0;\n\t    this.value = value.map(function (item) {\n\t      if (!(item instanceof EncoderBuffer)) item = new EncoderBuffer(item, reporter);\n\t      this.length += item.length;\n\t      return item;\n\t    }, this);\n\t  } else if (typeof value === 'number') {\n\t    if (!(0 <= value && value <= 0xff)) return reporter.error('non-byte EncoderBuffer value');\n\t    this.value = value;\n\t    this.length = 1;\n\t  } else if (typeof value === 'string') {\n\t    this.value = value;\n\t    this.length = Buffer.byteLength(value);\n\t  } else if (Buffer.isBuffer(value)) {\n\t    this.value = value;\n\t    this.length = value.length;\n\t  } else {\n\t    return reporter.error('Unsupported type: ' + (typeof value === 'undefined' ? 'undefined' : _typeof(value)));\n\t  }\n\t}\n\texports.EncoderBuffer = EncoderBuffer;\n\t\n\tEncoderBuffer.prototype.join = function join(out, offset) {\n\t  if (!out) out = new Buffer(this.length);\n\t  if (!offset) offset = 0;\n\t\n\t  if (this.length === 0) return out;\n\t\n\t  if (Array.isArray(this.value)) {\n\t    this.value.forEach(function (item) {\n\t      item.join(out, offset);\n\t      offset += item.length;\n\t    });\n\t  } else {\n\t    if (typeof this.value === 'number') out[offset] = this.value;else if (typeof this.value === 'string') out.write(this.value, offset);else if (Buffer.isBuffer(this.value)) this.value.copy(out, offset);\n\t    offset += this.length;\n\t  }\n\t\n\t  return out;\n\t};\n\n/***/ },\n\n/***/ 2499:\n/***/ function(module, exports, __webpack_require__, __webpack_module_template_argument_0__) {\n\n\t'use strict';\n\t\n\tvar constants = exports;\n\t\n\t// Helper\n\tconstants._reverse = function reverse(map) {\n\t  var res = {};\n\t\n\t  Object.keys(map).forEach(function (key) {\n\t    // Convert key to integer if it is stringified\n\t    if ((key | 0) == key) key = key | 0;\n\t\n\t    var value = map[key];\n\t    res[value] = key;\n\t  });\n\t\n\t  return res;\n\t};\n\t\n\tconstants.der = __webpack_require__(__webpack_module_template_argument_0__);\n\n/***/ },\n\n/***/ 2500:\n/***/ function(module, exports, __webpack_require__, __webpack_module_template_argument_0__) {\n\n\t'use strict';\n\t\n\tvar constants = __webpack_require__(__webpack_module_template_argument_0__);\n\t\n\texports.tagClass = {\n\t  0: 'universal',\n\t  1: 'application',\n\t  2: 'context',\n\t  3: 'private'\n\t};\n\texports.tagClassByName = constants._reverse(exports.tagClass);\n\t\n\texports.tag = {\n\t  0x00: 'end',\n\t  0x01: 'bool',\n\t  0x02: 'int',\n\t  0x03: 'bitstr',\n\t  0x04: 'octstr',\n\t  0x05: 'null_',\n\t  0x06: 'objid',\n\t  0x07: 'objDesc',\n\t  0x08: 'external',\n\t  0x09: 'real',\n\t  0x0a: 'enum',\n\t  0x0b: 'embed',\n\t  0x0c: 'utf8str',\n\t  0x0d: 'relativeOid',\n\t  0x10: 'seq',\n\t  0x11: 'set',\n\t  0x12: 'numstr',\n\t  0x13: 'printstr',\n\t  0x14: 't61str',\n\t  0x15: 'videostr',\n\t  0x16: 'ia5str',\n\t  0x17: 'utctime',\n\t  0x18: 'gentime',\n\t  0x19: 'graphstr',\n\t  0x1a: 'iso646str',\n\t  0x1b: 'genstr',\n\t  0x1c: 'unistr',\n\t  0x1d: 'charstr',\n\t  0x1e: 'bmpstr'\n\t};\n\texports.tagByName = constants._reverse(exports.tag);\n\n/***/ },\n\n/***/ 2501:\n/***/ function(module, exports, __webpack_require__, __webpack_module_template_argument_0__, __webpack_module_template_argument_1__) {\n\n\t'use strict';\n\t\n\tvar decoders = exports;\n\t\n\tdecoders.der = __webpack_require__(__webpack_module_template_argument_0__);\n\tdecoders.pem = __webpack_require__(__webpack_module_template_argument_1__);\n\n/***/ },\n\n/***/ 2502:\n/***/ function(module, exports, __webpack_require__, __webpack_module_template_argument_0__, __webpack_module_template_argument_1__) {\n\n\t'use strict';\n\t\n\tvar encoders = exports;\n\t\n\tencoders.der = __webpack_require__(__webpack_module_template_argument_0__);\n\tencoders.pem = __webpack_require__(__webpack_module_template_argument_1__);\n\n/***/ }\n\n});\n\n\n/** WEBPACK FOOTER **\n ** crypto.46dae3bc29d6043e5cc2.js\n **/","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    Buffer = require('buf' + 'fer').Buffer;\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n    }\n\n    if (base === 16) {\n      this._parseHex(number, start);\n    } else {\n      this._parseBase(number, base, start);\n    }\n\n    if (number[0] === '-') {\n      this.negative = 1;\n    }\n\n    this.strip();\n\n    if (endian !== 'le') return;\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex (str, start, end) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r <<= 4;\n\n      // 'a' - 'f'\n      if (c >= 49 && c <= 54) {\n        r |= c - 49 + 0xa;\n\n      // 'A' - 'F'\n      } else if (c >= 17 && c <= 22) {\n        r |= c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r |= c & 0xf;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    // Scan 24-bit chunks and add them to the number\n    var off = 0;\n    for (i = number.length - 6, j = 0; i >= start; i -= 6) {\n      w = parseHex(number, i, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n      off += 24;\n      if (off >= 26) {\n        off -= 26;\n        j++;\n      }\n    }\n    if (i + 6 !== start) {\n      w = parseHex(number, start, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n    }\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      r.strip();\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/bn.js/lib/bn.js\n **/","module.exports = {\n\t\"_args\": [\n\t\t[\n\t\t\t{\n\t\t\t\t\"raw\": \"elliptic@https://registry.npmjs.org/elliptic/-/elliptic-6.3.2.tgz\",\n\t\t\t\t\"scope\": null,\n\t\t\t\t\"escapedName\": \"elliptic\",\n\t\t\t\t\"name\": \"elliptic\",\n\t\t\t\t\"rawSpec\": \"https://registry.npmjs.org/elliptic/-/elliptic-6.3.2.tgz\",\n\t\t\t\t\"spec\": \"https://registry.npmjs.org/elliptic/-/elliptic-6.3.2.tgz\",\n\t\t\t\t\"type\": \"remote\"\n\t\t\t},\n\t\t\t\"/Users/tenaciousmv/Code/tradle-app-web\"\n\t\t]\n\t],\n\t\"_from\": \"elliptic@6.3.2\",\n\t\"_id\": \"elliptic@6.3.2\",\n\t\"_inCache\": true,\n\t\"_location\": \"/elliptic\",\n\t\"_phantomChildren\": {},\n\t\"_requested\": {\n\t\t\"raw\": \"elliptic@https://registry.npmjs.org/elliptic/-/elliptic-6.3.2.tgz\",\n\t\t\"scope\": null,\n\t\t\"escapedName\": \"elliptic\",\n\t\t\"name\": \"elliptic\",\n\t\t\"rawSpec\": \"https://registry.npmjs.org/elliptic/-/elliptic-6.3.2.tgz\",\n\t\t\"spec\": \"https://registry.npmjs.org/elliptic/-/elliptic-6.3.2.tgz\",\n\t\t\"type\": \"remote\"\n\t},\n\t\"_requiredBy\": [\n\t\t\"/\",\n\t\t\"/@tradle/protocol\",\n\t\t\"/browserify-sign\",\n\t\t\"/create-ecdh\",\n\t\t\"/secp256k1\"\n\t],\n\t\"_resolved\": \"https://registry.npmjs.org/elliptic/-/elliptic-6.3.2.tgz\",\n\t\"_shasum\": \"e4c81e0829cf0a65ab70e998b8232723b5c1bc48\",\n\t\"_shrinkwrap\": null,\n\t\"_spec\": \"elliptic@https://registry.npmjs.org/elliptic/-/elliptic-6.3.2.tgz\",\n\t\"_where\": \"/Users/tenaciousmv/Code/tradle-app-web\",\n\t\"author\": {\n\t\t\"name\": \"Fedor Indutny\",\n\t\t\"email\": \"fedor@indutny.com\"\n\t},\n\t\"bugs\": {\n\t\t\"url\": \"https://github.com/indutny/elliptic/issues\"\n\t},\n\t\"dependencies\": {\n\t\t\"bn.js\": \"^4.4.0\",\n\t\t\"brorand\": \"^1.0.1\",\n\t\t\"hash.js\": \"^1.0.0\",\n\t\t\"inherits\": \"^2.0.1\"\n\t},\n\t\"description\": \"EC cryptography\",\n\t\"devDependencies\": {\n\t\t\"brfs\": \"^1.4.3\",\n\t\t\"coveralls\": \"^2.11.3\",\n\t\t\"grunt\": \"^0.4.5\",\n\t\t\"grunt-browserify\": \"^5.0.0\",\n\t\t\"grunt-contrib-connect\": \"^1.0.0\",\n\t\t\"grunt-contrib-copy\": \"^1.0.0\",\n\t\t\"grunt-contrib-uglify\": \"^1.0.1\",\n\t\t\"grunt-mocha-istanbul\": \"^3.0.1\",\n\t\t\"grunt-saucelabs\": \"^8.6.2\",\n\t\t\"istanbul\": \"^0.4.2\",\n\t\t\"jscs\": \"^2.9.0\",\n\t\t\"jshint\": \"^2.6.0\",\n\t\t\"mocha\": \"^2.1.0\"\n\t},\n\t\"files\": [\n\t\t\"lib\"\n\t],\n\t\"homepage\": \"https://github.com/indutny/elliptic\",\n\t\"keywords\": [\n\t\t\"EC\",\n\t\t\"Elliptic\",\n\t\t\"curve\",\n\t\t\"Cryptography\"\n\t],\n\t\"license\": \"MIT\",\n\t\"main\": \"lib/elliptic.js\",\n\t\"name\": \"elliptic\",\n\t\"optionalDependencies\": {},\n\t\"readme\": \"# Elliptic [![Build Status](https://secure.travis-ci.org/indutny/elliptic.png)](http://travis-ci.org/indutny/elliptic) [![Coverage Status](https://coveralls.io/repos/indutny/elliptic/badge.svg?branch=master&service=github)](https://coveralls.io/github/indutny/elliptic?branch=master) [![Code Climate](https://codeclimate.com/github/indutny/elliptic/badges/gpa.svg)](https://codeclimate.com/github/indutny/elliptic)\\n\\n[![Saucelabs Test Status](https://saucelabs.com/browser-matrix/gh-indutny-elliptic.svg)](https://saucelabs.com/u/gh-indutny-elliptic)\\n\\nFast elliptic-curve cryptography in a plain javascript implementation.\\n\\nNOTE: Please take a look at http://safecurves.cr.yp.to/ before choosing a curve\\nfor your cryptography operations.\\n\\n## Incentive\\n\\nECC is much slower than regular RSA cryptography, the JS implementations are\\neven more slower.\\n\\n## Benchmarks\\n\\n```bash\\n$ node benchmarks/index.js\\nBenchmarking: sign\\nelliptic#sign x 262 ops/sec ±0.51% (177 runs sampled)\\neccjs#sign x 55.91 ops/sec ±0.90% (144 runs sampled)\\n------------------------\\nFastest is elliptic#sign\\n========================\\nBenchmarking: verify\\nelliptic#verify x 113 ops/sec ±0.50% (166 runs sampled)\\neccjs#verify x 48.56 ops/sec ±0.36% (125 runs sampled)\\n------------------------\\nFastest is elliptic#verify\\n========================\\nBenchmarking: gen\\nelliptic#gen x 294 ops/sec ±0.43% (176 runs sampled)\\neccjs#gen x 62.25 ops/sec ±0.63% (129 runs sampled)\\n------------------------\\nFastest is elliptic#gen\\n========================\\nBenchmarking: ecdh\\nelliptic#ecdh x 136 ops/sec ±0.85% (156 runs sampled)\\n------------------------\\nFastest is elliptic#ecdh\\n========================\\n```\\n\\n## API\\n\\n### ECDSA\\n\\n```javascript\\nvar EC = require('elliptic').ec;\\n\\n// Create and initialize EC context\\n// (better do it once and reuse it)\\nvar ec = new EC('secp256k1');\\n\\n// Generate keys\\nvar key = ec.genKeyPair();\\n\\n// Sign message (must be an array, or it'll be treated as a hex sequence)\\nvar msg = [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 ];\\nvar signature = key.sign(msg);\\n\\n// Export DER encoded signature in Array\\nvar derSign = signature.toDER();\\n\\n// Verify signature\\nconsole.log(key.verify(msg, derSign));\\n\\n// CHECK WITH NO PRIVATE KEY\\n\\n// Public key as '04 + x + y'\\nvar pub = '04bb1fa3...';\\n\\n// Signature MUST be either:\\n// 1) hex-string of DER-encoded signature; or\\n// 2) DER-encoded signature as buffer; or\\n// 3) object with two hex-string properties (r and s)\\n\\nvar signature = 'b102ac...'; // case 1\\nvar signature = new Buffer('...'); // case 2\\nvar signature = { r: 'b1fc...', s: '9c42...' }; // case 3\\n\\n// Import public key\\nvar key = ec.keyFromPublic(pub, 'hex');\\n\\n// Verify signature\\nconsole.log(key.verify(msg, signature));\\n```\\n\\n### EdDSA\\n\\n```javascript\\nvar EdDSA = require('elliptic').eddsa;\\n\\n// Create and initialize EdDSA context\\n// (better do it once and reuse it)\\nvar ec = new EdDSA('ed25519');\\n\\n// Create key pair from secret\\nvar key = ec.keyFromSecret('693e3c...'); // hex string, array or Buffer\\n\\n// Sign message (must be an array, or it'll be treated as a hex sequence)\\nvar msg = [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 ];\\nvar signature = key.sign(msg).toHex();\\n\\n// Verify signature\\nconsole.log(key.verify(msg, signature));\\n\\n// CHECK WITH NO PRIVATE KEY\\n\\n// Import public key\\nvar pub = '0a1af638...';\\nvar key = ec.keyFromPublic(pub, 'hex');\\n\\n// Verify signature\\nvar signature = '70bed1...';\\nconsole.log(key.verify(msg, signature));\\n```\\n\\n### ECDH\\n\\n```javascript\\nvar ECDH = require('elliptic').ec;\\nvar ec = new ECDH('curve25519');\\n\\n// Generate keys\\nvar key1 = ec.genKeyPair();\\nvar key2 = ec.genKeyPair();\\n\\nvar shared1 = key1.derive(key2.getPublic());\\nvar shared2 = key2.derive(key1.getPublic());\\n\\nconsole.log('Both shared secrets are BN instances');\\nconsole.log(shared1.toString(16));\\nconsole.log(shared2.toString(16));\\n```\\n\\nNOTE: `.derive()` returns a [BN][1] instance.\\n\\n## Supported curves\\n\\nElliptic.js support following curve types:\\n\\n* Short Weierstrass\\n* Montgomery\\n* Edwards\\n* Twisted Edwards\\n\\nFollowing curve 'presets' are embedded into the library:\\n\\n* `secp256k1`\\n* `p192`\\n* `p224`\\n* `p256`\\n* `p384`\\n* `p521`\\n* `curve25519`\\n* `ed25519`\\n\\nNOTE: That `curve25519` could not be used for ECDSA, use `ed25519` instead.\\n\\n### Implementation details\\n\\nECDSA is using deterministic `k` value generation as per [RFC6979][0]. Most of\\nthe curve operations are performed on non-affine coordinates (either projective\\nor extended), various windowing techniques are used for different cases.\\n\\nAll operations are performed in reduction context using [bn.js][1], hashing is\\nprovided by [hash.js][2]\\n\\n### Related projects\\n\\n* [eccrypto][3]: isomorphic implementation of ECDSA, ECDH and ECIES for both\\n  browserify and node (uses `elliptic` for browser and [secp256k1-node][4] for\\n  node)\\n\\n#### LICENSE\\n\\nThis software is licensed under the MIT License.\\n\\nCopyright Fedor Indutny, 2014.\\n\\nPermission is hereby granted, free of charge, to any person obtaining a\\ncopy of this software and associated documentation files (the\\n\\\"Software\\\"), to deal in the Software without restriction, including\\nwithout limitation the rights to use, copy, modify, merge, publish,\\ndistribute, sublicense, and/or sell copies of the Software, and to permit\\npersons to whom the Software is furnished to do so, subject to the\\nfollowing conditions:\\n\\nThe above copyright notice and this permission notice shall be included\\nin all copies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\\nOR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\\nNO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\\nDAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\\nOTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\\nUSE OR OTHER DEALINGS IN THE SOFTWARE.\\n\\n[0]: http://tools.ietf.org/html/rfc6979\\n[1]: https://github.com/indutny/bn.js\\n[2]: https://github.com/indutny/hash.js\\n[3]: https://github.com/bitchan/eccrypto\\n[4]: https://github.com/wanderer/secp256k1-node\\n\",\n\t\"readmeFilename\": \"README.md\",\n\t\"repository\": {\n\t\t\"type\": \"git\",\n\t\t\"url\": \"git+ssh://git@github.com/indutny/elliptic.git\"\n\t},\n\t\"scripts\": {\n\t\t\"jscs\": \"jscs benchmarks/*.js lib/*.js lib/**/*.js lib/**/**/*.js test/index.js\",\n\t\t\"jshint\": \"jscs benchmarks/*.js lib/*.js lib/**/*.js lib/**/**/*.js test/index.js\",\n\t\t\"lint\": \"npm run jscs && npm run jshint\",\n\t\t\"test\": \"npm run lint && npm run unit\",\n\t\t\"unit\": \"istanbul test _mocha --reporter=spec test/index.js\",\n\t\t\"version\": \"grunt dist && git add dist/\"\n\t},\n\t\"version\": \"6.3.2\"\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/elliptic/package.json\n ** module id = 892\n ** module chunks = 5\n **/","'use strict';\n\nvar utils = exports;\nvar BN = require('bn.js');\n\nutils.assert = function assert(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n};\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg !== 'string') {\n    for (var i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n    return res;\n  }\n  if (!enc) {\n    for (var i = 0; i < msg.length; i++) {\n      var c = msg.charCodeAt(i);\n      var hi = c >> 8;\n      var lo = c & 0xff;\n      if (hi)\n        res.push(hi, lo);\n      else\n        res.push(lo);\n    }\n  } else if (enc === 'hex') {\n    msg = msg.replace(/[^a-z0-9]+/ig, '');\n    if (msg.length % 2 !== 0)\n      msg = '0' + msg;\n    for (var i = 0; i < msg.length; i += 2)\n      res.push(parseInt(msg[i] + msg[i + 1], 16));\n  }\n  return res;\n}\nutils.toArray = toArray;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nutils.zero2 = zero2;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nutils.toHex = toHex;\n\nutils.encode = function encode(arr, enc) {\n  if (enc === 'hex')\n    return toHex(arr);\n  else\n    return arr;\n};\n\n// Represent num in a w-NAF form\nfunction getNAF(num, w) {\n  var naf = [];\n  var ws = 1 << (w + 1);\n  var k = num.clone();\n  while (k.cmpn(1) >= 0) {\n    var z;\n    if (k.isOdd()) {\n      var mod = k.andln(ws - 1);\n      if (mod > (ws >> 1) - 1)\n        z = (ws >> 1) - mod;\n      else\n        z = mod;\n      k.isubn(z);\n    } else {\n      z = 0;\n    }\n    naf.push(z);\n\n    // Optimization, shift by word if possible\n    var shift = (k.cmpn(0) !== 0 && k.andln(ws - 1) === 0) ? (w + 1) : 1;\n    for (var i = 1; i < shift; i++)\n      naf.push(0);\n    k.iushrn(shift);\n  }\n\n  return naf;\n}\nutils.getNAF = getNAF;\n\n// Represent k1, k2 in a Joint Sparse Form\nfunction getJSF(k1, k2) {\n  var jsf = [\n    [],\n    []\n  ];\n\n  k1 = k1.clone();\n  k2 = k2.clone();\n  var d1 = 0;\n  var d2 = 0;\n  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {\n\n    // First phase\n    var m14 = (k1.andln(3) + d1) & 3;\n    var m24 = (k2.andln(3) + d2) & 3;\n    if (m14 === 3)\n      m14 = -1;\n    if (m24 === 3)\n      m24 = -1;\n    var u1;\n    if ((m14 & 1) === 0) {\n      u1 = 0;\n    } else {\n      var m8 = (k1.andln(7) + d1) & 7;\n      if ((m8 === 3 || m8 === 5) && m24 === 2)\n        u1 = -m14;\n      else\n        u1 = m14;\n    }\n    jsf[0].push(u1);\n\n    var u2;\n    if ((m24 & 1) === 0) {\n      u2 = 0;\n    } else {\n      var m8 = (k2.andln(7) + d2) & 7;\n      if ((m8 === 3 || m8 === 5) && m14 === 2)\n        u2 = -m24;\n      else\n        u2 = m24;\n    }\n    jsf[1].push(u2);\n\n    // Second phase\n    if (2 * d1 === u1 + 1)\n      d1 = 1 - d1;\n    if (2 * d2 === u2 + 1)\n      d2 = 1 - d2;\n    k1.iushrn(1);\n    k2.iushrn(1);\n  }\n\n  return jsf;\n}\nutils.getJSF = getJSF;\n\nfunction cachedProperty(obj, name, computer) {\n  var key = '_' + name;\n  obj.prototype[name] = function cachedProperty() {\n    return this[key] !== undefined ? this[key] :\n           this[key] = computer.call(this);\n  };\n}\nutils.cachedProperty = cachedProperty;\n\nfunction parseBytes(bytes) {\n  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') :\n                                     bytes;\n}\nutils.parseBytes = parseBytes;\n\nfunction intFromLE(bytes) {\n  return new BN(bytes, 'hex', 'le');\n}\nutils.intFromLE = intFromLE;\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/elliptic/lib/elliptic/utils.js\n **/","'use strict';\n\nvar BN = require('bn.js');\nvar elliptic = require('../../elliptic');\nvar utils = elliptic.utils;\nvar getNAF = utils.getNAF;\nvar getJSF = utils.getJSF;\nvar assert = utils.assert;\n\nfunction BaseCurve(type, conf) {\n  this.type = type;\n  this.p = new BN(conf.p, 16);\n\n  // Use Montgomery, when there is no fast reduction for the prime\n  this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p);\n\n  // Useful for many curves\n  this.zero = new BN(0).toRed(this.red);\n  this.one = new BN(1).toRed(this.red);\n  this.two = new BN(2).toRed(this.red);\n\n  // Curve configuration, optional\n  this.n = conf.n && new BN(conf.n, 16);\n  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);\n\n  // Temporary arrays\n  this._wnafT1 = new Array(4);\n  this._wnafT2 = new Array(4);\n  this._wnafT3 = new Array(4);\n  this._wnafT4 = new Array(4);\n\n  // Generalized Greg Maxwell's trick\n  var adjustCount = this.n && this.p.div(this.n);\n  if (!adjustCount || adjustCount.cmpn(100) > 0) {\n    this.redN = null;\n  } else {\n    this._maxwellTrick = true;\n    this.redN = this.n.toRed(this.red);\n  }\n}\nmodule.exports = BaseCurve;\n\nBaseCurve.prototype.point = function point() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype.validate = function validate() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {\n  assert(p.precomputed);\n  var doubles = p._getDoubles();\n\n  var naf = getNAF(k, 1);\n  var I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1);\n  I /= 3;\n\n  // Translate into more windowed form\n  var repr = [];\n  for (var j = 0; j < naf.length; j += doubles.step) {\n    var nafW = 0;\n    for (var k = j + doubles.step - 1; k >= j; k--)\n      nafW = (nafW << 1) + naf[k];\n    repr.push(nafW);\n  }\n\n  var a = this.jpoint(null, null, null);\n  var b = this.jpoint(null, null, null);\n  for (var i = I; i > 0; i--) {\n    for (var j = 0; j < repr.length; j++) {\n      var nafW = repr[j];\n      if (nafW === i)\n        b = b.mixedAdd(doubles.points[j]);\n      else if (nafW === -i)\n        b = b.mixedAdd(doubles.points[j].neg());\n    }\n    a = a.add(b);\n  }\n  return a.toP();\n};\n\nBaseCurve.prototype._wnafMul = function _wnafMul(p, k) {\n  var w = 4;\n\n  // Precompute window\n  var nafPoints = p._getNAFPoints(w);\n  w = nafPoints.wnd;\n  var wnd = nafPoints.points;\n\n  // Get NAF form\n  var naf = getNAF(k, w);\n\n  // Add `this`*(N+1) for every w-NAF index\n  var acc = this.jpoint(null, null, null);\n  for (var i = naf.length - 1; i >= 0; i--) {\n    // Count zeroes\n    for (var k = 0; i >= 0 && naf[i] === 0; i--)\n      k++;\n    if (i >= 0)\n      k++;\n    acc = acc.dblp(k);\n\n    if (i < 0)\n      break;\n    var z = naf[i];\n    assert(z !== 0);\n    if (p.type === 'affine') {\n      // J +- P\n      if (z > 0)\n        acc = acc.mixedAdd(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.mixedAdd(wnd[(-z - 1) >> 1].neg());\n    } else {\n      // J +- J\n      if (z > 0)\n        acc = acc.add(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.add(wnd[(-z - 1) >> 1].neg());\n    }\n  }\n  return p.type === 'affine' ? acc.toP() : acc;\n};\n\nBaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW,\n                                                       points,\n                                                       coeffs,\n                                                       len,\n                                                       jacobianResult) {\n  var wndWidth = this._wnafT1;\n  var wnd = this._wnafT2;\n  var naf = this._wnafT3;\n\n  // Fill all arrays\n  var max = 0;\n  for (var i = 0; i < len; i++) {\n    var p = points[i];\n    var nafPoints = p._getNAFPoints(defW);\n    wndWidth[i] = nafPoints.wnd;\n    wnd[i] = nafPoints.points;\n  }\n\n  // Comb small window NAFs\n  for (var i = len - 1; i >= 1; i -= 2) {\n    var a = i - 1;\n    var b = i;\n    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {\n      naf[a] = getNAF(coeffs[a], wndWidth[a]);\n      naf[b] = getNAF(coeffs[b], wndWidth[b]);\n      max = Math.max(naf[a].length, max);\n      max = Math.max(naf[b].length, max);\n      continue;\n    }\n\n    var comb = [\n      points[a], /* 1 */\n      null, /* 3 */\n      null, /* 5 */\n      points[b] /* 7 */\n    ];\n\n    // Try to avoid Projective points, if possible\n    if (points[a].y.cmp(points[b].y) === 0) {\n      comb[1] = points[a].add(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].add(points[b].neg());\n    } else {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    }\n\n    var index = [\n      -3, /* -1 -1 */\n      -1, /* -1 0 */\n      -5, /* -1 1 */\n      -7, /* 0 -1 */\n      0, /* 0 0 */\n      7, /* 0 1 */\n      5, /* 1 -1 */\n      1, /* 1 0 */\n      3  /* 1 1 */\n    ];\n\n    var jsf = getJSF(coeffs[a], coeffs[b]);\n    max = Math.max(jsf[0].length, max);\n    naf[a] = new Array(max);\n    naf[b] = new Array(max);\n    for (var j = 0; j < max; j++) {\n      var ja = jsf[0][j] | 0;\n      var jb = jsf[1][j] | 0;\n\n      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];\n      naf[b][j] = 0;\n      wnd[a] = comb;\n    }\n  }\n\n  var acc = this.jpoint(null, null, null);\n  var tmp = this._wnafT4;\n  for (var i = max; i >= 0; i--) {\n    var k = 0;\n\n    while (i >= 0) {\n      var zero = true;\n      for (var j = 0; j < len; j++) {\n        tmp[j] = naf[j][i] | 0;\n        if (tmp[j] !== 0)\n          zero = false;\n      }\n      if (!zero)\n        break;\n      k++;\n      i--;\n    }\n    if (i >= 0)\n      k++;\n    acc = acc.dblp(k);\n    if (i < 0)\n      break;\n\n    for (var j = 0; j < len; j++) {\n      var z = tmp[j];\n      var p;\n      if (z === 0)\n        continue;\n      else if (z > 0)\n        p = wnd[j][(z - 1) >> 1];\n      else if (z < 0)\n        p = wnd[j][(-z - 1) >> 1].neg();\n\n      if (p.type === 'affine')\n        acc = acc.mixedAdd(p);\n      else\n        acc = acc.add(p);\n    }\n  }\n  // Zeroify references\n  for (var i = 0; i < len; i++)\n    wnd[i] = null;\n\n  if (jacobianResult)\n    return acc;\n  else\n    return acc.toP();\n};\n\nfunction BasePoint(curve, type) {\n  this.curve = curve;\n  this.type = type;\n  this.precomputed = null;\n}\nBaseCurve.BasePoint = BasePoint;\n\nBasePoint.prototype.eq = function eq(/*other*/) {\n  throw new Error('Not implemented');\n};\n\nBasePoint.prototype.validate = function validate() {\n  return this.curve.validate(this);\n};\n\nBaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  bytes = utils.toArray(bytes, enc);\n\n  var len = this.p.byteLength();\n\n  // uncompressed, hybrid-odd, hybrid-even\n  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) &&\n      bytes.length - 1 === 2 * len) {\n    if (bytes[0] === 0x06)\n      assert(bytes[bytes.length - 1] % 2 === 0);\n    else if (bytes[0] === 0x07)\n      assert(bytes[bytes.length - 1] % 2 === 1);\n\n    var res =  this.point(bytes.slice(1, 1 + len),\n                          bytes.slice(1 + len, 1 + 2 * len));\n\n    return res;\n  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) &&\n              bytes.length - 1 === len) {\n    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);\n  }\n  throw new Error('Unknown point format');\n};\n\nBasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {\n  return this.encode(enc, true);\n};\n\nBasePoint.prototype._encode = function _encode(compact) {\n  var len = this.curve.p.byteLength();\n  var x = this.getX().toArray('be', len);\n\n  if (compact)\n    return [ this.getY().isEven() ? 0x02 : 0x03 ].concat(x);\n\n  return [ 0x04 ].concat(x, this.getY().toArray('be', len)) ;\n};\n\nBasePoint.prototype.encode = function encode(enc, compact) {\n  return utils.encode(this._encode(compact), enc);\n};\n\nBasePoint.prototype.precompute = function precompute(power) {\n  if (this.precomputed)\n    return this;\n\n  var precomputed = {\n    doubles: null,\n    naf: null,\n    beta: null\n  };\n  precomputed.naf = this._getNAFPoints(8);\n  precomputed.doubles = this._getDoubles(4, power);\n  precomputed.beta = this._getBeta();\n  this.precomputed = precomputed;\n\n  return this;\n};\n\nBasePoint.prototype._hasDoubles = function _hasDoubles(k) {\n  if (!this.precomputed)\n    return false;\n\n  var doubles = this.precomputed.doubles;\n  if (!doubles)\n    return false;\n\n  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);\n};\n\nBasePoint.prototype._getDoubles = function _getDoubles(step, power) {\n  if (this.precomputed && this.precomputed.doubles)\n    return this.precomputed.doubles;\n\n  var doubles = [ this ];\n  var acc = this;\n  for (var i = 0; i < power; i += step) {\n    for (var j = 0; j < step; j++)\n      acc = acc.dbl();\n    doubles.push(acc);\n  }\n  return {\n    step: step,\n    points: doubles\n  };\n};\n\nBasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {\n  if (this.precomputed && this.precomputed.naf)\n    return this.precomputed.naf;\n\n  var res = [ this ];\n  var max = (1 << wnd) - 1;\n  var dbl = max === 1 ? null : this.dbl();\n  for (var i = 1; i < max; i++)\n    res[i] = res[i - 1].add(dbl);\n  return {\n    wnd: wnd,\n    points: res\n  };\n};\n\nBasePoint.prototype._getBeta = function _getBeta() {\n  return null;\n};\n\nBasePoint.prototype.dblp = function dblp(k) {\n  var r = this;\n  for (var i = 0; i < k; i++)\n    r = r.dbl();\n  return r;\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/elliptic/lib/elliptic/curve/base.js\n **/","'use strict';\n\nvar curve = require('../curve');\nvar elliptic = require('../../elliptic');\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = curve.base;\n\nvar assert = elliptic.utils.assert;\n\nfunction ShortCurve(conf) {\n  Base.call(this, 'short', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.tinv = this.two.redInvm();\n\n  this.zeroA = this.a.fromRed().cmpn(0) === 0;\n  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;\n\n  // If the curve is endomorphic, precalculate beta and lambda\n  this.endo = this._getEndomorphism(conf);\n  this._endoWnafT1 = new Array(4);\n  this._endoWnafT2 = new Array(4);\n}\ninherits(ShortCurve, Base);\nmodule.exports = ShortCurve;\n\nShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {\n  // No efficient endomorphism\n  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)\n    return;\n\n  // Compute beta and lambda, that lambda * P = (beta * Px; Py)\n  var beta;\n  var lambda;\n  if (conf.beta) {\n    beta = new BN(conf.beta, 16).toRed(this.red);\n  } else {\n    var betas = this._getEndoRoots(this.p);\n    // Choose the smallest beta\n    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];\n    beta = beta.toRed(this.red);\n  }\n  if (conf.lambda) {\n    lambda = new BN(conf.lambda, 16);\n  } else {\n    // Choose the lambda that is matching selected beta\n    var lambdas = this._getEndoRoots(this.n);\n    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {\n      lambda = lambdas[0];\n    } else {\n      lambda = lambdas[1];\n      assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);\n    }\n  }\n\n  // Get basis vectors, used for balanced length-two representation\n  var basis;\n  if (conf.basis) {\n    basis = conf.basis.map(function(vec) {\n      return {\n        a: new BN(vec.a, 16),\n        b: new BN(vec.b, 16)\n      };\n    });\n  } else {\n    basis = this._getEndoBasis(lambda);\n  }\n\n  return {\n    beta: beta,\n    lambda: lambda,\n    basis: basis\n  };\n};\n\nShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {\n  // Find roots of for x^2 + x + 1 in F\n  // Root = (-1 +- Sqrt(-3)) / 2\n  //\n  var red = num === this.p ? this.red : BN.mont(num);\n  var tinv = new BN(2).toRed(red).redInvm();\n  var ntinv = tinv.redNeg();\n\n  var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);\n\n  var l1 = ntinv.redAdd(s).fromRed();\n  var l2 = ntinv.redSub(s).fromRed();\n  return [ l1, l2 ];\n};\n\nShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {\n  // aprxSqrt >= sqrt(this.n)\n  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));\n\n  // 3.74\n  // Run EGCD, until r(L + 1) < aprxSqrt\n  var u = lambda;\n  var v = this.n.clone();\n  var x1 = new BN(1);\n  var y1 = new BN(0);\n  var x2 = new BN(0);\n  var y2 = new BN(1);\n\n  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)\n  var a0;\n  var b0;\n  // First vector\n  var a1;\n  var b1;\n  // Second vector\n  var a2;\n  var b2;\n\n  var prevR;\n  var i = 0;\n  var r;\n  var x;\n  while (u.cmpn(0) !== 0) {\n    var q = v.div(u);\n    r = v.sub(q.mul(u));\n    x = x2.sub(q.mul(x1));\n    var y = y2.sub(q.mul(y1));\n\n    if (!a1 && r.cmp(aprxSqrt) < 0) {\n      a0 = prevR.neg();\n      b0 = x1;\n      a1 = r.neg();\n      b1 = x;\n    } else if (a1 && ++i === 2) {\n      break;\n    }\n    prevR = r;\n\n    v = u;\n    u = r;\n    x2 = x1;\n    x1 = x;\n    y2 = y1;\n    y1 = y;\n  }\n  a2 = r.neg();\n  b2 = x;\n\n  var len1 = a1.sqr().add(b1.sqr());\n  var len2 = a2.sqr().add(b2.sqr());\n  if (len2.cmp(len1) >= 0) {\n    a2 = a0;\n    b2 = b0;\n  }\n\n  // Normalize signs\n  if (a1.negative) {\n    a1 = a1.neg();\n    b1 = b1.neg();\n  }\n  if (a2.negative) {\n    a2 = a2.neg();\n    b2 = b2.neg();\n  }\n\n  return [\n    { a: a1, b: b1 },\n    { a: a2, b: b2 }\n  ];\n};\n\nShortCurve.prototype._endoSplit = function _endoSplit(k) {\n  var basis = this.endo.basis;\n  var v1 = basis[0];\n  var v2 = basis[1];\n\n  var c1 = v2.b.mul(k).divRound(this.n);\n  var c2 = v1.b.neg().mul(k).divRound(this.n);\n\n  var p1 = c1.mul(v1.a);\n  var p2 = c2.mul(v2.a);\n  var q1 = c1.mul(v1.b);\n  var q2 = c2.mul(v2.b);\n\n  // Calculate answer\n  var k1 = k.sub(p1).sub(p2);\n  var k2 = q1.add(q2).neg();\n  return { k1: k1, k2: k2 };\n};\n\nShortCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  // XXX Is there any way to tell if the number is odd without converting it\n  // to non-red form?\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nShortCurve.prototype.validate = function validate(point) {\n  if (point.inf)\n    return true;\n\n  var x = point.x;\n  var y = point.y;\n\n  var ax = this.a.redMul(x);\n  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);\n  return y.redSqr().redISub(rhs).cmpn(0) === 0;\n};\n\nShortCurve.prototype._endoWnafMulAdd =\n    function _endoWnafMulAdd(points, coeffs, jacobianResult) {\n  var npoints = this._endoWnafT1;\n  var ncoeffs = this._endoWnafT2;\n  for (var i = 0; i < points.length; i++) {\n    var split = this._endoSplit(coeffs[i]);\n    var p = points[i];\n    var beta = p._getBeta();\n\n    if (split.k1.negative) {\n      split.k1.ineg();\n      p = p.neg(true);\n    }\n    if (split.k2.negative) {\n      split.k2.ineg();\n      beta = beta.neg(true);\n    }\n\n    npoints[i * 2] = p;\n    npoints[i * 2 + 1] = beta;\n    ncoeffs[i * 2] = split.k1;\n    ncoeffs[i * 2 + 1] = split.k2;\n  }\n  var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);\n\n  // Clean-up references to points and coefficients\n  for (var j = 0; j < i * 2; j++) {\n    npoints[j] = null;\n    ncoeffs[j] = null;\n  }\n  return res;\n};\n\nfunction Point(curve, x, y, isRed) {\n  Base.BasePoint.call(this, curve, 'affine');\n  if (x === null && y === null) {\n    this.x = null;\n    this.y = null;\n    this.inf = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    // Force redgomery representation when loading from JSON\n    if (isRed) {\n      this.x.forceRed(this.curve.red);\n      this.y.forceRed(this.curve.red);\n    }\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    this.inf = false;\n  }\n}\ninherits(Point, Base.BasePoint);\n\nShortCurve.prototype.point = function point(x, y, isRed) {\n  return new Point(this, x, y, isRed);\n};\n\nShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {\n  return Point.fromJSON(this, obj, red);\n};\n\nPoint.prototype._getBeta = function _getBeta() {\n  if (!this.curve.endo)\n    return;\n\n  var pre = this.precomputed;\n  if (pre && pre.beta)\n    return pre.beta;\n\n  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);\n  if (pre) {\n    var curve = this.curve;\n    var endoMul = function(p) {\n      return curve.point(p.x.redMul(curve.endo.beta), p.y);\n    };\n    pre.beta = beta;\n    beta.precomputed = {\n      beta: null,\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(endoMul)\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(endoMul)\n      }\n    };\n  }\n  return beta;\n};\n\nPoint.prototype.toJSON = function toJSON() {\n  if (!this.precomputed)\n    return [ this.x, this.y ];\n\n  return [ this.x, this.y, this.precomputed && {\n    doubles: this.precomputed.doubles && {\n      step: this.precomputed.doubles.step,\n      points: this.precomputed.doubles.points.slice(1)\n    },\n    naf: this.precomputed.naf && {\n      wnd: this.precomputed.naf.wnd,\n      points: this.precomputed.naf.points.slice(1)\n    }\n  } ];\n};\n\nPoint.fromJSON = function fromJSON(curve, obj, red) {\n  if (typeof obj === 'string')\n    obj = JSON.parse(obj);\n  var res = curve.point(obj[0], obj[1], red);\n  if (!obj[2])\n    return res;\n\n  function obj2point(obj) {\n    return curve.point(obj[0], obj[1], red);\n  }\n\n  var pre = obj[2];\n  res.precomputed = {\n    beta: null,\n    doubles: pre.doubles && {\n      step: pre.doubles.step,\n      points: [ res ].concat(pre.doubles.points.map(obj2point))\n    },\n    naf: pre.naf && {\n      wnd: pre.naf.wnd,\n      points: [ res ].concat(pre.naf.points.map(obj2point))\n    }\n  };\n  return res;\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  return this.inf;\n};\n\nPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.inf)\n    return p;\n\n  // P + O = P\n  if (p.inf)\n    return this;\n\n  // P + P = 2P\n  if (this.eq(p))\n    return this.dbl();\n\n  // P + (-P) = O\n  if (this.neg().eq(p))\n    return this.curve.point(null, null);\n\n  // P + Q = O\n  if (this.x.cmp(p.x) === 0)\n    return this.curve.point(null, null);\n\n  var c = this.y.redSub(p.y);\n  if (c.cmpn(0) !== 0)\n    c = c.redMul(this.x.redSub(p.x).redInvm());\n  var nx = c.redSqr().redISub(this.x).redISub(p.x);\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.inf)\n    return this;\n\n  // 2P = O\n  var ys1 = this.y.redAdd(this.y);\n  if (ys1.cmpn(0) === 0)\n    return this.curve.point(null, null);\n\n  var a = this.curve.a;\n\n  var x2 = this.x.redSqr();\n  var dyinv = ys1.redInvm();\n  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);\n\n  var nx = c.redSqr().redISub(this.x.redAdd(this.x));\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.getX = function getX() {\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  return this.y.fromRed();\n};\n\nPoint.prototype.mul = function mul(k) {\n  k = new BN(k, 16);\n\n  if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else if (this.curve.endo)\n    return this.curve._endoWnafMulAdd([ this ], [ k ]);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs, true);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2, true);\n};\n\nPoint.prototype.eq = function eq(p) {\n  return this === p ||\n         this.inf === p.inf &&\n             (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);\n};\n\nPoint.prototype.neg = function neg(_precompute) {\n  if (this.inf)\n    return this;\n\n  var res = this.curve.point(this.x, this.y.redNeg());\n  if (_precompute && this.precomputed) {\n    var pre = this.precomputed;\n    var negate = function(p) {\n      return p.neg();\n    };\n    res.precomputed = {\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(negate)\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(negate)\n      }\n    };\n  }\n  return res;\n};\n\nPoint.prototype.toJ = function toJ() {\n  if (this.inf)\n    return this.curve.jpoint(null, null, null);\n\n  var res = this.curve.jpoint(this.x, this.y, this.curve.one);\n  return res;\n};\n\nfunction JPoint(curve, x, y, z) {\n  Base.BasePoint.call(this, curve, 'jacobian');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.one;\n    this.y = this.curve.one;\n    this.z = new BN(0);\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = new BN(z, 16);\n  }\n  if (!this.x.red)\n    this.x = this.x.toRed(this.curve.red);\n  if (!this.y.red)\n    this.y = this.y.toRed(this.curve.red);\n  if (!this.z.red)\n    this.z = this.z.toRed(this.curve.red);\n\n  this.zOne = this.z === this.curve.one;\n}\ninherits(JPoint, Base.BasePoint);\n\nShortCurve.prototype.jpoint = function jpoint(x, y, z) {\n  return new JPoint(this, x, y, z);\n};\n\nJPoint.prototype.toP = function toP() {\n  if (this.isInfinity())\n    return this.curve.point(null, null);\n\n  var zinv = this.z.redInvm();\n  var zinv2 = zinv.redSqr();\n  var ax = this.x.redMul(zinv2);\n  var ay = this.y.redMul(zinv2).redMul(zinv);\n\n  return this.curve.point(ax, ay);\n};\n\nJPoint.prototype.neg = function neg() {\n  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);\n};\n\nJPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p;\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 12M + 4S + 7A\n  var pz2 = p.z.redSqr();\n  var z2 = this.z.redSqr();\n  var u1 = this.x.redMul(pz2);\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y.redMul(pz2.redMul(p.z));\n  var s2 = p.y.redMul(z2.redMul(this.z));\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(p.z).redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mixedAdd = function mixedAdd(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p.toJ();\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 8M + 3S + 7A\n  var z2 = this.z.redSqr();\n  var u1 = this.x;\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y;\n  var s2 = p.y.redMul(z2).redMul(this.z);\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.dblp = function dblp(pow) {\n  if (pow === 0)\n    return this;\n  if (this.isInfinity())\n    return this;\n  if (!pow)\n    return this.dbl();\n\n  if (this.curve.zeroA || this.curve.threeA) {\n    var r = this;\n    for (var i = 0; i < pow; i++)\n      r = r.dbl();\n    return r;\n  }\n\n  // 1M + 2S + 1A + N * (4S + 5M + 8A)\n  // N = 1 => 6M + 6S + 9A\n  var a = this.curve.a;\n  var tinv = this.curve.tinv;\n\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  // Reuse results\n  var jyd = jy.redAdd(jy);\n  for (var i = 0; i < pow; i++) {\n    var jx2 = jx.redSqr();\n    var jyd2 = jyd.redSqr();\n    var jyd4 = jyd2.redSqr();\n    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n    var t1 = jx.redMul(jyd2);\n    var nx = c.redSqr().redISub(t1.redAdd(t1));\n    var t2 = t1.redISub(nx);\n    var dny = c.redMul(t2);\n    dny = dny.redIAdd(dny).redISub(jyd4);\n    var nz = jyd.redMul(jz);\n    if (i + 1 < pow)\n      jz4 = jz4.redMul(jyd4);\n\n    jx = nx;\n    jz = nz;\n    jyd = dny;\n  }\n\n  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);\n};\n\nJPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  if (this.curve.zeroA)\n    return this._zeroDbl();\n  else if (this.curve.threeA)\n    return this._threeDbl();\n  else\n    return this._dbl();\n};\n\nJPoint.prototype._zeroDbl = function _zeroDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 14A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a; a = 0\n    var m = xx.redAdd(xx).redIAdd(xx);\n    // T = M ^ 2 - 2*S\n    var t = m.redSqr().redISub(s).redISub(s);\n\n    // 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2*Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-dbl-2009-l\n    // 2M + 5S + 13A\n\n    // A = X1^2\n    var a = this.x.redSqr();\n    // B = Y1^2\n    var b = this.y.redSqr();\n    // C = B^2\n    var c = b.redSqr();\n    // D = 2 * ((X1 + B)^2 - A - C)\n    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);\n    d = d.redIAdd(d);\n    // E = 3 * A\n    var e = a.redAdd(a).redIAdd(a);\n    // F = E^2\n    var f = e.redSqr();\n\n    // 8 * C\n    var c8 = c.redIAdd(c);\n    c8 = c8.redIAdd(c8);\n    c8 = c8.redIAdd(c8);\n\n    // X3 = F - 2 * D\n    nx = f.redISub(d).redISub(d);\n    // Y3 = E * (D - X3) - 8 * C\n    ny = e.redMul(d.redISub(nx)).redISub(c8);\n    // Z3 = 2 * Y1 * Z1\n    nz = this.y.redMul(this.z);\n    nz = nz.redIAdd(nz);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._threeDbl = function _threeDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 15A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a\n    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);\n    // T = M^2 - 2 * S\n    var t = m.redSqr().redISub(s).redISub(s);\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2 * Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b\n    // 3M + 5S\n\n    // delta = Z1^2\n    var delta = this.z.redSqr();\n    // gamma = Y1^2\n    var gamma = this.y.redSqr();\n    // beta = X1 * gamma\n    var beta = this.x.redMul(gamma);\n    // alpha = 3 * (X1 - delta) * (X1 + delta)\n    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));\n    alpha = alpha.redAdd(alpha).redIAdd(alpha);\n    // X3 = alpha^2 - 8 * beta\n    var beta4 = beta.redIAdd(beta);\n    beta4 = beta4.redIAdd(beta4);\n    var beta8 = beta4.redAdd(beta4);\n    nx = alpha.redSqr().redISub(beta8);\n    // Z3 = (Y1 + Z1)^2 - gamma - delta\n    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);\n    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2\n    var ggamma8 = gamma.redSqr();\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._dbl = function _dbl() {\n  var a = this.curve.a;\n\n  // 4M + 6S + 10A\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  var jx2 = jx.redSqr();\n  var jy2 = jy.redSqr();\n\n  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n  var jxd4 = jx.redAdd(jx);\n  jxd4 = jxd4.redIAdd(jxd4);\n  var t1 = jxd4.redMul(jy2);\n  var nx = c.redSqr().redISub(t1.redAdd(t1));\n  var t2 = t1.redISub(nx);\n\n  var jyd8 = jy2.redSqr();\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  var ny = c.redMul(t2).redISub(jyd8);\n  var nz = jy.redAdd(jy).redMul(jz);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.trpl = function trpl() {\n  if (!this.curve.zeroA)\n    return this.dbl().add(this);\n\n  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl\n  // 5M + 10S + ...\n\n  // XX = X1^2\n  var xx = this.x.redSqr();\n  // YY = Y1^2\n  var yy = this.y.redSqr();\n  // ZZ = Z1^2\n  var zz = this.z.redSqr();\n  // YYYY = YY^2\n  var yyyy = yy.redSqr();\n  // M = 3 * XX + a * ZZ2; a = 0\n  var m = xx.redAdd(xx).redIAdd(xx);\n  // MM = M^2\n  var mm = m.redSqr();\n  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM\n  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n  e = e.redIAdd(e);\n  e = e.redAdd(e).redIAdd(e);\n  e = e.redISub(mm);\n  // EE = E^2\n  var ee = e.redSqr();\n  // T = 16*YYYY\n  var t = yyyy.redIAdd(yyyy);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  // U = (M + E)^2 - MM - EE - T\n  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);\n  // X3 = 4 * (X1 * EE - 4 * YY * U)\n  var yyu4 = yy.redMul(u);\n  yyu4 = yyu4.redIAdd(yyu4);\n  yyu4 = yyu4.redIAdd(yyu4);\n  var nx = this.x.redMul(ee).redISub(yyu4);\n  nx = nx.redIAdd(nx);\n  nx = nx.redIAdd(nx);\n  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)\n  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  // Z3 = (Z1 + E)^2 - ZZ - EE\n  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mul = function mul(k, kbase) {\n  k = new BN(k, kbase);\n\n  return this.curve._wnafMul(this, k);\n};\n\nJPoint.prototype.eq = function eq(p) {\n  if (p.type === 'affine')\n    return this.eq(p.toJ());\n\n  if (this === p)\n    return true;\n\n  // x1 * z2^2 == x2 * z1^2\n  var z2 = this.z.redSqr();\n  var pz2 = p.z.redSqr();\n  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)\n    return false;\n\n  // y1 * z2^3 == y2 * z1^3\n  var z3 = z2.redMul(this.z);\n  var pz3 = pz2.redMul(p.z);\n  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;\n};\n\nJPoint.prototype.eqXToP = function eqXToP(x) {\n  var zs = this.z.redSqr();\n  var rx = x.toRed(this.curve.red).redMul(zs);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(zs);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n  return false;\n};\n\nJPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC JPoint Infinity>';\n  return '<EC JPoint x: ' + this.x.toString(16, 2) +\n      ' y: ' + this.y.toString(16, 2) +\n      ' z: ' + this.z.toString(16, 2) + '>';\n};\n\nJPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/elliptic/lib/elliptic/curve/short.js\n **/","'use strict';\n\nvar curve = require('../curve');\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = curve.base;\n\nvar elliptic = require('../../elliptic');\nvar utils = elliptic.utils;\n\nfunction MontCurve(conf) {\n  Base.call(this, 'mont', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.i4 = new BN(4).toRed(this.red).redInvm();\n  this.two = new BN(2).toRed(this.red);\n  this.a24 = this.i4.redMul(this.a.redAdd(this.two));\n}\ninherits(MontCurve, Base);\nmodule.exports = MontCurve;\n\nMontCurve.prototype.validate = function validate(point) {\n  var x = point.normalize().x;\n  var x2 = x.redSqr();\n  var rhs = x2.redMul(x).redAdd(x2.redMul(this.a)).redAdd(x);\n  var y = rhs.redSqrt();\n\n  return y.redSqr().cmp(rhs) === 0;\n};\n\nfunction Point(curve, x, z) {\n  Base.BasePoint.call(this, curve, 'projective');\n  if (x === null && z === null) {\n    this.x = this.curve.one;\n    this.z = this.curve.zero;\n  } else {\n    this.x = new BN(x, 16);\n    this.z = new BN(z, 16);\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.z.red)\n      this.z = this.z.toRed(this.curve.red);\n  }\n}\ninherits(Point, Base.BasePoint);\n\nMontCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  return this.point(utils.toArray(bytes, enc), 1);\n};\n\nMontCurve.prototype.point = function point(x, z) {\n  return new Point(this, x, z);\n};\n\nMontCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n  return Point.fromJSON(this, obj);\n};\n\nPoint.prototype.precompute = function precompute() {\n  // No-op\n};\n\nPoint.prototype._encode = function _encode() {\n  return this.getX().toArray('be', this.curve.p.byteLength());\n};\n\nPoint.fromJSON = function fromJSON(curve, obj) {\n  return new Point(curve, obj[0], obj[1] || curve.one);\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n\nPoint.prototype.dbl = function dbl() {\n  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#doubling-dbl-1987-m-3\n  // 2M + 2S + 4A\n\n  // A = X1 + Z1\n  var a = this.x.redAdd(this.z);\n  // AA = A^2\n  var aa = a.redSqr();\n  // B = X1 - Z1\n  var b = this.x.redSub(this.z);\n  // BB = B^2\n  var bb = b.redSqr();\n  // C = AA - BB\n  var c = aa.redSub(bb);\n  // X3 = AA * BB\n  var nx = aa.redMul(bb);\n  // Z3 = C * (BB + A24 * C)\n  var nz = c.redMul(bb.redAdd(this.curve.a24.redMul(c)));\n  return this.curve.point(nx, nz);\n};\n\nPoint.prototype.add = function add() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.diffAdd = function diffAdd(p, diff) {\n  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#diffadd-dadd-1987-m-3\n  // 4M + 2S + 6A\n\n  // A = X2 + Z2\n  var a = this.x.redAdd(this.z);\n  // B = X2 - Z2\n  var b = this.x.redSub(this.z);\n  // C = X3 + Z3\n  var c = p.x.redAdd(p.z);\n  // D = X3 - Z3\n  var d = p.x.redSub(p.z);\n  // DA = D * A\n  var da = d.redMul(a);\n  // CB = C * B\n  var cb = c.redMul(b);\n  // X5 = Z1 * (DA + CB)^2\n  var nx = diff.z.redMul(da.redAdd(cb).redSqr());\n  // Z5 = X1 * (DA - CB)^2\n  var nz = diff.x.redMul(da.redISub(cb).redSqr());\n  return this.curve.point(nx, nz);\n};\n\nPoint.prototype.mul = function mul(k) {\n  var t = k.clone();\n  var a = this; // (N / 2) * Q + Q\n  var b = this.curve.point(null, null); // (N / 2) * Q\n  var c = this; // Q\n\n  for (var bits = []; t.cmpn(0) !== 0; t.iushrn(1))\n    bits.push(t.andln(1));\n\n  for (var i = bits.length - 1; i >= 0; i--) {\n    if (bits[i] === 0) {\n      // N * Q + Q = ((N / 2) * Q + Q)) + (N / 2) * Q\n      a = a.diffAdd(b, c);\n      // N * Q = 2 * ((N / 2) * Q + Q))\n      b = b.dbl();\n    } else {\n      // N * Q = ((N / 2) * Q + Q) + ((N / 2) * Q)\n      b = a.diffAdd(b, c);\n      // N * Q + Q = 2 * ((N / 2) * Q + Q)\n      a = a.dbl();\n    }\n  }\n  return b;\n};\n\nPoint.prototype.mulAdd = function mulAdd() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.jumlAdd = function jumlAdd() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.eq = function eq(other) {\n  return this.getX().cmp(other.getX()) === 0;\n};\n\nPoint.prototype.normalize = function normalize() {\n  this.x = this.x.redMul(this.z.redInvm());\n  this.z = this.curve.one;\n  return this;\n};\n\nPoint.prototype.getX = function getX() {\n  // Normalize coordinates\n  this.normalize();\n\n  return this.x.fromRed();\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/elliptic/lib/elliptic/curve/mont.js\n **/","'use strict';\n\nvar curve = require('../curve');\nvar elliptic = require('../../elliptic');\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = curve.base;\n\nvar assert = elliptic.utils.assert;\n\nfunction EdwardsCurve(conf) {\n  // NOTE: Important as we are creating point in Base.call()\n  this.twisted = (conf.a | 0) !== 1;\n  this.mOneA = this.twisted && (conf.a | 0) === -1;\n  this.extended = this.mOneA;\n\n  Base.call(this, 'edwards', conf);\n\n  this.a = new BN(conf.a, 16).umod(this.red.m);\n  this.a = this.a.toRed(this.red);\n  this.c = new BN(conf.c, 16).toRed(this.red);\n  this.c2 = this.c.redSqr();\n  this.d = new BN(conf.d, 16).toRed(this.red);\n  this.dd = this.d.redAdd(this.d);\n\n  assert(!this.twisted || this.c.fromRed().cmpn(1) === 0);\n  this.oneC = (conf.c | 0) === 1;\n}\ninherits(EdwardsCurve, Base);\nmodule.exports = EdwardsCurve;\n\nEdwardsCurve.prototype._mulA = function _mulA(num) {\n  if (this.mOneA)\n    return num.redNeg();\n  else\n    return this.a.redMul(num);\n};\n\nEdwardsCurve.prototype._mulC = function _mulC(num) {\n  if (this.oneC)\n    return num;\n  else\n    return this.c.redMul(num);\n};\n\n// Just for compatibility with Short curve\nEdwardsCurve.prototype.jpoint = function jpoint(x, y, z, t) {\n  return this.point(x, y, z, t);\n};\n\nEdwardsCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var x2 = x.redSqr();\n  var rhs = this.c2.redSub(this.a.redMul(x2));\n  var lhs = this.one.redSub(this.c2.redMul(this.d).redMul(x2));\n\n  var y2 = rhs.redMul(lhs.redInvm());\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nEdwardsCurve.prototype.pointFromY = function pointFromY(y, odd) {\n  y = new BN(y, 16);\n  if (!y.red)\n    y = y.toRed(this.red);\n\n  // x^2 = (y^2 - 1) / (d y^2 + 1)\n  var y2 = y.redSqr();\n  var lhs = y2.redSub(this.one);\n  var rhs = y2.redMul(this.d).redAdd(this.one);\n  var x2 = lhs.redMul(rhs.redInvm());\n\n  if (x2.cmp(this.zero) === 0) {\n    if (odd)\n      throw new Error('invalid point');\n    else\n      return this.point(this.zero, y);\n  }\n\n  var x = x2.redSqrt();\n  if (x.redSqr().redSub(x2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  if (x.isOdd() !== odd)\n    x = x.redNeg();\n\n  return this.point(x, y);\n};\n\nEdwardsCurve.prototype.validate = function validate(point) {\n  if (point.isInfinity())\n    return true;\n\n  // Curve: A * X^2 + Y^2 = C^2 * (1 + D * X^2 * Y^2)\n  point.normalize();\n\n  var x2 = point.x.redSqr();\n  var y2 = point.y.redSqr();\n  var lhs = x2.redMul(this.a).redAdd(y2);\n  var rhs = this.c2.redMul(this.one.redAdd(this.d.redMul(x2).redMul(y2)));\n\n  return lhs.cmp(rhs) === 0;\n};\n\nfunction Point(curve, x, y, z, t) {\n  Base.BasePoint.call(this, curve, 'projective');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.zero;\n    this.y = this.curve.one;\n    this.z = this.curve.one;\n    this.t = this.curve.zero;\n    this.zOne = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = z ? new BN(z, 16) : this.curve.one;\n    this.t = t && new BN(t, 16);\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    if (!this.z.red)\n      this.z = this.z.toRed(this.curve.red);\n    if (this.t && !this.t.red)\n      this.t = this.t.toRed(this.curve.red);\n    this.zOne = this.z === this.curve.one;\n\n    // Use extended coordinates\n    if (this.curve.extended && !this.t) {\n      this.t = this.x.redMul(this.y);\n      if (!this.zOne)\n        this.t = this.t.redMul(this.z.redInvm());\n    }\n  }\n}\ninherits(Point, Base.BasePoint);\n\nEdwardsCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n  return Point.fromJSON(this, obj);\n};\n\nEdwardsCurve.prototype.point = function point(x, y, z, t) {\n  return new Point(this, x, y, z, t);\n};\n\nPoint.fromJSON = function fromJSON(curve, obj) {\n  return new Point(curve, obj[0], obj[1], obj[2]);\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) +\n      ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.x.cmpn(0) === 0 &&\n         this.y.cmp(this.z) === 0;\n};\n\nPoint.prototype._extDbl = function _extDbl() {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html\n  //     #doubling-dbl-2008-hwcd\n  // 4M + 4S\n\n  // A = X1^2\n  var a = this.x.redSqr();\n  // B = Y1^2\n  var b = this.y.redSqr();\n  // C = 2 * Z1^2\n  var c = this.z.redSqr();\n  c = c.redIAdd(c);\n  // D = a * A\n  var d = this.curve._mulA(a);\n  // E = (X1 + Y1)^2 - A - B\n  var e = this.x.redAdd(this.y).redSqr().redISub(a).redISub(b);\n  // G = D + B\n  var g = d.redAdd(b);\n  // F = G - C\n  var f = g.redSub(c);\n  // H = D - B\n  var h = d.redSub(b);\n  // X3 = E * F\n  var nx = e.redMul(f);\n  // Y3 = G * H\n  var ny = g.redMul(h);\n  // T3 = E * H\n  var nt = e.redMul(h);\n  // Z3 = F * G\n  var nz = f.redMul(g);\n  return this.curve.point(nx, ny, nz, nt);\n};\n\nPoint.prototype._projDbl = function _projDbl() {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html\n  //     #doubling-dbl-2008-bbjlp\n  //     #doubling-dbl-2007-bl\n  // and others\n  // Generally 3M + 4S or 2M + 4S\n\n  // B = (X1 + Y1)^2\n  var b = this.x.redAdd(this.y).redSqr();\n  // C = X1^2\n  var c = this.x.redSqr();\n  // D = Y1^2\n  var d = this.y.redSqr();\n\n  var nx;\n  var ny;\n  var nz;\n  if (this.curve.twisted) {\n    // E = a * C\n    var e = this.curve._mulA(c);\n    // F = E + D\n    var f = e.redAdd(d);\n    if (this.zOne) {\n      // X3 = (B - C - D) * (F - 2)\n      nx = b.redSub(c).redSub(d).redMul(f.redSub(this.curve.two));\n      // Y3 = F * (E - D)\n      ny = f.redMul(e.redSub(d));\n      // Z3 = F^2 - 2 * F\n      nz = f.redSqr().redSub(f).redSub(f);\n    } else {\n      // H = Z1^2\n      var h = this.z.redSqr();\n      // J = F - 2 * H\n      var j = f.redSub(h).redISub(h);\n      // X3 = (B-C-D)*J\n      nx = b.redSub(c).redISub(d).redMul(j);\n      // Y3 = F * (E - D)\n      ny = f.redMul(e.redSub(d));\n      // Z3 = F * J\n      nz = f.redMul(j);\n    }\n  } else {\n    // E = C + D\n    var e = c.redAdd(d);\n    // H = (c * Z1)^2\n    var h = this.curve._mulC(this.c.redMul(this.z)).redSqr();\n    // J = E - 2 * H\n    var j = e.redSub(h).redSub(h);\n    // X3 = c * (B - E) * J\n    nx = this.curve._mulC(b.redISub(e)).redMul(j);\n    // Y3 = c * E * (C - D)\n    ny = this.curve._mulC(e).redMul(c.redISub(d));\n    // Z3 = E * J\n    nz = e.redMul(j);\n  }\n  return this.curve.point(nx, ny, nz);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  // Double in extended coordinates\n  if (this.curve.extended)\n    return this._extDbl();\n  else\n    return this._projDbl();\n};\n\nPoint.prototype._extAdd = function _extAdd(p) {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html\n  //     #addition-add-2008-hwcd-3\n  // 8M\n\n  // A = (Y1 - X1) * (Y2 - X2)\n  var a = this.y.redSub(this.x).redMul(p.y.redSub(p.x));\n  // B = (Y1 + X1) * (Y2 + X2)\n  var b = this.y.redAdd(this.x).redMul(p.y.redAdd(p.x));\n  // C = T1 * k * T2\n  var c = this.t.redMul(this.curve.dd).redMul(p.t);\n  // D = Z1 * 2 * Z2\n  var d = this.z.redMul(p.z.redAdd(p.z));\n  // E = B - A\n  var e = b.redSub(a);\n  // F = D - C\n  var f = d.redSub(c);\n  // G = D + C\n  var g = d.redAdd(c);\n  // H = B + A\n  var h = b.redAdd(a);\n  // X3 = E * F\n  var nx = e.redMul(f);\n  // Y3 = G * H\n  var ny = g.redMul(h);\n  // T3 = E * H\n  var nt = e.redMul(h);\n  // Z3 = F * G\n  var nz = f.redMul(g);\n  return this.curve.point(nx, ny, nz, nt);\n};\n\nPoint.prototype._projAdd = function _projAdd(p) {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html\n  //     #addition-add-2008-bbjlp\n  //     #addition-add-2007-bl\n  // 10M + 1S\n\n  // A = Z1 * Z2\n  var a = this.z.redMul(p.z);\n  // B = A^2\n  var b = a.redSqr();\n  // C = X1 * X2\n  var c = this.x.redMul(p.x);\n  // D = Y1 * Y2\n  var d = this.y.redMul(p.y);\n  // E = d * C * D\n  var e = this.curve.d.redMul(c).redMul(d);\n  // F = B - E\n  var f = b.redSub(e);\n  // G = B + E\n  var g = b.redAdd(e);\n  // X3 = A * F * ((X1 + Y1) * (X2 + Y2) - C - D)\n  var tmp = this.x.redAdd(this.y).redMul(p.x.redAdd(p.y)).redISub(c).redISub(d);\n  var nx = a.redMul(f).redMul(tmp);\n  var ny;\n  var nz;\n  if (this.curve.twisted) {\n    // Y3 = A * G * (D - a * C)\n    ny = a.redMul(g).redMul(d.redSub(this.curve._mulA(c)));\n    // Z3 = F * G\n    nz = f.redMul(g);\n  } else {\n    // Y3 = A * G * (D - C)\n    ny = a.redMul(g).redMul(d.redSub(c));\n    // Z3 = c * F * G\n    nz = this.curve._mulC(f).redMul(g);\n  }\n  return this.curve.point(nx, ny, nz);\n};\n\nPoint.prototype.add = function add(p) {\n  if (this.isInfinity())\n    return p;\n  if (p.isInfinity())\n    return this;\n\n  if (this.curve.extended)\n    return this._extAdd(p);\n  else\n    return this._projAdd(p);\n};\n\nPoint.prototype.mul = function mul(k) {\n  if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p, k2) {\n  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, false);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p, k2) {\n  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, true);\n};\n\nPoint.prototype.normalize = function normalize() {\n  if (this.zOne)\n    return this;\n\n  // Normalize coordinates\n  var zi = this.z.redInvm();\n  this.x = this.x.redMul(zi);\n  this.y = this.y.redMul(zi);\n  if (this.t)\n    this.t = this.t.redMul(zi);\n  this.z = this.curve.one;\n  this.zOne = true;\n  return this;\n};\n\nPoint.prototype.neg = function neg() {\n  return this.curve.point(this.x.redNeg(),\n                          this.y,\n                          this.z,\n                          this.t && this.t.redNeg());\n};\n\nPoint.prototype.getX = function getX() {\n  this.normalize();\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  this.normalize();\n  return this.y.fromRed();\n};\n\nPoint.prototype.eq = function eq(other) {\n  return this === other ||\n         this.getX().cmp(other.getX()) === 0 &&\n         this.getY().cmp(other.getY()) === 0;\n};\n\nPoint.prototype.eqXToP = function eqXToP(x) {\n  var rx = x.toRed(this.curve.red).redMul(this.z);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(this.z);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n  return false;\n};\n\n// Compatibility with BaseCurve\nPoint.prototype.toP = Point.prototype.normalize;\nPoint.prototype.mixedAdd = Point.prototype.add;\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/elliptic/lib/elliptic/curve/edwards.js\n **/","module.exports = {\n  doubles: {\n    step: 4,\n    points: [\n      [\n        'e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a',\n        'f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821'\n      ],\n      [\n        '8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508',\n        '11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf'\n      ],\n      [\n        '175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739',\n        'd3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695'\n      ],\n      [\n        '363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640',\n        '4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9'\n      ],\n      [\n        '8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c',\n        '4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36'\n      ],\n      [\n        '723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda',\n        '96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f'\n      ],\n      [\n        'eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa',\n        '5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999'\n      ],\n      [\n        '100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0',\n        'cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09'\n      ],\n      [\n        'e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d',\n        '9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d'\n      ],\n      [\n        'feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d',\n        'e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088'\n      ],\n      [\n        'da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1',\n        '9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d'\n      ],\n      [\n        '53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0',\n        '5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8'\n      ],\n      [\n        '8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047',\n        '10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a'\n      ],\n      [\n        '385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862',\n        '283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453'\n      ],\n      [\n        '6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7',\n        '7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160'\n      ],\n      [\n        '3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd',\n        '56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0'\n      ],\n      [\n        '85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83',\n        '7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6'\n      ],\n      [\n        '948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a',\n        '53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589'\n      ],\n      [\n        '6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8',\n        'bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17'\n      ],\n      [\n        'e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d',\n        '4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda'\n      ],\n      [\n        'e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725',\n        '7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd'\n      ],\n      [\n        '213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754',\n        '4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2'\n      ],\n      [\n        '4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c',\n        '17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6'\n      ],\n      [\n        'fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6',\n        '6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f'\n      ],\n      [\n        '76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39',\n        'c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01'\n      ],\n      [\n        'c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891',\n        '893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3'\n      ],\n      [\n        'd895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b',\n        'febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f'\n      ],\n      [\n        'b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03',\n        '2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7'\n      ],\n      [\n        'e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d',\n        'eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78'\n      ],\n      [\n        'a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070',\n        '7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1'\n      ],\n      [\n        '90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4',\n        'e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150'\n      ],\n      [\n        '8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da',\n        '662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82'\n      ],\n      [\n        'e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11',\n        '1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc'\n      ],\n      [\n        '8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e',\n        'efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b'\n      ],\n      [\n        'e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41',\n        '2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51'\n      ],\n      [\n        'b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef',\n        '67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45'\n      ],\n      [\n        'd68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8',\n        'db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120'\n      ],\n      [\n        '324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d',\n        '648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84'\n      ],\n      [\n        '4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96',\n        '35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d'\n      ],\n      [\n        '9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd',\n        'ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d'\n      ],\n      [\n        '6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5',\n        '9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8'\n      ],\n      [\n        'a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266',\n        '40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8'\n      ],\n      [\n        '7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71',\n        '34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac'\n      ],\n      [\n        '928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac',\n        'c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f'\n      ],\n      [\n        '85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751',\n        '1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962'\n      ],\n      [\n        'ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e',\n        '493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907'\n      ],\n      [\n        '827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241',\n        'c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec'\n      ],\n      [\n        'eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3',\n        'be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d'\n      ],\n      [\n        'e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f',\n        '4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414'\n      ],\n      [\n        '1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19',\n        'aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd'\n      ],\n      [\n        '146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be',\n        'b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0'\n      ],\n      [\n        'fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9',\n        '6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811'\n      ],\n      [\n        'da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2',\n        '8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1'\n      ],\n      [\n        'a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13',\n        '7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c'\n      ],\n      [\n        '174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c',\n        'ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73'\n      ],\n      [\n        '959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba',\n        '2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd'\n      ],\n      [\n        'd2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151',\n        'e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405'\n      ],\n      [\n        '64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073',\n        'd99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589'\n      ],\n      [\n        '8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458',\n        '38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e'\n      ],\n      [\n        '13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b',\n        '69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27'\n      ],\n      [\n        'bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366',\n        'd3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1'\n      ],\n      [\n        '8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa',\n        '40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482'\n      ],\n      [\n        '8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0',\n        '620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945'\n      ],\n      [\n        'dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787',\n        '7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573'\n      ],\n      [\n        'f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e',\n        'ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82'\n      ]\n    ]\n  },\n  naf: {\n    wnd: 7,\n    points: [\n      [\n        'f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9',\n        '388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672'\n      ],\n      [\n        '2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4',\n        'd8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6'\n      ],\n      [\n        '5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc',\n        '6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da'\n      ],\n      [\n        'acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe',\n        'cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37'\n      ],\n      [\n        '774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb',\n        'd984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b'\n      ],\n      [\n        'f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8',\n        'ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81'\n      ],\n      [\n        'd7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e',\n        '581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58'\n      ],\n      [\n        'defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34',\n        '4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77'\n      ],\n      [\n        '2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c',\n        '85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a'\n      ],\n      [\n        '352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5',\n        '321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c'\n      ],\n      [\n        '2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f',\n        '2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67'\n      ],\n      [\n        '9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714',\n        '73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402'\n      ],\n      [\n        'daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729',\n        'a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55'\n      ],\n      [\n        'c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db',\n        '2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482'\n      ],\n      [\n        '6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4',\n        'e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82'\n      ],\n      [\n        '1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5',\n        'b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396'\n      ],\n      [\n        '605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479',\n        '2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49'\n      ],\n      [\n        '62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d',\n        '80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf'\n      ],\n      [\n        '80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f',\n        '1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a'\n      ],\n      [\n        '7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb',\n        'd0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7'\n      ],\n      [\n        'd528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9',\n        'eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933'\n      ],\n      [\n        '49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963',\n        '758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a'\n      ],\n      [\n        '77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74',\n        '958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6'\n      ],\n      [\n        'f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530',\n        'e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37'\n      ],\n      [\n        '463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b',\n        '5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e'\n      ],\n      [\n        'f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247',\n        'cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6'\n      ],\n      [\n        'caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1',\n        'cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476'\n      ],\n      [\n        '2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120',\n        '4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40'\n      ],\n      [\n        '7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435',\n        '91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61'\n      ],\n      [\n        '754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18',\n        '673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683'\n      ],\n      [\n        'e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8',\n        '59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5'\n      ],\n      [\n        '186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb',\n        '3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b'\n      ],\n      [\n        'df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f',\n        '55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417'\n      ],\n      [\n        '5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143',\n        'efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868'\n      ],\n      [\n        '290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba',\n        'e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a'\n      ],\n      [\n        'af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45',\n        'f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6'\n      ],\n      [\n        '766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a',\n        '744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996'\n      ],\n      [\n        '59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e',\n        'c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e'\n      ],\n      [\n        'f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8',\n        'e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d'\n      ],\n      [\n        '7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c',\n        '30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2'\n      ],\n      [\n        '948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519',\n        'e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e'\n      ],\n      [\n        '7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab',\n        '100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437'\n      ],\n      [\n        '3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca',\n        'ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311'\n      ],\n      [\n        'd3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf',\n        '8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4'\n      ],\n      [\n        '1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610',\n        '68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575'\n      ],\n      [\n        '733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4',\n        'f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d'\n      ],\n      [\n        '15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c',\n        'd56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d'\n      ],\n      [\n        'a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940',\n        'edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629'\n      ],\n      [\n        'e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980',\n        'a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06'\n      ],\n      [\n        '311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3',\n        '66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374'\n      ],\n      [\n        '34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf',\n        '9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee'\n      ],\n      [\n        'f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63',\n        '4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1'\n      ],\n      [\n        'd7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448',\n        'fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b'\n      ],\n      [\n        '32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf',\n        '5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661'\n      ],\n      [\n        '7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5',\n        '8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6'\n      ],\n      [\n        'ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6',\n        '8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e'\n      ],\n      [\n        '16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5',\n        '5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d'\n      ],\n      [\n        'eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99',\n        'f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc'\n      ],\n      [\n        '78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51',\n        'f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4'\n      ],\n      [\n        '494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5',\n        '42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c'\n      ],\n      [\n        'a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5',\n        '204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b'\n      ],\n      [\n        'c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997',\n        '4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913'\n      ],\n      [\n        '841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881',\n        '73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154'\n      ],\n      [\n        '5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5',\n        '39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865'\n      ],\n      [\n        '36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66',\n        'd2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc'\n      ],\n      [\n        '336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726',\n        'ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224'\n      ],\n      [\n        '8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede',\n        '6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e'\n      ],\n      [\n        '1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94',\n        '60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6'\n      ],\n      [\n        '85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31',\n        '3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511'\n      ],\n      [\n        '29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51',\n        'b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b'\n      ],\n      [\n        'a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252',\n        'ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2'\n      ],\n      [\n        '4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5',\n        'cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c'\n      ],\n      [\n        'd24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b',\n        '6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3'\n      ],\n      [\n        'ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4',\n        '322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d'\n      ],\n      [\n        'af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f',\n        '6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700'\n      ],\n      [\n        'e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889',\n        '2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4'\n      ],\n      [\n        '591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246',\n        'b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196'\n      ],\n      [\n        '11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984',\n        '998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4'\n      ],\n      [\n        '3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a',\n        'b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257'\n      ],\n      [\n        'cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030',\n        'bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13'\n      ],\n      [\n        'c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197',\n        '6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096'\n      ],\n      [\n        'c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593',\n        'c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38'\n      ],\n      [\n        'a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef',\n        '21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f'\n      ],\n      [\n        '347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38',\n        '60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448'\n      ],\n      [\n        'da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a',\n        '49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a'\n      ],\n      [\n        'c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111',\n        '5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4'\n      ],\n      [\n        '4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502',\n        '7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437'\n      ],\n      [\n        '3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea',\n        'be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7'\n      ],\n      [\n        'cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26',\n        '8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d'\n      ],\n      [\n        'b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986',\n        '39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a'\n      ],\n      [\n        'd4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e',\n        '62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54'\n      ],\n      [\n        '48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4',\n        '25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77'\n      ],\n      [\n        'dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda',\n        'ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517'\n      ],\n      [\n        '6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859',\n        'cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10'\n      ],\n      [\n        'e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f',\n        'f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125'\n      ],\n      [\n        'eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c',\n        '6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e'\n      ],\n      [\n        '13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942',\n        'fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1'\n      ],\n      [\n        'ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a',\n        '1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2'\n      ],\n      [\n        'b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80',\n        '5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423'\n      ],\n      [\n        'ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d',\n        '438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8'\n      ],\n      [\n        '8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1',\n        'cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758'\n      ],\n      [\n        '52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63',\n        'c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375'\n      ],\n      [\n        'e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352',\n        '6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d'\n      ],\n      [\n        '7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193',\n        'ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec'\n      ],\n      [\n        '5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00',\n        '9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0'\n      ],\n      [\n        '32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58',\n        'ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c'\n      ],\n      [\n        'e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7',\n        'd3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4'\n      ],\n      [\n        '8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8',\n        'c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f'\n      ],\n      [\n        '4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e',\n        '67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649'\n      ],\n      [\n        '3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d',\n        'cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826'\n      ],\n      [\n        '674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b',\n        '299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5'\n      ],\n      [\n        'd32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f',\n        'f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87'\n      ],\n      [\n        '30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6',\n        '462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b'\n      ],\n      [\n        'be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297',\n        '62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc'\n      ],\n      [\n        '93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a',\n        '7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c'\n      ],\n      [\n        'b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c',\n        'ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f'\n      ],\n      [\n        'd5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52',\n        '4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a'\n      ],\n      [\n        'd3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb',\n        'bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46'\n      ],\n      [\n        '463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065',\n        'bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f'\n      ],\n      [\n        '7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917',\n        '603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03'\n      ],\n      [\n        '74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9',\n        'cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08'\n      ],\n      [\n        '30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3',\n        '553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8'\n      ],\n      [\n        '9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57',\n        '712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373'\n      ],\n      [\n        '176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66',\n        'ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3'\n      ],\n      [\n        '75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8',\n        '9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8'\n      ],\n      [\n        '809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721',\n        '9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1'\n      ],\n      [\n        '1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180',\n        '4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9'\n      ]\n    ]\n  }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/elliptic/lib/elliptic/precomputed/secp256k1.js\n **/","'use strict';\n\nvar BN = require('bn.js');\nvar elliptic = require('../../elliptic');\nvar utils = elliptic.utils;\nvar assert = utils.assert;\n\nvar KeyPair = require('./key');\nvar Signature = require('./signature');\n\nfunction EC(options) {\n  if (!(this instanceof EC))\n    return new EC(options);\n\n  // Shortcut `elliptic.ec(curve-name)`\n  if (typeof options === 'string') {\n    assert(elliptic.curves.hasOwnProperty(options), 'Unknown curve ' + options);\n\n    options = elliptic.curves[options];\n  }\n\n  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`\n  if (options instanceof elliptic.curves.PresetCurve)\n    options = { curve: options };\n\n  this.curve = options.curve.curve;\n  this.n = this.curve.n;\n  this.nh = this.n.ushrn(1);\n  this.g = this.curve.g;\n\n  // Point on curve\n  this.g = options.curve.g;\n  this.g.precompute(options.curve.n.bitLength() + 1);\n\n  // Hash for function for DRBG\n  this.hash = options.hash || options.curve.hash;\n}\nmodule.exports = EC;\n\nEC.prototype.keyPair = function keyPair(options) {\n  return new KeyPair(this, options);\n};\n\nEC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {\n  return KeyPair.fromPrivate(this, priv, enc);\n};\n\nEC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {\n  return KeyPair.fromPublic(this, pub, enc);\n};\n\nEC.prototype.genKeyPair = function genKeyPair(options) {\n  if (!options)\n    options = {};\n\n  // Instantiate Hmac_DRBG\n  var drbg = new elliptic.hmacDRBG({\n    hash: this.hash,\n    pers: options.pers,\n    entropy: options.entropy || elliptic.rand(this.hash.hmacStrength),\n    nonce: this.n.toArray()\n  });\n\n  var bytes = this.n.byteLength();\n  var ns2 = this.n.sub(new BN(2));\n  do {\n    var priv = new BN(drbg.generate(bytes));\n    if (priv.cmp(ns2) > 0)\n      continue;\n\n    priv.iaddn(1);\n    return this.keyFromPrivate(priv);\n  } while (true);\n};\n\nEC.prototype._truncateToN = function truncateToN(msg, truncOnly) {\n  var delta = msg.byteLength() * 8 - this.n.bitLength();\n  if (delta > 0)\n    msg = msg.ushrn(delta);\n  if (!truncOnly && msg.cmp(this.n) >= 0)\n    return msg.sub(this.n);\n  else\n    return msg;\n};\n\nEC.prototype.sign = function sign(msg, key, enc, options) {\n  if (typeof enc === 'object') {\n    options = enc;\n    enc = null;\n  }\n  if (!options)\n    options = {};\n\n  key = this.keyFromPrivate(key, enc);\n  msg = this._truncateToN(new BN(msg, 16));\n\n  // Zero-extend key to provide enough entropy\n  var bytes = this.n.byteLength();\n  var bkey = key.getPrivate().toArray('be', bytes);\n\n  // Zero-extend nonce to have the same byte size as N\n  var nonce = msg.toArray('be', bytes);\n\n  // Instantiate Hmac_DRBG\n  var drbg = new elliptic.hmacDRBG({\n    hash: this.hash,\n    entropy: bkey,\n    nonce: nonce,\n    pers: options.pers,\n    persEnc: options.persEnc\n  });\n\n  // Number of bytes to generate\n  var ns1 = this.n.sub(new BN(1));\n\n  for (var iter = 0; true; iter++) {\n    var k = options.k ?\n        options.k(iter) :\n        new BN(drbg.generate(this.n.byteLength()));\n    k = this._truncateToN(k, true);\n    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)\n      continue;\n\n    var kp = this.g.mul(k);\n    if (kp.isInfinity())\n      continue;\n\n    var kpX = kp.getX();\n    var r = kpX.umod(this.n);\n    if (r.cmpn(0) === 0)\n      continue;\n\n    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));\n    s = s.umod(this.n);\n    if (s.cmpn(0) === 0)\n      continue;\n\n    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) |\n                        (kpX.cmp(r) !== 0 ? 2 : 0);\n\n    // Use complement of `s`, if it is > `n / 2`\n    if (options.canonical && s.cmp(this.nh) > 0) {\n      s = this.n.sub(s);\n      recoveryParam ^= 1;\n    }\n\n    return new Signature({ r: r, s: s, recoveryParam: recoveryParam });\n  }\n};\n\nEC.prototype.verify = function verify(msg, signature, key, enc) {\n  msg = this._truncateToN(new BN(msg, 16));\n  key = this.keyFromPublic(key, enc);\n  signature = new Signature(signature, 'hex');\n\n  // Perform primitive values validation\n  var r = signature.r;\n  var s = signature.s;\n  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)\n    return false;\n  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)\n    return false;\n\n  // Validate signature\n  var sinv = s.invm(this.n);\n  var u1 = sinv.mul(msg).umod(this.n);\n  var u2 = sinv.mul(r).umod(this.n);\n\n  if (!this.curve._maxwellTrick) {\n    var p = this.g.mulAdd(u1, key.getPublic(), u2);\n    if (p.isInfinity())\n      return false;\n\n    return p.getX().umod(this.n).cmp(r) === 0;\n  }\n\n  // NOTE: Greg Maxwell's trick, inspired by:\n  // https://git.io/vad3K\n\n  var p = this.g.jmulAdd(u1, key.getPublic(), u2);\n  if (p.isInfinity())\n    return false;\n\n  // Compare `p.x` of Jacobian point with `r`,\n  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the\n  // inverse of `p.z^2`\n  return p.eqXToP(r);\n};\n\nEC.prototype.recoverPubKey = function(msg, signature, j, enc) {\n  assert((3 & j) === j, 'The recovery param is more than two bits');\n  signature = new Signature(signature, enc);\n\n  var n = this.n;\n  var e = new BN(msg);\n  var r = signature.r;\n  var s = signature.s;\n\n  // A set LSB signifies that the y-coordinate is odd\n  var isYOdd = j & 1;\n  var isSecondKey = j >> 1;\n  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)\n    throw new Error('Unable to find sencond key candinate');\n\n  // 1.1. Let x = r + jn.\n  if (isSecondKey)\n    r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);\n  else\n    r = this.curve.pointFromX(r, isYOdd);\n\n  var rInv = signature.r.invm(n);\n  var s1 = n.sub(e).mul(rInv).umod(n);\n  var s2 = s.mul(rInv).umod(n);\n\n  // 1.6.1 Compute Q = r^-1 (sR -  eG)\n  //               Q = r^-1 (sR + -eG)\n  return this.g.mulAdd(s1, r, s2);\n};\n\nEC.prototype.getKeyRecoveryParam = function(e, signature, Q, enc) {\n  signature = new Signature(signature, enc);\n  if (signature.recoveryParam !== null)\n    return signature.recoveryParam;\n\n  for (var i = 0; i < 4; i++) {\n    var Qprime;\n    try {\n      Qprime = this.recoverPubKey(e, signature, i);\n    } catch (e) {\n      continue;\n    }\n\n    if (Qprime.eq(Q))\n      return i;\n  }\n  throw new Error('Unable to find valid recovery factor');\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/elliptic/lib/elliptic/ec/index.js\n **/","'use strict';\n\nvar BN = require('bn.js');\n\nfunction KeyPair(ec, options) {\n  this.ec = ec;\n  this.priv = null;\n  this.pub = null;\n\n  // KeyPair(ec, { priv: ..., pub: ... })\n  if (options.priv)\n    this._importPrivate(options.priv, options.privEnc);\n  if (options.pub)\n    this._importPublic(options.pub, options.pubEnc);\n}\nmodule.exports = KeyPair;\n\nKeyPair.fromPublic = function fromPublic(ec, pub, enc) {\n  if (pub instanceof KeyPair)\n    return pub;\n\n  return new KeyPair(ec, {\n    pub: pub,\n    pubEnc: enc\n  });\n};\n\nKeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {\n  if (priv instanceof KeyPair)\n    return priv;\n\n  return new KeyPair(ec, {\n    priv: priv,\n    privEnc: enc\n  });\n};\n\nKeyPair.prototype.validate = function validate() {\n  var pub = this.getPublic();\n\n  if (pub.isInfinity())\n    return { result: false, reason: 'Invalid public key' };\n  if (!pub.validate())\n    return { result: false, reason: 'Public key is not a point' };\n  if (!pub.mul(this.ec.curve.n).isInfinity())\n    return { result: false, reason: 'Public key * N != O' };\n\n  return { result: true, reason: null };\n};\n\nKeyPair.prototype.getPublic = function getPublic(compact, enc) {\n  // compact is optional argument\n  if (typeof compact === 'string') {\n    enc = compact;\n    compact = null;\n  }\n\n  if (!this.pub)\n    this.pub = this.ec.g.mul(this.priv);\n\n  if (!enc)\n    return this.pub;\n\n  return this.pub.encode(enc, compact);\n};\n\nKeyPair.prototype.getPrivate = function getPrivate(enc) {\n  if (enc === 'hex')\n    return this.priv.toString(16, 2);\n  else\n    return this.priv;\n};\n\nKeyPair.prototype._importPrivate = function _importPrivate(key, enc) {\n  this.priv = new BN(key, enc || 16);\n\n  // Ensure that the priv won't be bigger than n, otherwise we may fail\n  // in fixed multiplication method\n  this.priv = this.priv.umod(this.ec.curve.n);\n};\n\nKeyPair.prototype._importPublic = function _importPublic(key, enc) {\n  if (key.x || key.y) {\n    this.pub = this.ec.curve.point(key.x, key.y);\n    return;\n  }\n  this.pub = this.ec.curve.decodePoint(key, enc);\n};\n\n// ECDH\nKeyPair.prototype.derive = function derive(pub) {\n  return pub.mul(this.priv).getX();\n};\n\n// ECDSA\nKeyPair.prototype.sign = function sign(msg, enc, options) {\n  return this.ec.sign(msg, this, enc, options);\n};\n\nKeyPair.prototype.verify = function verify(msg, signature) {\n  return this.ec.verify(msg, signature, this);\n};\n\nKeyPair.prototype.inspect = function inspect() {\n  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) +\n         ' pub: ' + (this.pub && this.pub.inspect()) + ' >';\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/elliptic/lib/elliptic/ec/key.js\n **/","'use strict';\n\nvar BN = require('bn.js');\n\nvar elliptic = require('../../elliptic');\nvar utils = elliptic.utils;\nvar assert = utils.assert;\n\nfunction Signature(options, enc) {\n  if (options instanceof Signature)\n    return options;\n\n  if (this._importDER(options, enc))\n    return;\n\n  assert(options.r && options.s, 'Signature without r or s');\n  this.r = new BN(options.r, 16);\n  this.s = new BN(options.s, 16);\n  if (options.recoveryParam === undefined)\n    this.recoveryParam = null;\n  else\n    this.recoveryParam = options.recoveryParam;\n}\nmodule.exports = Signature;\n\nfunction Position() {\n  this.place = 0;\n}\n\nfunction getLength(buf, p) {\n  var initial = buf[p.place++];\n  if (!(initial & 0x80)) {\n    return initial;\n  }\n  var octetLen = initial & 0xf;\n  var val = 0;\n  for (var i = 0, off = p.place; i < octetLen; i++, off++) {\n    val <<= 8;\n    val |= buf[off];\n  }\n  p.place = off;\n  return val;\n}\n\nfunction rmPadding(buf) {\n  var i = 0;\n  var len = buf.length - 1;\n  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {\n    i++;\n  }\n  if (i === 0) {\n    return buf;\n  }\n  return buf.slice(i);\n}\n\nSignature.prototype._importDER = function _importDER(data, enc) {\n  data = utils.toArray(data, enc);\n  var p = new Position();\n  if (data[p.place++] !== 0x30) {\n    return false;\n  }\n  var len = getLength(data, p);\n  if ((len + p.place) !== data.length) {\n    return false;\n  }\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var rlen = getLength(data, p);\n  var r = data.slice(p.place, rlen + p.place);\n  p.place += rlen;\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var slen = getLength(data, p);\n  if (data.length !== slen + p.place) {\n    return false;\n  }\n  var s = data.slice(p.place, slen + p.place);\n  if (r[0] === 0 && (r[1] & 0x80)) {\n    r = r.slice(1);\n  }\n  if (s[0] === 0 && (s[1] & 0x80)) {\n    s = s.slice(1);\n  }\n\n  this.r = new BN(r);\n  this.s = new BN(s);\n  this.recoveryParam = null;\n\n  return true;\n};\n\nfunction constructLength(arr, len) {\n  if (len < 0x80) {\n    arr.push(len);\n    return;\n  }\n  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);\n  arr.push(octets | 0x80);\n  while (--octets) {\n    arr.push((len >>> (octets << 3)) & 0xff);\n  }\n  arr.push(len);\n}\n\nSignature.prototype.toDER = function toDER(enc) {\n  var r = this.r.toArray();\n  var s = this.s.toArray();\n\n  // Pad values\n  if (r[0] & 0x80)\n    r = [ 0 ].concat(r);\n  // Pad values\n  if (s[0] & 0x80)\n    s = [ 0 ].concat(s);\n\n  r = rmPadding(r);\n  s = rmPadding(s);\n\n  while (!s[0] && !(s[1] & 0x80)) {\n    s = s.slice(1);\n  }\n  var arr = [ 0x02 ];\n  constructLength(arr, r.length);\n  arr = arr.concat(r);\n  arr.push(0x02);\n  constructLength(arr, s.length);\n  var backHalf = arr.concat(s);\n  var res = [ 0x30 ];\n  constructLength(res, backHalf.length);\n  res = res.concat(backHalf);\n  return utils.encode(res, enc);\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/elliptic/lib/elliptic/ec/signature.js\n **/","'use strict';\n\nvar elliptic = require('../../elliptic');\nvar utils = elliptic.utils;\nvar assert = utils.assert;\nvar parseBytes = utils.parseBytes;\nvar cachedProperty = utils.cachedProperty;\n\n/**\n* @param {EDDSA} eddsa - instance\n* @param {Object} params - public/private key parameters\n*\n* @param {Array<Byte>} [params.secret] - secret seed bytes\n* @param {Point} [params.pub] - public key point (aka `A` in eddsa terms)\n* @param {Array<Byte>} [params.pub] - public key point encoded as bytes\n*\n*/\nfunction KeyPair(eddsa, params) {\n  this.eddsa = eddsa;\n  this._secret = parseBytes(params.secret);\n  if (eddsa.isPoint(params.pub))\n    this._pub = params.pub;\n  else\n    this._pubBytes = parseBytes(params.pub);\n}\n\nKeyPair.fromPublic = function fromPublic(eddsa, pub) {\n  if (pub instanceof KeyPair)\n    return pub;\n  return new KeyPair(eddsa, { pub: pub });\n};\n\nKeyPair.fromSecret = function fromSecret(eddsa, secret) {\n  if (secret instanceof KeyPair)\n    return secret;\n  return new KeyPair(eddsa, { secret: secret });\n};\n\nKeyPair.prototype.secret = function secret() {\n  return this._secret;\n};\n\ncachedProperty(KeyPair, 'pubBytes', function pubBytes() {\n  return this.eddsa.encodePoint(this.pub());\n});\n\ncachedProperty(KeyPair, 'pub', function pub() {\n  if (this._pubBytes)\n    return this.eddsa.decodePoint(this._pubBytes);\n  return this.eddsa.g.mul(this.priv());\n});\n\ncachedProperty(KeyPair, 'privBytes', function privBytes() {\n  var eddsa = this.eddsa;\n  var hash = this.hash();\n  var lastIx = eddsa.encodingLength - 1;\n\n  var a = hash.slice(0, eddsa.encodingLength);\n  a[0] &= 248;\n  a[lastIx] &= 127;\n  a[lastIx] |= 64;\n\n  return a;\n});\n\ncachedProperty(KeyPair, 'priv', function priv() {\n  return this.eddsa.decodeInt(this.privBytes());\n});\n\ncachedProperty(KeyPair, 'hash', function hash() {\n  return this.eddsa.hash().update(this.secret()).digest();\n});\n\ncachedProperty(KeyPair, 'messagePrefix', function messagePrefix() {\n  return this.hash().slice(this.eddsa.encodingLength);\n});\n\nKeyPair.prototype.sign = function sign(message) {\n  assert(this._secret, 'KeyPair can only verify');\n  return this.eddsa.sign(message, this);\n};\n\nKeyPair.prototype.verify = function verify(message, sig) {\n  return this.eddsa.verify(message, sig, this);\n};\n\nKeyPair.prototype.getSecret = function getSecret(enc) {\n  assert(this._secret, 'KeyPair is public only');\n  return utils.encode(this.secret(), enc);\n};\n\nKeyPair.prototype.getPublic = function getPublic(enc) {\n  return utils.encode(this.pubBytes(), enc);\n};\n\nmodule.exports = KeyPair;\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/elliptic/lib/elliptic/eddsa/key.js\n **/","'use strict';\n\nvar BN = require('bn.js');\nvar elliptic = require('../../elliptic');\nvar utils = elliptic.utils;\nvar assert = utils.assert;\nvar cachedProperty = utils.cachedProperty;\nvar parseBytes = utils.parseBytes;\n\n/**\n* @param {EDDSA} eddsa - eddsa instance\n* @param {Array<Bytes>|Object} sig -\n* @param {Array<Bytes>|Point} [sig.R] - R point as Point or bytes\n* @param {Array<Bytes>|bn} [sig.S] - S scalar as bn or bytes\n* @param {Array<Bytes>} [sig.Rencoded] - R point encoded\n* @param {Array<Bytes>} [sig.Sencoded] - S scalar encoded\n*/\nfunction Signature(eddsa, sig) {\n  this.eddsa = eddsa;\n\n  if (typeof sig !== 'object')\n    sig = parseBytes(sig);\n\n  if (Array.isArray(sig)) {\n    sig = {\n      R: sig.slice(0, eddsa.encodingLength),\n      S: sig.slice(eddsa.encodingLength)\n    };\n  }\n\n  assert(sig.R && sig.S, 'Signature without R or S');\n\n  if (eddsa.isPoint(sig.R))\n    this._R = sig.R;\n  if (sig.S instanceof BN)\n    this._S = sig.S;\n\n  this._Rencoded = Array.isArray(sig.R) ? sig.R : sig.Rencoded;\n  this._Sencoded = Array.isArray(sig.S) ? sig.S : sig.Sencoded;\n}\n\ncachedProperty(Signature, 'S', function S() {\n  return this.eddsa.decodeInt(this.Sencoded());\n});\n\ncachedProperty(Signature, 'R', function R() {\n  return this.eddsa.decodePoint(this.Rencoded());\n});\n\ncachedProperty(Signature, 'Rencoded', function Rencoded() {\n  return this.eddsa.encodePoint(this.R());\n});\n\ncachedProperty(Signature, 'Sencoded', function Sencoded() {\n  return this.eddsa.encodeInt(this.S());\n});\n\nSignature.prototype.toBytes = function toBytes() {\n  return this.Rencoded().concat(this.Sencoded());\n};\n\nSignature.prototype.toHex = function toHex() {\n  return utils.encode(this.toBytes(), 'hex').toUpperCase();\n};\n\nmodule.exports = Signature;\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/elliptic/lib/elliptic/eddsa/signature.js\n **/","'use strict'\nmodule.exports = require('./lib')(require('./lib/elliptic'))\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/secp256k1/elliptic.js\n **/","'use strict'\nvar assert = require('./assert')\nvar der = require('./der')\nvar messages = require('./messages.json')\n\nfunction initCompressedValue (value, defaultValue) {\n  if (value === undefined) return defaultValue\n\n  assert.isBoolean(value, messages.COMPRESSED_TYPE_INVALID)\n  return value\n}\n\nmodule.exports = function (secp256k1) {\n  return {\n    privateKeyVerify: function (privateKey) {\n      assert.isBuffer(privateKey, messages.EC_PRIVATE_KEY_TYPE_INVALID)\n      return privateKey.length === 32 && secp256k1.privateKeyVerify(privateKey)\n    },\n\n    privateKeyExport: function (privateKey, compressed) {\n      assert.isBuffer(privateKey, messages.EC_PRIVATE_KEY_TYPE_INVALID)\n      assert.isBufferLength(privateKey, 32, messages.EC_PRIVATE_KEY_LENGTH_INVALID)\n\n      compressed = initCompressedValue(compressed, true)\n      var publicKey = secp256k1.privateKeyExport(privateKey, compressed)\n\n      return der.privateKeyExport(privateKey, publicKey, compressed)\n    },\n\n    privateKeyImport: function (privateKey) {\n      assert.isBuffer(privateKey, messages.EC_PRIVATE_KEY_TYPE_INVALID)\n\n      privateKey = der.privateKeyImport(privateKey)\n      if (privateKey && privateKey.length === 32 && secp256k1.privateKeyVerify(privateKey)) return privateKey\n\n      throw new Error(messages.EC_PRIVATE_KEY_IMPORT_DER_FAIL)\n    },\n\n    privateKeyTweakAdd: function (privateKey, tweak) {\n      assert.isBuffer(privateKey, messages.EC_PRIVATE_KEY_TYPE_INVALID)\n      assert.isBufferLength(privateKey, 32, messages.EC_PRIVATE_KEY_LENGTH_INVALID)\n\n      assert.isBuffer(tweak, messages.TWEAK_TYPE_INVALID)\n      assert.isBufferLength(tweak, 32, messages.TWEAK_LENGTH_INVALID)\n\n      return secp256k1.privateKeyTweakAdd(privateKey, tweak)\n    },\n\n    privateKeyTweakMul: function (privateKey, tweak) {\n      assert.isBuffer(privateKey, messages.EC_PRIVATE_KEY_TYPE_INVALID)\n      assert.isBufferLength(privateKey, 32, messages.EC_PRIVATE_KEY_LENGTH_INVALID)\n\n      assert.isBuffer(tweak, messages.TWEAK_TYPE_INVALID)\n      assert.isBufferLength(tweak, 32, messages.TWEAK_LENGTH_INVALID)\n\n      return secp256k1.privateKeyTweakMul(privateKey, tweak)\n    },\n\n    publicKeyCreate: function (privateKey, compressed) {\n      assert.isBuffer(privateKey, messages.EC_PRIVATE_KEY_TYPE_INVALID)\n      assert.isBufferLength(privateKey, 32, messages.EC_PRIVATE_KEY_LENGTH_INVALID)\n\n      compressed = initCompressedValue(compressed, true)\n\n      return secp256k1.publicKeyCreate(privateKey, compressed)\n    },\n\n    publicKeyConvert: function (publicKey, compressed) {\n      assert.isBuffer(publicKey, messages.EC_PUBLIC_KEY_TYPE_INVALID)\n      assert.isBufferLength2(publicKey, 33, 65, messages.EC_PUBLIC_KEY_LENGTH_INVALID)\n\n      compressed = initCompressedValue(compressed, true)\n\n      return secp256k1.publicKeyConvert(publicKey, compressed)\n    },\n\n    publicKeyVerify: function (publicKey) {\n      assert.isBuffer(publicKey, messages.EC_PUBLIC_KEY_TYPE_INVALID)\n      return secp256k1.publicKeyVerify(publicKey)\n    },\n\n    publicKeyTweakAdd: function (publicKey, tweak, compressed) {\n      assert.isBuffer(publicKey, messages.EC_PUBLIC_KEY_TYPE_INVALID)\n      assert.isBufferLength2(publicKey, 33, 65, messages.EC_PUBLIC_KEY_LENGTH_INVALID)\n\n      assert.isBuffer(tweak, messages.TWEAK_TYPE_INVALID)\n      assert.isBufferLength(tweak, 32, messages.TWEAK_LENGTH_INVALID)\n\n      compressed = initCompressedValue(compressed, true)\n\n      return secp256k1.publicKeyTweakAdd(publicKey, tweak, compressed)\n    },\n\n    publicKeyTweakMul: function (publicKey, tweak, compressed) {\n      assert.isBuffer(publicKey, messages.EC_PUBLIC_KEY_TYPE_INVALID)\n      assert.isBufferLength2(publicKey, 33, 65, messages.EC_PUBLIC_KEY_LENGTH_INVALID)\n\n      assert.isBuffer(tweak, messages.TWEAK_TYPE_INVALID)\n      assert.isBufferLength(tweak, 32, messages.TWEAK_LENGTH_INVALID)\n\n      compressed = initCompressedValue(compressed, true)\n\n      return secp256k1.publicKeyTweakMul(publicKey, tweak, compressed)\n    },\n\n    publicKeyCombine: function (publicKeys, compressed) {\n      assert.isArray(publicKeys, messages.EC_PUBLIC_KEYS_TYPE_INVALID)\n      assert.isLengthGTZero(publicKeys, messages.EC_PUBLIC_KEYS_LENGTH_INVALID)\n      for (var i = 0; i < publicKeys.length; ++i) {\n        assert.isBuffer(publicKeys[i], messages.EC_PUBLIC_KEY_TYPE_INVALID)\n        assert.isBufferLength2(publicKeys[i], 33, 65, messages.EC_PUBLIC_KEY_LENGTH_INVALID)\n      }\n\n      compressed = initCompressedValue(compressed, true)\n\n      return secp256k1.publicKeyCombine(publicKeys, compressed)\n    },\n\n    signatureNormalize: function (signature) {\n      assert.isBuffer(signature, messages.ECDSA_SIGNATURE_TYPE_INVALID)\n      assert.isBufferLength(signature, 64, messages.ECDSA_SIGNATURE_LENGTH_INVALID)\n\n      return secp256k1.signatureNormalize(signature)\n    },\n\n    signatureExport: function (signature) {\n      assert.isBuffer(signature, messages.ECDSA_SIGNATURE_TYPE_INVALID)\n      assert.isBufferLength(signature, 64, messages.ECDSA_SIGNATURE_LENGTH_INVALID)\n\n      var sigObj = secp256k1.signatureExport(signature)\n      return der.signatureExport(sigObj)\n    },\n\n    signatureImport: function (sig) {\n      assert.isBuffer(sig, messages.ECDSA_SIGNATURE_TYPE_INVALID)\n      assert.isLengthGTZero(sig, messages.ECDSA_SIGNATURE_LENGTH_INVALID)\n\n      var sigObj = der.signatureImport(sig)\n      if (sigObj) return secp256k1.signatureImport(sigObj)\n\n      throw new Error(messages.ECDSA_SIGNATURE_PARSE_DER_FAIL)\n    },\n\n    signatureImportLax: function (sig) {\n      assert.isBuffer(sig, messages.ECDSA_SIGNATURE_TYPE_INVALID)\n      assert.isLengthGTZero(sig, messages.ECDSA_SIGNATURE_LENGTH_INVALID)\n\n      var sigObj = der.signatureImportLax(sig)\n      if (sigObj) return secp256k1.signatureImport(sigObj)\n\n      throw new Error(messages.ECDSA_SIGNATURE_PARSE_DER_FAIL)\n    },\n\n    sign: function (message, privateKey, options) {\n      assert.isBuffer(message, messages.MSG32_TYPE_INVALID)\n      assert.isBufferLength(message, 32, messages.MSG32_LENGTH_INVALID)\n\n      assert.isBuffer(privateKey, messages.EC_PRIVATE_KEY_TYPE_INVALID)\n      assert.isBufferLength(privateKey, 32, messages.EC_PRIVATE_KEY_LENGTH_INVALID)\n\n      var data = null\n      var noncefn = null\n      if (options !== undefined) {\n        assert.isObject(options, messages.OPTIONS_TYPE_INVALID)\n\n        if (options.data !== undefined) {\n          assert.isBuffer(options.data, messages.OPTIONS_DATA_TYPE_INVALID)\n          assert.isBufferLength(options.data, 32, messages.OPTIONS_DATA_LENGTH_INVALID)\n          data = options.data\n        }\n\n        if (options.noncefn !== undefined) {\n          assert.isFunction(options.noncefn, messages.OPTIONS_NONCEFN_TYPE_INVALID)\n          noncefn = options.noncefn\n        }\n      }\n\n      return secp256k1.sign(message, privateKey, noncefn, data)\n    },\n\n    verify: function (message, signature, publicKey) {\n      assert.isBuffer(message, messages.MSG32_TYPE_INVALID)\n      assert.isBufferLength(message, 32, messages.MSG32_LENGTH_INVALID)\n\n      assert.isBuffer(signature, messages.ECDSA_SIGNATURE_TYPE_INVALID)\n      assert.isBufferLength(signature, 64, messages.ECDSA_SIGNATURE_LENGTH_INVALID)\n\n      assert.isBuffer(publicKey, messages.EC_PUBLIC_KEY_TYPE_INVALID)\n      assert.isBufferLength2(publicKey, 33, 65, messages.EC_PUBLIC_KEY_LENGTH_INVALID)\n\n      return secp256k1.verify(message, signature, publicKey)\n    },\n\n    recover: function (message, signature, recovery, compressed) {\n      assert.isBuffer(message, messages.MSG32_TYPE_INVALID)\n      assert.isBufferLength(message, 32, messages.MSG32_LENGTH_INVALID)\n\n      assert.isBuffer(signature, messages.ECDSA_SIGNATURE_TYPE_INVALID)\n      assert.isBufferLength(signature, 64, messages.ECDSA_SIGNATURE_LENGTH_INVALID)\n\n      assert.isNumber(recovery, messages.RECOVERY_ID_TYPE_INVALID)\n      assert.isNumberInInterval(recovery, -1, 4, messages.RECOVERY_ID_VALUE_INVALID)\n\n      compressed = initCompressedValue(compressed, true)\n\n      return secp256k1.recover(message, signature, recovery, compressed)\n    },\n\n    ecdh: function (publicKey, privateKey) {\n      assert.isBuffer(publicKey, messages.EC_PUBLIC_KEY_TYPE_INVALID)\n      assert.isBufferLength2(publicKey, 33, 65, messages.EC_PUBLIC_KEY_LENGTH_INVALID)\n\n      assert.isBuffer(privateKey, messages.EC_PRIVATE_KEY_TYPE_INVALID)\n      assert.isBufferLength(privateKey, 32, messages.EC_PRIVATE_KEY_LENGTH_INVALID)\n\n      return secp256k1.ecdh(publicKey, privateKey)\n    },\n\n    ecdhUnsafe: function (publicKey, privateKey, compressed) {\n      assert.isBuffer(publicKey, messages.EC_PUBLIC_KEY_TYPE_INVALID)\n      assert.isBufferLength2(publicKey, 33, 65, messages.EC_PUBLIC_KEY_LENGTH_INVALID)\n\n      assert.isBuffer(privateKey, messages.EC_PRIVATE_KEY_TYPE_INVALID)\n      assert.isBufferLength(privateKey, 32, messages.EC_PRIVATE_KEY_LENGTH_INVALID)\n\n      compressed = initCompressedValue(compressed, true)\n\n      return secp256k1.ecdhUnsafe(publicKey, privateKey, compressed)\n    }\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/secp256k1/lib/index.js\n **/","'use strict'\nvar toString = Object.prototype.toString\n\n// TypeError\nexports.isArray = function (value, message) {\n  if (!Array.isArray(value)) throw TypeError(message)\n}\n\nexports.isBoolean = function (value, message) {\n  if (toString.call(value) !== '[object Boolean]') throw TypeError(message)\n}\n\nexports.isBuffer = function (value, message) {\n  if (!Buffer.isBuffer(value)) throw TypeError(message)\n}\n\nexports.isFunction = function (value, message) {\n  if (toString.call(value) !== '[object Function]') throw TypeError(message)\n}\n\nexports.isNumber = function (value, message) {\n  if (toString.call(value) !== '[object Number]') throw TypeError(message)\n}\n\nexports.isObject = function (value, message) {\n  if (toString.call(value) !== '[object Object]') throw TypeError(message)\n}\n\n// RangeError\nexports.isBufferLength = function (buffer, length, message) {\n  if (buffer.length !== length) throw RangeError(message)\n}\n\nexports.isBufferLength2 = function (buffer, length1, length2, message) {\n  if (buffer.length !== length1 && buffer.length !== length2) throw RangeError(message)\n}\n\nexports.isLengthGTZero = function (value, message) {\n  if (value.length === 0) throw RangeError(message)\n}\n\nexports.isNumberInInterval = function (number, x, y, message) {\n  if (number <= x || number >= y) throw RangeError(message)\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/secp256k1/lib/assert.js\n **/","'use strict'\nvar bip66 = require('bip66')\n\nvar EC_PRIVKEY_EXPORT_DER_COMPRESSED = new Buffer([\n  // begin\n  0x30, 0x81, 0xd3, 0x02, 0x01, 0x01, 0x04, 0x20,\n  // private key\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  // middle\n  0xa0, 0x81, 0x85, 0x30, 0x81, 0x82, 0x02, 0x01, 0x01, 0x30, 0x2c, 0x06, 0x07, 0x2a, 0x86, 0x48,\n  0xcE, 0x3d, 0x01, 0x01, 0x02, 0x21, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\n  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\n  0xff, 0xff, 0xfE, 0xff, 0xff, 0xfc, 0x2f, 0x30, 0x06, 0x04, 0x01, 0x00, 0x04, 0x01, 0x07, 0x04,\n  0x21, 0x02, 0x79, 0xbE, 0x66, 0x7E, 0xf9, 0xdc, 0xbb, 0xac, 0x55, 0xa0, 0x62, 0x95, 0xcE, 0x87,\n  0x0b, 0x07, 0x02, 0x9b, 0xfc, 0xdb, 0x2d, 0xcE, 0x28, 0xd9, 0x59, 0xf2, 0x81, 0x5b, 0x16, 0xf8,\n  0x17, 0x98, 0x02, 0x21, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\n  0xff, 0xff, 0xff, 0xff, 0xfE, 0xba, 0xaE, 0xdc, 0xE6, 0xaf, 0x48, 0xa0, 0x3b, 0xbf, 0xd2, 0x5E,\n  0x8c, 0xd0, 0x36, 0x41, 0x41, 0x02, 0x01, 0x01, 0xa1, 0x24, 0x03, 0x22, 0x00,\n  // public key\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00\n])\n\nvar EC_PRIVKEY_EXPORT_DER_UNCOMPRESSED = new Buffer([\n  // begin\n  0x30, 0x82, 0x01, 0x13, 0x02, 0x01, 0x01, 0x04, 0x20,\n  // private key\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  // middle\n  0xa0, 0x81, 0xa5, 0x30, 0x81, 0xa2, 0x02, 0x01, 0x01, 0x30, 0x2c, 0x06, 0x07, 0x2a, 0x86, 0x48,\n  0xcE, 0x3d, 0x01, 0x01, 0x02, 0x21, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\n  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\n  0xff, 0xff, 0xfE, 0xff, 0xff, 0xfc, 0x2f, 0x30, 0x06, 0x04, 0x01, 0x00, 0x04, 0x01, 0x07, 0x04,\n  0x41, 0x04, 0x79, 0xbE, 0x66, 0x7E, 0xf9, 0xdc, 0xbb, 0xac, 0x55, 0xa0, 0x62, 0x95, 0xcE, 0x87,\n  0x0b, 0x07, 0x02, 0x9b, 0xfc, 0xdb, 0x2d, 0xcE, 0x28, 0xd9, 0x59, 0xf2, 0x81, 0x5b, 0x16, 0xf8,\n  0x17, 0x98, 0x48, 0x3a, 0xda, 0x77, 0x26, 0xa3, 0xc4, 0x65, 0x5d, 0xa4, 0xfb, 0xfc, 0x0E, 0x11,\n  0x08, 0xa8, 0xfd, 0x17, 0xb4, 0x48, 0xa6, 0x85, 0x54, 0x19, 0x9c, 0x47, 0xd0, 0x8f, 0xfb, 0x10,\n  0xd4, 0xb8, 0x02, 0x21, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\n  0xff, 0xff, 0xff, 0xff, 0xfE, 0xba, 0xaE, 0xdc, 0xE6, 0xaf, 0x48, 0xa0, 0x3b, 0xbf, 0xd2, 0x5E,\n  0x8c, 0xd0, 0x36, 0x41, 0x41, 0x02, 0x01, 0x01, 0xa1, 0x44, 0x03, 0x42, 0x00,\n  // public key\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00\n])\n\nvar ZERO_BUFFER_32 = new Buffer([\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00\n])\n\nexports.privateKeyExport = function (privateKey, publicKey, compressed) {\n  var result = new Buffer(compressed ? EC_PRIVKEY_EXPORT_DER_COMPRESSED : EC_PRIVKEY_EXPORT_DER_UNCOMPRESSED)\n  privateKey.copy(result, compressed ? 8 : 9)\n  publicKey.copy(result, compressed ? 181 : 214)\n  return result\n}\n\nexports.privateKeyImport = function (privateKey) {\n  var length = privateKey.length\n\n  // sequence header\n  var index = 0\n  if (length < index + 1 || privateKey[index] !== 0x30) return\n  index += 1\n\n  // sequence length constructor\n  if (length < index + 1 || !(privateKey[index] & 0x80)) return\n\n  var lenb = privateKey[index] & 0x7f\n  index += 1\n  if (lenb < 1 || lenb > 2) return\n  if (length < index + lenb) return\n\n  // sequence length\n  var len = privateKey[index + lenb - 1] | (lenb > 1 ? privateKey[index + lenb - 2] << 8 : 0)\n  index += lenb\n  if (length < index + len) return\n\n  // sequence element 0: version number (=1)\n  if (length < index + 3 ||\n      privateKey[index] !== 0x02 ||\n      privateKey[index + 1] !== 0x01 ||\n      privateKey[index + 2] !== 0x01) {\n    return\n  }\n  index += 3\n\n  // sequence element 1: octet string, up to 32 bytes\n  if (length < index + 2 ||\n      privateKey[index] !== 0x04 ||\n      privateKey[index + 1] > 0x20 ||\n      length < index + 2 + privateKey[index + 1]) {\n    return\n  }\n\n  return privateKey.slice(index + 2, index + 2 + privateKey[index + 1])\n}\n\nexports.signatureExport = function (sigObj) {\n  var r = Buffer.concat([new Buffer([0]), sigObj.r])\n  for (var lenR = 33, posR = 0; lenR > 1 && r[posR] === 0x00 && !(r[posR + 1] & 0x80); --lenR, ++posR);\n\n  var s = Buffer.concat([new Buffer([0]), sigObj.s])\n  for (var lenS = 33, posS = 0; lenS > 1 && s[posS] === 0x00 && !(s[posS + 1] & 0x80); --lenS, ++posS);\n\n  return bip66.encode(r.slice(posR), s.slice(posS))\n}\n\nexports.signatureImport = function (sig) {\n  var r = new Buffer(ZERO_BUFFER_32)\n  var s = new Buffer(ZERO_BUFFER_32)\n\n  try {\n    var sigObj = bip66.decode(sig)\n    if (sigObj.r.length === 33 && sigObj.r[0] === 0x00) sigObj.r = sigObj.r.slice(1)\n    if (sigObj.r.length > 32) throw new Error('R length is too long')\n    if (sigObj.s.length === 33 && sigObj.s[0] === 0x00) sigObj.s = sigObj.s.slice(1)\n    if (sigObj.s.length > 32) throw new Error('S length is too long')\n  } catch (err) {\n    return\n  }\n\n  sigObj.r.copy(r, 32 - sigObj.r.length)\n  sigObj.s.copy(s, 32 - sigObj.s.length)\n\n  return { r: r, s: s }\n}\n\nexports.signatureImportLax = function (sig) {\n  var r = new Buffer(ZERO_BUFFER_32)\n  var s = new Buffer(ZERO_BUFFER_32)\n\n  var length = sig.length\n  var index = 0\n\n  // sequence tag byte\n  if (sig[index++] !== 0x30) return\n\n  // sequence length byte\n  var lenbyte = sig[index++]\n  if (lenbyte & 0x80) {\n    index += lenbyte - 0x80\n    if (index > length) return\n  }\n\n  // sequence tag byte for r\n  if (sig[index++] !== 0x02) return\n\n  // length for r\n  var rlen = sig[index++]\n  if (rlen & 0x80) {\n    lenbyte = rlen - 0x80\n    if (index + lenbyte > length) return\n    for (; lenbyte > 0 && sig[index] === 0x00; index += 1, lenbyte -= 1);\n    for (rlen = 0; lenbyte > 0; index += 1, lenbyte -= 1) rlen = (rlen << 8) + sig[index]\n  }\n  if (rlen > length - index) return\n  var rindex = index\n  index += rlen\n\n  // sequence tag byte for s\n  if (sig[index++] !== 0x02) return\n\n  // length for s\n  var slen = sig[index++]\n  if (slen & 0x80) {\n    lenbyte = slen - 0x80\n    if (index + lenbyte > length) return\n    for (; lenbyte > 0 && sig[index] === 0x00; index += 1, lenbyte -= 1);\n    for (slen = 0; lenbyte > 0; index += 1, lenbyte -= 1) slen = (slen << 8) + sig[index]\n  }\n  if (slen > length - index) return\n  var sindex = index\n  index += slen\n\n  // ignore leading zeros in r\n  for (; rlen > 0 && sig[rindex] === 0x00; rlen -= 1, rindex += 1);\n  // copy r value\n  if (rlen > 32) return\n  var rvalue = sig.slice(rindex, rindex + rlen)\n  rvalue.copy(r, 32 - rvalue.length)\n\n  // ignore leading zeros in s\n  for (; slen > 0 && sig[sindex] === 0x00; slen -= 1, sindex += 1);\n  // copy s value\n  if (slen > 32) return\n  var svalue = sig.slice(sindex, sindex + slen)\n  svalue.copy(s, 32 - svalue.length)\n\n  return { r: r, s: s }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/secp256k1/lib/der.js\n **/","module.exports = {\n\t\"COMPRESSED_TYPE_INVALID\": \"compressed should be a boolean\",\n\t\"EC_PRIVATE_KEY_TYPE_INVALID\": \"private key should be a Buffer\",\n\t\"EC_PRIVATE_KEY_LENGTH_INVALID\": \"private key length is invalid\",\n\t\"EC_PRIVATE_KEY_TWEAK_ADD_FAIL\": \"tweak out of range or resulting private key is invalid\",\n\t\"EC_PRIVATE_KEY_TWEAK_MUL_FAIL\": \"tweak out of range\",\n\t\"EC_PRIVATE_KEY_EXPORT_DER_FAIL\": \"couldn't export to DER format\",\n\t\"EC_PRIVATE_KEY_IMPORT_DER_FAIL\": \"couldn't import from DER format\",\n\t\"EC_PUBLIC_KEYS_TYPE_INVALID\": \"public keys should be an Array\",\n\t\"EC_PUBLIC_KEYS_LENGTH_INVALID\": \"public keys Array should have at least 1 element\",\n\t\"EC_PUBLIC_KEY_TYPE_INVALID\": \"public key should be a Buffer\",\n\t\"EC_PUBLIC_KEY_LENGTH_INVALID\": \"public key length is invalid\",\n\t\"EC_PUBLIC_KEY_PARSE_FAIL\": \"the public key could not be parsed or is invalid\",\n\t\"EC_PUBLIC_KEY_CREATE_FAIL\": \"private was invalid, try again\",\n\t\"EC_PUBLIC_KEY_TWEAK_ADD_FAIL\": \"tweak out of range or resulting public key is invalid\",\n\t\"EC_PUBLIC_KEY_TWEAK_MUL_FAIL\": \"tweak out of range\",\n\t\"EC_PUBLIC_KEY_COMBINE_FAIL\": \"the sum of the public keys is not valid\",\n\t\"ECDH_FAIL\": \"scalar was invalid (zero or overflow)\",\n\t\"ECDSA_SIGNATURE_TYPE_INVALID\": \"signature should be a Buffer\",\n\t\"ECDSA_SIGNATURE_LENGTH_INVALID\": \"signature length is invalid\",\n\t\"ECDSA_SIGNATURE_PARSE_FAIL\": \"couldn't parse signature\",\n\t\"ECDSA_SIGNATURE_PARSE_DER_FAIL\": \"couldn't parse DER signature\",\n\t\"ECDSA_SIGNATURE_SERIALIZE_DER_FAIL\": \"couldn't serialize signature to DER format\",\n\t\"ECDSA_SIGN_FAIL\": \"nonce generation function failed or private key is invalid\",\n\t\"ECDSA_RECOVER_FAIL\": \"couldn't recover public key from signature\",\n\t\"MSG32_TYPE_INVALID\": \"message should be a Buffer\",\n\t\"MSG32_LENGTH_INVALID\": \"message length is invalid\",\n\t\"OPTIONS_TYPE_INVALID\": \"options should be an Object\",\n\t\"OPTIONS_DATA_TYPE_INVALID\": \"options.data should be a Buffer\",\n\t\"OPTIONS_DATA_LENGTH_INVALID\": \"options.data length is invalid\",\n\t\"OPTIONS_NONCEFN_TYPE_INVALID\": \"options.noncefn should be a Function\",\n\t\"RECOVERY_ID_TYPE_INVALID\": \"recovery should be a Number\",\n\t\"RECOVERY_ID_VALUE_INVALID\": \"recovery should have value between -1 and 4\",\n\t\"TWEAK_TYPE_INVALID\": \"tweak should be a Buffer\",\n\t\"TWEAK_LENGTH_INVALID\": \"tweak length is invalid\"\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/secp256k1/lib/messages.json\n ** module id = 1277\n ** module chunks = 5\n **/","'use strict'\nvar createHash = require('create-hash')\nvar BN = require('bn.js')\nvar EC = require('elliptic').ec\n\nvar messages = require('../messages.json')\n\nvar ec = new EC('secp256k1')\nvar ecparams = ec.curve\n\nfunction loadCompressedPublicKey (first, xBuffer) {\n  var x = new BN(xBuffer)\n\n  // overflow\n  if (x.cmp(ecparams.p) >= 0) return null\n  x = x.toRed(ecparams.red)\n\n  // compute corresponding Y\n  var y = x.redSqr().redIMul(x).redIAdd(ecparams.b).redSqrt()\n  if ((first === 0x03) !== y.isOdd()) y = y.redNeg()\n\n  return ec.keyPair({ pub: { x: x, y: y } })\n}\n\nfunction loadUncompressedPublicKey (first, xBuffer, yBuffer) {\n  var x = new BN(xBuffer)\n  var y = new BN(yBuffer)\n\n  // overflow\n  if (x.cmp(ecparams.p) >= 0 || y.cmp(ecparams.p) >= 0) return null\n\n  x = x.toRed(ecparams.red)\n  y = y.toRed(ecparams.red)\n\n  // is odd flag\n  if ((first === 0x06 || first === 0x07) && y.isOdd() !== (first === 0x07)) return null\n\n  // x*x*x + b = y*y\n  var x3 = x.redSqr().redIMul(x)\n  if (!y.redSqr().redISub(x3.redIAdd(ecparams.b)).isZero()) return null\n\n  return ec.keyPair({ pub: { x: x, y: y } })\n}\n\nfunction loadPublicKey (publicKey) {\n  var first = publicKey[0]\n  switch (first) {\n    case 0x02:\n    case 0x03:\n      if (publicKey.length !== 33) return null\n      return loadCompressedPublicKey(first, publicKey.slice(1, 33))\n    case 0x04:\n    case 0x06:\n    case 0x07:\n      if (publicKey.length !== 65) return null\n      return loadUncompressedPublicKey(first, publicKey.slice(1, 33), publicKey.slice(33, 65))\n    default:\n      return null\n  }\n}\n\nexports.privateKeyVerify = function (privateKey) {\n  var bn = new BN(privateKey)\n  return bn.cmp(ecparams.n) < 0 && !bn.isZero()\n}\n\nexports.privateKeyExport = function (privateKey, compressed) {\n  var d = new BN(privateKey)\n  if (d.cmp(ecparams.n) >= 0 || d.isZero()) throw new Error(messages.EC_PRIVATE_KEY_EXPORT_DER_FAIL)\n\n  return new Buffer(ec.keyFromPrivate(privateKey).getPublic(compressed, true))\n}\n\nexports.privateKeyTweakAdd = function (privateKey, tweak) {\n  var bn = new BN(tweak)\n  if (bn.cmp(ecparams.n) >= 0) throw new Error(messages.EC_PRIVATE_KEY_TWEAK_ADD_FAIL)\n\n  bn.iadd(new BN(privateKey))\n  if (bn.cmp(ecparams.n) >= 0) bn.isub(ecparams.n)\n  if (bn.isZero()) throw new Error(messages.EC_PRIVATE_KEY_TWEAK_ADD_FAIL)\n\n  return bn.toArrayLike(Buffer, 'be', 32)\n}\n\nexports.privateKeyTweakMul = function (privateKey, tweak) {\n  var bn = new BN(tweak)\n  if (bn.cmp(ecparams.n) >= 0 || bn.isZero()) throw new Error(messages.EC_PRIVATE_KEY_TWEAK_MUL_FAIL)\n\n  bn.imul(new BN(privateKey))\n  if (bn.cmp(ecparams.n)) bn = bn.umod(ecparams.n)\n\n  return bn.toArrayLike(Buffer, 'be', 32)\n}\n\nexports.publicKeyCreate = function (privateKey, compressed) {\n  var d = new BN(privateKey)\n  if (d.cmp(ecparams.n) >= 0 || d.isZero()) throw new Error(messages.EC_PUBLIC_KEY_CREATE_FAIL)\n\n  return new Buffer(ec.keyFromPrivate(privateKey).getPublic(compressed, true))\n}\n\nexports.publicKeyConvert = function (publicKey, compressed) {\n  var pair = loadPublicKey(publicKey)\n  if (pair === null) throw new Error(messages.EC_PUBLIC_KEY_PARSE_FAIL)\n\n  return new Buffer(pair.getPublic(compressed, true))\n}\n\nexports.publicKeyVerify = function (publicKey) {\n  return loadPublicKey(publicKey) !== null\n}\n\nexports.publicKeyTweakAdd = function (publicKey, tweak, compressed) {\n  var pair = loadPublicKey(publicKey)\n  if (pair === null) throw new Error(messages.EC_PUBLIC_KEY_PARSE_FAIL)\n\n  tweak = new BN(tweak)\n  if (tweak.cmp(ecparams.n) >= 0) throw new Error(messages.EC_PUBLIC_KEY_TWEAK_ADD_FAIL)\n\n  return new Buffer(ecparams.g.mul(tweak).add(pair.pub).encode(true, compressed))\n}\n\nexports.publicKeyTweakMul = function (publicKey, tweak, compressed) {\n  var pair = loadPublicKey(publicKey)\n  if (pair === null) throw new Error(messages.EC_PUBLIC_KEY_PARSE_FAIL)\n\n  tweak = new BN(tweak)\n  if (tweak.cmp(ecparams.n) >= 0 || tweak.isZero()) throw new Error(messages.EC_PUBLIC_KEY_TWEAK_MUL_FAIL)\n\n  return new Buffer(pair.pub.mul(tweak).encode(true, compressed))\n}\n\nexports.publicKeyCombine = function (publicKeys, compressed) {\n  var pairs = new Array(publicKeys.length)\n  for (var i = 0; i < publicKeys.length; ++i) {\n    pairs[i] = loadPublicKey(publicKeys[i])\n    if (pairs[i] === null) throw new Error(messages.EC_PUBLIC_KEY_PARSE_FAIL)\n  }\n\n  var point = pairs[0].pub\n  for (var j = 1; j < pairs.length; ++j) point = point.add(pairs[j].pub)\n  if (point.isInfinity()) throw new Error(messages.EC_PUBLIC_KEY_COMBINE_FAIL)\n\n  return new Buffer(point.encode(true, compressed))\n}\n\nexports.signatureNormalize = function (signature) {\n  var r = new BN(signature.slice(0, 32))\n  var s = new BN(signature.slice(32, 64))\n  if (r.cmp(ecparams.n) >= 0 || s.cmp(ecparams.n) >= 0) throw new Error(messages.ECDSA_SIGNATURE_PARSE_FAIL)\n\n  var result = new Buffer(signature)\n  if (s.cmp(ec.nh) === 1) ecparams.n.sub(s).toArrayLike(Buffer, 'be', 32).copy(result, 32)\n\n  return result\n}\n\nexports.signatureExport = function (signature) {\n  var r = signature.slice(0, 32)\n  var s = signature.slice(32, 64)\n  if (new BN(r).cmp(ecparams.n) >= 0 || new BN(s).cmp(ecparams.n) >= 0) throw new Error(messages.ECDSA_SIGNATURE_PARSE_FAIL)\n\n  return { r: r, s: s }\n}\n\nexports.signatureImport = function (sigObj) {\n  var r = new BN(sigObj.r)\n  if (r.cmp(ecparams.n) >= 0) r = new BN(0)\n\n  var s = new BN(sigObj.s)\n  if (s.cmp(ecparams.n) >= 0) s = new BN(0)\n\n  return Buffer.concat([\n    r.toArrayLike(Buffer, 'be', 32),\n    s.toArrayLike(Buffer, 'be', 32)\n  ])\n}\n\nexports.sign = function (message, privateKey, noncefn, data) {\n  if (typeof noncefn === 'function') {\n    var getNonce = noncefn\n    noncefn = function (counter) {\n      var nonce = getNonce(message, privateKey, null, data, counter)\n      if (!Buffer.isBuffer(nonce) || nonce.length !== 32) throw new Error(messages.ECDSA_SIGN_FAIL)\n\n      return new BN(nonce)\n    }\n  }\n\n  var d = new BN(privateKey)\n  if (d.cmp(ecparams.n) >= 0 || d.isZero()) throw new Error(messages.ECDSA_SIGN_FAIL)\n\n  var result = ec.sign(message, privateKey, { canonical: true, k: noncefn, pers: data })\n  return {\n    signature: Buffer.concat([\n      result.r.toArrayLike(Buffer, 'be', 32),\n      result.s.toArrayLike(Buffer, 'be', 32)\n    ]),\n    recovery: result.recoveryParam\n  }\n}\n\nexports.verify = function (message, signature, publicKey) {\n  var sigObj = {r: signature.slice(0, 32), s: signature.slice(32, 64)}\n\n  var sigr = new BN(sigObj.r)\n  var sigs = new BN(sigObj.s)\n  if (sigr.cmp(ecparams.n) >= 0 || sigs.cmp(ecparams.n) >= 0) throw new Error(messages.ECDSA_SIGNATURE_PARSE_FAIL)\n  if (sigs.cmp(ec.nh) === 1 || sigr.isZero() || sigs.isZero()) return false\n\n  var pair = loadPublicKey(publicKey)\n  if (pair === null) throw new Error(messages.EC_PUBLIC_KEY_PARSE_FAIL)\n\n  return ec.verify(message, sigObj, {x: pair.pub.x, y: pair.pub.y})\n}\n\nexports.recover = function (message, signature, recovery, compressed) {\n  var sigObj = {r: signature.slice(0, 32), s: signature.slice(32, 64)}\n\n  var sigr = new BN(sigObj.r)\n  var sigs = new BN(sigObj.s)\n  if (sigr.cmp(ecparams.n) >= 0 || sigs.cmp(ecparams.n) >= 0) throw new Error(messages.ECDSA_SIGNATURE_PARSE_FAIL)\n\n  try {\n    if (sigr.isZero() || sigs.isZero()) throw new Error()\n\n    var point = ec.recoverPubKey(message, sigObj, recovery)\n    return new Buffer(point.encode(true, compressed))\n  } catch (err) {\n    throw new Error(messages.ECDSA_RECOVER_FAIL)\n  }\n}\n\nexports.ecdh = function (publicKey, privateKey) {\n  var shared = exports.ecdhUnsafe(publicKey, privateKey, true)\n  return createHash('sha256').update(shared).digest()\n}\n\nexports.ecdhUnsafe = function (publicKey, privateKey, compressed) {\n  var pair = loadPublicKey(publicKey)\n  if (pair === null) throw new Error(messages.EC_PUBLIC_KEY_PARSE_FAIL)\n\n  var scalar = new BN(privateKey)\n  if (scalar.cmp(ecparams.n) >= 0 || scalar.isZero()) throw new Error(messages.ECDH_FAIL)\n\n  return new Buffer(pair.pub.mul(scalar).encode(true, compressed))\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/secp256k1/lib/elliptic/index.js\n **/","\nmodule.exports = typeof window !== 'undefined' && window.crypto && window.crypto.subtle\n  ? require('./browser')\n  : require('./default')\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/nkey-ecdsa/index.js\n **/","\nconst subtle = window.crypto.subtle\nconst omit = require('object.omit')\nconst extend = require('xtend/mutable')\nconst debug = require('debug')('nkey-ecdsa:browser')\nconst nkey = require('nkey')\nconst Promise = require('any-promise')\nconst co = require('co')\nconst type = 'ec'\nconst {\n  toJWK,\n  fromJWK,\n  toJWKCurve,\n  toArrayBuffer,\n  toDER,\n  fromDER\n} = require('./utils')\n\nconst ZERO_BUF = new Buffer(16)\nZERO_BUF.fill(0)\nconst EXTRACTABLE = true\nconst checked = new Map()\nconst KEY_PROPS = [\n  'type',\n  'pubKeyString',\n  'fingerprint',\n  'toJSON',\n  'isPrivateKey'\n]\n\nconst gen = co.wrap(function* (opts, cb) {\n  const ecOpts = getCurveSpec(opts.curve || exports.DEFAULT_CURVE)\n  const supported = yield checkNative('ECDSA', ecOpts.hash.name, ecOpts.namedCurve)\n  if (!supported) {\n    return require('./default').gen(opts, cb)\n  }\n\n  let key\n  try {\n    const raw = yield subtle.generateKey(ecOpts, EXTRACTABLE, ['sign', 'verify'])\n    const privJWK = yield subtle.exportKey('jwk', raw.privateKey)\n    const imported = fromJWK(privJWK)\n    const fingerprint = yield subtle.digest({ name: 'SHA-256' }, imported.pub)\n    key = fromCryptoKey({\n      key: raw,\n      json: {\n        type,\n        curve: imported.curve,\n        priv: imported.priv.toString('hex'),\n        pub: imported.pub.toString('hex'),\n        fingerprint: new Buffer(fingerprint).toString('hex')\n      }\n    })\n  } catch (err) {\n    debug('failed to generate key', err)\n    return cb(err)\n  }\n\n  cb(null, key)\n})\n\nfunction getCurveSpec (curve) {\n  return {\n    name: 'ECDSA',\n    namedCurve: toJWKCurve(curve),\n    hash: {\n      name: normalizeAlgorithm(exports.DEFAULT_ALGORITHM)\n    }\n  }\n}\n\nfunction fromCryptoKey ({ key, json }) {\n  const { curve } = json\n  const ecOpts = getCurveSpec(curve)\n  const api = getPropsForJSON(json)\n  api.sign = co.wrap(function* (data, algorithm, cb) {\n    if (typeof algorithm === 'function') {\n      cb = algorithm\n    } else if (normalizeAlgorithm(algorithm) !== exports.DEFAULT_ALGORITHM) {\n      return cb(new Error('algorithm must be specified during key generation'))\n    }\n\n    let sig\n    try {\n      sig = yield subtle.sign(ecOpts, key.privateKey, toArrayBuffer(data))\n    } catch (err) {\n      return cb(err)\n    }\n\n    const der = toDER(new Buffer(sig)).toString('hex')\n    cb(null, der)\n  })\n\n  api.verify = co.wrap(function* (data, algorithm, sig, cb) {\n    if (typeof sig === 'function') {\n      cb = sig\n      sig = algorithm\n    } else if (normalizeAlgorithm(algorithm) !== exports.DEFAULT_ALGORITHM) {\n      return cb(new Error('algorithm must be specified during key generation'))\n    }\n\n    const concatSig = fromDER(new Buffer(sig, 'hex'))\n\n    let verified\n    try {\n      verified = yield subtle.verify(ecOpts, key.publicKey, toArrayBuffer(concatSig), toArrayBuffer(data))\n    } catch (err) {\n      return cb(err)\n    }\n\n    cb(null, verified)\n  })\n\n  return nkey.wrapInstance(api)\n}\n\nconst HASH_ALGOS = {\n  'sha1': 'SHA-1',\n  'sha256': 'SHA-256',\n  'sha384': 'SHA-384',\n  'sha512': 'SHA-512'\n}\n\nfunction normalizeAlgorithm (algo) {\n  algo = algo.toLowerCase()\n  if (!HASH_ALGOS[algo]) {\n    throw new Error(`expected one of: ${Object.keys(HASH_ALGOS).join(', ')}`)\n  }\n\n  return HASH_ALGOS[algo]\n}\n\nfunction getPropsForJSON (json) {\n  const pubKeyString = json.pub.toString('hex')\n  return {\n    type,\n    pubKeyString,\n    fingerprint: json.fingerprint,\n    isPrivateKey: !!json.priv,\n    toJSON: function toJSON (exportPrivateKey) {\n      if (exportPrivateKey) {\n        if (!json.priv) {\n          throw new Error('this is a public key')\n        }\n\n        return json\n      }\n\n      const exported = omit(json, 'priv')\n      if (!exported.pub) exported.pub = pubKeyString\n      if (!exported.type) exported.type = type\n\n      return exported\n    }\n  }\n}\n\nfunction fromJSON (json) {\n  const ecOpts = getCurveSpec(json.curve)\n  const check = checkNative('ECDSA', ecOpts.hash.name, ecOpts.namedCurve)\n\n  let supported\n  const api = co.wrap(function* () {\n    supported = yield check\n    if (supported) {\n      const ops = json.priv ? ['sign'] : ['verify']\n      const jwk = toJWK(json)\n      return subtle.importKey('jwk', jwk, ecOpts, EXTRACTABLE, ops)\n    } else {\n      return require('./default').fromJSON(json)\n    }\n  })()\n\n  const syncProps = getPropsForJSON(json)\n  extend(api, syncProps)\n\n  let loadedKey\n  co.wrap(function* () {\n    const someKey = yield api\n    if (!supported) {\n      return loadedKey = someKey\n    }\n\n    loadedKey = fromCryptoKey({\n      json,\n      key: {\n        privateKey: json.priv && someKey,\n        publicKey: someKey\n      }\n    })\n  })()\n\n  KEY_PROPS.forEach(prop => {\n    Object.defineProperty(api, prop, {\n      get: function () {\n        return loadedKey && loadedKey[prop] || syncProps[prop]\n      }\n    })\n  })\n\n  ;['sign', 'verify'].forEach(method => {\n    api[method] = co.wrap(function* () {\n      // wait for reimport\n      yield api\n      return loadedKey[method].apply(loadedKey, arguments)\n    })\n  })\n\n  return nkey.wrapInstance(api)\n}\n\nfunction pad (buf, length) {\n  const padded = new Buffer(length)\n  for (let i = 0, l = length - buf.length; i < l; i++) {\n    padded[i] = 0\n  }\n\n  return padded\n}\n\n// https://github.com/calvinmetcalf/native-crypto/blob/master/lib/signature.js\nconst checkNative = co.wrap(function* (type, algo, curve) {\n  if (global.process && !global.process.browser) {\n    return false\n  }\n\n  if (!subtle || !subtle.importKey || !subtle.sign || !subtle.verify) {\n    return false\n  }\n\n  const id = `${algo}-${type}-${curve}`\n  if (checked.has(id)) {\n    return checked.get(id)\n  }\n\n  const opts = {\n    name: type\n  }\n\n  if (curve) {\n    opts.namedCurve = curve\n  } else {\n    opts.modulusLength = 1024\n    opts.publicExponent = new Buffer([0x01, 0x00, 0x01])\n    opts.hash = {\n      name: algo\n    }\n  }\n\n  const signOpts = {\n    name: type\n  }\n\n  if (curve) {\n    signOpts.hash = {\n      name: algo\n    }\n  }\n\n  const prom = testSign({ opts, signOpts })\n  checked.set(algo, prom)\n  const works = yield prom\n  if (works) {\n    debug(`has working sublte crypto for type: ${type} with digest ${algo} ${curve ? `with curve: ${curve}` : ''}`)\n  }\n\n  return works\n})\n\nconst testSign = co.wrap(function* ({ opts, signOpts }) {\n  try {\n    const key = yield subtle.generateKey(opts, false, ['sign'])\n    yield subtle.sign(signOpts, key.privateKey, ZERO_BUF)\n    return true\n  } catch (err) {\n    debug(err.message)\n    return false\n  }\n})\n\nmodule.exports = exports = nkey.wrapAPI({ gen, fromJSON })\nexports.DEFAULT_ALGORITHM = 'sha256'\nexports.DEFAULT_CURVE = 'p256'\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/nkey-ecdsa/browser.js\n **/","'use strict'\n\nconst clone = require('xtend')\nconst BASE_PROPS = ['pub', 'priv', 'type']\n\nexports.wrap = wrap\nexports.wrapAPI = wrapAPI\nexports.wrapInstance = wrapInstance\nexports.asyncify = asyncify\n\nfunction wrap (obj) {\n  return obj.gen || obj.genSync ? wrapAPI(obj) : wrapInstance(obj)\n}\n\nfunction wrapInstance (instance) {\n  const wrapper = {}\n  Object.keys(instance).forEach(k => {\n    if (k === 'signSync' || k === 'verifySync') {\n      setReadonly(wrapper, k, instance[k].bind(instance))\n      addAsync(wrapper, k === 'signSync' ? 'sign' : 'verify')\n    } else if (k === 'toJSON') {\n      setReadonly(wrapper, 'toJSON', function () {\n        return clone(customProps, instance.toJSON.apply(instance, arguments))\n      })\n    } else {\n      setReadonly(wrapper, k, typeof instance[k] === 'function' ? instance[k].bind(instance) : instance[k])\n    }\n  })\n\n  const customProps = {}\n  setReadonly(wrapper, 'set', function (k, v) {\n    customProps[k] = v\n    return this\n  })\n\n  setReadonly(wrapper, 'get', function (k) {\n    return customProps[k]\n  })\n\n  return wrapper\n}\n\nfunction wrapAPI (api) {\n  const wrapper = {}\n  Object.keys(api).forEach(k => {\n    if (k === 'genSync') {\n      setReadonly(wrapper, 'genSync', function () {\n        const result = api[k].apply(api, arguments)\n        if (!('isPrivateKey' in result)) {\n          result.isPrivateKey = true\n        }\n\n        return result\n      })\n\n      addAsync(wrapper, 'gen')\n    } else if (k === 'gen') {\n      setReadonly(wrapper, 'gen', function (opts, cb) {\n        api[k](opts, function (err, result) {\n          if (err) return cb(err)\n\n          if (!('isPrivateKey' in result)) {\n            result.isPrivateKey = true\n          }\n\n          cb(null, result)\n        })\n      })\n    } else if (k === 'fromJSON') {\n      setReadonly(wrapper, 'fromJSON', function (json) {\n        const result = api.fromJSON.apply(api, arguments)\n        if (result.set) {\n          Object.keys(json).forEach(k => {\n            if (!result[k] && BASE_PROPS.indexOf(k) === -1) {\n              result.set(k, json[k])\n            }\n          })\n        }\n\n        if (!('isPrivateKey' in result)) {\n          result.isPrivateKey = !!json.priv\n        }\n\n        return result\n      })\n    } else {\n      setReadonly(wrapper, k, typeof api[k] === 'function' ? api[k].bind(api) : api[k])\n    }\n  })\n\n  return wrapper\n}\n\nfunction asyncify (fn) {\n  return function asyncified () {\n    const args = [].slice.call(arguments)\n    const cb = args.pop()\n    let result\n    try {\n      result = fn.apply(null, args)\n    } catch (err) {\n      return process.nextTick(() => cb(err))\n    }\n\n    process.nextTick(() => cb(null, result))\n  }\n}\n\nfunction addAsync (obj /* methods */) {\n  [].slice.call(arguments, 1).forEach(method => {\n    if (!obj[method] && obj[method + 'Sync']) {\n      setReadonly(obj, method, asyncify(obj[method + 'Sync']))\n    }\n  })\n}\n\nfunction setReadonly (obj, k, v) {\n  Object.defineProperty(obj, k, {\n    enumerable: true,\n    writable: false,\n    value: v\n  })\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/nkey/index.js\n **/","const asn1 = require('asn1.js')\nconst BN = require('bn.js')\n\nmodule.exports = {\n  toJWK,\n  toJWKCurve,\n  fromJWK,\n  toBuffer,\n  toArrayBuffer,\n  fromDER: asn1SigToConcatSig,\n  toDER: concatSigToAsn1Sig,\n  assert\n}\n\nfunction fromJWK (jwk) {\n  const x = new Buffer(jwk.x, 'base64')\n  const y = new Buffer(jwk.y, 'base64')\n  const pub = new Buffer(65)\n  pub[0] = 4\n  x.copy(pub, 1)\n  y.copy(pub, 33)\n  const curve = jwk.crv.replace('-', '').toLowerCase()\n  const priv = jwk.d && new Buffer(jwk.d, 'base64')\n\n  return {\n    pub,\n    priv,\n    curve\n  }\n}\n\nfunction toJWK (key) {\n  const priv = key.priv && toBuffer(key.priv)\n  if (priv) {\n    assert(priv.length === 32, 'Expected 32 byte private key')\n  }\n\n  const pub = toBuffer(key.pub)\n  assert(pub.length === 65, 'Expected non-compressed public key')\n  assert(pub[0] === 4, `Unexpected key encoding, expected hex: '04' + hex(x) + hex(y)`)\n\n  const jwk = {\n    kty: 'EC',\n    crv: toJWKCurve(key.curve),\n    x: toUnpaddedBase64(pub.slice(1, 33)),\n    y: toUnpaddedBase64(pub.slice(33)),\n    ext: true\n  }\n\n  if (priv) {\n    jwk.d = toUnpaddedBase64(priv)\n  }\n\n  return jwk\n}\n\nfunction toBuffer (val) {\n  if (Buffer.isBuffer(val)) return val\n  if (typeof val === 'string') return new Buffer(val, 'hex')\n\n  throw new Error('expected string or Buffer')\n}\n\nfunction assert (statement, message) {\n  if (!statement) throw new Error(message || 'assertion failed')\n}\n\nfunction toUnpaddedBase64 (buf) {\n  const padded = buf.toString('base64')\n  return padded.replace(/[=]+$/, '').replace(/[+]/g, '-').replace(/[/]/g, '_')\n}\n\nfunction toJWKCurve (curve) {\n  return 'P-' + curve.slice(1)\n}\n\nfunction toArrayBuffer (val) {\n  if (val instanceof ArrayBuffer) return val\n\n  if (typeof val === 'string') {\n    return new Buffer(val).buffer\n  }\n\n  if (Buffer.isBuffer(val)) {\n    return val.buffer\n  }\n\n  throw new Error('expected string, Buffer or ArrayBuffer')\n}\n\n// http://stackoverflow.com/questions/39499040/generating-ecdsa-signature-with-node-js-crypto\nconst EcdsaDerSig = asn1.define('ECPrivateKey', function() {\n  return this.seq().obj(\n    this.key('r').int(),\n    this.key('s').int()\n  )\n})\n\nfunction asn1SigToConcatSig (asn1SigBuffer) {\n  const rsSig = EcdsaDerSig.decode(asn1SigBuffer, 'der')\n  return Buffer.concat([\n    rsSig.r.toArrayLike(Buffer, 'be', 32),\n    rsSig.s.toArrayLike(Buffer, 'be', 32)\n  ])\n}\n\nfunction concatSigToAsn1Sig (concatSigBuffer) {\n  const r = new BN(concatSigBuffer.slice(0, 32).toString('hex'), 16, 'be')\n  const s = new BN(concatSigBuffer.slice(32).toString('hex'), 16, 'be')\n  return EcdsaDerSig.encode({r, s}, 'der')\n}\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/nkey-ecdsa/utils.js\n **/","var asn1 = require('../asn1');\nvar inherits = require('inherits');\n\nvar api = exports;\n\napi.define = function define(name, body) {\n  return new Entity(name, body);\n};\n\nfunction Entity(name, body) {\n  this.name = name;\n  this.body = body;\n\n  this.decoders = {};\n  this.encoders = {};\n};\n\nEntity.prototype._createNamed = function createNamed(base) {\n  var named;\n  try {\n    named = require('vm').runInThisContext(\n      '(function ' + this.name + '(entity) {\\n' +\n      '  this._initNamed(entity);\\n' +\n      '})'\n    );\n  } catch (e) {\n    named = function (entity) {\n      this._initNamed(entity);\n    };\n  }\n  inherits(named, base);\n  named.prototype._initNamed = function initnamed(entity) {\n    base.call(this, entity);\n  };\n\n  return new named(this);\n};\n\nEntity.prototype._getDecoder = function _getDecoder(enc) {\n  enc = enc || 'der';\n  // Lazily create decoder\n  if (!this.decoders.hasOwnProperty(enc))\n    this.decoders[enc] = this._createNamed(asn1.decoders[enc]);\n  return this.decoders[enc];\n};\n\nEntity.prototype.decode = function decode(data, enc, options) {\n  return this._getDecoder(enc).decode(data, options);\n};\n\nEntity.prototype._getEncoder = function _getEncoder(enc) {\n  enc = enc || 'der';\n  // Lazily create encoder\n  if (!this.encoders.hasOwnProperty(enc))\n    this.encoders[enc] = this._createNamed(asn1.encoders[enc]);\n  return this.encoders[enc];\n};\n\nEntity.prototype.encode = function encode(data, enc, /* internal */ reporter) {\n  return this._getEncoder(enc).encode(data, reporter);\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/nkey-ecdsa/~/asn1.js/lib/asn1/api.js\n **/","var inherits = require('inherits');\n\nfunction Reporter(options) {\n  this._reporterState = {\n    obj: null,\n    path: [],\n    options: options || {},\n    errors: []\n  };\n}\nexports.Reporter = Reporter;\n\nReporter.prototype.isError = function isError(obj) {\n  return obj instanceof ReporterError;\n};\n\nReporter.prototype.save = function save() {\n  var state = this._reporterState;\n\n  return { obj: state.obj, pathLen: state.path.length };\n};\n\nReporter.prototype.restore = function restore(data) {\n  var state = this._reporterState;\n\n  state.obj = data.obj;\n  state.path = state.path.slice(0, data.pathLen);\n};\n\nReporter.prototype.enterKey = function enterKey(key) {\n  return this._reporterState.path.push(key);\n};\n\nReporter.prototype.exitKey = function exitKey(index) {\n  var state = this._reporterState;\n\n  state.path = state.path.slice(0, index - 1);\n};\n\nReporter.prototype.leaveKey = function leaveKey(index, key, value) {\n  var state = this._reporterState;\n\n  this.exitKey(index);\n  if (state.obj !== null)\n    state.obj[key] = value;\n};\n\nReporter.prototype.path = function path() {\n  return this._reporterState.path.join('/');\n};\n\nReporter.prototype.enterObject = function enterObject() {\n  var state = this._reporterState;\n\n  var prev = state.obj;\n  state.obj = {};\n  return prev;\n};\n\nReporter.prototype.leaveObject = function leaveObject(prev) {\n  var state = this._reporterState;\n\n  var now = state.obj;\n  state.obj = prev;\n  return now;\n};\n\nReporter.prototype.error = function error(msg) {\n  var err;\n  var state = this._reporterState;\n\n  var inherited = msg instanceof ReporterError;\n  if (inherited) {\n    err = msg;\n  } else {\n    err = new ReporterError(state.path.map(function(elem) {\n      return '[' + JSON.stringify(elem) + ']';\n    }).join(''), msg.message || msg, msg.stack);\n  }\n\n  if (!state.options.partial)\n    throw err;\n\n  if (!inherited)\n    state.errors.push(err);\n\n  return err;\n};\n\nReporter.prototype.wrapResult = function wrapResult(result) {\n  var state = this._reporterState;\n  if (!state.options.partial)\n    return result;\n\n  return {\n    result: this.isError(result) ? null : result,\n    errors: state.errors\n  };\n};\n\nfunction ReporterError(path, msg) {\n  this.path = path;\n  this.rethrow(msg);\n};\ninherits(ReporterError, Error);\n\nReporterError.prototype.rethrow = function rethrow(msg) {\n  this.message = msg + ' at: ' + (this.path || '(shallow)');\n  if (Error.captureStackTrace)\n    Error.captureStackTrace(this, ReporterError);\n\n  if (!this.stack) {\n    try {\n      // IE only adds stack when thrown\n      throw new Error(this.message);\n    } catch (e) {\n      this.stack = e.stack;\n    }\n  }\n  return this;\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/nkey-ecdsa/~/asn1.js/lib/asn1/base/reporter.js\n **/","var Reporter = require('../base').Reporter;\nvar EncoderBuffer = require('../base').EncoderBuffer;\nvar DecoderBuffer = require('../base').DecoderBuffer;\nvar assert = require('minimalistic-assert');\n\n// Supported tags\nvar tags = [\n  'seq', 'seqof', 'set', 'setof', 'objid', 'bool',\n  'gentime', 'utctime', 'null_', 'enum', 'int', 'objDesc',\n  'bitstr', 'bmpstr', 'charstr', 'genstr', 'graphstr', 'ia5str', 'iso646str',\n  'numstr', 'octstr', 'printstr', 't61str', 'unistr', 'utf8str', 'videostr'\n];\n\n// Public methods list\nvar methods = [\n  'key', 'obj', 'use', 'optional', 'explicit', 'implicit', 'def', 'choice',\n  'any', 'contains'\n].concat(tags);\n\n// Overrided methods list\nvar overrided = [\n  '_peekTag', '_decodeTag', '_use',\n  '_decodeStr', '_decodeObjid', '_decodeTime',\n  '_decodeNull', '_decodeInt', '_decodeBool', '_decodeList',\n\n  '_encodeComposite', '_encodeStr', '_encodeObjid', '_encodeTime',\n  '_encodeNull', '_encodeInt', '_encodeBool'\n];\n\nfunction Node(enc, parent) {\n  var state = {};\n  this._baseState = state;\n\n  state.enc = enc;\n\n  state.parent = parent || null;\n  state.children = null;\n\n  // State\n  state.tag = null;\n  state.args = null;\n  state.reverseArgs = null;\n  state.choice = null;\n  state.optional = false;\n  state.any = false;\n  state.obj = false;\n  state.use = null;\n  state.useDecoder = null;\n  state.key = null;\n  state['default'] = null;\n  state.explicit = null;\n  state.implicit = null;\n  state.contains = null;\n\n  // Should create new instance on each method\n  if (!state.parent) {\n    state.children = [];\n    this._wrap();\n  }\n}\nmodule.exports = Node;\n\nvar stateProps = [\n  'enc', 'parent', 'children', 'tag', 'args', 'reverseArgs', 'choice',\n  'optional', 'any', 'obj', 'use', 'alteredUse', 'key', 'default', 'explicit',\n  'implicit', 'contains'\n];\n\nNode.prototype.clone = function clone() {\n  var state = this._baseState;\n  var cstate = {};\n  stateProps.forEach(function(prop) {\n    cstate[prop] = state[prop];\n  });\n  var res = new this.constructor(cstate.parent);\n  res._baseState = cstate;\n  return res;\n};\n\nNode.prototype._wrap = function wrap() {\n  var state = this._baseState;\n  methods.forEach(function(method) {\n    this[method] = function _wrappedMethod() {\n      var clone = new this.constructor(this);\n      state.children.push(clone);\n      return clone[method].apply(clone, arguments);\n    };\n  }, this);\n};\n\nNode.prototype._init = function init(body) {\n  var state = this._baseState;\n\n  assert(state.parent === null);\n  body.call(this);\n\n  // Filter children\n  state.children = state.children.filter(function(child) {\n    return child._baseState.parent === this;\n  }, this);\n  assert.equal(state.children.length, 1, 'Root node can have only one child');\n};\n\nNode.prototype._useArgs = function useArgs(args) {\n  var state = this._baseState;\n\n  // Filter children and args\n  var children = args.filter(function(arg) {\n    return arg instanceof this.constructor;\n  }, this);\n  args = args.filter(function(arg) {\n    return !(arg instanceof this.constructor);\n  }, this);\n\n  if (children.length !== 0) {\n    assert(state.children === null);\n    state.children = children;\n\n    // Replace parent to maintain backward link\n    children.forEach(function(child) {\n      child._baseState.parent = this;\n    }, this);\n  }\n  if (args.length !== 0) {\n    assert(state.args === null);\n    state.args = args;\n    state.reverseArgs = args.map(function(arg) {\n      if (typeof arg !== 'object' || arg.constructor !== Object)\n        return arg;\n\n      var res = {};\n      Object.keys(arg).forEach(function(key) {\n        if (key == (key | 0))\n          key |= 0;\n        var value = arg[key];\n        res[value] = key;\n      });\n      return res;\n    });\n  }\n};\n\n//\n// Overrided methods\n//\n\noverrided.forEach(function(method) {\n  Node.prototype[method] = function _overrided() {\n    var state = this._baseState;\n    throw new Error(method + ' not implemented for encoding: ' + state.enc);\n  };\n});\n\n//\n// Public methods\n//\n\ntags.forEach(function(tag) {\n  Node.prototype[tag] = function _tagMethod() {\n    var state = this._baseState;\n    var args = Array.prototype.slice.call(arguments);\n\n    assert(state.tag === null);\n    state.tag = tag;\n\n    this._useArgs(args);\n\n    return this;\n  };\n});\n\nNode.prototype.use = function use(item) {\n  assert(item);\n  var state = this._baseState;\n\n  assert(state.use === null);\n  state.use = item;\n\n  return this;\n};\n\nNode.prototype.optional = function optional() {\n  var state = this._baseState;\n\n  state.optional = true;\n\n  return this;\n};\n\nNode.prototype.def = function def(val) {\n  var state = this._baseState;\n\n  assert(state['default'] === null);\n  state['default'] = val;\n  state.optional = true;\n\n  return this;\n};\n\nNode.prototype.explicit = function explicit(num) {\n  var state = this._baseState;\n\n  assert(state.explicit === null && state.implicit === null);\n  state.explicit = num;\n\n  return this;\n};\n\nNode.prototype.implicit = function implicit(num) {\n  var state = this._baseState;\n\n  assert(state.explicit === null && state.implicit === null);\n  state.implicit = num;\n\n  return this;\n};\n\nNode.prototype.obj = function obj() {\n  var state = this._baseState;\n  var args = Array.prototype.slice.call(arguments);\n\n  state.obj = true;\n\n  if (args.length !== 0)\n    this._useArgs(args);\n\n  return this;\n};\n\nNode.prototype.key = function key(newKey) {\n  var state = this._baseState;\n\n  assert(state.key === null);\n  state.key = newKey;\n\n  return this;\n};\n\nNode.prototype.any = function any() {\n  var state = this._baseState;\n\n  state.any = true;\n\n  return this;\n};\n\nNode.prototype.choice = function choice(obj) {\n  var state = this._baseState;\n\n  assert(state.choice === null);\n  state.choice = obj;\n  this._useArgs(Object.keys(obj).map(function(key) {\n    return obj[key];\n  }));\n\n  return this;\n};\n\nNode.prototype.contains = function contains(item) {\n  var state = this._baseState;\n\n  assert(state.use === null);\n  state.contains = item;\n\n  return this;\n};\n\n//\n// Decoding\n//\n\nNode.prototype._decode = function decode(input, options) {\n  var state = this._baseState;\n\n  // Decode root node\n  if (state.parent === null)\n    return input.wrapResult(state.children[0]._decode(input, options));\n\n  var result = state['default'];\n  var present = true;\n\n  var prevKey = null;\n  if (state.key !== null)\n    prevKey = input.enterKey(state.key);\n\n  // Check if tag is there\n  if (state.optional) {\n    var tag = null;\n    if (state.explicit !== null)\n      tag = state.explicit;\n    else if (state.implicit !== null)\n      tag = state.implicit;\n    else if (state.tag !== null)\n      tag = state.tag;\n\n    if (tag === null && !state.any) {\n      // Trial and Error\n      var save = input.save();\n      try {\n        if (state.choice === null)\n          this._decodeGeneric(state.tag, input, options);\n        else\n          this._decodeChoice(input, options);\n        present = true;\n      } catch (e) {\n        present = false;\n      }\n      input.restore(save);\n    } else {\n      present = this._peekTag(input, tag, state.any);\n\n      if (input.isError(present))\n        return present;\n    }\n  }\n\n  // Push object on stack\n  var prevObj;\n  if (state.obj && present)\n    prevObj = input.enterObject();\n\n  if (present) {\n    // Unwrap explicit values\n    if (state.explicit !== null) {\n      var explicit = this._decodeTag(input, state.explicit);\n      if (input.isError(explicit))\n        return explicit;\n      input = explicit;\n    }\n\n    var start = input.offset;\n\n    // Unwrap implicit and normal values\n    if (state.use === null && state.choice === null) {\n      if (state.any)\n        var save = input.save();\n      var body = this._decodeTag(\n        input,\n        state.implicit !== null ? state.implicit : state.tag,\n        state.any\n      );\n      if (input.isError(body))\n        return body;\n\n      if (state.any)\n        result = input.raw(save);\n      else\n        input = body;\n    }\n\n    if (options && options.track && state.tag !== null)\n      options.track(input.path(), start, input.length, 'tagged');\n\n    if (options && options.track && state.tag !== null)\n      options.track(input.path(), input.offset, input.length, 'content');\n\n    // Select proper method for tag\n    if (state.any)\n      result = result;\n    else if (state.choice === null)\n      result = this._decodeGeneric(state.tag, input, options);\n    else\n      result = this._decodeChoice(input, options);\n\n    if (input.isError(result))\n      return result;\n\n    // Decode children\n    if (!state.any && state.choice === null && state.children !== null) {\n      state.children.forEach(function decodeChildren(child) {\n        // NOTE: We are ignoring errors here, to let parser continue with other\n        // parts of encoded data\n        child._decode(input, options);\n      });\n    }\n\n    // Decode contained/encoded by schema, only in bit or octet strings\n    if (state.contains && (state.tag === 'octstr' || state.tag === 'bitstr')) {\n      var data = new DecoderBuffer(result);\n      result = this._getUse(state.contains, input._reporterState.obj)\n          ._decode(data, options);\n    }\n  }\n\n  // Pop object\n  if (state.obj && present)\n    result = input.leaveObject(prevObj);\n\n  // Set key\n  if (state.key !== null && (result !== null || present === true))\n    input.leaveKey(prevKey, state.key, result);\n  else if (prevKey !== null)\n    input.exitKey(prevKey);\n\n  return result;\n};\n\nNode.prototype._decodeGeneric = function decodeGeneric(tag, input, options) {\n  var state = this._baseState;\n\n  if (tag === 'seq' || tag === 'set')\n    return null;\n  if (tag === 'seqof' || tag === 'setof')\n    return this._decodeList(input, tag, state.args[0], options);\n  else if (/str$/.test(tag))\n    return this._decodeStr(input, tag, options);\n  else if (tag === 'objid' && state.args)\n    return this._decodeObjid(input, state.args[0], state.args[1], options);\n  else if (tag === 'objid')\n    return this._decodeObjid(input, null, null, options);\n  else if (tag === 'gentime' || tag === 'utctime')\n    return this._decodeTime(input, tag, options);\n  else if (tag === 'null_')\n    return this._decodeNull(input, options);\n  else if (tag === 'bool')\n    return this._decodeBool(input, options);\n  else if (tag === 'objDesc')\n    return this._decodeStr(input, tag, options);\n  else if (tag === 'int' || tag === 'enum')\n    return this._decodeInt(input, state.args && state.args[0], options);\n\n  if (state.use !== null) {\n    return this._getUse(state.use, input._reporterState.obj)\n        ._decode(input, options);\n  } else {\n    return input.error('unknown tag: ' + tag);\n  }\n};\n\nNode.prototype._getUse = function _getUse(entity, obj) {\n\n  var state = this._baseState;\n  // Create altered use decoder if implicit is set\n  state.useDecoder = this._use(entity, obj);\n  assert(state.useDecoder._baseState.parent === null);\n  state.useDecoder = state.useDecoder._baseState.children[0];\n  if (state.implicit !== state.useDecoder._baseState.implicit) {\n    state.useDecoder = state.useDecoder.clone();\n    state.useDecoder._baseState.implicit = state.implicit;\n  }\n  return state.useDecoder;\n};\n\nNode.prototype._decodeChoice = function decodeChoice(input, options) {\n  var state = this._baseState;\n  var result = null;\n  var match = false;\n\n  Object.keys(state.choice).some(function(key) {\n    var save = input.save();\n    var node = state.choice[key];\n    try {\n      var value = node._decode(input, options);\n      if (input.isError(value))\n        return false;\n\n      result = { type: key, value: value };\n      match = true;\n    } catch (e) {\n      input.restore(save);\n      return false;\n    }\n    return true;\n  }, this);\n\n  if (!match)\n    return input.error('Choice not matched');\n\n  return result;\n};\n\n//\n// Encoding\n//\n\nNode.prototype._createEncoderBuffer = function createEncoderBuffer(data) {\n  return new EncoderBuffer(data, this.reporter);\n};\n\nNode.prototype._encode = function encode(data, reporter, parent) {\n  var state = this._baseState;\n  if (state['default'] !== null && state['default'] === data)\n    return;\n\n  var result = this._encodeValue(data, reporter, parent);\n  if (result === undefined)\n    return;\n\n  if (this._skipDefault(result, reporter, parent))\n    return;\n\n  return result;\n};\n\nNode.prototype._encodeValue = function encode(data, reporter, parent) {\n  var state = this._baseState;\n\n  // Decode root node\n  if (state.parent === null)\n    return state.children[0]._encode(data, reporter || new Reporter());\n\n  var result = null;\n\n  // Set reporter to share it with a child class\n  this.reporter = reporter;\n\n  // Check if data is there\n  if (state.optional && data === undefined) {\n    if (state['default'] !== null)\n      data = state['default']\n    else\n      return;\n  }\n\n  // Encode children first\n  var content = null;\n  var primitive = false;\n  if (state.any) {\n    // Anything that was given is translated to buffer\n    result = this._createEncoderBuffer(data);\n  } else if (state.choice) {\n    result = this._encodeChoice(data, reporter);\n  } else if (state.contains) {\n    content = this._getUse(state.contains, parent)._encode(data, reporter);\n    primitive = true;\n  } else if (state.children) {\n    content = state.children.map(function(child) {\n      if (child._baseState.tag === 'null_')\n        return child._encode(null, reporter, data);\n\n      if (child._baseState.key === null)\n        return reporter.error('Child should have a key');\n      var prevKey = reporter.enterKey(child._baseState.key);\n\n      if (typeof data !== 'object')\n        return reporter.error('Child expected, but input is not object');\n\n      var res = child._encode(data[child._baseState.key], reporter, data);\n      reporter.leaveKey(prevKey);\n\n      return res;\n    }, this).filter(function(child) {\n      return child;\n    });\n    content = this._createEncoderBuffer(content);\n  } else {\n    if (state.tag === 'seqof' || state.tag === 'setof') {\n      // TODO(indutny): this should be thrown on DSL level\n      if (!(state.args && state.args.length === 1))\n        return reporter.error('Too many args for : ' + state.tag);\n\n      if (!Array.isArray(data))\n        return reporter.error('seqof/setof, but data is not Array');\n\n      var child = this.clone();\n      child._baseState.implicit = null;\n      content = this._createEncoderBuffer(data.map(function(item) {\n        var state = this._baseState;\n\n        return this._getUse(state.args[0], data)._encode(item, reporter);\n      }, child));\n    } else if (state.use !== null) {\n      result = this._getUse(state.use, parent)._encode(data, reporter);\n    } else {\n      content = this._encodePrimitive(state.tag, data);\n      primitive = true;\n    }\n  }\n\n  // Encode data itself\n  var result;\n  if (!state.any && state.choice === null) {\n    var tag = state.implicit !== null ? state.implicit : state.tag;\n    var cls = state.implicit === null ? 'universal' : 'context';\n\n    if (tag === null) {\n      if (state.use === null)\n        reporter.error('Tag could be ommited only for .use()');\n    } else {\n      if (state.use === null)\n        result = this._encodeComposite(tag, primitive, cls, content);\n    }\n  }\n\n  // Wrap in explicit\n  if (state.explicit !== null)\n    result = this._encodeComposite(state.explicit, false, 'context', result);\n\n  return result;\n};\n\nNode.prototype._encodeChoice = function encodeChoice(data, reporter) {\n  var state = this._baseState;\n\n  var node = state.choice[data.type];\n  if (!node) {\n    assert(\n        false,\n        data.type + ' not found in ' +\n            JSON.stringify(Object.keys(state.choice)));\n  }\n  return node._encode(data.value, reporter);\n};\n\nNode.prototype._encodePrimitive = function encodePrimitive(tag, data) {\n  var state = this._baseState;\n\n  if (/str$/.test(tag))\n    return this._encodeStr(data, tag);\n  else if (tag === 'objid' && state.args)\n    return this._encodeObjid(data, state.reverseArgs[0], state.args[1]);\n  else if (tag === 'objid')\n    return this._encodeObjid(data, null, null);\n  else if (tag === 'gentime' || tag === 'utctime')\n    return this._encodeTime(data, tag);\n  else if (tag === 'null_')\n    return this._encodeNull();\n  else if (tag === 'int' || tag === 'enum')\n    return this._encodeInt(data, state.args && state.reverseArgs[0]);\n  else if (tag === 'bool')\n    return this._encodeBool(data);\n  else if (tag === 'objDesc')\n    return this._encodeStr(data, tag);\n  else\n    throw new Error('Unsupported tag: ' + tag);\n};\n\nNode.prototype._isNumstr = function isNumstr(str) {\n  return /^[0-9 ]*$/.test(str);\n};\n\nNode.prototype._isPrintstr = function isPrintstr(str) {\n  return /^[A-Za-z0-9 '\\(\\)\\+,\\-\\.\\/:=\\?]*$/.test(str);\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/nkey-ecdsa/~/asn1.js/lib/asn1/base/node.js\n **/","var inherits = require('inherits');\n\nvar asn1 = require('../../asn1');\nvar base = asn1.base;\nvar bignum = asn1.bignum;\n\n// Import DER constants\nvar der = asn1.constants.der;\n\nfunction DERDecoder(entity) {\n  this.enc = 'der';\n  this.name = entity.name;\n  this.entity = entity;\n\n  // Construct base tree\n  this.tree = new DERNode();\n  this.tree._init(entity.body);\n};\nmodule.exports = DERDecoder;\n\nDERDecoder.prototype.decode = function decode(data, options) {\n  if (!(data instanceof base.DecoderBuffer))\n    data = new base.DecoderBuffer(data, options);\n\n  return this.tree._decode(data, options);\n};\n\n// Tree methods\n\nfunction DERNode(parent) {\n  base.Node.call(this, 'der', parent);\n}\ninherits(DERNode, base.Node);\n\nDERNode.prototype._peekTag = function peekTag(buffer, tag, any) {\n  if (buffer.isEmpty())\n    return false;\n\n  var state = buffer.save();\n  var decodedTag = derDecodeTag(buffer, 'Failed to peek tag: \"' + tag + '\"');\n  if (buffer.isError(decodedTag))\n    return decodedTag;\n\n  buffer.restore(state);\n\n  return decodedTag.tag === tag || decodedTag.tagStr === tag ||\n    (decodedTag.tagStr + 'of') === tag || any;\n};\n\nDERNode.prototype._decodeTag = function decodeTag(buffer, tag, any) {\n  var decodedTag = derDecodeTag(buffer,\n                                'Failed to decode tag of \"' + tag + '\"');\n  if (buffer.isError(decodedTag))\n    return decodedTag;\n\n  var len = derDecodeLen(buffer,\n                         decodedTag.primitive,\n                         'Failed to get length of \"' + tag + '\"');\n\n  // Failure\n  if (buffer.isError(len))\n    return len;\n\n  if (!any &&\n      decodedTag.tag !== tag &&\n      decodedTag.tagStr !== tag &&\n      decodedTag.tagStr + 'of' !== tag) {\n    return buffer.error('Failed to match tag: \"' + tag + '\"');\n  }\n\n  if (decodedTag.primitive || len !== null)\n    return buffer.skip(len, 'Failed to match body of: \"' + tag + '\"');\n\n  // Indefinite length... find END tag\n  var state = buffer.save();\n  var res = this._skipUntilEnd(\n      buffer,\n      'Failed to skip indefinite length body: \"' + this.tag + '\"');\n  if (buffer.isError(res))\n    return res;\n\n  len = buffer.offset - state.offset;\n  buffer.restore(state);\n  return buffer.skip(len, 'Failed to match body of: \"' + tag + '\"');\n};\n\nDERNode.prototype._skipUntilEnd = function skipUntilEnd(buffer, fail) {\n  while (true) {\n    var tag = derDecodeTag(buffer, fail);\n    if (buffer.isError(tag))\n      return tag;\n    var len = derDecodeLen(buffer, tag.primitive, fail);\n    if (buffer.isError(len))\n      return len;\n\n    var res;\n    if (tag.primitive || len !== null)\n      res = buffer.skip(len)\n    else\n      res = this._skipUntilEnd(buffer, fail);\n\n    // Failure\n    if (buffer.isError(res))\n      return res;\n\n    if (tag.tagStr === 'end')\n      break;\n  }\n};\n\nDERNode.prototype._decodeList = function decodeList(buffer, tag, decoder,\n                                                    options) {\n  var result = [];\n  while (!buffer.isEmpty()) {\n    var possibleEnd = this._peekTag(buffer, 'end');\n    if (buffer.isError(possibleEnd))\n      return possibleEnd;\n\n    var res = decoder.decode(buffer, 'der', options);\n    if (buffer.isError(res) && possibleEnd)\n      break;\n    result.push(res);\n  }\n  return result;\n};\n\nDERNode.prototype._decodeStr = function decodeStr(buffer, tag) {\n  if (tag === 'bitstr') {\n    var unused = buffer.readUInt8();\n    if (buffer.isError(unused))\n      return unused;\n    return { unused: unused, data: buffer.raw() };\n  } else if (tag === 'bmpstr') {\n    var raw = buffer.raw();\n    if (raw.length % 2 === 1)\n      return buffer.error('Decoding of string type: bmpstr length mismatch');\n\n    var str = '';\n    for (var i = 0; i < raw.length / 2; i++) {\n      str += String.fromCharCode(raw.readUInt16BE(i * 2));\n    }\n    return str;\n  } else if (tag === 'numstr') {\n    var numstr = buffer.raw().toString('ascii');\n    if (!this._isNumstr(numstr)) {\n      return buffer.error('Decoding of string type: ' +\n                          'numstr unsupported characters');\n    }\n    return numstr;\n  } else if (tag === 'octstr') {\n    return buffer.raw();\n  } else if (tag === 'objDesc') {\n    return buffer.raw();\n  } else if (tag === 'printstr') {\n    var printstr = buffer.raw().toString('ascii');\n    if (!this._isPrintstr(printstr)) {\n      return buffer.error('Decoding of string type: ' +\n                          'printstr unsupported characters');\n    }\n    return printstr;\n  } else if (/str$/.test(tag)) {\n    return buffer.raw().toString();\n  } else {\n    return buffer.error('Decoding of string type: ' + tag + ' unsupported');\n  }\n};\n\nDERNode.prototype._decodeObjid = function decodeObjid(buffer, values, relative) {\n  var result;\n  var identifiers = [];\n  var ident = 0;\n  while (!buffer.isEmpty()) {\n    var subident = buffer.readUInt8();\n    ident <<= 7;\n    ident |= subident & 0x7f;\n    if ((subident & 0x80) === 0) {\n      identifiers.push(ident);\n      ident = 0;\n    }\n  }\n  if (subident & 0x80)\n    identifiers.push(ident);\n\n  var first = (identifiers[0] / 40) | 0;\n  var second = identifiers[0] % 40;\n\n  if (relative)\n    result = identifiers;\n  else\n    result = [first, second].concat(identifiers.slice(1));\n\n  if (values) {\n    var tmp = values[result.join(' ')];\n    if (tmp === undefined)\n      tmp = values[result.join('.')];\n    if (tmp !== undefined)\n      result = tmp;\n  }\n\n  return result;\n};\n\nDERNode.prototype._decodeTime = function decodeTime(buffer, tag) {\n  var str = buffer.raw().toString();\n  if (tag === 'gentime') {\n    var year = str.slice(0, 4) | 0;\n    var mon = str.slice(4, 6) | 0;\n    var day = str.slice(6, 8) | 0;\n    var hour = str.slice(8, 10) | 0;\n    var min = str.slice(10, 12) | 0;\n    var sec = str.slice(12, 14) | 0;\n  } else if (tag === 'utctime') {\n    var year = str.slice(0, 2) | 0;\n    var mon = str.slice(2, 4) | 0;\n    var day = str.slice(4, 6) | 0;\n    var hour = str.slice(6, 8) | 0;\n    var min = str.slice(8, 10) | 0;\n    var sec = str.slice(10, 12) | 0;\n    if (year < 70)\n      year = 2000 + year;\n    else\n      year = 1900 + year;\n  } else {\n    return buffer.error('Decoding ' + tag + ' time is not supported yet');\n  }\n\n  return Date.UTC(year, mon - 1, day, hour, min, sec, 0);\n};\n\nDERNode.prototype._decodeNull = function decodeNull(buffer) {\n  return null;\n};\n\nDERNode.prototype._decodeBool = function decodeBool(buffer) {\n  var res = buffer.readUInt8();\n  if (buffer.isError(res))\n    return res;\n  else\n    return res !== 0;\n};\n\nDERNode.prototype._decodeInt = function decodeInt(buffer, values) {\n  // Bigint, return as it is (assume big endian)\n  var raw = buffer.raw();\n  var res = new bignum(raw);\n\n  if (values)\n    res = values[res.toString(10)] || res;\n\n  return res;\n};\n\nDERNode.prototype._use = function use(entity, obj) {\n  if (typeof entity === 'function')\n    entity = entity(obj);\n  return entity._getDecoder('der').tree;\n};\n\n// Utility methods\n\nfunction derDecodeTag(buf, fail) {\n  var tag = buf.readUInt8(fail);\n  if (buf.isError(tag))\n    return tag;\n\n  var cls = der.tagClass[tag >> 6];\n  var primitive = (tag & 0x20) === 0;\n\n  // Multi-octet tag - load\n  if ((tag & 0x1f) === 0x1f) {\n    var oct = tag;\n    tag = 0;\n    while ((oct & 0x80) === 0x80) {\n      oct = buf.readUInt8(fail);\n      if (buf.isError(oct))\n        return oct;\n\n      tag <<= 7;\n      tag |= oct & 0x7f;\n    }\n  } else {\n    tag &= 0x1f;\n  }\n  var tagStr = der.tag[tag];\n\n  return {\n    cls: cls,\n    primitive: primitive,\n    tag: tag,\n    tagStr: tagStr\n  };\n}\n\nfunction derDecodeLen(buf, primitive, fail) {\n  var len = buf.readUInt8(fail);\n  if (buf.isError(len))\n    return len;\n\n  // Indefinite form\n  if (!primitive && len === 0x80)\n    return null;\n\n  // Definite form\n  if ((len & 0x80) === 0) {\n    // Short form\n    return len;\n  }\n\n  // Long form\n  var num = len & 0x7f;\n  if (num > 4)\n    return buf.error('length octect is too long');\n\n  len = 0;\n  for (var i = 0; i < num; i++) {\n    len <<= 8;\n    var j = buf.readUInt8(fail);\n    if (buf.isError(j))\n      return j;\n    len |= j;\n  }\n\n  return len;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/nkey-ecdsa/~/asn1.js/lib/asn1/decoders/der.js\n **/","var inherits = require('inherits');\nvar Buffer = require('buffer').Buffer;\n\nvar DERDecoder = require('./der');\n\nfunction PEMDecoder(entity) {\n  DERDecoder.call(this, entity);\n  this.enc = 'pem';\n};\ninherits(PEMDecoder, DERDecoder);\nmodule.exports = PEMDecoder;\n\nPEMDecoder.prototype.decode = function decode(data, options) {\n  var lines = data.toString().split(/[\\r\\n]+/g);\n\n  var label = options.label.toUpperCase();\n\n  var re = /^-----(BEGIN|END) ([^-]+)-----$/;\n  var start = -1;\n  var end = -1;\n  for (var i = 0; i < lines.length; i++) {\n    var match = lines[i].match(re);\n    if (match === null)\n      continue;\n\n    if (match[2] !== label)\n      continue;\n\n    if (start === -1) {\n      if (match[1] !== 'BEGIN')\n        break;\n      start = i;\n    } else {\n      if (match[1] !== 'END')\n        break;\n      end = i;\n      break;\n    }\n  }\n  if (start === -1 || end === -1)\n    throw new Error('PEM section not found for: ' + label);\n\n  var base64 = lines.slice(start + 1, end).join('');\n  // Remove excessive symbols\n  base64.replace(/[^a-z0-9\\+\\/=]+/gi, '');\n\n  var input = new Buffer(base64, 'base64');\n  return DERDecoder.prototype.decode.call(this, input, options);\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/nkey-ecdsa/~/asn1.js/lib/asn1/decoders/pem.js\n **/","var inherits = require('inherits');\nvar Buffer = require('buffer').Buffer;\n\nvar asn1 = require('../../asn1');\nvar base = asn1.base;\n\n// Import DER constants\nvar der = asn1.constants.der;\n\nfunction DEREncoder(entity) {\n  this.enc = 'der';\n  this.name = entity.name;\n  this.entity = entity;\n\n  // Construct base tree\n  this.tree = new DERNode();\n  this.tree._init(entity.body);\n};\nmodule.exports = DEREncoder;\n\nDEREncoder.prototype.encode = function encode(data, reporter) {\n  return this.tree._encode(data, reporter).join();\n};\n\n// Tree methods\n\nfunction DERNode(parent) {\n  base.Node.call(this, 'der', parent);\n}\ninherits(DERNode, base.Node);\n\nDERNode.prototype._encodeComposite = function encodeComposite(tag,\n                                                              primitive,\n                                                              cls,\n                                                              content) {\n  var encodedTag = encodeTag(tag, primitive, cls, this.reporter);\n\n  // Short form\n  if (content.length < 0x80) {\n    var header = new Buffer(2);\n    header[0] = encodedTag;\n    header[1] = content.length;\n    return this._createEncoderBuffer([ header, content ]);\n  }\n\n  // Long form\n  // Count octets required to store length\n  var lenOctets = 1;\n  for (var i = content.length; i >= 0x100; i >>= 8)\n    lenOctets++;\n\n  var header = new Buffer(1 + 1 + lenOctets);\n  header[0] = encodedTag;\n  header[1] = 0x80 | lenOctets;\n\n  for (var i = 1 + lenOctets, j = content.length; j > 0; i--, j >>= 8)\n    header[i] = j & 0xff;\n\n  return this._createEncoderBuffer([ header, content ]);\n};\n\nDERNode.prototype._encodeStr = function encodeStr(str, tag) {\n  if (tag === 'bitstr') {\n    return this._createEncoderBuffer([ str.unused | 0, str.data ]);\n  } else if (tag === 'bmpstr') {\n    var buf = new Buffer(str.length * 2);\n    for (var i = 0; i < str.length; i++) {\n      buf.writeUInt16BE(str.charCodeAt(i), i * 2);\n    }\n    return this._createEncoderBuffer(buf);\n  } else if (tag === 'numstr') {\n    if (!this._isNumstr(str)) {\n      return this.reporter.error('Encoding of string type: numstr supports ' +\n                                 'only digits and space');\n    }\n    return this._createEncoderBuffer(str);\n  } else if (tag === 'printstr') {\n    if (!this._isPrintstr(str)) {\n      return this.reporter.error('Encoding of string type: printstr supports ' +\n                                 'only latin upper and lower case letters, ' +\n                                 'digits, space, apostrophe, left and rigth ' +\n                                 'parenthesis, plus sign, comma, hyphen, ' +\n                                 'dot, slash, colon, equal sign, ' +\n                                 'question mark');\n    }\n    return this._createEncoderBuffer(str);\n  } else if (/str$/.test(tag)) {\n    return this._createEncoderBuffer(str);\n  } else if (tag === 'objDesc') {\n    return this._createEncoderBuffer(str);\n  } else {\n    return this.reporter.error('Encoding of string type: ' + tag +\n                               ' unsupported');\n  }\n};\n\nDERNode.prototype._encodeObjid = function encodeObjid(id, values, relative) {\n  if (typeof id === 'string') {\n    if (!values)\n      return this.reporter.error('string objid given, but no values map found');\n    if (!values.hasOwnProperty(id))\n      return this.reporter.error('objid not found in values map');\n    id = values[id].split(/[\\s\\.]+/g);\n    for (var i = 0; i < id.length; i++)\n      id[i] |= 0;\n  } else if (Array.isArray(id)) {\n    id = id.slice();\n    for (var i = 0; i < id.length; i++)\n      id[i] |= 0;\n  }\n\n  if (!Array.isArray(id)) {\n    return this.reporter.error('objid() should be either array or string, ' +\n                               'got: ' + JSON.stringify(id));\n  }\n\n  if (!relative) {\n    if (id[1] >= 40)\n      return this.reporter.error('Second objid identifier OOB');\n    id.splice(0, 2, id[0] * 40 + id[1]);\n  }\n\n  // Count number of octets\n  var size = 0;\n  for (var i = 0; i < id.length; i++) {\n    var ident = id[i];\n    for (size++; ident >= 0x80; ident >>= 7)\n      size++;\n  }\n\n  var objid = new Buffer(size);\n  var offset = objid.length - 1;\n  for (var i = id.length - 1; i >= 0; i--) {\n    var ident = id[i];\n    objid[offset--] = ident & 0x7f;\n    while ((ident >>= 7) > 0)\n      objid[offset--] = 0x80 | (ident & 0x7f);\n  }\n\n  return this._createEncoderBuffer(objid);\n};\n\nfunction two(num) {\n  if (num < 10)\n    return '0' + num;\n  else\n    return num;\n}\n\nDERNode.prototype._encodeTime = function encodeTime(time, tag) {\n  var str;\n  var date = new Date(time);\n\n  if (tag === 'gentime') {\n    str = [\n      two(date.getFullYear()),\n      two(date.getUTCMonth() + 1),\n      two(date.getUTCDate()),\n      two(date.getUTCHours()),\n      two(date.getUTCMinutes()),\n      two(date.getUTCSeconds()),\n      'Z'\n    ].join('');\n  } else if (tag === 'utctime') {\n    str = [\n      two(date.getFullYear() % 100),\n      two(date.getUTCMonth() + 1),\n      two(date.getUTCDate()),\n      two(date.getUTCHours()),\n      two(date.getUTCMinutes()),\n      two(date.getUTCSeconds()),\n      'Z'\n    ].join('');\n  } else {\n    this.reporter.error('Encoding ' + tag + ' time is not supported yet');\n  }\n\n  return this._encodeStr(str, 'octstr');\n};\n\nDERNode.prototype._encodeNull = function encodeNull() {\n  return this._createEncoderBuffer('');\n};\n\nDERNode.prototype._encodeInt = function encodeInt(num, values) {\n  if (typeof num === 'string') {\n    if (!values)\n      return this.reporter.error('String int or enum given, but no values map');\n    if (!values.hasOwnProperty(num)) {\n      return this.reporter.error('Values map doesn\\'t contain: ' +\n                                 JSON.stringify(num));\n    }\n    num = values[num];\n  }\n\n  // Bignum, assume big endian\n  if (typeof num !== 'number' && !Buffer.isBuffer(num)) {\n    var numArray = num.toArray();\n    if (!num.sign && numArray[0] & 0x80) {\n      numArray.unshift(0);\n    }\n    num = new Buffer(numArray);\n  }\n\n  if (Buffer.isBuffer(num)) {\n    var size = num.length;\n    if (num.length === 0)\n      size++;\n\n    var out = new Buffer(size);\n    num.copy(out);\n    if (num.length === 0)\n      out[0] = 0\n    return this._createEncoderBuffer(out);\n  }\n\n  if (num < 0x80)\n    return this._createEncoderBuffer(num);\n\n  if (num < 0x100)\n    return this._createEncoderBuffer([0, num]);\n\n  var size = 1;\n  for (var i = num; i >= 0x100; i >>= 8)\n    size++;\n\n  var out = new Array(size);\n  for (var i = out.length - 1; i >= 0; i--) {\n    out[i] = num & 0xff;\n    num >>= 8;\n  }\n  if(out[0] & 0x80) {\n    out.unshift(0);\n  }\n\n  return this._createEncoderBuffer(new Buffer(out));\n};\n\nDERNode.prototype._encodeBool = function encodeBool(value) {\n  return this._createEncoderBuffer(value ? 0xff : 0);\n};\n\nDERNode.prototype._use = function use(entity, obj) {\n  if (typeof entity === 'function')\n    entity = entity(obj);\n  return entity._getEncoder('der').tree;\n};\n\nDERNode.prototype._skipDefault = function skipDefault(dataBuffer, reporter, parent) {\n  var state = this._baseState;\n  var i;\n  if (state['default'] === null)\n    return false;\n\n  var data = dataBuffer.join();\n  if (state.defaultBuffer === undefined)\n    state.defaultBuffer = this._encodeValue(state['default'], reporter, parent).join();\n\n  if (data.length !== state.defaultBuffer.length)\n    return false;\n\n  for (i=0; i < data.length; i++)\n    if (data[i] !== state.defaultBuffer[i])\n      return false;\n\n  return true;\n};\n\n// Utility methods\n\nfunction encodeTag(tag, primitive, cls, reporter) {\n  var res;\n\n  if (tag === 'seqof')\n    tag = 'seq';\n  else if (tag === 'setof')\n    tag = 'set';\n\n  if (der.tagByName.hasOwnProperty(tag))\n    res = der.tagByName[tag];\n  else if (typeof tag === 'number' && (tag | 0) === tag)\n    res = tag;\n  else\n    return reporter.error('Unknown tag: ' + tag);\n\n  if (res >= 0x1f)\n    return reporter.error('Multi-octet tag encoding unsupported');\n\n  if (!primitive)\n    res |= 0x20;\n\n  res |= (der.tagClassByName[cls || 'universal'] << 6);\n\n  return res;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/nkey-ecdsa/~/asn1.js/lib/asn1/encoders/der.js\n **/","var inherits = require('inherits');\n\nvar DEREncoder = require('./der');\n\nfunction PEMEncoder(entity) {\n  DEREncoder.call(this, entity);\n  this.enc = 'pem';\n};\ninherits(PEMEncoder, DEREncoder);\nmodule.exports = PEMEncoder;\n\nPEMEncoder.prototype.encode = function encode(data, options) {\n  var buf = DEREncoder.prototype.encode.call(this, data);\n\n  var p = buf.toString('base64');\n  var out = [ '-----BEGIN ' + options.label + '-----' ];\n  for (var i = 0; i < p.length; i += 64)\n    out.push(p.slice(i, i + 64));\n  out.push('-----END ' + options.label + '-----');\n  return out.join('\\n');\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/nkey-ecdsa/~/asn1.js/lib/asn1/encoders/pem.js\n **/","'use strict'\n\nconst crypto = require('crypto')\nconst extend = require('xtend')\nconst KeyEncoder = require('key-encoder')\nconst nkey = require('nkey')\nconst special = {\n  secp256k1: require('nkey-secp256k1')\n}\n\nconst curves = {\n  p192: 'prime192v1',\n  p256: 'prime256v1',\n  p384: 'secp384r1',\n  p521: 'secp521r1'\n}\n\nfunction createECDH (curve) {\n  return crypto.createECDH(curves[curve] || curve)\n}\n\nconst PUB_PROPS = ['curve', 'pub']\nconst type = 'ec'\n\nconst impl = nkey.wrapAPI({\n  type,\n  gen,\n  genSync,\n  fromJSON\n})\n\nfunction getImpl (opts) {\n  return special[opts.curve] || impl\n}\n\nmodule.exports = exports = nkey.wrapAPI({\n  gen: function (opts, cb) {\n    opts = normalizeOpts(opts)\n    return getImpl(opts).gen(opts, cb)\n  },\n  genSync: function (opts) {\n    opts = normalizeOpts(opts)\n    return getImpl(opts).genSync(opts)\n  },\n  fromJSON: function (json) {\n    json = normalizeOpts(json)\n    return getImpl(json).fromJSON(json)\n  }\n})\n\nexports.DEFAULT_ALGORITHM = 'sha256'\nexports.DEFAULT_CURVE = 'p256'\nexports.setImplementationForCurve = function (curve, impl) {\n  special[curve] = impl\n}\n\nfunction normalizeOpts (opts) {\n  opts = opts || {}\n  const copy = {}\n  for (var p in opts) copy[p] = opts[p]\n\n  if (!copy.curve) copy.curve = exports.DEFAULT_CURVE\n\n  return copy\n}\n\nfunction genSync (opts) {\n  const curve = opts.curve\n  const ec = createECDH(curve)\n  ec.generateKeys()\n  return impl.fromJSON({\n    curve: curve,\n    priv: ec.getPrivateKey()\n  })\n}\n\nfunction gen (opts, cb) {\n  process.nextTick(() => cb(null, genSync(opts)))\n}\n\nfunction fromJSON (opts) {\n  if (!(opts.priv || opts.pub)) {\n    throw new Error('expected \"priv\" or \"pub\"')\n  }\n\n  if (!opts.curve) throw new Error('expected \"curve\"')\n\n  const curve = opts.curve\n  const ec = createECDH(curve)\n  const priv = typeof opts.priv === 'string' ? new Buffer(opts.priv, 'hex') : opts.priv\n  if (priv) ec.setPrivateKey(priv)\n\n  let pub = typeof opts.pub === 'string' ? new Buffer(opts.pub, 'hex') : opts.pub\n  if (!pub) pub = ec.getPublicKey()\n\n  const pubKeyString = pub.toString('hex')\n  const fingerprint = crypto.createHash('sha256').update(pub).digest('hex')\n  const encoder = new KeyEncoder(curve)\n  let privPEM\n  let pubPEM\n\n  return nkey.wrapInstance({\n    type,\n    signSync,\n    verifySync,\n    hasDeterministicSig: true,\n    pubKeyString,\n    fingerprint,\n    pub,\n    priv,\n    toJSON\n  })\n\n  function getEncodedPriv () {\n    return privPEM || (privPEM = encoder.encodePrivate(priv, 'raw', 'pem'))\n  }\n\n  function getEncodedPub () {\n    return pubPEM || (pubPEM = encoder.encodePublic(pub, 'raw', 'pem'))\n  }\n\n  function signSync (data, algorithm) {\n    let priv = getEncodedPriv()\n    algorithm = algorithm || exports.DEFAULT_ALGORITHM\n    return crypto.createSign(algorithm).update(data).sign(priv, 'hex')\n  }\n\n  function verifySync (data, algorithm, sig) {\n    let pub = getEncodedPub()\n    if (typeof sig === 'undefined') {\n      sig = algorithm\n      algorithm = exports.DEFAULT_ALGORITHM\n    }\n\n    if (typeof sig === 'string') sig = new Buffer(sig, 'hex')\n\n    return crypto.createVerify(algorithm).update(data).verify(pub, sig)\n  }\n\n  function toJSON (exportPrivateKey) {\n    const obj = {\n      type,\n      curve,\n      pub: pubKeyString,\n      fingerprint\n    }\n\n    if (exportPrivateKey) obj.priv = priv.toString('hex')\n\n    return obj\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/nkey-ecdsa/default.js\n **/","'use strict'\n\nmodule.exports = require('./lib/key-encoder')\n\n\n/** WEBPACK FOOTER **\n ** ./~/nkey-ecdsa/~/key-encoder/index.js\n **/","'use strict'\n\nvar asn1 = require('asn1.js'),\n    BN = require('bn.js'),\n    curves = require('./curves')\n\nvar ECPrivateKeyASN = asn1.define('ECPrivateKey', function() {\n    this.seq().obj(\n        this.key('version').int(),\n        this.key('privateKey').octstr(),\n        this.key('parameters').explicit(0).objid().optional(),\n        this.key('publicKey').explicit(1).bitstr().optional()\n    )\n})\n\nvar SubjectPublicKeyInfoASN = asn1.define('SubjectPublicKeyInfo', function() {\n    this.seq().obj(\n        this.key('algorithm').seq().obj(\n            this.key(\"id\").objid(),\n            this.key(\"curve\").objid()\n        ),\n        this.key('pub').bitstr()\n    )\n})\n\nfunction assert(val, msg) {\n    if (!val) {\n        throw new Error(msg || 'Assertion failed')\n    }\n}\n\nfunction KeyEncoder(options) {\n    if (typeof options === 'string') {\n        assert(curves.hasOwnProperty(options), 'Unknown curve ' + options)\n        options = curves[options]\n    }\n    this.options = options\n    this.algorithmID = [1, 2, 840, 10045, 2, 1]\n}\n\nKeyEncoder.ECPrivateKeyASN = ECPrivateKeyASN\nKeyEncoder.SubjectPublicKeyInfoASN = SubjectPublicKeyInfoASN\n\nKeyEncoder.prototype.privateKeyObject = function(rawPrivateKey, rawPublicKey) {\n    var privateKeyObject = {\n        version: new BN(1),\n        privateKey: new Buffer(rawPrivateKey, 'hex'),\n        parameters: this.options.curveParameters\n    }\n\n    if (rawPublicKey) {\n        privateKeyObject.publicKey = {\n            unused: 0,\n            data: new Buffer(rawPublicKey, 'hex')\n        }\n    }\n\n    return privateKeyObject\n}\n\nKeyEncoder.prototype.publicKeyObject = function(rawPublicKey) {\n    return {\n        algorithm: {\n            id: this.algorithmID,\n            curve: this.options.curveParameters\n        },\n        pub: {\n            unused: 0,\n            data: new Buffer(rawPublicKey, 'hex')\n        }\n    }\n}\n\nKeyEncoder.prototype.encodePrivate = function(privateKey, originalFormat, destinationFormat) {\n    var privateKeyObject\n\n    /* Parse the incoming private key and convert it to a private key object */\n    if (originalFormat === 'raw') {\n        if (!typeof privateKey === 'string') {\n            throw 'private key must be a string'\n        }\n        var privateKeyObject = this.options.curve.keyFromPrivate(privateKey, 'hex'),\n            rawPublicKey = privateKeyObject.getPublic('hex')\n        privateKeyObject = this.privateKeyObject(privateKey, rawPublicKey)\n    } else if (originalFormat === 'der') {\n        if (Buffer.isBuffer(privateKey)) {\n            // do nothing\n        } else if (typeof privateKey === 'string') {\n            privateKey = new Buffer(privateKey, 'hex')\n        } else {\n            throw 'private key must be a buffer or a string'\n        }\n        privateKeyObject = ECPrivateKeyASN.decode(privateKey, 'der')\n    } else if (originalFormat === 'pem') {\n        if (!typeof privateKey === 'string') {\n            throw 'private key must be a string'\n        }\n        privateKeyObject = ECPrivateKeyASN.decode(privateKey, 'pem', this.options.privatePEMOptions)\n    } else {\n        throw 'invalid private key format'\n    }\n\n    /* Export the private key object to the desired format */\n    if (destinationFormat === 'raw') {\n        return privateKeyObject.privateKey.toString('hex')\n    } else if (destinationFormat === 'der') {\n        return ECPrivateKeyASN.encode(privateKeyObject, 'der').toString('hex')\n    } else if (destinationFormat === 'pem') {\n        return ECPrivateKeyASN.encode(privateKeyObject, 'pem', this.options.privatePEMOptions)\n    } else {\n        throw 'invalid destination format for private key'\n    }\n}\n\nKeyEncoder.prototype.encodePublic = function(publicKey, originalFormat, destinationFormat) {\n    var publicKeyObject\n\n    /* Parse the incoming public key and convert it to a public key object */\n    if (originalFormat === 'raw') {\n        if (!typeof publicKey === 'string') {\n            throw 'public key must be a string'\n        }\n        publicKeyObject = this.publicKeyObject(publicKey)\n    } else if (originalFormat === 'der') {\n        if (Buffer.isBuffer(publicKey)) {\n            // do nothing\n        } else if (typeof publicKey === 'string') {\n            publicKey = new Buffer(publicKey, 'hex')\n        } else {\n            throw 'public key must be a buffer or a string'\n        }\n        publicKeyObject = SubjectPublicKeyInfoASN.decode(publicKey, 'der')\n    } else if (originalFormat === 'pem') {\n        if (!typeof publicKey === 'string') {\n            throw 'public key must be a string'\n        }\n        publicKeyObject = SubjectPublicKeyInfoASN.decode(publicKey, 'pem', this.options.publicPEMOptions)\n    } else {\n        throw 'invalid public key format'\n    }\n\n    /* Export the private key object to the desired format */\n    if (destinationFormat === 'raw') {\n        return publicKeyObject.pub.data.toString('hex')\n    } else if (destinationFormat === 'der') {\n        return SubjectPublicKeyInfoASN.encode(publicKeyObject, 'der').toString('hex')\n    } else if (destinationFormat === 'pem') {\n        return SubjectPublicKeyInfoASN.encode(publicKeyObject, 'pem', this.options.publicPEMOptions)\n    } else {\n        throw 'invalid destination format for public key'\n    }\n}\n\nmodule.exports = KeyEncoder\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/nkey-ecdsa/~/key-encoder/lib/key-encoder.js\n **/","(function (module, exports) {\n\n'use strict';\n\n// Utils\n\nfunction assert(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n}\n\n// Could use `inherits` module, but don't want to move from single file\n// architecture yet.\nfunction inherits(ctor, superCtor) {\n  ctor.super_ = superCtor;\n  var TempCtor = function () {};\n  TempCtor.prototype = superCtor.prototype;\n  ctor.prototype = new TempCtor();\n  ctor.prototype.constructor = ctor;\n}\n\n// BN\n\nfunction BN(number, base, endian) {\n  // May be `new BN(bn)` ?\n  if (number !== null &&\n      typeof number === 'object' &&\n      Array.isArray(number.words)) {\n    return number;\n  }\n\n  this.sign = false;\n  this.words = null;\n  this.length = 0;\n\n  // Reduction context\n  this.red = null;\n\n  if (base === 'le' || base === 'be') {\n    endian = base;\n    base = 10;\n  }\n\n  if (number !== null)\n    this._init(number || 0, base || 10, endian || 'be');\n}\nif (typeof module === 'object')\n  module.exports = BN;\nelse\n  exports.BN = BN;\n\nBN.BN = BN;\nBN.wordSize = 26;\n\nBN.prototype._init = function init(number, base, endian) {\n  if (typeof number === 'number') {\n    return this._initNumber(number, base, endian);\n  } else if (typeof number === 'object') {\n    return this._initArray(number, base, endian);\n  }\n  if (base === 'hex')\n    base = 16;\n  assert(base === (base | 0) && base >= 2 && base <= 36);\n\n  number = number.toString().replace(/\\s+/g, '');\n  var start = 0;\n  if (number[0] === '-')\n    start++;\n\n  if (base === 16)\n    this._parseHex(number, start);\n  else\n    this._parseBase(number, base, start);\n\n  if (number[0] === '-')\n    this.sign = true;\n\n  this.strip();\n\n  if (endian !== 'le')\n    return;\n\n  this._initArray(this.toArray(), base, endian);\n};\n\nBN.prototype._initNumber = function _initNumber(number, base, endian) {\n  if (number < 0) {\n    this.sign = true;\n    number = -number;\n  }\n  if (number < 0x4000000) {\n    this.words = [ number & 0x3ffffff ];\n    this.length = 1;\n  } else if (number < 0x10000000000000) {\n    this.words = [\n      number & 0x3ffffff,\n      (number / 0x4000000) & 0x3ffffff\n    ];\n    this.length = 2;\n  } else {\n    assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n    this.words = [\n      number & 0x3ffffff,\n      (number / 0x4000000) & 0x3ffffff,\n      1\n    ];\n    this.length = 3;\n  }\n\n  if (endian !== 'le')\n    return;\n\n  // Reverse the bytes\n  this._initArray(this.toArray(), base, endian);\n};\n\nBN.prototype._initArray = function _initArray(number, base, endian) {\n  // Perhaps a Uint8Array\n  assert(typeof number.length === 'number');\n  if (number.length <= 0) {\n    this.words = [ 0 ];\n    this.length = 1;\n    return this;\n  }\n\n  this.length = Math.ceil(number.length / 3);\n  this.words = new Array(this.length);\n  for (var i = 0; i < this.length; i++)\n    this.words[i] = 0;\n\n  var off = 0;\n  if (endian === 'be') {\n    for (var i = number.length - 1, j = 0; i >= 0; i -= 3) {\n      var w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n      off += 24;\n      if (off >= 26) {\n        off -= 26;\n        j++;\n      }\n    }\n  } else if (endian === 'le') {\n    for (var i = 0, j = 0; i < number.length; i += 3) {\n      var w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n      off += 24;\n      if (off >= 26) {\n        off -= 26;\n        j++;\n      }\n    }\n  }\n  return this.strip();\n};\n\nfunction parseHex(str, start, end) {\n  var r = 0;\n  var len = Math.min(str.length, end);\n  for (var i = start; i < len; i++) {\n    var c = str.charCodeAt(i) - 48;\n\n    r <<= 4;\n\n    // 'a' - 'f'\n    if (c >= 49 && c <= 54)\n      r |= c - 49 + 0xa;\n\n    // 'A' - 'F'\n    else if (c >= 17 && c <= 22)\n      r |= c - 17 + 0xa;\n\n    // '0' - '9'\n    else\n      r |= c & 0xf;\n  }\n  return r;\n}\n\nBN.prototype._parseHex = function _parseHex(number, start) {\n  // Create possibly bigger array to ensure that it fits the number\n  this.length = Math.ceil((number.length - start) / 6);\n  this.words = new Array(this.length);\n  for (var i = 0; i < this.length; i++)\n    this.words[i] = 0;\n\n  // Scan 24-bit chunks and add them to the number\n  var off = 0;\n  for (var i = number.length - 6, j = 0; i >= start; i -= 6) {\n    var w = parseHex(number, i, i + 6);\n    this.words[j] |= (w << off) & 0x3ffffff;\n    this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n    off += 24;\n    if (off >= 26) {\n      off -= 26;\n      j++;\n    }\n  }\n  if (i + 6 !== start) {\n    var w = parseHex(number, start, i + 6);\n    this.words[j] |= (w << off) & 0x3ffffff;\n    this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n  }\n  this.strip();\n};\n\nfunction parseBase(str, start, end, mul) {\n  var r = 0;\n  var len = Math.min(str.length, end);\n  for (var i = start; i < len; i++) {\n    var c = str.charCodeAt(i) - 48;\n\n    r *= mul;\n\n    // 'a'\n    if (c >= 49)\n      r += c - 49 + 0xa;\n\n    // 'A'\n    else if (c >= 17)\n      r += c - 17 + 0xa;\n\n    // '0' - '9'\n    else\n      r += c;\n  }\n  return r;\n}\n\nBN.prototype._parseBase = function _parseBase(number, base, start) {\n  // Initialize as zero\n  this.words = [ 0 ];\n  this.length = 1;\n\n  // Find length of limb in base\n  for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base)\n    limbLen++;\n  limbLen--;\n  limbPow = (limbPow / base) | 0;\n\n  var total = number.length - start;\n  var mod = total % limbLen;\n  var end = Math.min(total, total - mod) + start;\n\n  var word = 0;\n  for (var i = start; i < end; i += limbLen) {\n    word = parseBase(number, i, i + limbLen, base);\n\n    this.imuln(limbPow);\n    if (this.words[0] + word < 0x4000000)\n      this.words[0] += word;\n    else\n      this._iaddn(word);\n  }\n\n  if (mod !== 0) {\n    var pow = 1;\n    var word = parseBase(number, i, number.length, base);\n\n    for (var i = 0; i < mod; i++)\n      pow *= base;\n    this.imuln(pow);\n    if (this.words[0] + word < 0x4000000)\n      this.words[0] += word;\n    else\n      this._iaddn(word);\n  }\n};\n\nBN.prototype.copy = function copy(dest) {\n  dest.words = new Array(this.length);\n  for (var i = 0; i < this.length; i++)\n    dest.words[i] = this.words[i];\n  dest.length = this.length;\n  dest.sign = this.sign;\n  dest.red = this.red;\n};\n\nBN.prototype.clone = function clone() {\n  var r = new BN(null);\n  this.copy(r);\n  return r;\n};\n\n// Remove leading `0` from `this`\nBN.prototype.strip = function strip() {\n  while (this.length > 1 && this.words[this.length - 1] === 0)\n    this.length--;\n  return this._normSign();\n};\n\nBN.prototype._normSign = function _normSign() {\n  // -0 = 0\n  if (this.length === 1 && this.words[0] === 0)\n    this.sign = false;\n  return this;\n};\n\nBN.prototype.inspect = function inspect() {\n  return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n};\n\n/*\n\nvar zeros = [];\nvar groupSizes = [];\nvar groupBases = [];\n\nvar s = '';\nvar i = -1;\nwhile (++i < BN.wordSize) {\n  zeros[i] = s;\n  s += '0';\n}\ngroupSizes[0] = 0;\ngroupSizes[1] = 0;\ngroupBases[0] = 0;\ngroupBases[1] = 0;\nvar base = 2 - 1;\nwhile (++base < 36 + 1) {\n  var groupSize = 0;\n  var groupBase = 1;\n  while (groupBase < (1 << BN.wordSize) / base) {\n    groupBase *= base;\n    groupSize += 1;\n  }\n  groupSizes[base] = groupSize;\n  groupBases[base] = groupBase;\n}\n\n*/\n\nvar zeros = [\n  '',\n  '0',\n  '00',\n  '000',\n  '0000',\n  '00000',\n  '000000',\n  '0000000',\n  '00000000',\n  '000000000',\n  '0000000000',\n  '00000000000',\n  '000000000000',\n  '0000000000000',\n  '00000000000000',\n  '000000000000000',\n  '0000000000000000',\n  '00000000000000000',\n  '000000000000000000',\n  '0000000000000000000',\n  '00000000000000000000',\n  '000000000000000000000',\n  '0000000000000000000000',\n  '00000000000000000000000',\n  '000000000000000000000000',\n  '0000000000000000000000000'\n];\n\nvar groupSizes = [\n  0, 0,\n  25, 16, 12, 11, 10, 9, 8,\n  8, 7, 7, 7, 7, 6, 6,\n  6, 6, 6, 6, 6, 5, 5,\n  5, 5, 5, 5, 5, 5, 5,\n  5, 5, 5, 5, 5, 5, 5\n];\n\nvar groupBases = [\n  0, 0,\n  33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n  43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n  16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n  6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n  24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n];\n\nBN.prototype.toString = function toString(base, padding) {\n  base = base || 10;\n  if (base === 16 || base === 'hex') {\n    var out = '';\n    var off = 0;\n    var padding = padding | 0 || 1;\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = this.words[i];\n      var word = (((w << off) | carry) & 0xffffff).toString(16);\n      carry = (w >>> (24 - off)) & 0xffffff;\n      if (carry !== 0 || i !== this.length - 1)\n        out = zeros[6 - word.length] + word + out;\n      else\n        out = word + out;\n      off += 2;\n      if (off >= 26) {\n        off -= 26;\n        i--;\n      }\n    }\n    if (carry !== 0)\n      out = carry.toString(16) + out;\n    while (out.length % padding !== 0)\n      out = '0' + out;\n    if (this.sign)\n      out = '-' + out;\n    return out;\n  } else if (base === (base | 0) && base >= 2 && base <= 36) {\n    // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n    var groupSize = groupSizes[base];\n    // var groupBase = Math.pow(base, groupSize);\n    var groupBase = groupBases[base];\n    var out = '';\n    var c = this.clone();\n    c.sign = false;\n    while (c.cmpn(0) !== 0) {\n      var r = c.modn(groupBase).toString(base);\n      c = c.idivn(groupBase);\n\n      if (c.cmpn(0) !== 0)\n        out = zeros[groupSize - r.length] + r + out;\n      else\n        out = r + out;\n    }\n    if (this.cmpn(0) === 0)\n      out = '0' + out;\n    if (this.sign)\n      out = '-' + out;\n    return out;\n  } else {\n    assert(false, 'Base should be between 2 and 36');\n  }\n};\n\nBN.prototype.toJSON = function toJSON() {\n  return this.toString(16);\n};\n\nBN.prototype.toArray = function toArray(endian) {\n  this.strip();\n  var res = new Array(this.byteLength());\n  res[0] = 0;\n\n  var q = this.clone();\n  if (endian !== 'le') {\n    // Assume big-endian\n    for (var i = 0; q.cmpn(0) !== 0; i++) {\n      var b = q.andln(0xff);\n      q.ishrn(8);\n\n      res[res.length - i - 1] = b;\n    }\n  } else {\n    // Assume little-endian\n    for (var i = 0; q.cmpn(0) !== 0; i++) {\n      var b = q.andln(0xff);\n      q.ishrn(8);\n\n      res[i] = b;\n    }\n  }\n\n  return res;\n};\n\nif (Math.clz32) {\n  BN.prototype._countBits = function _countBits(w) {\n    return 32 - Math.clz32(w);\n  };\n} else {\n  BN.prototype._countBits = function _countBits(w) {\n    var t = w;\n    var r = 0;\n    if (t >= 0x1000) {\n      r += 13;\n      t >>>= 13;\n    }\n    if (t >= 0x40) {\n      r += 7;\n      t >>>= 7;\n    }\n    if (t >= 0x8) {\n      r += 4;\n      t >>>= 4;\n    }\n    if (t >= 0x02) {\n      r += 2;\n      t >>>= 2;\n    }\n    return r + t;\n  };\n}\n\nBN.prototype._zeroBits = function _zeroBits(w) {\n  // Short-cut\n  if (w === 0)\n    return 26;\n\n  var t = w;\n  var r = 0;\n  if ((t & 0x1fff) === 0) {\n    r += 13;\n    t >>>= 13;\n  }\n  if ((t & 0x7f) === 0) {\n    r += 7;\n    t >>>= 7;\n  }\n  if ((t & 0xf) === 0) {\n    r += 4;\n    t >>>= 4;\n  }\n  if ((t & 0x3) === 0) {\n    r += 2;\n    t >>>= 2;\n  }\n  if ((t & 0x1) === 0)\n    r++;\n  return r;\n};\n\n// Return number of used bits in a BN\nBN.prototype.bitLength = function bitLength() {\n  var hi = 0;\n  var w = this.words[this.length - 1];\n  var hi = this._countBits(w);\n  return (this.length - 1) * 26 + hi;\n};\n\n// Number of trailing zero bits\nBN.prototype.zeroBits = function zeroBits() {\n  if (this.cmpn(0) === 0)\n    return 0;\n\n  var r = 0;\n  for (var i = 0; i < this.length; i++) {\n    var b = this._zeroBits(this.words[i]);\n    r += b;\n    if (b !== 26)\n      break;\n  }\n  return r;\n};\n\nBN.prototype.byteLength = function byteLength() {\n  return Math.ceil(this.bitLength() / 8);\n};\n\n// Return negative clone of `this`\nBN.prototype.neg = function neg() {\n  if (this.cmpn(0) === 0)\n    return this.clone();\n\n  var r = this.clone();\n  r.sign = !this.sign;\n  return r;\n};\n\n\n// Or `num` with `this` in-place\nBN.prototype.ior = function ior(num) {\n  this.sign = this.sign || num.sign;\n\n  while (this.length < num.length)\n    this.words[this.length++] = 0;\n\n  for (var i = 0; i < num.length; i++)\n    this.words[i] = this.words[i] | num.words[i];\n\n  return this.strip();\n};\n\n\n// Or `num` with `this`\nBN.prototype.or = function or(num) {\n  if (this.length > num.length)\n    return this.clone().ior(num);\n  else\n    return num.clone().ior(this);\n};\n\n\n// And `num` with `this` in-place\nBN.prototype.iand = function iand(num) {\n  this.sign = this.sign && num.sign;\n\n  // b = min-length(num, this)\n  var b;\n  if (this.length > num.length)\n    b = num;\n  else\n    b = this;\n\n  for (var i = 0; i < b.length; i++)\n    this.words[i] = this.words[i] & num.words[i];\n\n  this.length = b.length;\n\n  return this.strip();\n};\n\n\n// And `num` with `this`\nBN.prototype.and = function and(num) {\n  if (this.length > num.length)\n    return this.clone().iand(num);\n  else\n    return num.clone().iand(this);\n};\n\n\n// Xor `num` with `this` in-place\nBN.prototype.ixor = function ixor(num) {\n  this.sign = this.sign || num.sign;\n\n  // a.length > b.length\n  var a;\n  var b;\n  if (this.length > num.length) {\n    a = this;\n    b = num;\n  } else {\n    a = num;\n    b = this;\n  }\n\n  for (var i = 0; i < b.length; i++)\n    this.words[i] = a.words[i] ^ b.words[i];\n\n  if (this !== a)\n    for (; i < a.length; i++)\n      this.words[i] = a.words[i];\n\n  this.length = a.length;\n\n  return this.strip();\n};\n\n\n// Xor `num` with `this`\nBN.prototype.xor = function xor(num) {\n  if (this.length > num.length)\n    return this.clone().ixor(num);\n  else\n    return num.clone().ixor(this);\n};\n\n\n// Set `bit` of `this`\nBN.prototype.setn = function setn(bit, val) {\n  assert(typeof bit === 'number' && bit >= 0);\n\n  var off = (bit / 26) | 0;\n  var wbit = bit % 26;\n\n  while (this.length <= off)\n    this.words[this.length++] = 0;\n\n  if (val)\n    this.words[off] = this.words[off] | (1 << wbit);\n  else\n    this.words[off] = this.words[off] & ~(1 << wbit);\n\n  return this.strip();\n};\n\n\n// Add `num` to `this` in-place\nBN.prototype.iadd = function iadd(num) {\n  // negative + positive\n  if (this.sign && !num.sign) {\n    this.sign = false;\n    var r = this.isub(num);\n    this.sign = !this.sign;\n    return this._normSign();\n\n  // positive + negative\n  } else if (!this.sign && num.sign) {\n    num.sign = false;\n    var r = this.isub(num);\n    num.sign = true;\n    return r._normSign();\n  }\n\n  // a.length > b.length\n  var a;\n  var b;\n  if (this.length > num.length) {\n    a = this;\n    b = num;\n  } else {\n    a = num;\n    b = this;\n  }\n\n  var carry = 0;\n  for (var i = 0; i < b.length; i++) {\n    var r = a.words[i] + b.words[i] + carry;\n    this.words[i] = r & 0x3ffffff;\n    carry = r >>> 26;\n  }\n  for (; carry !== 0 && i < a.length; i++) {\n    var r = a.words[i] + carry;\n    this.words[i] = r & 0x3ffffff;\n    carry = r >>> 26;\n  }\n\n  this.length = a.length;\n  if (carry !== 0) {\n    this.words[this.length] = carry;\n    this.length++;\n  // Copy the rest of the words\n  } else if (a !== this) {\n    for (; i < a.length; i++)\n      this.words[i] = a.words[i];\n  }\n\n  return this;\n};\n\n// Add `num` to `this`\nBN.prototype.add = function add(num) {\n  if (num.sign && !this.sign) {\n    num.sign = false;\n    var res = this.sub(num);\n    num.sign = true;\n    return res;\n  } else if (!num.sign && this.sign) {\n    this.sign = false;\n    var res = num.sub(this);\n    this.sign = true;\n    return res;\n  }\n\n  if (this.length > num.length)\n    return this.clone().iadd(num);\n  else\n    return num.clone().iadd(this);\n};\n\n// Subtract `num` from `this` in-place\nBN.prototype.isub = function isub(num) {\n  // this - (-num) = this + num\n  if (num.sign) {\n    num.sign = false;\n    var r = this.iadd(num);\n    num.sign = true;\n    return r._normSign();\n\n  // -this - num = -(this + num)\n  } else if (this.sign) {\n    this.sign = false;\n    this.iadd(num);\n    this.sign = true;\n    return this._normSign();\n  }\n\n  // At this point both numbers are positive\n  var cmp = this.cmp(num);\n\n  // Optimization - zeroify\n  if (cmp === 0) {\n    this.sign = false;\n    this.length = 1;\n    this.words[0] = 0;\n    return this;\n  }\n\n  // a > b\n  var a;\n  var b;\n  if (cmp > 0) {\n    a = this;\n    b = num;\n  } else {\n    a = num;\n    b = this;\n  }\n\n  var carry = 0;\n  for (var i = 0; i < b.length; i++) {\n    var r = a.words[i] - b.words[i] + carry;\n    carry = r >> 26;\n    this.words[i] = r & 0x3ffffff;\n  }\n  for (; carry !== 0 && i < a.length; i++) {\n    var r = a.words[i] + carry;\n    carry = r >> 26;\n    this.words[i] = r & 0x3ffffff;\n  }\n\n  // Copy rest of the words\n  if (carry === 0 && i < a.length && a !== this)\n    for (; i < a.length; i++)\n      this.words[i] = a.words[i];\n  this.length = Math.max(this.length, i);\n\n  if (a !== this)\n    this.sign = true;\n\n  return this.strip();\n};\n\n// Subtract `num` from `this`\nBN.prototype.sub = function sub(num) {\n  return this.clone().isub(num);\n};\n\n/*\n// NOTE: This could be potentionally used to generate loop-less multiplications\nfunction _genCombMulTo(alen, blen) {\n  var len = alen + blen - 1;\n  var src = [\n    'var a = this.words, b = num.words, o = out.words, c = 0, w, ' +\n        'mask = 0x3ffffff, shift = 0x4000000;',\n    'out.length = ' + len + ';'\n  ];\n  for (var k = 0; k < len; k++) {\n    var minJ = Math.max(0, k - alen + 1);\n    var maxJ = Math.min(k, blen - 1);\n\n    for (var j = minJ; j <= maxJ; j++) {\n      var i = k - j;\n      var mul = 'a[' + i + '] * b[' + j + ']';\n\n      if (j === minJ) {\n        src.push('w = ' + mul + ' + c;');\n        src.push('c = (w / shift) | 0;');\n      } else {\n        src.push('w += ' + mul + ';');\n        src.push('c += (w / shift) | 0;');\n      }\n      src.push('w &= mask;');\n    }\n    src.push('o[' + k + '] = w;');\n  }\n  src.push('if (c !== 0) {',\n           '  o[' + k + '] = c;',\n           '  out.length++;',\n           '}',\n           'return out;');\n\n  return src.join('\\n');\n}\n*/\n\nBN.prototype._smallMulTo = function _smallMulTo(num, out) {\n  out.sign = num.sign !== this.sign;\n  out.length = this.length + num.length;\n\n  var carry = 0;\n  for (var k = 0; k < out.length - 1; k++) {\n    // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n    // note that ncarry could be >= 0x3ffffff\n    var ncarry = carry >>> 26;\n    var rword = carry & 0x3ffffff;\n    var maxJ = Math.min(k, num.length - 1);\n    for (var j = Math.max(0, k - this.length + 1); j <= maxJ; j++) {\n      var i = k - j;\n      var a = this.words[i] | 0;\n      var b = num.words[j] | 0;\n      var r = a * b;\n\n      var lo = r & 0x3ffffff;\n      ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n      lo = (lo + rword) | 0;\n      rword = lo & 0x3ffffff;\n      ncarry = (ncarry + (lo >>> 26)) | 0;\n    }\n    out.words[k] = rword;\n    carry = ncarry;\n  }\n  if (carry !== 0) {\n    out.words[k] = carry;\n  } else {\n    out.length--;\n  }\n\n  return out.strip();\n};\n\nBN.prototype._bigMulTo = function _bigMulTo(num, out) {\n  out.sign = num.sign !== this.sign;\n  out.length = this.length + num.length;\n\n  var carry = 0;\n  var hncarry = 0;\n  for (var k = 0; k < out.length - 1; k++) {\n    // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n    // note that ncarry could be >= 0x3ffffff\n    var ncarry = hncarry;\n    hncarry = 0;\n    var rword = carry & 0x3ffffff;\n    var maxJ = Math.min(k, num.length - 1);\n    for (var j = Math.max(0, k - this.length + 1); j <= maxJ; j++) {\n      var i = k - j;\n      var a = this.words[i] | 0;\n      var b = num.words[j] | 0;\n      var r = a * b;\n\n      var lo = r & 0x3ffffff;\n      ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n      lo = (lo + rword) | 0;\n      rword = lo & 0x3ffffff;\n      ncarry = (ncarry + (lo >>> 26)) | 0;\n\n      hncarry += ncarry >>> 26;\n      ncarry &= 0x3ffffff;\n    }\n    out.words[k] = rword;\n    carry = ncarry;\n    ncarry = hncarry;\n  }\n  if (carry !== 0) {\n    out.words[k] = carry;\n  } else {\n    out.length--;\n  }\n\n  return out.strip();\n};\n\nBN.prototype.mulTo = function mulTo(num, out) {\n  var res;\n  if (this.length + num.length < 63)\n    res = this._smallMulTo(num, out);\n  else\n    res = this._bigMulTo(num, out);\n  return res;\n};\n\n// Multiply `this` by `num`\nBN.prototype.mul = function mul(num) {\n  var out = new BN(null);\n  out.words = new Array(this.length + num.length);\n  return this.mulTo(num, out);\n};\n\n// In-place Multiplication\nBN.prototype.imul = function imul(num) {\n  if (this.cmpn(0) === 0 || num.cmpn(0) === 0) {\n    this.words[0] = 0;\n    this.length = 1;\n    return this;\n  }\n\n  var tlen = this.length;\n  var nlen = num.length;\n\n  this.sign = num.sign !== this.sign;\n  this.length = this.length + num.length;\n  this.words[this.length - 1] = 0;\n\n  for (var k = this.length - 2; k >= 0; k--) {\n    // Sum all words with the same `i + j = k` and accumulate `carry`,\n    // note that carry could be >= 0x3ffffff\n    var carry = 0;\n    var rword = 0;\n    var maxJ = Math.min(k, nlen - 1);\n    for (var j = Math.max(0, k - tlen + 1); j <= maxJ; j++) {\n      var i = k - j;\n      var a = this.words[i];\n      var b = num.words[j];\n      var r = a * b;\n\n      var lo = r & 0x3ffffff;\n      carry += (r / 0x4000000) | 0;\n      lo += rword;\n      rword = lo & 0x3ffffff;\n      carry += lo >>> 26;\n    }\n    this.words[k] = rword;\n    this.words[k + 1] += carry;\n    carry = 0;\n  }\n\n  // Propagate overflows\n  var carry = 0;\n  for (var i = 1; i < this.length; i++) {\n    var w = this.words[i] + carry;\n    this.words[i] = w & 0x3ffffff;\n    carry = w >>> 26;\n  }\n\n  return this.strip();\n};\n\nBN.prototype.imuln = function imuln(num) {\n  assert(typeof num === 'number');\n\n  // Carry\n  var carry = 0;\n  for (var i = 0; i < this.length; i++) {\n    var w = this.words[i] * num;\n    var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n    carry >>= 26;\n    carry += (w / 0x4000000) | 0;\n    // NOTE: lo is 27bit maximum\n    carry += lo >>> 26;\n    this.words[i] = lo & 0x3ffffff;\n  }\n\n  if (carry !== 0) {\n    this.words[i] = carry;\n    this.length++;\n  }\n\n  return this;\n};\n\nBN.prototype.muln = function muln(num) {\n  return this.clone().imuln(num);\n};\n\n// `this` * `this`\nBN.prototype.sqr = function sqr() {\n  return this.mul(this);\n};\n\n// `this` * `this` in-place\nBN.prototype.isqr = function isqr() {\n  return this.mul(this);\n};\n\n// Shift-left in-place\nBN.prototype.ishln = function ishln(bits) {\n  assert(typeof bits === 'number' && bits >= 0);\n  var r = bits % 26;\n  var s = (bits - r) / 26;\n  var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n\n  if (r !== 0) {\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var newCarry = this.words[i] & carryMask;\n      var c = (this.words[i] - newCarry) << r;\n      this.words[i] = c | carry;\n      carry = newCarry >>> (26 - r);\n    }\n    if (carry) {\n      this.words[i] = carry;\n      this.length++;\n    }\n  }\n\n  if (s !== 0) {\n    for (var i = this.length - 1; i >= 0; i--)\n      this.words[i + s] = this.words[i];\n    for (var i = 0; i < s; i++)\n      this.words[i] = 0;\n    this.length += s;\n  }\n\n  return this.strip();\n};\n\n// Shift-right in-place\n// NOTE: `hint` is a lowest bit before trailing zeroes\n// NOTE: if `extended` is present - it will be filled with destroyed bits\nBN.prototype.ishrn = function ishrn(bits, hint, extended) {\n  assert(typeof bits === 'number' && bits >= 0);\n  var h;\n  if (hint)\n    h = (hint - (hint % 26)) / 26;\n  else\n    h = 0;\n\n  var r = bits % 26;\n  var s = Math.min((bits - r) / 26, this.length);\n  var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n  var maskedWords = extended;\n\n  h -= s;\n  h = Math.max(0, h);\n\n  // Extended mode, copy masked part\n  if (maskedWords) {\n    for (var i = 0; i < s; i++)\n      maskedWords.words[i] = this.words[i];\n    maskedWords.length = s;\n  }\n\n  if (s === 0) {\n    // No-op, we should not move anything at all\n  } else if (this.length > s) {\n    this.length -= s;\n    for (var i = 0; i < this.length; i++)\n      this.words[i] = this.words[i + s];\n  } else {\n    this.words[0] = 0;\n    this.length = 1;\n  }\n\n  var carry = 0;\n  for (var i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n    var word = this.words[i];\n    this.words[i] = (carry << (26 - r)) | (word >>> r);\n    carry = word & mask;\n  }\n\n  // Push carried bits as a mask\n  if (maskedWords && carry !== 0)\n    maskedWords.words[maskedWords.length++] = carry;\n\n  if (this.length === 0) {\n    this.words[0] = 0;\n    this.length = 1;\n  }\n\n  this.strip();\n\n  return this;\n};\n\n// Shift-left\nBN.prototype.shln = function shln(bits) {\n  return this.clone().ishln(bits);\n};\n\n// Shift-right\nBN.prototype.shrn = function shrn(bits) {\n  return this.clone().ishrn(bits);\n};\n\n// Test if n bit is set\nBN.prototype.testn = function testn(bit) {\n  assert(typeof bit === 'number' && bit >= 0);\n  var r = bit % 26;\n  var s = (bit - r) / 26;\n  var q = 1 << r;\n\n  // Fast case: bit is much higher than all existing words\n  if (this.length <= s) {\n    return false;\n  }\n\n  // Check bit and return\n  var w = this.words[s];\n\n  return !!(w & q);\n};\n\n// Return only lowers bits of number (in-place)\nBN.prototype.imaskn = function imaskn(bits) {\n  assert(typeof bits === 'number' && bits >= 0);\n  var r = bits % 26;\n  var s = (bits - r) / 26;\n\n  assert(!this.sign, 'imaskn works only with positive numbers');\n\n  if (r !== 0)\n    s++;\n  this.length = Math.min(s, this.length);\n\n  if (r !== 0) {\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    this.words[this.length - 1] &= mask;\n  }\n\n  return this.strip();\n};\n\n// Return only lowers bits of number\nBN.prototype.maskn = function maskn(bits) {\n  return this.clone().imaskn(bits);\n};\n\n// Add plain number `num` to `this`\nBN.prototype.iaddn = function iaddn(num) {\n  assert(typeof num === 'number');\n  if (num < 0)\n    return this.isubn(-num);\n\n  // Possible sign change\n  if (this.sign) {\n    if (this.length === 1 && this.words[0] < num) {\n      this.words[0] = num - this.words[0];\n      this.sign = false;\n      return this;\n    }\n\n    this.sign = false;\n    this.isubn(num);\n    this.sign = true;\n    return this;\n  }\n\n  // Add without checks\n  return this._iaddn(num);\n};\n\nBN.prototype._iaddn = function _iaddn(num) {\n  this.words[0] += num;\n\n  // Carry\n  for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n    this.words[i] -= 0x4000000;\n    if (i === this.length - 1)\n      this.words[i + 1] = 1;\n    else\n      this.words[i + 1]++;\n  }\n  this.length = Math.max(this.length, i + 1);\n\n  return this;\n};\n\n// Subtract plain number `num` from `this`\nBN.prototype.isubn = function isubn(num) {\n  assert(typeof num === 'number');\n  if (num < 0)\n    return this.iaddn(-num);\n\n  if (this.sign) {\n    this.sign = false;\n    this.iaddn(num);\n    this.sign = true;\n    return this;\n  }\n\n  this.words[0] -= num;\n\n  // Carry\n  for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n    this.words[i] += 0x4000000;\n    this.words[i + 1] -= 1;\n  }\n\n  return this.strip();\n};\n\nBN.prototype.addn = function addn(num) {\n  return this.clone().iaddn(num);\n};\n\nBN.prototype.subn = function subn(num) {\n  return this.clone().isubn(num);\n};\n\nBN.prototype.iabs = function iabs() {\n  this.sign = false;\n\n  return this;\n};\n\nBN.prototype.abs = function abs() {\n  return this.clone().iabs();\n};\n\nBN.prototype._ishlnsubmul = function _ishlnsubmul(num, mul, shift) {\n  // Bigger storage is needed\n  var len = num.length + shift;\n  var i;\n  if (this.words.length < len) {\n    var t = new Array(len);\n    for (var i = 0; i < this.length; i++)\n      t[i] = this.words[i];\n    this.words = t;\n  } else {\n    i = this.length;\n  }\n\n  // Zeroify rest\n  this.length = Math.max(this.length, len);\n  for (; i < this.length; i++)\n    this.words[i] = 0;\n\n  var carry = 0;\n  for (var i = 0; i < num.length; i++) {\n    var w = this.words[i + shift] + carry;\n    var right = num.words[i] * mul;\n    w -= right & 0x3ffffff;\n    carry = (w >> 26) - ((right / 0x4000000) | 0);\n    this.words[i + shift] = w & 0x3ffffff;\n  }\n  for (; i < this.length - shift; i++) {\n    var w = this.words[i + shift] + carry;\n    carry = w >> 26;\n    this.words[i + shift] = w & 0x3ffffff;\n  }\n\n  if (carry === 0)\n    return this.strip();\n\n  // Subtraction overflow\n  assert(carry === -1);\n  carry = 0;\n  for (var i = 0; i < this.length; i++) {\n    var w = -this.words[i] + carry;\n    carry = w >> 26;\n    this.words[i] = w & 0x3ffffff;\n  }\n  this.sign = true;\n\n  return this.strip();\n};\n\nBN.prototype._wordDiv = function _wordDiv(num, mode) {\n  var shift = this.length - num.length;\n\n  var a = this.clone();\n  var b = num;\n\n  // Normalize\n  var bhi = b.words[b.length - 1];\n  var bhiBits = this._countBits(bhi);\n  shift = 26 - bhiBits;\n  if (shift !== 0) {\n    b = b.shln(shift);\n    a.ishln(shift);\n    bhi = b.words[b.length - 1];\n  }\n\n  // Initialize quotient\n  var m = a.length - b.length;\n  var q;\n\n  if (mode !== 'mod') {\n    q = new BN(null);\n    q.length = m + 1;\n    q.words = new Array(q.length);\n    for (var i = 0; i < q.length; i++)\n      q.words[i] = 0;\n  }\n\n  var diff = a.clone()._ishlnsubmul(b, 1, m);\n  if (!diff.sign) {\n    a = diff;\n    if (q)\n      q.words[m] = 1;\n  }\n\n  for (var j = m - 1; j >= 0; j--) {\n    var qj = a.words[b.length + j] * 0x4000000 + a.words[b.length + j - 1];\n\n    // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n    // (0x7ffffff)\n    qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n    a._ishlnsubmul(b, qj, j);\n    while (a.sign) {\n      qj--;\n      a.sign = false;\n      a._ishlnsubmul(b, 1, j);\n      if (a.cmpn(0) !== 0)\n        a.sign = !a.sign;\n    }\n    if (q)\n      q.words[j] = qj;\n  }\n  if (q)\n    q.strip();\n  a.strip();\n\n  // Denormalize\n  if (mode !== 'div' && shift !== 0)\n    a.ishrn(shift);\n  return { div: q ? q : null, mod: a };\n};\n\nBN.prototype.divmod = function divmod(num, mode) {\n  assert(num.cmpn(0) !== 0);\n\n  if (this.sign && !num.sign) {\n    var res = this.neg().divmod(num, mode);\n    var div;\n    var mod;\n    if (mode !== 'mod')\n      div = res.div.neg();\n    if (mode !== 'div')\n      mod = res.mod.cmpn(0) === 0 ? res.mod : num.sub(res.mod);\n    return {\n      div: div,\n      mod: mod\n    };\n  } else if (!this.sign && num.sign) {\n    var res = this.divmod(num.neg(), mode);\n    var div;\n    if (mode !== 'mod')\n      div = res.div.neg();\n    return { div: div, mod: res.mod };\n  } else if (this.sign && num.sign) {\n    return this.neg().divmod(num.neg(), mode);\n  }\n\n  // Both numbers are positive at this point\n\n  // Strip both numbers to approximate shift value\n  if (num.length > this.length || this.cmp(num) < 0)\n    return { div: new BN(0), mod: this };\n\n  // Very short reduction\n  if (num.length === 1) {\n    if (mode === 'div')\n      return { div: this.divn(num.words[0]), mod: null };\n    else if (mode === 'mod')\n      return { div: null, mod: new BN(this.modn(num.words[0])) };\n    return {\n      div: this.divn(num.words[0]),\n      mod: new BN(this.modn(num.words[0]))\n    };\n  }\n\n  return this._wordDiv(num, mode);\n};\n\n// Find `this` / `num`\nBN.prototype.div = function div(num) {\n  return this.divmod(num, 'div').div;\n};\n\n// Find `this` % `num`\nBN.prototype.mod = function mod(num) {\n  return this.divmod(num, 'mod').mod;\n};\n\n// Find Round(`this` / `num`)\nBN.prototype.divRound = function divRound(num) {\n  var dm = this.divmod(num);\n\n  // Fast case - exact division\n  if (dm.mod.cmpn(0) === 0)\n    return dm.div;\n\n  var mod = dm.div.sign ? dm.mod.isub(num) : dm.mod;\n\n  var half = num.shrn(1);\n  var r2 = num.andln(1);\n  var cmp = mod.cmp(half);\n\n  // Round down\n  if (cmp < 0 || r2 === 1 && cmp === 0)\n    return dm.div;\n\n  // Round up\n  return dm.div.sign ? dm.div.isubn(1) : dm.div.iaddn(1);\n};\n\nBN.prototype.modn = function modn(num) {\n  assert(num <= 0x3ffffff);\n  var p = (1 << 26) % num;\n\n  var acc = 0;\n  for (var i = this.length - 1; i >= 0; i--)\n    acc = (p * acc + this.words[i]) % num;\n\n  return acc;\n};\n\n// In-place division by number\nBN.prototype.idivn = function idivn(num) {\n  assert(num <= 0x3ffffff);\n\n  var carry = 0;\n  for (var i = this.length - 1; i >= 0; i--) {\n    var w = this.words[i] + carry * 0x4000000;\n    this.words[i] = (w / num) | 0;\n    carry = w % num;\n  }\n\n  return this.strip();\n};\n\nBN.prototype.divn = function divn(num) {\n  return this.clone().idivn(num);\n};\n\nBN.prototype.egcd = function egcd(p) {\n  assert(!p.sign);\n  assert(p.cmpn(0) !== 0);\n\n  var x = this;\n  var y = p.clone();\n\n  if (x.sign)\n    x = x.mod(p);\n  else\n    x = x.clone();\n\n  // A * x + B * y = x\n  var A = new BN(1);\n  var B = new BN(0);\n\n  // C * x + D * y = y\n  var C = new BN(0);\n  var D = new BN(1);\n\n  var g = 0;\n\n  while (x.isEven() && y.isEven()) {\n    x.ishrn(1);\n    y.ishrn(1);\n    ++g;\n  }\n\n  var yp = y.clone();\n  var xp = x.clone();\n\n  while (x.cmpn(0) !== 0) {\n    while (x.isEven()) {\n      x.ishrn(1);\n      if (A.isEven() && B.isEven()) {\n        A.ishrn(1);\n        B.ishrn(1);\n      } else {\n        A.iadd(yp).ishrn(1);\n        B.isub(xp).ishrn(1);\n      }\n    }\n\n    while (y.isEven()) {\n      y.ishrn(1);\n      if (C.isEven() && D.isEven()) {\n        C.ishrn(1);\n        D.ishrn(1);\n      } else {\n        C.iadd(yp).ishrn(1);\n        D.isub(xp).ishrn(1);\n      }\n    }\n\n    if (x.cmp(y) >= 0) {\n      x.isub(y);\n      A.isub(C);\n      B.isub(D);\n    } else {\n      y.isub(x);\n      C.isub(A);\n      D.isub(B);\n    }\n  }\n\n  return {\n    a: C,\n    b: D,\n    gcd: y.ishln(g)\n  };\n};\n\n// This is reduced incarnation of the binary EEA\n// above, designated to invert members of the\n// _prime_ fields F(p) at a maximal speed\nBN.prototype._invmp = function _invmp(p) {\n  assert(!p.sign);\n  assert(p.cmpn(0) !== 0);\n\n  var a = this;\n  var b = p.clone();\n\n  if (a.sign)\n    a = a.mod(p);\n  else\n    a = a.clone();\n\n  var x1 = new BN(1);\n  var x2 = new BN(0);\n\n  var delta = b.clone();\n\n  while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n    while (a.isEven()) {\n      a.ishrn(1);\n      if (x1.isEven())\n        x1.ishrn(1);\n      else\n        x1.iadd(delta).ishrn(1);\n    }\n    while (b.isEven()) {\n      b.ishrn(1);\n      if (x2.isEven())\n        x2.ishrn(1);\n      else\n        x2.iadd(delta).ishrn(1);\n    }\n    if (a.cmp(b) >= 0) {\n      a.isub(b);\n      x1.isub(x2);\n    } else {\n      b.isub(a);\n      x2.isub(x1);\n    }\n  }\n  if (a.cmpn(1) === 0)\n    return x1;\n  else\n    return x2;\n};\n\nBN.prototype.gcd = function gcd(num) {\n  if (this.cmpn(0) === 0)\n    return num.clone();\n  if (num.cmpn(0) === 0)\n    return this.clone();\n\n  var a = this.clone();\n  var b = num.clone();\n  a.sign = false;\n  b.sign = false;\n\n  // Remove common factor of two\n  for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n    a.ishrn(1);\n    b.ishrn(1);\n  }\n\n  do {\n    while (a.isEven())\n      a.ishrn(1);\n    while (b.isEven())\n      b.ishrn(1);\n\n    var r = a.cmp(b);\n    if (r < 0) {\n      // Swap `a` and `b` to make `a` always bigger than `b`\n      var t = a;\n      a = b;\n      b = t;\n    } else if (r === 0 || b.cmpn(1) === 0) {\n      break;\n    }\n\n    a.isub(b);\n  } while (true);\n\n  return b.ishln(shift);\n};\n\n// Invert number in the field F(num)\nBN.prototype.invm = function invm(num) {\n  return this.egcd(num).a.mod(num);\n};\n\nBN.prototype.isEven = function isEven() {\n  return (this.words[0] & 1) === 0;\n};\n\nBN.prototype.isOdd = function isOdd() {\n  return (this.words[0] & 1) === 1;\n};\n\n// And first word and num\nBN.prototype.andln = function andln(num) {\n  return this.words[0] & num;\n};\n\n// Increment at the bit position in-line\nBN.prototype.bincn = function bincn(bit) {\n  assert(typeof bit === 'number');\n  var r = bit % 26;\n  var s = (bit - r) / 26;\n  var q = 1 << r;\n\n  // Fast case: bit is much higher than all existing words\n  if (this.length <= s) {\n    for (var i = this.length; i < s + 1; i++)\n      this.words[i] = 0;\n    this.words[s] |= q;\n    this.length = s + 1;\n    return this;\n  }\n\n  // Add bit and propagate, if needed\n  var carry = q;\n  for (var i = s; carry !== 0 && i < this.length; i++) {\n    var w = this.words[i];\n    w += carry;\n    carry = w >>> 26;\n    w &= 0x3ffffff;\n    this.words[i] = w;\n  }\n  if (carry !== 0) {\n    this.words[i] = carry;\n    this.length++;\n  }\n  return this;\n};\n\nBN.prototype.cmpn = function cmpn(num) {\n  var sign = num < 0;\n  if (sign)\n    num = -num;\n\n  if (this.sign && !sign)\n    return -1;\n  else if (!this.sign && sign)\n    return 1;\n\n  num &= 0x3ffffff;\n  this.strip();\n\n  var res;\n  if (this.length > 1) {\n    res = 1;\n  } else {\n    var w = this.words[0];\n    res = w === num ? 0 : w < num ? -1 : 1;\n  }\n  if (this.sign)\n    res = -res;\n  return res;\n};\n\n// Compare two numbers and return:\n// 1 - if `this` > `num`\n// 0 - if `this` == `num`\n// -1 - if `this` < `num`\nBN.prototype.cmp = function cmp(num) {\n  if (this.sign && !num.sign)\n    return -1;\n  else if (!this.sign && num.sign)\n    return 1;\n\n  var res = this.ucmp(num);\n  if (this.sign)\n    return -res;\n  else\n    return res;\n};\n\n// Unsigned comparison\nBN.prototype.ucmp = function ucmp(num) {\n  // At this point both numbers have the same sign\n  if (this.length > num.length)\n    return 1;\n  else if (this.length < num.length)\n    return -1;\n\n  var res = 0;\n  for (var i = this.length - 1; i >= 0; i--) {\n    var a = this.words[i];\n    var b = num.words[i];\n\n    if (a === b)\n      continue;\n    if (a < b)\n      res = -1;\n    else if (a > b)\n      res = 1;\n    break;\n  }\n  return res;\n};\n\n//\n// A reduce context, could be using montgomery or something better, depending\n// on the `m` itself.\n//\nBN.red = function red(num) {\n  return new Red(num);\n};\n\nBN.prototype.toRed = function toRed(ctx) {\n  assert(!this.red, 'Already a number in reduction context');\n  assert(!this.sign, 'red works only with positives');\n  return ctx.convertTo(this)._forceRed(ctx);\n};\n\nBN.prototype.fromRed = function fromRed() {\n  assert(this.red, 'fromRed works only with numbers in reduction context');\n  return this.red.convertFrom(this);\n};\n\nBN.prototype._forceRed = function _forceRed(ctx) {\n  this.red = ctx;\n  return this;\n};\n\nBN.prototype.forceRed = function forceRed(ctx) {\n  assert(!this.red, 'Already a number in reduction context');\n  return this._forceRed(ctx);\n};\n\nBN.prototype.redAdd = function redAdd(num) {\n  assert(this.red, 'redAdd works only with red numbers');\n  return this.red.add(this, num);\n};\n\nBN.prototype.redIAdd = function redIAdd(num) {\n  assert(this.red, 'redIAdd works only with red numbers');\n  return this.red.iadd(this, num);\n};\n\nBN.prototype.redSub = function redSub(num) {\n  assert(this.red, 'redSub works only with red numbers');\n  return this.red.sub(this, num);\n};\n\nBN.prototype.redISub = function redISub(num) {\n  assert(this.red, 'redISub works only with red numbers');\n  return this.red.isub(this, num);\n};\n\nBN.prototype.redShl = function redShl(num) {\n  assert(this.red, 'redShl works only with red numbers');\n  return this.red.shl(this, num);\n};\n\nBN.prototype.redMul = function redMul(num) {\n  assert(this.red, 'redMul works only with red numbers');\n  this.red._verify2(this, num);\n  return this.red.mul(this, num);\n};\n\nBN.prototype.redIMul = function redIMul(num) {\n  assert(this.red, 'redMul works only with red numbers');\n  this.red._verify2(this, num);\n  return this.red.imul(this, num);\n};\n\nBN.prototype.redSqr = function redSqr() {\n  assert(this.red, 'redSqr works only with red numbers');\n  this.red._verify1(this);\n  return this.red.sqr(this);\n};\n\nBN.prototype.redISqr = function redISqr() {\n  assert(this.red, 'redISqr works only with red numbers');\n  this.red._verify1(this);\n  return this.red.isqr(this);\n};\n\n// Square root over p\nBN.prototype.redSqrt = function redSqrt() {\n  assert(this.red, 'redSqrt works only with red numbers');\n  this.red._verify1(this);\n  return this.red.sqrt(this);\n};\n\nBN.prototype.redInvm = function redInvm() {\n  assert(this.red, 'redInvm works only with red numbers');\n  this.red._verify1(this);\n  return this.red.invm(this);\n};\n\n// Return negative clone of `this` % `red modulo`\nBN.prototype.redNeg = function redNeg() {\n  assert(this.red, 'redNeg works only with red numbers');\n  this.red._verify1(this);\n  return this.red.neg(this);\n};\n\nBN.prototype.redPow = function redPow(num) {\n  assert(this.red && !num.red, 'redPow(normalNum)');\n  this.red._verify1(this);\n  return this.red.pow(this, num);\n};\n\n// Prime numbers with efficient reduction\nvar primes = {\n  k256: null,\n  p224: null,\n  p192: null,\n  p25519: null\n};\n\n// Pseudo-Mersenne prime\nfunction MPrime(name, p) {\n  // P = 2 ^ N - K\n  this.name = name;\n  this.p = new BN(p, 16);\n  this.n = this.p.bitLength();\n  this.k = new BN(1).ishln(this.n).isub(this.p);\n\n  this.tmp = this._tmp();\n}\n\nMPrime.prototype._tmp = function _tmp() {\n  var tmp = new BN(null);\n  tmp.words = new Array(Math.ceil(this.n / 13));\n  return tmp;\n};\n\nMPrime.prototype.ireduce = function ireduce(num) {\n  // Assumes that `num` is less than `P^2`\n  // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n  var r = num;\n  var rlen;\n\n  do {\n    this.split(r, this.tmp);\n    r = this.imulK(r);\n    r = r.iadd(this.tmp);\n    rlen = r.bitLength();\n  } while (rlen > this.n);\n\n  var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n  if (cmp === 0) {\n    r.words[0] = 0;\n    r.length = 1;\n  } else if (cmp > 0) {\n    r.isub(this.p);\n  } else {\n    r.strip();\n  }\n\n  return r;\n};\n\nMPrime.prototype.split = function split(input, out) {\n  input.ishrn(this.n, 0, out);\n};\n\nMPrime.prototype.imulK = function imulK(num) {\n  return num.imul(this.k);\n};\n\nfunction K256() {\n  MPrime.call(\n    this,\n    'k256',\n    'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n}\ninherits(K256, MPrime);\n\nK256.prototype.split = function split(input, output) {\n  // 256 = 9 * 26 + 22\n  var mask = 0x3fffff;\n\n  var outLen = Math.min(input.length, 9);\n  for (var i = 0; i < outLen; i++)\n    output.words[i] = input.words[i];\n  output.length = outLen;\n\n  if (input.length <= 9) {\n    input.words[0] = 0;\n    input.length = 1;\n    return;\n  }\n\n  // Shift by 9 limbs\n  var prev = input.words[9];\n  output.words[output.length++] = prev & mask;\n\n  for (var i = 10; i < input.length; i++) {\n    var next = input.words[i];\n    input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n    prev = next;\n  }\n  input.words[i - 10] = prev >>> 22;\n  input.length -= 9;\n};\n\nK256.prototype.imulK = function imulK(num) {\n  // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n  num.words[num.length] = 0;\n  num.words[num.length + 1] = 0;\n  num.length += 2;\n\n  // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n  var hi;\n  var lo = 0;\n  for (var i = 0; i < num.length; i++) {\n    var w = num.words[i];\n    hi = w * 0x40;\n    lo += w * 0x3d1;\n    hi += (lo / 0x4000000) | 0;\n    lo &= 0x3ffffff;\n\n    num.words[i] = lo;\n\n    lo = hi;\n  }\n\n  // Fast length reduction\n  if (num.words[num.length - 1] === 0) {\n    num.length--;\n    if (num.words[num.length - 1] === 0)\n      num.length--;\n  }\n  return num;\n};\n\nfunction P224() {\n  MPrime.call(\n    this,\n    'p224',\n    'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n}\ninherits(P224, MPrime);\n\nfunction P192() {\n  MPrime.call(\n    this,\n    'p192',\n    'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n}\ninherits(P192, MPrime);\n\nfunction P25519() {\n  // 2 ^ 255 - 19\n  MPrime.call(\n    this,\n    '25519',\n    '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n}\ninherits(P25519, MPrime);\n\nP25519.prototype.imulK = function imulK(num) {\n  // K = 0x13\n  var carry = 0;\n  for (var i = 0; i < num.length; i++) {\n    var hi = num.words[i] * 0x13 + carry;\n    var lo = hi & 0x3ffffff;\n    hi >>>= 26;\n\n    num.words[i] = lo;\n    carry = hi;\n  }\n  if (carry !== 0)\n    num.words[num.length++] = carry;\n  return num;\n};\n\n// Exported mostly for testing purposes, use plain name instead\nBN._prime = function prime(name) {\n  // Cached version of prime\n  if (primes[name])\n    return primes[name];\n\n  var prime;\n  if (name === 'k256')\n    prime = new K256();\n  else if (name === 'p224')\n    prime = new P224();\n  else if (name === 'p192')\n    prime = new P192();\n  else if (name === 'p25519')\n    prime = new P25519();\n  else\n    throw new Error('Unknown prime ' + name);\n  primes[name] = prime;\n\n  return prime;\n};\n\n//\n// Base reduction engine\n//\nfunction Red(m) {\n  if (typeof m === 'string') {\n    var prime = BN._prime(m);\n    this.m = prime.p;\n    this.prime = prime;\n  } else {\n    this.m = m;\n    this.prime = null;\n  }\n}\n\nRed.prototype._verify1 = function _verify1(a) {\n  assert(!a.sign, 'red works only with positives');\n  assert(a.red, 'red works only with red numbers');\n};\n\nRed.prototype._verify2 = function _verify2(a, b) {\n  assert(!a.sign && !b.sign, 'red works only with positives');\n  assert(a.red && a.red === b.red,\n         'red works only with red numbers');\n};\n\nRed.prototype.imod = function imod(a) {\n  if (this.prime)\n    return this.prime.ireduce(a)._forceRed(this);\n  return a.mod(this.m)._forceRed(this);\n};\n\nRed.prototype.neg = function neg(a) {\n  var r = a.clone();\n  r.sign = !r.sign;\n  return r.iadd(this.m)._forceRed(this);\n};\n\nRed.prototype.add = function add(a, b) {\n  this._verify2(a, b);\n\n  var res = a.add(b);\n  if (res.cmp(this.m) >= 0)\n    res.isub(this.m);\n  return res._forceRed(this);\n};\n\nRed.prototype.iadd = function iadd(a, b) {\n  this._verify2(a, b);\n\n  var res = a.iadd(b);\n  if (res.cmp(this.m) >= 0)\n    res.isub(this.m);\n  return res;\n};\n\nRed.prototype.sub = function sub(a, b) {\n  this._verify2(a, b);\n\n  var res = a.sub(b);\n  if (res.cmpn(0) < 0)\n    res.iadd(this.m);\n  return res._forceRed(this);\n};\n\nRed.prototype.isub = function isub(a, b) {\n  this._verify2(a, b);\n\n  var res = a.isub(b);\n  if (res.cmpn(0) < 0)\n    res.iadd(this.m);\n  return res;\n};\n\nRed.prototype.shl = function shl(a, num) {\n  this._verify1(a);\n  return this.imod(a.shln(num));\n};\n\nRed.prototype.imul = function imul(a, b) {\n  this._verify2(a, b);\n  return this.imod(a.imul(b));\n};\n\nRed.prototype.mul = function mul(a, b) {\n  this._verify2(a, b);\n  return this.imod(a.mul(b));\n};\n\nRed.prototype.isqr = function isqr(a) {\n  return this.imul(a, a);\n};\n\nRed.prototype.sqr = function sqr(a) {\n  return this.mul(a, a);\n};\n\nRed.prototype.sqrt = function sqrt(a) {\n  if (a.cmpn(0) === 0)\n    return a.clone();\n\n  var mod3 = this.m.andln(3);\n  assert(mod3 % 2 === 1);\n\n  // Fast case\n  if (mod3 === 3) {\n    var pow = this.m.add(new BN(1)).ishrn(2);\n    var r = this.pow(a, pow);\n    return r;\n  }\n\n  // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n  //\n  // Find Q and S, that Q * 2 ^ S = (P - 1)\n  var q = this.m.subn(1);\n  var s = 0;\n  while (q.cmpn(0) !== 0 && q.andln(1) === 0) {\n    s++;\n    q.ishrn(1);\n  }\n  assert(q.cmpn(0) !== 0);\n\n  var one = new BN(1).toRed(this);\n  var nOne = one.redNeg();\n\n  // Find quadratic non-residue\n  // NOTE: Max is such because of generalized Riemann hypothesis.\n  var lpow = this.m.subn(1).ishrn(1);\n  var z = this.m.bitLength();\n  z = new BN(2 * z * z).toRed(this);\n  while (this.pow(z, lpow).cmp(nOne) !== 0)\n    z.redIAdd(nOne);\n\n  var c = this.pow(z, q);\n  var r = this.pow(a, q.addn(1).ishrn(1));\n  var t = this.pow(a, q);\n  var m = s;\n  while (t.cmp(one) !== 0) {\n    var tmp = t;\n    for (var i = 0; tmp.cmp(one) !== 0; i++)\n      tmp = tmp.redSqr();\n    assert(i < m);\n    var b = this.pow(c, new BN(1).ishln(m - i - 1));\n\n    r = r.redMul(b);\n    c = b.redSqr();\n    t = t.redMul(c);\n    m = i;\n  }\n\n  return r;\n};\n\nRed.prototype.invm = function invm(a) {\n  var inv = a._invmp(this.m);\n  if (inv.sign) {\n    inv.sign = false;\n    return this.imod(inv).redNeg();\n  } else {\n    return this.imod(inv);\n  }\n};\n\nRed.prototype.pow = function pow(a, num) {\n  var w = [];\n\n  if (num.cmpn(0) === 0)\n    return new BN(1);\n\n  var q = num.clone();\n\n  while (q.cmpn(0) !== 0) {\n    w.push(q.andln(1));\n    q.ishrn(1);\n  }\n\n  // Skip leading zeroes\n  var res = a;\n  for (var i = 0; i < w.length; i++, res = this.sqr(res))\n    if (w[i] !== 0)\n      break;\n\n  if (++i < w.length) {\n    for (var q = this.sqr(res); i < w.length; i++, q = this.sqr(q)) {\n      if (w[i] === 0)\n        continue;\n      res = this.mul(res, q);\n    }\n  }\n\n  return res;\n};\n\nRed.prototype.convertTo = function convertTo(num) {\n  var r = num.mod(this.m);\n  if (r === num)\n    return r.clone();\n  else\n    return r;\n};\n\nRed.prototype.convertFrom = function convertFrom(num) {\n  var res = num.clone();\n  res.red = null;\n  return res;\n};\n\n//\n// Montgomery method engine\n//\n\nBN.mont = function mont(num) {\n  return new Mont(num);\n};\n\nfunction Mont(m) {\n  Red.call(this, m);\n\n  this.shift = this.m.bitLength();\n  if (this.shift % 26 !== 0)\n    this.shift += 26 - (this.shift % 26);\n  this.r = new BN(1).ishln(this.shift);\n  this.r2 = this.imod(this.r.sqr());\n  this.rinv = this.r._invmp(this.m);\n\n  this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n  this.minv.sign = true;\n  this.minv = this.minv.mod(this.r);\n}\ninherits(Mont, Red);\n\nMont.prototype.convertTo = function convertTo(num) {\n  return this.imod(num.shln(this.shift));\n};\n\nMont.prototype.convertFrom = function convertFrom(num) {\n  var r = this.imod(num.mul(this.rinv));\n  r.red = null;\n  return r;\n};\n\nMont.prototype.imul = function imul(a, b) {\n  if (a.cmpn(0) === 0 || b.cmpn(0) === 0) {\n    a.words[0] = 0;\n    a.length = 1;\n    return a;\n  }\n\n  var t = a.imul(b);\n  var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n  var u = t.isub(c).ishrn(this.shift);\n  var res = u;\n  if (u.cmp(this.m) >= 0)\n    res = u.isub(this.m);\n  else if (u.cmpn(0) < 0)\n    res = u.iadd(this.m);\n\n  return res._forceRed(this);\n};\n\nMont.prototype.mul = function mul(a, b) {\n  if (a.cmpn(0) === 0 || b.cmpn(0) === 0)\n    return new BN(0)._forceRed(this);\n\n  var t = a.mul(b);\n  var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n  var u = t.isub(c).ishrn(this.shift);\n  var res = u;\n  if (u.cmp(this.m) >= 0)\n    res = u.isub(this.m);\n  else if (u.cmpn(0) < 0)\n    res = u.iadd(this.m);\n\n  return res._forceRed(this);\n};\n\nMont.prototype.invm = function invm(a) {\n  // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n  var res = this.imod(a._invmp(this.m).mul(this.r2));\n  return res._forceRed(this);\n};\n\n})(typeof module === 'undefined' || module, this);\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/nkey-ecdsa/~/key-encoder/~/asn1.js/~/bn.js/lib/bn.js\n **/","var asn1 = require('../asn1');\nvar inherits = require('inherits');\n\nvar api = exports;\n\napi.define = function define(name, body) {\n  return new Entity(name, body);\n};\n\nfunction Entity(name, body) {\n  this.name = name;\n  this.body = body;\n\n  this.decoders = {};\n  this.encoders = {};\n};\n\nEntity.prototype._createNamed = function createNamed(base) {\n  var named;\n  try {\n    named = require('vm').runInThisContext(\n      '(function ' + this.name + '(entity) {\\n' +\n      '  this._initNamed(entity);\\n' +\n      '})'\n    );\n  } catch (e) {\n    named = function (entity) {\n      this._initNamed(entity);\n    };\n  }\n  inherits(named, base);\n  named.prototype._initNamed = function initnamed(entity) {\n    base.call(this, entity);\n  };\n\n  return new named(this);\n};\n\nEntity.prototype._getDecoder = function _getDecoder(enc) {\n  // Lazily create decoder\n  if (!this.decoders.hasOwnProperty(enc))\n    this.decoders[enc] = this._createNamed(asn1.decoders[enc]);\n  return this.decoders[enc];\n};\n\nEntity.prototype.decode = function decode(data, enc, options) {\n  return this._getDecoder(enc).decode(data, options);\n};\n\nEntity.prototype._getEncoder = function _getEncoder(enc) {\n  // Lazily create encoder\n  if (!this.encoders.hasOwnProperty(enc))\n    this.encoders[enc] = this._createNamed(asn1.encoders[enc]);\n  return this.encoders[enc];\n};\n\nEntity.prototype.encode = function encode(data, enc, /* internal */ reporter) {\n  return this._getEncoder(enc).encode(data, reporter);\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/nkey-ecdsa/~/key-encoder/~/asn1.js/lib/asn1/api.js\n **/","var inherits = require('inherits');\n\nfunction Reporter(options) {\n  this._reporterState = {\n    obj: null,\n    path: [],\n    options: options || {},\n    errors: []\n  };\n}\nexports.Reporter = Reporter;\n\nReporter.prototype.isError = function isError(obj) {\n  return obj instanceof ReporterError;\n};\n\nReporter.prototype.save = function save() {\n  var state = this._reporterState;\n\n  return { obj: state.obj, pathLen: state.path.length };\n};\n\nReporter.prototype.restore = function restore(data) {\n  var state = this._reporterState;\n\n  state.obj = data.obj;\n  state.path = state.path.slice(0, data.pathLen);\n};\n\nReporter.prototype.enterKey = function enterKey(key) {\n  return this._reporterState.path.push(key);\n};\n\nReporter.prototype.leaveKey = function leaveKey(index, key, value) {\n  var state = this._reporterState;\n\n  state.path = state.path.slice(0, index - 1);\n  if (state.obj !== null)\n    state.obj[key] = value;\n};\n\nReporter.prototype.enterObject = function enterObject() {\n  var state = this._reporterState;\n\n  var prev = state.obj;\n  state.obj = {};\n  return prev;\n};\n\nReporter.prototype.leaveObject = function leaveObject(prev) {\n  var state = this._reporterState;\n\n  var now = state.obj;\n  state.obj = prev;\n  return now;\n};\n\nReporter.prototype.error = function error(msg) {\n  var err;\n  var state = this._reporterState;\n\n  var inherited = msg instanceof ReporterError;\n  if (inherited) {\n    err = msg;\n  } else {\n    err = new ReporterError(state.path.map(function(elem) {\n      return '[' + JSON.stringify(elem) + ']';\n    }).join(''), msg.message || msg, msg.stack);\n  }\n\n  if (!state.options.partial)\n    throw err;\n\n  if (!inherited)\n    state.errors.push(err);\n\n  return err;\n};\n\nReporter.prototype.wrapResult = function wrapResult(result) {\n  var state = this._reporterState;\n  if (!state.options.partial)\n    return result;\n\n  return {\n    result: this.isError(result) ? null : result,\n    errors: state.errors\n  };\n};\n\nfunction ReporterError(path, msg) {\n  this.path = path;\n  this.rethrow(msg);\n};\ninherits(ReporterError, Error);\n\nReporterError.prototype.rethrow = function rethrow(msg) {\n  this.message = msg + ' at: ' + (this.path || '(shallow)');\n  Error.captureStackTrace(this, ReporterError);\n\n  return this;\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/nkey-ecdsa/~/key-encoder/~/asn1.js/lib/asn1/base/reporter.js\n **/","var Reporter = require('../base').Reporter;\nvar EncoderBuffer = require('../base').EncoderBuffer;\nvar assert = require('minimalistic-assert');\n\n// Supported tags\nvar tags = [\n  'seq', 'seqof', 'set', 'setof', 'octstr', 'bitstr', 'objid', 'bool',\n  'gentime', 'utctime', 'null_', 'enum', 'int', 'ia5str', 'utf8str'\n];\n\n// Public methods list\nvar methods = [\n  'key', 'obj', 'use', 'optional', 'explicit', 'implicit', 'def', 'choice',\n  'any'\n].concat(tags);\n\n// Overrided methods list\nvar overrided = [\n  '_peekTag', '_decodeTag', '_use',\n  '_decodeStr', '_decodeObjid', '_decodeTime',\n  '_decodeNull', '_decodeInt', '_decodeBool', '_decodeList',\n\n  '_encodeComposite', '_encodeStr', '_encodeObjid', '_encodeTime',\n  '_encodeNull', '_encodeInt', '_encodeBool'\n];\n\nfunction Node(enc, parent) {\n  var state = {};\n  this._baseState = state;\n\n  state.enc = enc;\n\n  state.parent = parent || null;\n  state.children = null;\n\n  // State\n  state.tag = null;\n  state.args = null;\n  state.reverseArgs = null;\n  state.choice = null;\n  state.optional = false;\n  state.any = false;\n  state.obj = false;\n  state.use = null;\n  state.useDecoder = null;\n  state.key = null;\n  state['default'] = null;\n  state.explicit = null;\n  state.implicit = null;\n\n  // Should create new instance on each method\n  if (!state.parent) {\n    state.children = [];\n    this._wrap();\n  }\n}\nmodule.exports = Node;\n\nvar stateProps = [\n  'enc', 'parent', 'children', 'tag', 'args', 'reverseArgs', 'choice',\n  'optional', 'any', 'obj', 'use', 'alteredUse', 'key', 'default', 'explicit',\n  'implicit'\n];\n\nNode.prototype.clone = function clone() {\n  var state = this._baseState;\n  var cstate = {};\n  stateProps.forEach(function(prop) {\n    cstate[prop] = state[prop];\n  });\n  var res = new this.constructor(cstate.parent);\n  res._baseState = cstate;\n  return res;\n};\n\nNode.prototype._wrap = function wrap() {\n  var state = this._baseState;\n  methods.forEach(function(method) {\n    this[method] = function _wrappedMethod() {\n      var clone = new this.constructor(this);\n      state.children.push(clone);\n      return clone[method].apply(clone, arguments);\n    };\n  }, this);\n};\n\nNode.prototype._init = function init(body) {\n  var state = this._baseState;\n\n  assert(state.parent === null);\n  body.call(this);\n\n  // Filter children\n  state.children = state.children.filter(function(child) {\n    return child._baseState.parent === this;\n  }, this);\n  assert.equal(state.children.length, 1, 'Root node can have only one child');\n};\n\nNode.prototype._useArgs = function useArgs(args) {\n  var state = this._baseState;\n\n  // Filter children and args\n  var children = args.filter(function(arg) {\n    return arg instanceof this.constructor;\n  }, this);\n  args = args.filter(function(arg) {\n    return !(arg instanceof this.constructor);\n  }, this);\n\n  if (children.length !== 0) {\n    assert(state.children === null);\n    state.children = children;\n\n    // Replace parent to maintain backward link\n    children.forEach(function(child) {\n      child._baseState.parent = this;\n    }, this);\n  }\n  if (args.length !== 0) {\n    assert(state.args === null);\n    state.args = args;\n    state.reverseArgs = args.map(function(arg) {\n      if (typeof arg !== 'object' || arg.constructor !== Object)\n        return arg;\n\n      var res = {};\n      Object.keys(arg).forEach(function(key) {\n        if (key == (key | 0))\n          key |= 0;\n        var value = arg[key];\n        res[value] = key;\n      });\n      return res;\n    });\n  }\n};\n\n//\n// Overrided methods\n//\n\noverrided.forEach(function(method) {\n  Node.prototype[method] = function _overrided() {\n    var state = this._baseState;\n    throw new Error(method + ' not implemented for encoding: ' + state.enc);\n  };\n});\n\n//\n// Public methods\n//\n\ntags.forEach(function(tag) {\n  Node.prototype[tag] = function _tagMethod() {\n    var state = this._baseState;\n    var args = Array.prototype.slice.call(arguments);\n\n    assert(state.tag === null);\n    state.tag = tag;\n\n    this._useArgs(args);\n\n    return this;\n  };\n});\n\nNode.prototype.use = function use(item) {\n  var state = this._baseState;\n\n  assert(state.use === null);\n  state.use = item;\n\n  return this;\n};\n\nNode.prototype.optional = function optional() {\n  var state = this._baseState;\n\n  state.optional = true;\n\n  return this;\n};\n\nNode.prototype.def = function def(val) {\n  var state = this._baseState;\n\n  assert(state['default'] === null);\n  state['default'] = val;\n  state.optional = true;\n\n  return this;\n};\n\nNode.prototype.explicit = function explicit(num) {\n  var state = this._baseState;\n\n  assert(state.explicit === null && state.implicit === null);\n  state.explicit = num;\n\n  return this;\n};\n\nNode.prototype.implicit = function implicit(num) {\n  var state = this._baseState;\n\n  assert(state.explicit === null && state.implicit === null);\n  state.implicit = num;\n\n  return this;\n};\n\nNode.prototype.obj = function obj() {\n  var state = this._baseState;\n  var args = Array.prototype.slice.call(arguments);\n\n  state.obj = true;\n\n  if (args.length !== 0)\n    this._useArgs(args);\n\n  return this;\n};\n\nNode.prototype.key = function key(newKey) {\n  var state = this._baseState;\n\n  assert(state.key === null);\n  state.key = newKey;\n\n  return this;\n};\n\nNode.prototype.any = function any() {\n  var state = this._baseState;\n\n  state.any = true;\n\n  return this;\n};\n\nNode.prototype.choice = function choice(obj) {\n  var state = this._baseState;\n\n  assert(state.choice === null);\n  state.choice = obj;\n  this._useArgs(Object.keys(obj).map(function(key) {\n    return obj[key];\n  }));\n\n  return this;\n};\n\n//\n// Decoding\n//\n\nNode.prototype._decode = function decode(input) {\n  var state = this._baseState;\n\n  // Decode root node\n  if (state.parent === null)\n    return input.wrapResult(state.children[0]._decode(input));\n\n  var result = state['default'];\n  var present = true;\n\n  var prevKey;\n  if (state.key !== null)\n    prevKey = input.enterKey(state.key);\n\n  // Check if tag is there\n  if (state.optional) {\n    var tag = null;\n    if (state.explicit !== null)\n      tag = state.explicit;\n    else if (state.implicit !== null)\n      tag = state.implicit;\n    else if (state.tag !== null)\n      tag = state.tag;\n\n    if (tag === null && !state.any) {\n      // Trial and Error\n      var save = input.save();\n      try {\n        if (state.choice === null)\n          this._decodeGeneric(state.tag, input);\n        else\n          this._decodeChoice(input);\n        present = true;\n      } catch (e) {\n        present = false;\n      }\n      input.restore(save);\n    } else {\n      present = this._peekTag(input, tag, state.any);\n\n      if (input.isError(present))\n        return present;\n    }\n  }\n\n  // Push object on stack\n  var prevObj;\n  if (state.obj && present)\n    prevObj = input.enterObject();\n\n  if (present) {\n    // Unwrap explicit values\n    if (state.explicit !== null) {\n      var explicit = this._decodeTag(input, state.explicit);\n      if (input.isError(explicit))\n        return explicit;\n      input = explicit;\n    }\n\n    // Unwrap implicit and normal values\n    if (state.use === null && state.choice === null) {\n      if (state.any)\n        var save = input.save();\n      var body = this._decodeTag(\n        input,\n        state.implicit !== null ? state.implicit : state.tag,\n        state.any\n      );\n      if (input.isError(body))\n        return body;\n\n      if (state.any)\n        result = input.raw(save);\n      else\n        input = body;\n    }\n\n    // Select proper method for tag\n    if (state.any)\n      result = result;\n    else if (state.choice === null)\n      result = this._decodeGeneric(state.tag, input);\n    else\n      result = this._decodeChoice(input);\n\n    if (input.isError(result))\n      return result;\n\n    // Decode children\n    if (!state.any && state.choice === null && state.children !== null) {\n      var fail = state.children.some(function decodeChildren(child) {\n        // NOTE: We are ignoring errors here, to let parser continue with other\n        // parts of encoded data\n        child._decode(input);\n      });\n      if (fail)\n        return err;\n    }\n  }\n\n  // Pop object\n  if (state.obj && present)\n    result = input.leaveObject(prevObj);\n\n  // Set key\n  if (state.key !== null && (result !== null || present === true))\n    input.leaveKey(prevKey, state.key, result);\n\n  return result;\n};\n\nNode.prototype._decodeGeneric = function decodeGeneric(tag, input) {\n  var state = this._baseState;\n\n  if (tag === 'seq' || tag === 'set')\n    return null;\n  if (tag === 'seqof' || tag === 'setof')\n    return this._decodeList(input, tag, state.args[0]);\n  else if (tag === 'octstr' || tag === 'bitstr')\n    return this._decodeStr(input, tag);\n  else if (tag === 'ia5str' || tag === 'utf8str')\n    return this._decodeStr(input, tag);\n  else if (tag === 'objid' && state.args)\n    return this._decodeObjid(input, state.args[0], state.args[1]);\n  else if (tag === 'objid')\n    return this._decodeObjid(input, null, null);\n  else if (tag === 'gentime' || tag === 'utctime')\n    return this._decodeTime(input, tag);\n  else if (tag === 'null_')\n    return this._decodeNull(input);\n  else if (tag === 'bool')\n    return this._decodeBool(input);\n  else if (tag === 'int' || tag === 'enum')\n    return this._decodeInt(input, state.args && state.args[0]);\n  else if (state.use !== null)\n    return this._getUse(state.use, input._reporterState.obj)._decode(input);\n  else\n    return input.error('unknown tag: ' + tag);\n\n  return null;\n};\n\nNode.prototype._getUse = function _getUse(entity, obj) {\n\n  var state = this._baseState;\n  // Create altered use decoder if implicit is set\n  state.useDecoder = this._use(entity, obj);\n  assert(state.useDecoder._baseState.parent === null);\n  state.useDecoder = state.useDecoder._baseState.children[0];\n  if (state.implicit !== state.useDecoder._baseState.implicit) {\n    state.useDecoder = state.useDecoder.clone();\n    state.useDecoder._baseState.implicit = state.implicit;\n  }\n  return state.useDecoder;\n};\n\nNode.prototype._decodeChoice = function decodeChoice(input) {\n  var state = this._baseState;\n  var result = null;\n  var match = false;\n\n  Object.keys(state.choice).some(function(key) {\n    var save = input.save();\n    var node = state.choice[key];\n    try {\n      var value = node._decode(input);\n      if (input.isError(value))\n        return false;\n\n      result = { type: key, value: value };\n      match = true;\n    } catch (e) {\n      input.restore(save);\n      return false;\n    }\n    return true;\n  }, this);\n\n  if (!match)\n    return input.error('Choice not matched');\n\n  return result;\n};\n\n//\n// Encoding\n//\n\nNode.prototype._createEncoderBuffer = function createEncoderBuffer(data) {\n  return new EncoderBuffer(data, this.reporter);\n};\n\nNode.prototype._encode = function encode(data, reporter, parent) {\n  var state = this._baseState;\n  if (state['default'] !== null && state['default'] === data)\n    return;\n\n  var result = this._encodeValue(data, reporter, parent);\n  if (result === undefined)\n    return;\n\n  if (this._skipDefault(result, reporter, parent))\n    return;\n\n  return result;\n};\n\nNode.prototype._encodeValue = function encode(data, reporter, parent) {\n  var state = this._baseState;\n\n  // Decode root node\n  if (state.parent === null)\n    return state.children[0]._encode(data, reporter || new Reporter());\n\n  var result = null;\n  var present = true;\n\n  // Set reporter to share it with a child class\n  this.reporter = reporter;\n\n  // Check if data is there\n  if (state.optional && data === undefined) {\n    if (state['default'] !== null)\n      data = state['default']\n    else\n      return;\n  }\n\n  // For error reporting\n  var prevKey;\n\n  // Encode children first\n  var content = null;\n  var primitive = false;\n  if (state.any) {\n    // Anything that was given is translated to buffer\n    result = this._createEncoderBuffer(data);\n  } else if (state.choice) {\n    result = this._encodeChoice(data, reporter);\n  } else if (state.children) {\n    content = state.children.map(function(child) {\n      if (child._baseState.tag === 'null_')\n        return child._encode(null, reporter, data);\n\n      if (child._baseState.key === null)\n        return reporter.error('Child should have a key');\n      var prevKey = reporter.enterKey(child._baseState.key);\n\n      if (typeof data !== 'object')\n        return reporter.error('Child expected, but input is not object');\n\n      var res = child._encode(data[child._baseState.key], reporter, data);\n      reporter.leaveKey(prevKey);\n\n      return res;\n    }, this).filter(function(child) {\n      return child;\n    });\n\n    content = this._createEncoderBuffer(content);\n  } else {\n    if (state.tag === 'seqof' || state.tag === 'setof') {\n      // TODO(indutny): this should be thrown on DSL level\n      if (!(state.args && state.args.length === 1))\n        return reporter.error('Too many args for : ' + state.tag);\n\n      if (!Array.isArray(data))\n        return reporter.error('seqof/setof, but data is not Array');\n\n      var child = this.clone();\n      child._baseState.implicit = null;\n      content = this._createEncoderBuffer(data.map(function(item) {\n        var state = this._baseState;\n\n        return this._getUse(state.args[0], data)._encode(item, reporter);\n      }, child));\n    } else if (state.use !== null) {\n      result = this._getUse(state.use, parent)._encode(data, reporter);\n    } else {\n      content = this._encodePrimitive(state.tag, data);\n      primitive = true;\n    }\n  }\n\n  // Encode data itself\n  var result;\n  if (!state.any && state.choice === null) {\n    var tag = state.implicit !== null ? state.implicit : state.tag;\n    var cls = state.implicit === null ? 'universal' : 'context';\n\n    if (tag === null) {\n      if (state.use === null)\n        reporter.error('Tag could be ommited only for .use()');\n    } else {\n      if (state.use === null)\n        result = this._encodeComposite(tag, primitive, cls, content);\n    }\n  }\n\n  // Wrap in explicit\n  if (state.explicit !== null)\n    result = this._encodeComposite(state.explicit, false, 'context', result);\n\n  return result;\n};\n\nNode.prototype._encodeChoice = function encodeChoice(data, reporter) {\n  var state = this._baseState;\n\n  var node = state.choice[data.type];\n  if (!node) {\n    assert(\n        false,\n        data.type + ' not found in ' +\n            JSON.stringify(Object.keys(state.choice)));\n  }\n  return node._encode(data.value, reporter);\n};\n\nNode.prototype._encodePrimitive = function encodePrimitive(tag, data) {\n  var state = this._baseState;\n\n  if (tag === 'octstr' || tag === 'bitstr' || tag === 'ia5str')\n    return this._encodeStr(data, tag);\n  else if (tag === 'utf8str')\n    return this._encodeStr(data, tag);\n  else if (tag === 'objid' && state.args)\n    return this._encodeObjid(data, state.reverseArgs[0], state.args[1]);\n  else if (tag === 'objid')\n    return this._encodeObjid(data, null, null);\n  else if (tag === 'gentime' || tag === 'utctime')\n    return this._encodeTime(data, tag);\n  else if (tag === 'null_')\n    return this._encodeNull();\n  else if (tag === 'int' || tag === 'enum')\n    return this._encodeInt(data, state.args && state.reverseArgs[0]);\n  else if (tag === 'bool')\n    return this._encodeBool(data);\n  else\n    throw new Error('Unsupported tag: ' + tag);\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/nkey-ecdsa/~/key-encoder/~/asn1.js/lib/asn1/base/node.js\n **/","var inherits = require('inherits');\n\nvar asn1 = require('../../asn1');\nvar base = asn1.base;\nvar bignum = asn1.bignum;\n\n// Import DER constants\nvar der = asn1.constants.der;\n\nfunction DERDecoder(entity) {\n  this.enc = 'der';\n  this.name = entity.name;\n  this.entity = entity;\n\n  // Construct base tree\n  this.tree = new DERNode();\n  this.tree._init(entity.body);\n};\nmodule.exports = DERDecoder;\n\nDERDecoder.prototype.decode = function decode(data, options) {\n  if (!(data instanceof base.DecoderBuffer))\n    data = new base.DecoderBuffer(data, options);\n\n  return this.tree._decode(data, options);\n};\n\n// Tree methods\n\nfunction DERNode(parent) {\n  base.Node.call(this, 'der', parent);\n}\ninherits(DERNode, base.Node);\n\nDERNode.prototype._peekTag = function peekTag(buffer, tag, any) {\n  if (buffer.isEmpty())\n    return false;\n\n  var state = buffer.save();\n  var decodedTag = derDecodeTag(buffer, 'Failed to peek tag: \"' + tag + '\"');\n  if (buffer.isError(decodedTag))\n    return decodedTag;\n\n  buffer.restore(state);\n\n  return decodedTag.tag === tag || decodedTag.tagStr === tag || any;\n};\n\nDERNode.prototype._decodeTag = function decodeTag(buffer, tag, any) {\n  var decodedTag = derDecodeTag(buffer,\n                                'Failed to decode tag of \"' + tag + '\"');\n  if (buffer.isError(decodedTag))\n    return decodedTag;\n\n  var len = derDecodeLen(buffer,\n                         decodedTag.primitive,\n                         'Failed to get length of \"' + tag + '\"');\n\n  // Failure\n  if (buffer.isError(len))\n    return len;\n\n  if (!any &&\n      decodedTag.tag !== tag &&\n      decodedTag.tagStr !== tag &&\n      decodedTag.tagStr + 'of' !== tag) {\n    return buffer.error('Failed to match tag: \"' + tag + '\"');\n  }\n\n  if (decodedTag.primitive || len !== null)\n    return buffer.skip(len, 'Failed to match body of: \"' + tag + '\"');\n\n  // Indefinite length... find END tag\n  var state = buffer.save();\n  var res = this._skipUntilEnd(\n      buffer,\n      'Failed to skip indefinite length body: \"' + this.tag + '\"');\n  if (buffer.isError(res))\n    return res;\n\n  len = buffer.offset - state.offset;\n  buffer.restore(state);\n  return buffer.skip(len, 'Failed to match body of: \"' + tag + '\"');\n};\n\nDERNode.prototype._skipUntilEnd = function skipUntilEnd(buffer, fail) {\n  while (true) {\n    var tag = derDecodeTag(buffer, fail);\n    if (buffer.isError(tag))\n      return tag;\n    var len = derDecodeLen(buffer, tag.primitive, fail);\n    if (buffer.isError(len))\n      return len;\n\n    var res;\n    if (tag.primitive || len !== null)\n      res = buffer.skip(len)\n    else\n      res = this._skipUntilEnd(buffer, fail);\n\n    // Failure\n    if (buffer.isError(res))\n      return res;\n\n    if (tag.tagStr === 'end')\n      break;\n  }\n};\n\nDERNode.prototype._decodeList = function decodeList(buffer, tag, decoder) {\n  var result = [];\n  while (!buffer.isEmpty()) {\n    var possibleEnd = this._peekTag(buffer, 'end');\n    if (buffer.isError(possibleEnd))\n      return possibleEnd;\n\n    var res = decoder.decode(buffer, 'der');\n    if (buffer.isError(res) && possibleEnd)\n      break;\n    result.push(res);\n  }\n  return result;\n};\n\nDERNode.prototype._decodeStr = function decodeStr(buffer, tag) {\n  if (tag === 'octstr') {\n    return buffer.raw();\n  } else if (tag === 'bitstr') {\n    var unused = buffer.readUInt8();\n    if (buffer.isError(unused))\n      return unused;\n\n    return { unused: unused, data: buffer.raw() };\n  } else if (tag === 'ia5str' || tag === 'utf8str') {\n    return buffer.raw().toString();\n  } else {\n    return this.error('Decoding of string type: ' + tag + ' unsupported');\n  }\n};\n\nDERNode.prototype._decodeObjid = function decodeObjid(buffer, values, relative) {\n  var identifiers = [];\n  var ident = 0;\n  while (!buffer.isEmpty()) {\n    var subident = buffer.readUInt8();\n    ident <<= 7;\n    ident |= subident & 0x7f;\n    if ((subident & 0x80) === 0) {\n      identifiers.push(ident);\n      ident = 0;\n    }\n  }\n  if (subident & 0x80)\n    identifiers.push(ident);\n\n  var first = (identifiers[0] / 40) | 0;\n  var second = identifiers[0] % 40;\n\n  if (relative)\n    result = identifiers;\n  else\n    result = [first, second].concat(identifiers.slice(1));\n\n  if (values)\n    result = values[result.join(' ')];\n\n  return result;\n};\n\nDERNode.prototype._decodeTime = function decodeTime(buffer, tag) {\n  var str = buffer.raw().toString();\n  if (tag === 'gentime') {\n    var year = str.slice(0, 4) | 0;\n    var mon = str.slice(4, 6) | 0;\n    var day = str.slice(6, 8) | 0;\n    var hour = str.slice(8, 10) | 0;\n    var min = str.slice(10, 12) | 0;\n    var sec = str.slice(12, 14) | 0;\n  } else if (tag === 'utctime') {\n    var year = str.slice(0, 2) | 0;\n    var mon = str.slice(2, 4) | 0;\n    var day = str.slice(4, 6) | 0;\n    var hour = str.slice(6, 8) | 0;\n    var min = str.slice(8, 10) | 0;\n    var sec = str.slice(10, 12) | 0;\n    if (year < 70)\n      year = 2000 + year;\n    else\n      year = 1900 + year;\n  } else {\n    return this.error('Decoding ' + tag + ' time is not supported yet');\n  }\n\n  return Date.UTC(year, mon - 1, day, hour, min, sec, 0);\n};\n\nDERNode.prototype._decodeNull = function decodeNull(buffer) {\n  return null;\n};\n\nDERNode.prototype._decodeBool = function decodeBool(buffer) {\n  var res = buffer.readUInt8();\n  if (buffer.isError(res))\n    return res;\n  else\n    return res !== 0;\n};\n\nDERNode.prototype._decodeInt = function decodeInt(buffer, values) {\n  // Bigint, return as it is (assume big endian)\n  var raw = buffer.raw();\n  var res = new bignum(raw);\n\n  if (values)\n    res = values[res.toString(10)] || res;\n\n  return res;\n};\n\nDERNode.prototype._use = function use(entity, obj) {\n  if (typeof entity === 'function')\n    entity = entity(obj);\n  return entity._getDecoder('der').tree;\n};\n\n// Utility methods\n\nfunction derDecodeTag(buf, fail) {\n  var tag = buf.readUInt8(fail);\n  if (buf.isError(tag))\n    return tag;\n\n  var cls = der.tagClass[tag >> 6];\n  var primitive = (tag & 0x20) === 0;\n\n  // Multi-octet tag - load\n  if ((tag & 0x1f) === 0x1f) {\n    var oct = tag;\n    tag = 0;\n    while ((oct & 0x80) === 0x80) {\n      oct = buf.readUInt8(fail);\n      if (buf.isError(oct))\n        return oct;\n\n      tag <<= 7;\n      tag |= oct & 0x7f;\n    }\n  } else {\n    tag &= 0x1f;\n  }\n  var tagStr = der.tag[tag];\n\n  return {\n    cls: cls,\n    primitive: primitive,\n    tag: tag,\n    tagStr: tagStr\n  };\n}\n\nfunction derDecodeLen(buf, primitive, fail) {\n  var len = buf.readUInt8(fail);\n  if (buf.isError(len))\n    return len;\n\n  // Indefinite form\n  if (!primitive && len === 0x80)\n    return null;\n\n  // Definite form\n  if ((len & 0x80) === 0) {\n    // Short form\n    return len;\n  }\n\n  // Long form\n  var num = len & 0x7f;\n  if (num >= 4)\n    return buf.error('length octect is too long');\n\n  len = 0;\n  for (var i = 0; i < num; i++) {\n    len <<= 8;\n    var j = buf.readUInt8(fail);\n    if (buf.isError(j))\n      return j;\n    len |= j;\n  }\n\n  return len;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/nkey-ecdsa/~/key-encoder/~/asn1.js/lib/asn1/decoders/der.js\n **/","var inherits = require('inherits');\nvar Buffer = require('buffer').Buffer;\n\nvar asn1 = require('../../asn1');\nvar DERDecoder = require('./der');\n\nfunction PEMDecoder(entity) {\n  DERDecoder.call(this, entity);\n  this.enc = 'pem';\n};\ninherits(PEMDecoder, DERDecoder);\nmodule.exports = PEMDecoder;\n\nPEMDecoder.prototype.decode = function decode(data, options) {\n  var lines = data.toString().split(/[\\r\\n]+/g);\n\n  var label = options.label.toUpperCase();\n\n  var re = /^-----(BEGIN|END) ([^-]+)-----$/;\n  var start = -1;\n  var end = -1;\n  for (var i = 0; i < lines.length; i++) {\n    var match = lines[i].match(re);\n    if (match === null)\n      continue;\n\n    if (match[2] !== label)\n      continue;\n\n    if (start === -1) {\n      if (match[1] !== 'BEGIN')\n        break;\n      start = i;\n    } else {\n      if (match[1] !== 'END')\n        break;\n      end = i;\n      break;\n    }\n  }\n  if (start === -1 || end === -1)\n    throw new Error('PEM section not found for: ' + label);\n\n  var base64 = lines.slice(start + 1, end).join('');\n  // Remove excessive symbols\n  base64.replace(/[^a-z0-9\\+\\/=]+/gi, '');\n\n  var input = new Buffer(base64, 'base64');\n  return DERDecoder.prototype.decode.call(this, input, options);\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/nkey-ecdsa/~/key-encoder/~/asn1.js/lib/asn1/decoders/pem.js\n **/","var inherits = require('inherits');\nvar Buffer = require('buffer').Buffer;\n\nvar asn1 = require('../../asn1');\nvar base = asn1.base;\nvar bignum = asn1.bignum;\n\n// Import DER constants\nvar der = asn1.constants.der;\n\nfunction DEREncoder(entity) {\n  this.enc = 'der';\n  this.name = entity.name;\n  this.entity = entity;\n\n  // Construct base tree\n  this.tree = new DERNode();\n  this.tree._init(entity.body);\n};\nmodule.exports = DEREncoder;\n\nDEREncoder.prototype.encode = function encode(data, reporter) {\n  return this.tree._encode(data, reporter).join();\n};\n\n// Tree methods\n\nfunction DERNode(parent) {\n  base.Node.call(this, 'der', parent);\n}\ninherits(DERNode, base.Node);\n\nDERNode.prototype._encodeComposite = function encodeComposite(tag,\n                                                              primitive,\n                                                              cls,\n                                                              content) {\n  var encodedTag = encodeTag(tag, primitive, cls, this.reporter);\n\n  // Short form\n  if (content.length < 0x80) {\n    var header = new Buffer(2);\n    header[0] = encodedTag;\n    header[1] = content.length;\n    return this._createEncoderBuffer([ header, content ]);\n  }\n\n  // Long form\n  // Count octets required to store length\n  var lenOctets = 1;\n  for (var i = content.length; i >= 0x100; i >>= 8)\n    lenOctets++;\n\n  var header = new Buffer(1 + 1 + lenOctets);\n  header[0] = encodedTag;\n  header[1] = 0x80 | lenOctets;\n\n  for (var i = 1 + lenOctets, j = content.length; j > 0; i--, j >>= 8)\n    header[i] = j & 0xff;\n\n  return this._createEncoderBuffer([ header, content ]);\n};\n\nDERNode.prototype._encodeStr = function encodeStr(str, tag) {\n  if (tag === 'octstr')\n    return this._createEncoderBuffer(str);\n  else if (tag === 'bitstr')\n    return this._createEncoderBuffer([ str.unused | 0, str.data ]);\n  else if (tag === 'ia5str' || tag === 'utf8str')\n    return this._createEncoderBuffer(str);\n  return this.reporter.error('Encoding of string type: ' + tag +\n                             ' unsupported');\n};\n\nDERNode.prototype._encodeObjid = function encodeObjid(id, values, relative) {\n  if (typeof id === 'string') {\n    if (!values)\n      return this.reporter.error('string objid given, but no values map found');\n    if (!values.hasOwnProperty(id))\n      return this.reporter.error('objid not found in values map');\n    id = values[id].split(/[\\s\\.]+/g);\n    for (var i = 0; i < id.length; i++)\n      id[i] |= 0;\n  } else if (Array.isArray(id)) {\n    id = id.slice();\n    for (var i = 0; i < id.length; i++)\n      id[i] |= 0;\n  }\n\n  if (!Array.isArray(id)) {\n    return this.reporter.error('objid() should be either array or string, ' +\n                               'got: ' + JSON.stringify(id));\n  }\n\n  if (!relative) {\n    if (id[1] >= 40)\n      return this.reporter.error('Second objid identifier OOB');\n    id.splice(0, 2, id[0] * 40 + id[1]);\n  }\n\n  // Count number of octets\n  var size = 0;\n  for (var i = 0; i < id.length; i++) {\n    var ident = id[i];\n    for (size++; ident >= 0x80; ident >>= 7)\n      size++;\n  }\n\n  var objid = new Buffer(size);\n  var offset = objid.length - 1;\n  for (var i = id.length - 1; i >= 0; i--) {\n    var ident = id[i];\n    objid[offset--] = ident & 0x7f;\n    while ((ident >>= 7) > 0)\n      objid[offset--] = 0x80 | (ident & 0x7f);\n  }\n\n  return this._createEncoderBuffer(objid);\n};\n\nfunction two(num) {\n  if (num < 10)\n    return '0' + num;\n  else\n    return num;\n}\n\nDERNode.prototype._encodeTime = function encodeTime(time, tag) {\n  var str;\n  var date = new Date(time);\n\n  if (tag === 'gentime') {\n    str = [\n      two(date.getFullYear()),\n      two(date.getUTCMonth() + 1),\n      two(date.getUTCDate()),\n      two(date.getUTCHours()),\n      two(date.getUTCMinutes()),\n      two(date.getUTCSeconds()),\n      'Z'\n    ].join('');\n  } else if (tag === 'utctime') {\n    str = [\n      two(date.getFullYear() % 100),\n      two(date.getUTCMonth() + 1),\n      two(date.getUTCDate()),\n      two(date.getUTCHours()),\n      two(date.getUTCMinutes()),\n      two(date.getUTCSeconds()),\n      'Z'\n    ].join('');\n  } else {\n    this.reporter.error('Encoding ' + tag + ' time is not supported yet');\n  }\n\n  return this._encodeStr(str, 'octstr');\n};\n\nDERNode.prototype._encodeNull = function encodeNull() {\n  return this._createEncoderBuffer('');\n};\n\nDERNode.prototype._encodeInt = function encodeInt(num, values) {\n  if (typeof num === 'string') {\n    if (!values)\n      return this.reporter.error('String int or enum given, but no values map');\n    if (!values.hasOwnProperty(num)) {\n      return this.reporter.error('Values map doesn\\'t contain: ' +\n                                 JSON.stringify(num));\n    }\n    num = values[num];\n  }\n\n  // Bignum, assume big endian\n  if (typeof num !== 'number' && !Buffer.isBuffer(num)) {\n    var numArray = num.toArray();\n    if (num.sign === false && numArray[0] & 0x80) {\n      numArray.unshift(0);\n    }\n    num = new Buffer(numArray);\n  }\n\n  if (Buffer.isBuffer(num)) {\n    var size = num.length;\n    if (num.length === 0)\n      size++;\n\n    var out = new Buffer(size);\n    num.copy(out);\n    if (num.length === 0)\n      out[0] = 0\n    return this._createEncoderBuffer(out);\n  }\n\n  if (num < 0x80)\n    return this._createEncoderBuffer(num);\n\n  if (num < 0x100)\n    return this._createEncoderBuffer([0, num]);\n\n  var size = 1;\n  for (var i = num; i >= 0x100; i >>= 8)\n    size++;\n\n  var out = new Array(size);\n  for (var i = out.length - 1; i >= 0; i--) {\n    out[i] = num & 0xff;\n    num >>= 8;\n  }\n  if(out[0] & 0x80) {\n    out.unshift(0);\n  }\n\n  return this._createEncoderBuffer(new Buffer(out));\n};\n\nDERNode.prototype._encodeBool = function encodeBool(value) {\n  return this._createEncoderBuffer(value ? 0xff : 0);\n};\n\nDERNode.prototype._use = function use(entity, obj) {\n  if (typeof entity === 'function')\n    entity = entity(obj);\n  return entity._getEncoder('der').tree;\n};\n\nDERNode.prototype._skipDefault = function skipDefault(dataBuffer, reporter, parent) {\n  var state = this._baseState;\n  var i;\n  if (state['default'] === null)\n    return false;\n\n  var data = dataBuffer.join();\n  if (state.defaultBuffer === undefined)\n    state.defaultBuffer = this._encodeValue(state['default'], reporter, parent).join();\n\n  if (data.length !== state.defaultBuffer.length)\n    return false;\n\n  for (i=0; i < data.length; i++)\n    if (data[i] !== state.defaultBuffer[i])\n      return false;\n\n  return true;\n};\n\n// Utility methods\n\nfunction encodeTag(tag, primitive, cls, reporter) {\n  var res;\n\n  if (tag === 'seqof')\n    tag = 'seq';\n  else if (tag === 'setof')\n    tag = 'set';\n\n  if (der.tagByName.hasOwnProperty(tag))\n    res = der.tagByName[tag];\n  else if (typeof tag === 'number' && (tag | 0) === tag)\n    res = tag;\n  else\n    return reporter.error('Unknown tag: ' + tag);\n\n  if (res >= 0x1f)\n    return reporter.error('Multi-octet tag encoding unsupported');\n\n  if (!primitive)\n    res |= 0x20;\n\n  res |= (der.tagClassByName[cls || 'universal'] << 6);\n\n  return res;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/nkey-ecdsa/~/key-encoder/~/asn1.js/lib/asn1/encoders/der.js\n **/","var inherits = require('inherits');\nvar Buffer = require('buffer').Buffer;\n\nvar asn1 = require('../../asn1');\nvar DEREncoder = require('./der');\n\nfunction PEMEncoder(entity) {\n  DEREncoder.call(this, entity);\n  this.enc = 'pem';\n};\ninherits(PEMEncoder, DEREncoder);\nmodule.exports = PEMEncoder;\n\nPEMEncoder.prototype.encode = function encode(data, options) {\n  var buf = DEREncoder.prototype.encode.call(this, data);\n\n  var p = buf.toString('base64');\n  var out = [ '-----BEGIN ' + options.label + '-----' ];\n  for (var i = 0; i < p.length; i += 64)\n    out.push(p.slice(i, i + 64));\n  out.push('-----END ' + options.label + '-----');\n  return out.join('\\n');\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/nkey-ecdsa/~/key-encoder/~/asn1.js/lib/asn1/encoders/pem.js\n **/","\nvar EC = require('elliptic').ec\nvar aliases = require('./aliases')\nvar parameters = {\n    secp256k1: [1, 3, 132, 0, 10],\n    p192: [1, 2, 840, 10045, 3, 1, 1],\n    p224: [1, 3, 132, 0, 33],\n    p256: [1, 2, 840, 10045, 3, 1, 7],\n    p384: [1, 3, 132, 0, 34],\n    p521: [1, 3, 132, 0, 35]\n}\n\nfunction toCurves (parameters) {\n  var curves = {}\n  Object.keys(parameters).forEach(function (curve) {\n    var cParams\n    // be lazy\n    Object.defineProperty(curves, curve, {\n      get: function () {\n        if (!cParams) {\n          cParams = {\n            curveParameters: parameters[curve],\n            privatePEMOptions: {label: 'EC PRIVATE KEY'},\n            publicPEMOptions: {label: 'PUBLIC KEY'},\n            curve: new EC(curve)\n          }\n        }\n\n        return cParams\n      }\n    })\n\n    if (aliases[curve]) {\n      Object.defineProperty(curves, aliases[curve], {\n        get: function () {\n          return curves[curve]\n        }\n      })\n    }\n  })\n\n  return curves\n}\n\nmodule.exports = toCurves(parameters)\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/nkey-ecdsa/~/key-encoder/lib/curves.js\n **/","module.exports = {\n\t\"_args\": [\n\t\t[\n\t\t\t{\n\t\t\t\t\"raw\": \"elliptic@^5.1.0\",\n\t\t\t\t\"scope\": null,\n\t\t\t\t\"escapedName\": \"elliptic\",\n\t\t\t\t\"name\": \"elliptic\",\n\t\t\t\t\"rawSpec\": \"^5.1.0\",\n\t\t\t\t\"spec\": \">=5.1.0 <6.0.0\",\n\t\t\t\t\"type\": \"range\"\n\t\t\t},\n\t\t\t\"/Users/tenaciousmv/Code/tradle-app-web/node_modules/nkey-ecdsa/node_modules/key-encoder\"\n\t\t]\n\t],\n\t\"_from\": \"elliptic@>=5.1.0 <6.0.0\",\n\t\"_id\": \"elliptic@5.2.1\",\n\t\"_inCache\": true,\n\t\"_installable\": true,\n\t\"_location\": \"/nkey-ecdsa/elliptic\",\n\t\"_nodeVersion\": \"4.2.1\",\n\t\"_npmUser\": {\n\t\t\"name\": \"indutny\",\n\t\t\"email\": \"fedor@indutny.com\"\n\t},\n\t\"_npmVersion\": \"2.14.7\",\n\t\"_phantomChildren\": {},\n\t\"_requested\": {\n\t\t\"raw\": \"elliptic@^5.1.0\",\n\t\t\"scope\": null,\n\t\t\"escapedName\": \"elliptic\",\n\t\t\"name\": \"elliptic\",\n\t\t\"rawSpec\": \"^5.1.0\",\n\t\t\"spec\": \">=5.1.0 <6.0.0\",\n\t\t\"type\": \"range\"\n\t},\n\t\"_requiredBy\": [\n\t\t\"/nkey-ecdsa/key-encoder\"\n\t],\n\t\"_resolved\": \"https://registry.npmjs.org/elliptic/-/elliptic-5.2.1.tgz\",\n\t\"_shasum\": \"fa294b6563c6ddbc9ba3dc8594687ae840858f10\",\n\t\"_shrinkwrap\": null,\n\t\"_spec\": \"elliptic@^5.1.0\",\n\t\"_where\": \"/Users/tenaciousmv/Code/tradle-app-web/node_modules/nkey-ecdsa/node_modules/key-encoder\",\n\t\"author\": {\n\t\t\"name\": \"Fedor Indutny\",\n\t\t\"email\": \"fedor@indutny.com\"\n\t},\n\t\"bugs\": {\n\t\t\"url\": \"https://github.com/indutny/elliptic/issues\"\n\t},\n\t\"dependencies\": {\n\t\t\"bn.js\": \"^3.1.1\",\n\t\t\"brorand\": \"^1.0.1\",\n\t\t\"hash.js\": \"^1.0.0\",\n\t\t\"inherits\": \"^2.0.1\"\n\t},\n\t\"description\": \"EC cryptography\",\n\t\"devDependencies\": {\n\t\t\"browserify\": \"^3.44.2\",\n\t\t\"coveralls\": \"^2.11.3\",\n\t\t\"istanbul\": \"^0.3.17\",\n\t\t\"jscs\": \"^1.11.3\",\n\t\t\"jshint\": \"^2.6.0\",\n\t\t\"mocha\": \"^2.1.0\",\n\t\t\"uglify-js\": \"^2.4.13\"\n\t},\n\t\"directories\": {},\n\t\"dist\": {\n\t\t\"shasum\": \"fa294b6563c6ddbc9ba3dc8594687ae840858f10\",\n\t\t\"tarball\": \"https://registry.npmjs.org/elliptic/-/elliptic-5.2.1.tgz\"\n\t},\n\t\"gitHead\": \"676db36e64399e5b4c0e31ae5aa4cdf8e8362014\",\n\t\"homepage\": \"https://github.com/indutny/elliptic\",\n\t\"keywords\": [\n\t\t\"EC\",\n\t\t\"Elliptic\",\n\t\t\"curve\",\n\t\t\"Cryptography\"\n\t],\n\t\"license\": \"MIT\",\n\t\"main\": \"lib/elliptic.js\",\n\t\"maintainers\": [\n\t\t{\n\t\t\t\"name\": \"indutny\",\n\t\t\t\"email\": \"fedor@indutny.com\"\n\t\t}\n\t],\n\t\"name\": \"elliptic\",\n\t\"optionalDependencies\": {},\n\t\"readme\": \"ERROR: No README data found!\",\n\t\"repository\": {\n\t\t\"type\": \"git\",\n\t\t\"url\": \"git+ssh://git@github.com/indutny/elliptic.git\"\n\t},\n\t\"scripts\": {\n\t\t\"coveralls\": \"cat ./coverage/lcov.info | coveralls\",\n\t\t\"test\": \"make lint && istanbul test _mocha --reporter=spec test/*-test.js\"\n\t},\n\t\"version\": \"5.2.1\"\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/nkey-ecdsa/~/elliptic/package.json\n ** module id = 1475\n ** module chunks = 5\n **/","'use strict';\n\nvar utils = exports;\nvar bn = require('bn.js');\n\nutils.assert = function assert(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n};\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg !== 'string') {\n    for (var i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n    return res;\n  }\n  if (!enc) {\n    for (var i = 0; i < msg.length; i++) {\n      var c = msg.charCodeAt(i);\n      var hi = c >> 8;\n      var lo = c & 0xff;\n      if (hi)\n        res.push(hi, lo);\n      else\n        res.push(lo);\n    }\n  } else if (enc === 'hex') {\n    msg = msg.replace(/[^a-z0-9]+/ig, '');\n    if (msg.length % 2 !== 0)\n      msg = '0' + msg;\n    for (var i = 0; i < msg.length; i += 2)\n      res.push(parseInt(msg[i] + msg[i + 1], 16));\n  }\n  return res;\n}\nutils.toArray = toArray;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nutils.zero2 = zero2;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nutils.toHex = toHex;\n\nutils.encode = function encode(arr, enc) {\n  if (enc === 'hex')\n    return toHex(arr);\n  else\n    return arr;\n};\n\n// Represent num in a w-NAF form\nfunction getNAF(num, w) {\n  var naf = [];\n  var ws = 1 << (w + 1);\n  var k = num.clone();\n  while (k.cmpn(1) >= 0) {\n    var z;\n    if (k.isOdd()) {\n      var mod = k.andln(ws - 1);\n      if (mod > (ws >> 1) - 1)\n        z = (ws >> 1) - mod;\n      else\n        z = mod;\n      k.isubn(z);\n    } else {\n      z = 0;\n    }\n    naf.push(z);\n\n    // Optimization, shift by word if possible\n    var shift = (k.cmpn(0) !== 0 && k.andln(ws - 1) === 0) ? (w + 1) : 1;\n    for (var i = 1; i < shift; i++)\n      naf.push(0);\n    k.iushrn(shift);\n  }\n\n  return naf;\n}\nutils.getNAF = getNAF;\n\n// Represent k1, k2 in a Joint Sparse Form\nfunction getJSF(k1, k2) {\n  var jsf = [\n    [],\n    []\n  ];\n\n  k1 = k1.clone();\n  k2 = k2.clone();\n  var d1 = 0;\n  var d2 = 0;\n  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {\n\n    // First phase\n    var m14 = (k1.andln(3) + d1) & 3;\n    var m24 = (k2.andln(3) + d2) & 3;\n    if (m14 === 3)\n      m14 = -1;\n    if (m24 === 3)\n      m24 = -1;\n    var u1;\n    if ((m14 & 1) === 0) {\n      u1 = 0;\n    } else {\n      var m8 = (k1.andln(7) + d1) & 7;\n      if ((m8 === 3 || m8 === 5) && m24 === 2)\n        u1 = -m14;\n      else\n        u1 = m14;\n    }\n    jsf[0].push(u1);\n\n    var u2;\n    if ((m24 & 1) === 0) {\n      u2 = 0;\n    } else {\n      var m8 = (k2.andln(7) + d2) & 7;\n      if ((m8 === 3 || m8 === 5) && m14 === 2)\n        u2 = -m24;\n      else\n        u2 = m24;\n    }\n    jsf[1].push(u2);\n\n    // Second phase\n    if (2 * d1 === u1 + 1)\n      d1 = 1 - d1;\n    if (2 * d2 === u2 + 1)\n      d2 = 1 - d2;\n    k1.iushrn(1);\n    k2.iushrn(1);\n  }\n\n  return jsf;\n}\nutils.getJSF = getJSF;\n\nfunction cachedProperty(obj, computer) {\n  var name = computer.name;\n  var key = '_' + name;\n  obj.prototype[name] = function cachedProperty() {\n    return this[key] !== undefined ? this[key] :\n           this[key] = computer.call(this);\n  };\n}\nutils.cachedProperty = cachedProperty;\n\nfunction parseBytes(bytes) {\n  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') :\n                                     bytes;\n}\nutils.parseBytes = parseBytes;\n\nfunction intFromLE(bytes) {\n  return new bn(bytes, 'hex', 'le');\n}\nutils.intFromLE = intFromLE;\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/nkey-ecdsa/~/elliptic/lib/elliptic/utils.js\n **/","(function (module, exports) {\n\n'use strict';\n\n// Utils\n\nfunction assert(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n}\n\n// Could use `inherits` module, but don't want to move from single file\n// architecture yet.\nfunction inherits(ctor, superCtor) {\n  ctor.super_ = superCtor;\n  var TempCtor = function () {};\n  TempCtor.prototype = superCtor.prototype;\n  ctor.prototype = new TempCtor();\n  ctor.prototype.constructor = ctor;\n}\n\n// BN\n\nfunction BN(number, base, endian) {\n  // May be `new BN(bn)` ?\n  if (number !== null &&\n      typeof number === 'object' &&\n      Array.isArray(number.words)) {\n    return number;\n  }\n\n  this.sign = false;\n  this.words = null;\n  this.length = 0;\n\n  // Reduction context\n  this.red = null;\n\n  if (base === 'le' || base === 'be') {\n    endian = base;\n    base = 10;\n  }\n\n  if (number !== null)\n    this._init(number || 0, base || 10, endian || 'be');\n}\nif (typeof module === 'object')\n  module.exports = BN;\nelse\n  exports.BN = BN;\n\nBN.BN = BN;\nBN.wordSize = 26;\n\nBN.max = function max(left, right) {\n  if (left.cmp(right) > 0)\n    return left;\n  else\n    return right;\n};\n\nBN.min = function min(left, right) {\n  if (left.cmp(right) < 0)\n    return left;\n  else\n    return right;\n};\n\nBN.prototype._init = function init(number, base, endian) {\n  if (typeof number === 'number') {\n    return this._initNumber(number, base, endian);\n  } else if (typeof number === 'object') {\n    return this._initArray(number, base, endian);\n  }\n  if (base === 'hex')\n    base = 16;\n  assert(base === (base | 0) && base >= 2 && base <= 36);\n\n  number = number.toString().replace(/\\s+/g, '');\n  var start = 0;\n  if (number[0] === '-')\n    start++;\n\n  if (base === 16)\n    this._parseHex(number, start);\n  else\n    this._parseBase(number, base, start);\n\n  if (number[0] === '-')\n    this.sign = true;\n\n  this.strip();\n\n  if (endian !== 'le')\n    return;\n\n  this._initArray(this.toArray(), base, endian);\n};\n\nBN.prototype._initNumber = function _initNumber(number, base, endian) {\n  if (number < 0) {\n    this.sign = true;\n    number = -number;\n  }\n  if (number < 0x4000000) {\n    this.words = [ number & 0x3ffffff ];\n    this.length = 1;\n  } else if (number < 0x10000000000000) {\n    this.words = [\n      number & 0x3ffffff,\n      (number / 0x4000000) & 0x3ffffff\n    ];\n    this.length = 2;\n  } else {\n    assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n    this.words = [\n      number & 0x3ffffff,\n      (number / 0x4000000) & 0x3ffffff,\n      1\n    ];\n    this.length = 3;\n  }\n\n  if (endian !== 'le')\n    return;\n\n  // Reverse the bytes\n  this._initArray(this.toArray(), base, endian);\n};\n\nBN.prototype._initArray = function _initArray(number, base, endian) {\n  // Perhaps a Uint8Array\n  assert(typeof number.length === 'number');\n  if (number.length <= 0) {\n    this.words = [ 0 ];\n    this.length = 1;\n    return this;\n  }\n\n  this.length = Math.ceil(number.length / 3);\n  this.words = new Array(this.length);\n  for (var i = 0; i < this.length; i++)\n    this.words[i] = 0;\n\n  var off = 0;\n  if (endian === 'be') {\n    for (var i = number.length - 1, j = 0; i >= 0; i -= 3) {\n      var w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n      off += 24;\n      if (off >= 26) {\n        off -= 26;\n        j++;\n      }\n    }\n  } else if (endian === 'le') {\n    for (var i = 0, j = 0; i < number.length; i += 3) {\n      var w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n      off += 24;\n      if (off >= 26) {\n        off -= 26;\n        j++;\n      }\n    }\n  }\n  return this.strip();\n};\n\nfunction parseHex(str, start, end) {\n  var r = 0;\n  var len = Math.min(str.length, end);\n  for (var i = start; i < len; i++) {\n    var c = str.charCodeAt(i) - 48;\n\n    r <<= 4;\n\n    // 'a' - 'f'\n    if (c >= 49 && c <= 54)\n      r |= c - 49 + 0xa;\n\n    // 'A' - 'F'\n    else if (c >= 17 && c <= 22)\n      r |= c - 17 + 0xa;\n\n    // '0' - '9'\n    else\n      r |= c & 0xf;\n  }\n  return r;\n}\n\nBN.prototype._parseHex = function _parseHex(number, start) {\n  // Create possibly bigger array to ensure that it fits the number\n  this.length = Math.ceil((number.length - start) / 6);\n  this.words = new Array(this.length);\n  for (var i = 0; i < this.length; i++)\n    this.words[i] = 0;\n\n  // Scan 24-bit chunks and add them to the number\n  var off = 0;\n  for (var i = number.length - 6, j = 0; i >= start; i -= 6) {\n    var w = parseHex(number, i, i + 6);\n    this.words[j] |= (w << off) & 0x3ffffff;\n    this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n    off += 24;\n    if (off >= 26) {\n      off -= 26;\n      j++;\n    }\n  }\n  if (i + 6 !== start) {\n    var w = parseHex(number, start, i + 6);\n    this.words[j] |= (w << off) & 0x3ffffff;\n    this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n  }\n  this.strip();\n};\n\nfunction parseBase(str, start, end, mul) {\n  var r = 0;\n  var len = Math.min(str.length, end);\n  for (var i = start; i < len; i++) {\n    var c = str.charCodeAt(i) - 48;\n\n    r *= mul;\n\n    // 'a'\n    if (c >= 49)\n      r += c - 49 + 0xa;\n\n    // 'A'\n    else if (c >= 17)\n      r += c - 17 + 0xa;\n\n    // '0' - '9'\n    else\n      r += c;\n  }\n  return r;\n}\n\nBN.prototype._parseBase = function _parseBase(number, base, start) {\n  // Initialize as zero\n  this.words = [ 0 ];\n  this.length = 1;\n\n  // Find length of limb in base\n  for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base)\n    limbLen++;\n  limbLen--;\n  limbPow = (limbPow / base) | 0;\n\n  var total = number.length - start;\n  var mod = total % limbLen;\n  var end = Math.min(total, total - mod) + start;\n\n  var word = 0;\n  for (var i = start; i < end; i += limbLen) {\n    word = parseBase(number, i, i + limbLen, base);\n\n    this.imuln(limbPow);\n    if (this.words[0] + word < 0x4000000)\n      this.words[0] += word;\n    else\n      this._iaddn(word);\n  }\n\n  if (mod !== 0) {\n    var pow = 1;\n    var word = parseBase(number, i, number.length, base);\n\n    for (var i = 0; i < mod; i++)\n      pow *= base;\n    this.imuln(pow);\n    if (this.words[0] + word < 0x4000000)\n      this.words[0] += word;\n    else\n      this._iaddn(word);\n  }\n};\n\nBN.prototype.copy = function copy(dest) {\n  dest.words = new Array(this.length);\n  for (var i = 0; i < this.length; i++)\n    dest.words[i] = this.words[i];\n  dest.length = this.length;\n  dest.sign = this.sign;\n  dest.red = this.red;\n};\n\nBN.prototype.clone = function clone() {\n  var r = new BN(null);\n  this.copy(r);\n  return r;\n};\n\n// Remove leading `0` from `this`\nBN.prototype.strip = function strip() {\n  while (this.length > 1 && this.words[this.length - 1] === 0)\n    this.length--;\n  return this._normSign();\n};\n\nBN.prototype._normSign = function _normSign() {\n  // -0 = 0\n  if (this.length === 1 && this.words[0] === 0)\n    this.sign = false;\n  return this;\n};\n\nBN.prototype.inspect = function inspect() {\n  return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n};\n\n/*\n\nvar zeros = [];\nvar groupSizes = [];\nvar groupBases = [];\n\nvar s = '';\nvar i = -1;\nwhile (++i < BN.wordSize) {\n  zeros[i] = s;\n  s += '0';\n}\ngroupSizes[0] = 0;\ngroupSizes[1] = 0;\ngroupBases[0] = 0;\ngroupBases[1] = 0;\nvar base = 2 - 1;\nwhile (++base < 36 + 1) {\n  var groupSize = 0;\n  var groupBase = 1;\n  while (groupBase < (1 << BN.wordSize) / base) {\n    groupBase *= base;\n    groupSize += 1;\n  }\n  groupSizes[base] = groupSize;\n  groupBases[base] = groupBase;\n}\n\n*/\n\nvar zeros = [\n  '',\n  '0',\n  '00',\n  '000',\n  '0000',\n  '00000',\n  '000000',\n  '0000000',\n  '00000000',\n  '000000000',\n  '0000000000',\n  '00000000000',\n  '000000000000',\n  '0000000000000',\n  '00000000000000',\n  '000000000000000',\n  '0000000000000000',\n  '00000000000000000',\n  '000000000000000000',\n  '0000000000000000000',\n  '00000000000000000000',\n  '000000000000000000000',\n  '0000000000000000000000',\n  '00000000000000000000000',\n  '000000000000000000000000',\n  '0000000000000000000000000'\n];\n\nvar groupSizes = [\n  0, 0,\n  25, 16, 12, 11, 10, 9, 8,\n  8, 7, 7, 7, 7, 6, 6,\n  6, 6, 6, 6, 6, 5, 5,\n  5, 5, 5, 5, 5, 5, 5,\n  5, 5, 5, 5, 5, 5, 5\n];\n\nvar groupBases = [\n  0, 0,\n  33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n  43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n  16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n  6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n  24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n];\n\nBN.prototype.toString = function toString(base, padding) {\n  base = base || 10;\n  var padding = padding | 0 || 1;\n  if (base === 16 || base === 'hex') {\n    var out = '';\n    var off = 0;\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = this.words[i];\n      var word = (((w << off) | carry) & 0xffffff).toString(16);\n      carry = (w >>> (24 - off)) & 0xffffff;\n      if (carry !== 0 || i !== this.length - 1)\n        out = zeros[6 - word.length] + word + out;\n      else\n        out = word + out;\n      off += 2;\n      if (off >= 26) {\n        off -= 26;\n        i--;\n      }\n    }\n    if (carry !== 0)\n      out = carry.toString(16) + out;\n    while (out.length % padding !== 0)\n      out = '0' + out;\n    if (this.sign)\n      out = '-' + out;\n    return out;\n  } else if (base === (base | 0) && base >= 2 && base <= 36) {\n    // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n    var groupSize = groupSizes[base];\n    // var groupBase = Math.pow(base, groupSize);\n    var groupBase = groupBases[base];\n    var out = '';\n    var c = this.clone();\n    c.sign = false;\n    while (c.cmpn(0) !== 0) {\n      var r = c.modn(groupBase).toString(base);\n      c = c.idivn(groupBase);\n\n      if (c.cmpn(0) !== 0)\n        out = zeros[groupSize - r.length] + r + out;\n      else\n        out = r + out;\n    }\n    if (this.cmpn(0) === 0)\n      out = '0' + out;\n    while (out.length % padding !== 0)\n      out = '0' + out;\n    if (this.sign)\n      out = '-' + out;\n    return out;\n  } else {\n    assert(false, 'Base should be between 2 and 36');\n  }\n};\n\nBN.prototype.toJSON = function toJSON() {\n  return this.toString(16);\n};\n\nBN.prototype.toArray = function toArray(endian, length) {\n  this.strip();\n  var littleEndian = endian === 'le';\n  var res = new Array(this.byteLength());\n  res[0] = 0;\n\n  var q = this.clone();\n  if (!littleEndian) {\n    // Assume big-endian\n    for (var i = 0; q.cmpn(0) !== 0; i++) {\n      var b = q.andln(0xff);\n      q.iushrn(8);\n\n      res[res.length - i - 1] = b;\n    }\n  } else {\n    for (var i = 0; q.cmpn(0) !== 0; i++) {\n      var b = q.andln(0xff);\n      q.iushrn(8);\n\n      res[i] = b;\n    }\n  }\n\n  if (length) {\n    assert(res.length <= length, 'byte array longer than desired length');\n\n    while (res.length < length) {\n      if (littleEndian)\n        res.push(0);\n      else\n        res.unshift(0);\n    }\n  }\n\n  return res;\n};\n\nif (Math.clz32) {\n  BN.prototype._countBits = function _countBits(w) {\n    return 32 - Math.clz32(w);\n  };\n} else {\n  BN.prototype._countBits = function _countBits(w) {\n    var t = w;\n    var r = 0;\n    if (t >= 0x1000) {\n      r += 13;\n      t >>>= 13;\n    }\n    if (t >= 0x40) {\n      r += 7;\n      t >>>= 7;\n    }\n    if (t >= 0x8) {\n      r += 4;\n      t >>>= 4;\n    }\n    if (t >= 0x02) {\n      r += 2;\n      t >>>= 2;\n    }\n    return r + t;\n  };\n}\n\nBN.prototype._zeroBits = function _zeroBits(w) {\n  // Short-cut\n  if (w === 0)\n    return 26;\n\n  var t = w;\n  var r = 0;\n  if ((t & 0x1fff) === 0) {\n    r += 13;\n    t >>>= 13;\n  }\n  if ((t & 0x7f) === 0) {\n    r += 7;\n    t >>>= 7;\n  }\n  if ((t & 0xf) === 0) {\n    r += 4;\n    t >>>= 4;\n  }\n  if ((t & 0x3) === 0) {\n    r += 2;\n    t >>>= 2;\n  }\n  if ((t & 0x1) === 0)\n    r++;\n  return r;\n};\n\n// Return number of used bits in a BN\nBN.prototype.bitLength = function bitLength() {\n  var hi = 0;\n  var w = this.words[this.length - 1];\n  var hi = this._countBits(w);\n  return (this.length - 1) * 26 + hi;\n};\n\nfunction toBitArray(num) {\n  var w = new Array(num.bitLength());\n\n  for (var bit = 0; bit < w.length; bit++) {\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n  }\n\n  return w;\n}\n\n// Number of trailing zero bits\nBN.prototype.zeroBits = function zeroBits() {\n  if (this.cmpn(0) === 0)\n    return 0;\n\n  var r = 0;\n  for (var i = 0; i < this.length; i++) {\n    var b = this._zeroBits(this.words[i]);\n    r += b;\n    if (b !== 26)\n      break;\n  }\n  return r;\n};\n\nBN.prototype.byteLength = function byteLength() {\n  return Math.ceil(this.bitLength() / 8);\n};\n\n// Return negative clone of `this`\nBN.prototype.neg = function neg() {\n  if (this.cmpn(0) === 0)\n    return this.clone();\n\n  var r = this.clone();\n  r.sign = !this.sign;\n  return r;\n};\n\n\n// Or `num` with `this` in-place\nBN.prototype.iuor = function iuor(num) {\n  while (this.length < num.length)\n    this.words[this.length++] = 0;\n\n  for (var i = 0; i < num.length; i++)\n    this.words[i] = this.words[i] | num.words[i];\n\n  return this.strip();\n};\n\nBN.prototype.ior = function ior(num) {\n  assert(!this.sign && !num.sign);\n  return this.iuor(num);\n};\n\n\n// Or `num` with `this`\nBN.prototype.or = function or(num) {\n  if (this.length > num.length)\n    return this.clone().ior(num);\n  else\n    return num.clone().ior(this);\n};\n\nBN.prototype.uor = function uor(num) {\n  if (this.length > num.length)\n    return this.clone().iuor(num);\n  else\n    return num.clone().iuor(this);\n};\n\n\n// And `num` with `this` in-place\nBN.prototype.iuand = function iuand(num) {\n  // b = min-length(num, this)\n  var b;\n  if (this.length > num.length)\n    b = num;\n  else\n    b = this;\n\n  for (var i = 0; i < b.length; i++)\n    this.words[i] = this.words[i] & num.words[i];\n\n  this.length = b.length;\n\n  return this.strip();\n};\n\nBN.prototype.iand = function iand(num) {\n  assert(!this.sign && !num.sign);\n  return this.iuand(num);\n};\n\n\n// And `num` with `this`\nBN.prototype.and = function and(num) {\n  if (this.length > num.length)\n    return this.clone().iand(num);\n  else\n    return num.clone().iand(this);\n};\n\nBN.prototype.uand = function uand(num) {\n  if (this.length > num.length)\n    return this.clone().iuand(num);\n  else\n    return num.clone().iuand(this);\n};\n\n\n// Xor `num` with `this` in-place\nBN.prototype.iuxor = function iuxor(num) {\n  // a.length > b.length\n  var a;\n  var b;\n  if (this.length > num.length) {\n    a = this;\n    b = num;\n  } else {\n    a = num;\n    b = this;\n  }\n\n  for (var i = 0; i < b.length; i++)\n    this.words[i] = a.words[i] ^ b.words[i];\n\n  if (this !== a)\n    for (; i < a.length; i++)\n      this.words[i] = a.words[i];\n\n  this.length = a.length;\n\n  return this.strip();\n};\n\nBN.prototype.ixor = function ixor(num) {\n  assert(!this.sign && !num.sign);\n  return this.iuxor(num);\n};\n\n\n// Xor `num` with `this`\nBN.prototype.xor = function xor(num) {\n  if (this.length > num.length)\n    return this.clone().ixor(num);\n  else\n    return num.clone().ixor(this);\n};\n\nBN.prototype.uxor = function uxor(num) {\n  if (this.length > num.length)\n    return this.clone().iuxor(num);\n  else\n    return num.clone().iuxor(this);\n};\n\n\n// Set `bit` of `this`\nBN.prototype.setn = function setn(bit, val) {\n  assert(typeof bit === 'number' && bit >= 0);\n\n  var off = (bit / 26) | 0;\n  var wbit = bit % 26;\n\n  while (this.length <= off)\n    this.words[this.length++] = 0;\n\n  if (val)\n    this.words[off] = this.words[off] | (1 << wbit);\n  else\n    this.words[off] = this.words[off] & ~(1 << wbit);\n\n  return this.strip();\n};\n\n\n// Add `num` to `this` in-place\nBN.prototype.iadd = function iadd(num) {\n  // negative + positive\n  if (this.sign && !num.sign) {\n    this.sign = false;\n    var r = this.isub(num);\n    this.sign = !this.sign;\n    return this._normSign();\n\n  // positive + negative\n  } else if (!this.sign && num.sign) {\n    num.sign = false;\n    var r = this.isub(num);\n    num.sign = true;\n    return r._normSign();\n  }\n\n  // a.length > b.length\n  var a;\n  var b;\n  if (this.length > num.length) {\n    a = this;\n    b = num;\n  } else {\n    a = num;\n    b = this;\n  }\n\n  var carry = 0;\n  for (var i = 0; i < b.length; i++) {\n    var r = a.words[i] + b.words[i] + carry;\n    this.words[i] = r & 0x3ffffff;\n    carry = r >>> 26;\n  }\n  for (; carry !== 0 && i < a.length; i++) {\n    var r = a.words[i] + carry;\n    this.words[i] = r & 0x3ffffff;\n    carry = r >>> 26;\n  }\n\n  this.length = a.length;\n  if (carry !== 0) {\n    this.words[this.length] = carry;\n    this.length++;\n  // Copy the rest of the words\n  } else if (a !== this) {\n    for (; i < a.length; i++)\n      this.words[i] = a.words[i];\n  }\n\n  return this;\n};\n\n// Add `num` to `this`\nBN.prototype.add = function add(num) {\n  if (num.sign && !this.sign) {\n    num.sign = false;\n    var res = this.sub(num);\n    num.sign = true;\n    return res;\n  } else if (!num.sign && this.sign) {\n    this.sign = false;\n    var res = num.sub(this);\n    this.sign = true;\n    return res;\n  }\n\n  if (this.length > num.length)\n    return this.clone().iadd(num);\n  else\n    return num.clone().iadd(this);\n};\n\n// Subtract `num` from `this` in-place\nBN.prototype.isub = function isub(num) {\n  // this - (-num) = this + num\n  if (num.sign) {\n    num.sign = false;\n    var r = this.iadd(num);\n    num.sign = true;\n    return r._normSign();\n\n  // -this - num = -(this + num)\n  } else if (this.sign) {\n    this.sign = false;\n    this.iadd(num);\n    this.sign = true;\n    return this._normSign();\n  }\n\n  // At this point both numbers are positive\n  var cmp = this.cmp(num);\n\n  // Optimization - zeroify\n  if (cmp === 0) {\n    this.sign = false;\n    this.length = 1;\n    this.words[0] = 0;\n    return this;\n  }\n\n  // a > b\n  var a;\n  var b;\n  if (cmp > 0) {\n    a = this;\n    b = num;\n  } else {\n    a = num;\n    b = this;\n  }\n\n  var carry = 0;\n  for (var i = 0; i < b.length; i++) {\n    var r = a.words[i] - b.words[i] + carry;\n    carry = r >> 26;\n    this.words[i] = r & 0x3ffffff;\n  }\n  for (; carry !== 0 && i < a.length; i++) {\n    var r = a.words[i] + carry;\n    carry = r >> 26;\n    this.words[i] = r & 0x3ffffff;\n  }\n\n  // Copy rest of the words\n  if (carry === 0 && i < a.length && a !== this)\n    for (; i < a.length; i++)\n      this.words[i] = a.words[i];\n  this.length = Math.max(this.length, i);\n\n  if (a !== this)\n    this.sign = true;\n\n  return this.strip();\n};\n\n// Subtract `num` from `this`\nBN.prototype.sub = function sub(num) {\n  return this.clone().isub(num);\n};\n\n/*\n// NOTE: This could be potentionally used to generate loop-less multiplications\nfunction _genCombMulTo(alen, blen) {\n  var len = alen + blen - 1;\n  var src = [\n    'var a = this.words, b = num.words, o = out.words, c = 0, w, ' +\n        'mask = 0x3ffffff, shift = 0x4000000;',\n    'out.length = ' + len + ';'\n  ];\n  for (var k = 0; k < len; k++) {\n    var minJ = Math.max(0, k - alen + 1);\n    var maxJ = Math.min(k, blen - 1);\n\n    for (var j = minJ; j <= maxJ; j++) {\n      var i = k - j;\n      var mul = 'a[' + i + '] * b[' + j + ']';\n\n      if (j === minJ) {\n        src.push('w = ' + mul + ' + c;');\n        src.push('c = (w / shift) | 0;');\n      } else {\n        src.push('w += ' + mul + ';');\n        src.push('c += (w / shift) | 0;');\n      }\n      src.push('w &= mask;');\n    }\n    src.push('o[' + k + '] = w;');\n  }\n  src.push('if (c !== 0) {',\n           '  o[' + k + '] = c;',\n           '  out.length++;',\n           '}',\n           'return out;');\n\n  return src.join('\\n');\n}\n*/\n\nBN.prototype._smallMulTo = function _smallMulTo(num, out) {\n  out.sign = num.sign !== this.sign;\n  out.length = this.length + num.length;\n\n  var carry = 0;\n  for (var k = 0; k < out.length - 1; k++) {\n    // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n    // note that ncarry could be >= 0x3ffffff\n    var ncarry = carry >>> 26;\n    var rword = carry & 0x3ffffff;\n    var maxJ = Math.min(k, num.length - 1);\n    for (var j = Math.max(0, k - this.length + 1); j <= maxJ; j++) {\n      var i = k - j;\n      var a = this.words[i] | 0;\n      var b = num.words[j] | 0;\n      var r = a * b;\n\n      var lo = r & 0x3ffffff;\n      ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n      lo = (lo + rword) | 0;\n      rword = lo & 0x3ffffff;\n      ncarry = (ncarry + (lo >>> 26)) | 0;\n    }\n    out.words[k] = rword;\n    carry = ncarry;\n  }\n  if (carry !== 0) {\n    out.words[k] = carry;\n  } else {\n    out.length--;\n  }\n\n  return out.strip();\n};\n\nBN.prototype._bigMulTo = function _bigMulTo(num, out) {\n  out.sign = num.sign !== this.sign;\n  out.length = this.length + num.length;\n\n  var carry = 0;\n  var hncarry = 0;\n  for (var k = 0; k < out.length - 1; k++) {\n    // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n    // note that ncarry could be >= 0x3ffffff\n    var ncarry = hncarry;\n    hncarry = 0;\n    var rword = carry & 0x3ffffff;\n    var maxJ = Math.min(k, num.length - 1);\n    for (var j = Math.max(0, k - this.length + 1); j <= maxJ; j++) {\n      var i = k - j;\n      var a = this.words[i] | 0;\n      var b = num.words[j] | 0;\n      var r = a * b;\n\n      var lo = r & 0x3ffffff;\n      ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n      lo = (lo + rword) | 0;\n      rword = lo & 0x3ffffff;\n      ncarry = (ncarry + (lo >>> 26)) | 0;\n\n      hncarry += ncarry >>> 26;\n      ncarry &= 0x3ffffff;\n    }\n    out.words[k] = rword;\n    carry = ncarry;\n    ncarry = hncarry;\n  }\n  if (carry !== 0) {\n    out.words[k] = carry;\n  } else {\n    out.length--;\n  }\n\n  return out.strip();\n};\n\nBN.prototype.mulTo = function mulTo(num, out) {\n  var res;\n  if (this.length + num.length < 63)\n    res = this._smallMulTo(num, out);\n  else\n    res = this._bigMulTo(num, out);\n  return res;\n};\n\n// Multiply `this` by `num`\nBN.prototype.mul = function mul(num) {\n  var out = new BN(null);\n  out.words = new Array(this.length + num.length);\n  return this.mulTo(num, out);\n};\n\n// In-place Multiplication\nBN.prototype.imul = function imul(num) {\n  if (this.cmpn(0) === 0 || num.cmpn(0) === 0) {\n    this.words[0] = 0;\n    this.length = 1;\n    return this;\n  }\n\n  var tlen = this.length;\n  var nlen = num.length;\n\n  this.sign = num.sign !== this.sign;\n  this.length = this.length + num.length;\n  this.words[this.length - 1] = 0;\n\n  for (var k = this.length - 2; k >= 0; k--) {\n    // Sum all words with the same `i + j = k` and accumulate `carry`,\n    // note that carry could be >= 0x3ffffff\n    var carry = 0;\n    var rword = 0;\n    var maxJ = Math.min(k, nlen - 1);\n    for (var j = Math.max(0, k - tlen + 1); j <= maxJ; j++) {\n      var i = k - j;\n      var a = this.words[i];\n      var b = num.words[j];\n      var r = a * b;\n\n      var lo = r & 0x3ffffff;\n      carry += (r / 0x4000000) | 0;\n      lo += rword;\n      rword = lo & 0x3ffffff;\n      carry += lo >>> 26;\n    }\n    this.words[k] = rword;\n    this.words[k + 1] += carry;\n    carry = 0;\n  }\n\n  // Propagate overflows\n  var carry = 0;\n  for (var i = 1; i < this.length; i++) {\n    var w = this.words[i] + carry;\n    this.words[i] = w & 0x3ffffff;\n    carry = w >>> 26;\n  }\n\n  return this.strip();\n};\n\nBN.prototype.imuln = function imuln(num) {\n  assert(typeof num === 'number');\n\n  // Carry\n  var carry = 0;\n  for (var i = 0; i < this.length; i++) {\n    var w = this.words[i] * num;\n    var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n    carry >>= 26;\n    carry += (w / 0x4000000) | 0;\n    // NOTE: lo is 27bit maximum\n    carry += lo >>> 26;\n    this.words[i] = lo & 0x3ffffff;\n  }\n\n  if (carry !== 0) {\n    this.words[i] = carry;\n    this.length++;\n  }\n\n  return this;\n};\n\nBN.prototype.muln = function muln(num) {\n  return this.clone().imuln(num);\n};\n\n// `this` * `this`\nBN.prototype.sqr = function sqr() {\n  return this.mul(this);\n};\n\n// `this` * `this` in-place\nBN.prototype.isqr = function isqr() {\n  return this.mul(this);\n};\n\n// Math.pow(`this`, `num`)\nBN.prototype.pow = function pow(num) {\n  var w = toBitArray(num);\n  if (w.length === 0)\n    return new BN(1);\n\n  // Skip leading zeroes\n  var res = this;\n  for (var i = 0; i < w.length; i++, res = res.sqr())\n    if (w[i] !== 0)\n      break;\n\n  if (++i < w.length) {\n    for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n      if (w[i] === 0)\n        continue;\n      res = res.mul(q);\n    }\n  }\n\n  return res;\n};\n\n// Shift-left in-place\nBN.prototype.iushln = function iushln(bits) {\n  assert(typeof bits === 'number' && bits >= 0);\n  var r = bits % 26;\n  var s = (bits - r) / 26;\n  var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n\n  if (r !== 0) {\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var newCarry = this.words[i] & carryMask;\n      var c = (this.words[i] - newCarry) << r;\n      this.words[i] = c | carry;\n      carry = newCarry >>> (26 - r);\n    }\n    if (carry) {\n      this.words[i] = carry;\n      this.length++;\n    }\n  }\n\n  if (s !== 0) {\n    for (var i = this.length - 1; i >= 0; i--)\n      this.words[i + s] = this.words[i];\n    for (var i = 0; i < s; i++)\n      this.words[i] = 0;\n    this.length += s;\n  }\n\n  return this.strip();\n};\n\nBN.prototype.ishln = function ishln(bits) {\n  // TODO(indutny): implement me\n  assert(!this.sign);\n  return this.iushln(bits);\n};\n\n// Shift-right in-place\n// NOTE: `hint` is a lowest bit before trailing zeroes\n// NOTE: if `extended` is present - it will be filled with destroyed bits\nBN.prototype.iushrn = function iushrn(bits, hint, extended) {\n  assert(typeof bits === 'number' && bits >= 0);\n  var h;\n  if (hint)\n    h = (hint - (hint % 26)) / 26;\n  else\n    h = 0;\n\n  var r = bits % 26;\n  var s = Math.min((bits - r) / 26, this.length);\n  var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n  var maskedWords = extended;\n\n  h -= s;\n  h = Math.max(0, h);\n\n  // Extended mode, copy masked part\n  if (maskedWords) {\n    for (var i = 0; i < s; i++)\n      maskedWords.words[i] = this.words[i];\n    maskedWords.length = s;\n  }\n\n  if (s === 0) {\n    // No-op, we should not move anything at all\n  } else if (this.length > s) {\n    this.length -= s;\n    for (var i = 0; i < this.length; i++)\n      this.words[i] = this.words[i + s];\n  } else {\n    this.words[0] = 0;\n    this.length = 1;\n  }\n\n  var carry = 0;\n  for (var i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n    var word = this.words[i];\n    this.words[i] = (carry << (26 - r)) | (word >>> r);\n    carry = word & mask;\n  }\n\n  // Push carried bits as a mask\n  if (maskedWords && carry !== 0)\n    maskedWords.words[maskedWords.length++] = carry;\n\n  if (this.length === 0) {\n    this.words[0] = 0;\n    this.length = 1;\n  }\n\n  this.strip();\n\n  return this;\n};\n\nBN.prototype.ishrn = function ishrn(bits, hint, extended) {\n  // TODO(indutny): implement me\n  assert(!this.sign);\n  return this.iushrn(bits, hint, extended);\n};\n\n// Shift-left\nBN.prototype.shln = function shln(bits) {\n  return this.clone().ishln(bits);\n};\n\nBN.prototype.ushln = function ushln(bits) {\n  return this.clone().iushln(bits);\n};\n\n// Shift-right\nBN.prototype.shrn = function shrn(bits) {\n  return this.clone().ishrn(bits);\n};\n\nBN.prototype.ushrn = function ushrn(bits) {\n  return this.clone().iushrn(bits);\n};\n\n// Test if n bit is set\nBN.prototype.testn = function testn(bit) {\n  assert(typeof bit === 'number' && bit >= 0);\n  var r = bit % 26;\n  var s = (bit - r) / 26;\n  var q = 1 << r;\n\n  // Fast case: bit is much higher than all existing words\n  if (this.length <= s) {\n    return false;\n  }\n\n  // Check bit and return\n  var w = this.words[s];\n\n  return !!(w & q);\n};\n\n// Return only lowers bits of number (in-place)\nBN.prototype.imaskn = function imaskn(bits) {\n  assert(typeof bits === 'number' && bits >= 0);\n  var r = bits % 26;\n  var s = (bits - r) / 26;\n\n  assert(!this.sign, 'imaskn works only with positive numbers');\n\n  if (r !== 0)\n    s++;\n  this.length = Math.min(s, this.length);\n\n  if (r !== 0) {\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    this.words[this.length - 1] &= mask;\n  }\n\n  return this.strip();\n};\n\n// Return only lowers bits of number\nBN.prototype.maskn = function maskn(bits) {\n  return this.clone().imaskn(bits);\n};\n\n// Add plain number `num` to `this`\nBN.prototype.iaddn = function iaddn(num) {\n  assert(typeof num === 'number');\n  if (num < 0)\n    return this.isubn(-num);\n\n  // Possible sign change\n  if (this.sign) {\n    if (this.length === 1 && this.words[0] < num) {\n      this.words[0] = num - this.words[0];\n      this.sign = false;\n      return this;\n    }\n\n    this.sign = false;\n    this.isubn(num);\n    this.sign = true;\n    return this;\n  }\n\n  // Add without checks\n  return this._iaddn(num);\n};\n\nBN.prototype._iaddn = function _iaddn(num) {\n  this.words[0] += num;\n\n  // Carry\n  for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n    this.words[i] -= 0x4000000;\n    if (i === this.length - 1)\n      this.words[i + 1] = 1;\n    else\n      this.words[i + 1]++;\n  }\n  this.length = Math.max(this.length, i + 1);\n\n  return this;\n};\n\n// Subtract plain number `num` from `this`\nBN.prototype.isubn = function isubn(num) {\n  assert(typeof num === 'number');\n  if (num < 0)\n    return this.iaddn(-num);\n\n  if (this.sign) {\n    this.sign = false;\n    this.iaddn(num);\n    this.sign = true;\n    return this;\n  }\n\n  this.words[0] -= num;\n\n  // Carry\n  for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n    this.words[i] += 0x4000000;\n    this.words[i + 1] -= 1;\n  }\n\n  return this.strip();\n};\n\nBN.prototype.addn = function addn(num) {\n  return this.clone().iaddn(num);\n};\n\nBN.prototype.subn = function subn(num) {\n  return this.clone().isubn(num);\n};\n\nBN.prototype.iabs = function iabs() {\n  this.sign = false;\n\n  return this;\n};\n\nBN.prototype.abs = function abs() {\n  return this.clone().iabs();\n};\n\nBN.prototype._ishlnsubmul = function _ishlnsubmul(num, mul, shift) {\n  // Bigger storage is needed\n  var len = num.length + shift;\n  var i;\n  if (this.words.length < len) {\n    var t = new Array(len);\n    for (var i = 0; i < this.length; i++)\n      t[i] = this.words[i];\n    this.words = t;\n  } else {\n    i = this.length;\n  }\n\n  // Zeroify rest\n  this.length = Math.max(this.length, len);\n  for (; i < this.length; i++)\n    this.words[i] = 0;\n\n  var carry = 0;\n  for (var i = 0; i < num.length; i++) {\n    var w = this.words[i + shift] + carry;\n    var right = num.words[i] * mul;\n    w -= right & 0x3ffffff;\n    carry = (w >> 26) - ((right / 0x4000000) | 0);\n    this.words[i + shift] = w & 0x3ffffff;\n  }\n  for (; i < this.length - shift; i++) {\n    var w = this.words[i + shift] + carry;\n    carry = w >> 26;\n    this.words[i + shift] = w & 0x3ffffff;\n  }\n\n  if (carry === 0)\n    return this.strip();\n\n  // Subtraction overflow\n  assert(carry === -1);\n  carry = 0;\n  for (var i = 0; i < this.length; i++) {\n    var w = -this.words[i] + carry;\n    carry = w >> 26;\n    this.words[i] = w & 0x3ffffff;\n  }\n  this.sign = true;\n\n  return this.strip();\n};\n\nBN.prototype._wordDiv = function _wordDiv(num, mode) {\n  var shift = this.length - num.length;\n\n  var a = this.clone();\n  var b = num;\n\n  // Normalize\n  var bhi = b.words[b.length - 1];\n  var bhiBits = this._countBits(bhi);\n  shift = 26 - bhiBits;\n  if (shift !== 0) {\n    b = b.ushln(shift);\n    a.iushln(shift);\n    bhi = b.words[b.length - 1];\n  }\n\n  // Initialize quotient\n  var m = a.length - b.length;\n  var q;\n\n  if (mode !== 'mod') {\n    q = new BN(null);\n    q.length = m + 1;\n    q.words = new Array(q.length);\n    for (var i = 0; i < q.length; i++)\n      q.words[i] = 0;\n  }\n\n  var diff = a.clone()._ishlnsubmul(b, 1, m);\n  if (!diff.sign) {\n    a = diff;\n    if (q)\n      q.words[m] = 1;\n  }\n\n  for (var j = m - 1; j >= 0; j--) {\n    var qj = a.words[b.length + j] * 0x4000000 + a.words[b.length + j - 1];\n\n    // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n    // (0x7ffffff)\n    qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n    a._ishlnsubmul(b, qj, j);\n    while (a.sign) {\n      qj--;\n      a.sign = false;\n      a._ishlnsubmul(b, 1, j);\n      if (a.cmpn(0) !== 0)\n        a.sign = !a.sign;\n    }\n    if (q)\n      q.words[j] = qj;\n  }\n  if (q)\n    q.strip();\n  a.strip();\n\n  // Denormalize\n  if (mode !== 'div' && shift !== 0)\n    a.iushrn(shift);\n  return { div: q ? q : null, mod: a };\n};\n\nBN.prototype.divmod = function divmod(num, mode, positive) {\n  assert(num.cmpn(0) !== 0);\n\n  if (this.sign && !num.sign) {\n    var res = this.neg().divmod(num, mode);\n    var div;\n    var mod;\n    if (mode !== 'mod')\n      div = res.div.neg();\n    if (mode !== 'div') {\n      mod = res.mod.neg();\n      if (positive && mod.neg)\n        mod = mod.add(num);\n    }\n    return {\n      div: div,\n      mod: mod\n    };\n  } else if (!this.sign && num.sign) {\n    var res = this.divmod(num.neg(), mode);\n    var div;\n    if (mode !== 'mod')\n      div = res.div.neg();\n    return { div: div, mod: res.mod };\n  } else if (this.sign && num.sign) {\n    var res = this.neg().divmod(num.neg(), mode);\n    var mod;\n    if (mode !== 'div') {\n      mod = res.mod.neg();\n      if (positive && mod.neg)\n        mod = mod.isub(num);\n    }\n    return {\n      div: res.div,\n      mod: mod\n    };\n  }\n\n  // Both numbers are positive at this point\n\n  // Strip both numbers to approximate shift value\n  if (num.length > this.length || this.cmp(num) < 0)\n    return { div: new BN(0), mod: this };\n\n  // Very short reduction\n  if (num.length === 1) {\n    if (mode === 'div')\n      return { div: this.divn(num.words[0]), mod: null };\n    else if (mode === 'mod')\n      return { div: null, mod: new BN(this.modn(num.words[0])) };\n    return {\n      div: this.divn(num.words[0]),\n      mod: new BN(this.modn(num.words[0]))\n    };\n  }\n\n  return this._wordDiv(num, mode);\n};\n\n// Find `this` / `num`\nBN.prototype.div = function div(num) {\n  return this.divmod(num, 'div', false).div;\n};\n\n// Find `this` % `num`\nBN.prototype.mod = function mod(num) {\n  return this.divmod(num, 'mod', false).mod;\n};\n\nBN.prototype.umod = function umod(num) {\n  return this.divmod(num, 'mod', true).mod;\n};\n\n// Find Round(`this` / `num`)\nBN.prototype.divRound = function divRound(num) {\n  var dm = this.divmod(num);\n\n  // Fast case - exact division\n  if (dm.mod.cmpn(0) === 0)\n    return dm.div;\n\n  var mod = dm.div.sign ? dm.mod.isub(num) : dm.mod;\n\n  var half = num.ushrn(1);\n  var r2 = num.andln(1);\n  var cmp = mod.cmp(half);\n\n  // Round down\n  if (cmp < 0 || r2 === 1 && cmp === 0)\n    return dm.div;\n\n  // Round up\n  return dm.div.sign ? dm.div.isubn(1) : dm.div.iaddn(1);\n};\n\nBN.prototype.modn = function modn(num) {\n  assert(num <= 0x3ffffff);\n  var p = (1 << 26) % num;\n\n  var acc = 0;\n  for (var i = this.length - 1; i >= 0; i--)\n    acc = (p * acc + this.words[i]) % num;\n\n  return acc;\n};\n\n// In-place division by number\nBN.prototype.idivn = function idivn(num) {\n  assert(num <= 0x3ffffff);\n\n  var carry = 0;\n  for (var i = this.length - 1; i >= 0; i--) {\n    var w = this.words[i] + carry * 0x4000000;\n    this.words[i] = (w / num) | 0;\n    carry = w % num;\n  }\n\n  return this.strip();\n};\n\nBN.prototype.divn = function divn(num) {\n  return this.clone().idivn(num);\n};\n\nBN.prototype.egcd = function egcd(p) {\n  assert(!p.sign);\n  assert(p.cmpn(0) !== 0);\n\n  var x = this;\n  var y = p.clone();\n\n  if (x.sign)\n    x = x.umod(p);\n  else\n    x = x.clone();\n\n  // A * x + B * y = x\n  var A = new BN(1);\n  var B = new BN(0);\n\n  // C * x + D * y = y\n  var C = new BN(0);\n  var D = new BN(1);\n\n  var g = 0;\n\n  while (x.isEven() && y.isEven()) {\n    x.iushrn(1);\n    y.iushrn(1);\n    ++g;\n  }\n\n  var yp = y.clone();\n  var xp = x.clone();\n\n  while (x.cmpn(0) !== 0) {\n    while (x.isEven()) {\n      x.iushrn(1);\n      if (A.isEven() && B.isEven()) {\n        A.iushrn(1);\n        B.iushrn(1);\n      } else {\n        A.iadd(yp).iushrn(1);\n        B.isub(xp).iushrn(1);\n      }\n    }\n\n    while (y.isEven()) {\n      y.iushrn(1);\n      if (C.isEven() && D.isEven()) {\n        C.iushrn(1);\n        D.iushrn(1);\n      } else {\n        C.iadd(yp).iushrn(1);\n        D.isub(xp).iushrn(1);\n      }\n    }\n\n    if (x.cmp(y) >= 0) {\n      x.isub(y);\n      A.isub(C);\n      B.isub(D);\n    } else {\n      y.isub(x);\n      C.isub(A);\n      D.isub(B);\n    }\n  }\n\n  return {\n    a: C,\n    b: D,\n    gcd: y.iushln(g)\n  };\n};\n\n// This is reduced incarnation of the binary EEA\n// above, designated to invert members of the\n// _prime_ fields F(p) at a maximal speed\nBN.prototype._invmp = function _invmp(p) {\n  assert(!p.sign);\n  assert(p.cmpn(0) !== 0);\n\n  var a = this;\n  var b = p.clone();\n\n  if (a.sign)\n    a = a.umod(p);\n  else\n    a = a.clone();\n\n  var x1 = new BN(1);\n  var x2 = new BN(0);\n\n  var delta = b.clone();\n\n  while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n    while (a.isEven()) {\n      a.iushrn(1);\n      if (x1.isEven())\n        x1.iushrn(1);\n      else\n        x1.iadd(delta).iushrn(1);\n    }\n    while (b.isEven()) {\n      b.iushrn(1);\n      if (x2.isEven())\n        x2.iushrn(1);\n      else\n        x2.iadd(delta).iushrn(1);\n    }\n    if (a.cmp(b) >= 0) {\n      a.isub(b);\n      x1.isub(x2);\n    } else {\n      b.isub(a);\n      x2.isub(x1);\n    }\n  }\n\n  var res;\n  if (a.cmpn(1) === 0)\n    res = x1;\n  else\n    res = x2;\n\n  if (res.cmpn(0) < 0)\n    res.iadd(p);\n\n  return res;\n};\n\nBN.prototype.gcd = function gcd(num) {\n  if (this.cmpn(0) === 0)\n    return num.clone();\n  if (num.cmpn(0) === 0)\n    return this.clone();\n\n  var a = this.clone();\n  var b = num.clone();\n  a.sign = false;\n  b.sign = false;\n\n  // Remove common factor of two\n  for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n    a.iushrn(1);\n    b.iushrn(1);\n  }\n\n  do {\n    while (a.isEven())\n      a.iushrn(1);\n    while (b.isEven())\n      b.iushrn(1);\n\n    var r = a.cmp(b);\n    if (r < 0) {\n      // Swap `a` and `b` to make `a` always bigger than `b`\n      var t = a;\n      a = b;\n      b = t;\n    } else if (r === 0 || b.cmpn(1) === 0) {\n      break;\n    }\n\n    a.isub(b);\n  } while (true);\n\n  return b.iushln(shift);\n};\n\n// Invert number in the field F(num)\nBN.prototype.invm = function invm(num) {\n  return this.egcd(num).a.umod(num);\n};\n\nBN.prototype.isEven = function isEven() {\n  return (this.words[0] & 1) === 0;\n};\n\nBN.prototype.isOdd = function isOdd() {\n  return (this.words[0] & 1) === 1;\n};\n\n// And first word and num\nBN.prototype.andln = function andln(num) {\n  return this.words[0] & num;\n};\n\n// Increment at the bit position in-line\nBN.prototype.bincn = function bincn(bit) {\n  assert(typeof bit === 'number');\n  var r = bit % 26;\n  var s = (bit - r) / 26;\n  var q = 1 << r;\n\n  // Fast case: bit is much higher than all existing words\n  if (this.length <= s) {\n    for (var i = this.length; i < s + 1; i++)\n      this.words[i] = 0;\n    this.words[s] |= q;\n    this.length = s + 1;\n    return this;\n  }\n\n  // Add bit and propagate, if needed\n  var carry = q;\n  for (var i = s; carry !== 0 && i < this.length; i++) {\n    var w = this.words[i];\n    w += carry;\n    carry = w >>> 26;\n    w &= 0x3ffffff;\n    this.words[i] = w;\n  }\n  if (carry !== 0) {\n    this.words[i] = carry;\n    this.length++;\n  }\n  return this;\n};\n\nBN.prototype.cmpn = function cmpn(num) {\n  var sign = num < 0;\n  if (sign)\n    num = -num;\n\n  if (this.sign && !sign)\n    return -1;\n  else if (!this.sign && sign)\n    return 1;\n\n  num &= 0x3ffffff;\n  this.strip();\n\n  var res;\n  if (this.length > 1) {\n    res = 1;\n  } else {\n    var w = this.words[0];\n    res = w === num ? 0 : w < num ? -1 : 1;\n  }\n  if (this.sign)\n    res = -res;\n  return res;\n};\n\n// Compare two numbers and return:\n// 1 - if `this` > `num`\n// 0 - if `this` == `num`\n// -1 - if `this` < `num`\nBN.prototype.cmp = function cmp(num) {\n  if (this.sign && !num.sign)\n    return -1;\n  else if (!this.sign && num.sign)\n    return 1;\n\n  var res = this.ucmp(num);\n  if (this.sign)\n    return -res;\n  else\n    return res;\n};\n\n// Unsigned comparison\nBN.prototype.ucmp = function ucmp(num) {\n  // At this point both numbers have the same sign\n  if (this.length > num.length)\n    return 1;\n  else if (this.length < num.length)\n    return -1;\n\n  var res = 0;\n  for (var i = this.length - 1; i >= 0; i--) {\n    var a = this.words[i];\n    var b = num.words[i];\n\n    if (a === b)\n      continue;\n    if (a < b)\n      res = -1;\n    else if (a > b)\n      res = 1;\n    break;\n  }\n  return res;\n};\n\n//\n// A reduce context, could be using montgomery or something better, depending\n// on the `m` itself.\n//\nBN.red = function red(num) {\n  return new Red(num);\n};\n\nBN.prototype.toRed = function toRed(ctx) {\n  assert(!this.red, 'Already a number in reduction context');\n  assert(!this.sign, 'red works only with positives');\n  return ctx.convertTo(this)._forceRed(ctx);\n};\n\nBN.prototype.fromRed = function fromRed() {\n  assert(this.red, 'fromRed works only with numbers in reduction context');\n  return this.red.convertFrom(this);\n};\n\nBN.prototype._forceRed = function _forceRed(ctx) {\n  this.red = ctx;\n  return this;\n};\n\nBN.prototype.forceRed = function forceRed(ctx) {\n  assert(!this.red, 'Already a number in reduction context');\n  return this._forceRed(ctx);\n};\n\nBN.prototype.redAdd = function redAdd(num) {\n  assert(this.red, 'redAdd works only with red numbers');\n  return this.red.add(this, num);\n};\n\nBN.prototype.redIAdd = function redIAdd(num) {\n  assert(this.red, 'redIAdd works only with red numbers');\n  return this.red.iadd(this, num);\n};\n\nBN.prototype.redSub = function redSub(num) {\n  assert(this.red, 'redSub works only with red numbers');\n  return this.red.sub(this, num);\n};\n\nBN.prototype.redISub = function redISub(num) {\n  assert(this.red, 'redISub works only with red numbers');\n  return this.red.isub(this, num);\n};\n\nBN.prototype.redShl = function redShl(num) {\n  assert(this.red, 'redShl works only with red numbers');\n  return this.red.ushl(this, num);\n};\n\nBN.prototype.redMul = function redMul(num) {\n  assert(this.red, 'redMul works only with red numbers');\n  this.red._verify2(this, num);\n  return this.red.mul(this, num);\n};\n\nBN.prototype.redIMul = function redIMul(num) {\n  assert(this.red, 'redMul works only with red numbers');\n  this.red._verify2(this, num);\n  return this.red.imul(this, num);\n};\n\nBN.prototype.redSqr = function redSqr() {\n  assert(this.red, 'redSqr works only with red numbers');\n  this.red._verify1(this);\n  return this.red.sqr(this);\n};\n\nBN.prototype.redISqr = function redISqr() {\n  assert(this.red, 'redISqr works only with red numbers');\n  this.red._verify1(this);\n  return this.red.isqr(this);\n};\n\n// Square root over p\nBN.prototype.redSqrt = function redSqrt() {\n  assert(this.red, 'redSqrt works only with red numbers');\n  this.red._verify1(this);\n  return this.red.sqrt(this);\n};\n\nBN.prototype.redInvm = function redInvm() {\n  assert(this.red, 'redInvm works only with red numbers');\n  this.red._verify1(this);\n  return this.red.invm(this);\n};\n\n// Return negative clone of `this` % `red modulo`\nBN.prototype.redNeg = function redNeg() {\n  assert(this.red, 'redNeg works only with red numbers');\n  this.red._verify1(this);\n  return this.red.neg(this);\n};\n\nBN.prototype.redPow = function redPow(num) {\n  assert(this.red && !num.red, 'redPow(normalNum)');\n  this.red._verify1(this);\n  return this.red.pow(this, num);\n};\n\n// Prime numbers with efficient reduction\nvar primes = {\n  k256: null,\n  p224: null,\n  p192: null,\n  p25519: null\n};\n\n// Pseudo-Mersenne prime\nfunction MPrime(name, p) {\n  // P = 2 ^ N - K\n  this.name = name;\n  this.p = new BN(p, 16);\n  this.n = this.p.bitLength();\n  this.k = new BN(1).iushln(this.n).isub(this.p);\n\n  this.tmp = this._tmp();\n}\n\nMPrime.prototype._tmp = function _tmp() {\n  var tmp = new BN(null);\n  tmp.words = new Array(Math.ceil(this.n / 13));\n  return tmp;\n};\n\nMPrime.prototype.ireduce = function ireduce(num) {\n  // Assumes that `num` is less than `P^2`\n  // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n  var r = num;\n  var rlen;\n\n  do {\n    this.split(r, this.tmp);\n    r = this.imulK(r);\n    r = r.iadd(this.tmp);\n    rlen = r.bitLength();\n  } while (rlen > this.n);\n\n  var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n  if (cmp === 0) {\n    r.words[0] = 0;\n    r.length = 1;\n  } else if (cmp > 0) {\n    r.isub(this.p);\n  } else {\n    r.strip();\n  }\n\n  return r;\n};\n\nMPrime.prototype.split = function split(input, out) {\n  input.iushrn(this.n, 0, out);\n};\n\nMPrime.prototype.imulK = function imulK(num) {\n  return num.imul(this.k);\n};\n\nfunction K256() {\n  MPrime.call(\n    this,\n    'k256',\n    'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n}\ninherits(K256, MPrime);\n\nK256.prototype.split = function split(input, output) {\n  // 256 = 9 * 26 + 22\n  var mask = 0x3fffff;\n\n  var outLen = Math.min(input.length, 9);\n  for (var i = 0; i < outLen; i++)\n    output.words[i] = input.words[i];\n  output.length = outLen;\n\n  if (input.length <= 9) {\n    input.words[0] = 0;\n    input.length = 1;\n    return;\n  }\n\n  // Shift by 9 limbs\n  var prev = input.words[9];\n  output.words[output.length++] = prev & mask;\n\n  for (var i = 10; i < input.length; i++) {\n    var next = input.words[i];\n    input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n    prev = next;\n  }\n  input.words[i - 10] = prev >>> 22;\n  input.length -= 9;\n};\n\nK256.prototype.imulK = function imulK(num) {\n  // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n  num.words[num.length] = 0;\n  num.words[num.length + 1] = 0;\n  num.length += 2;\n\n  // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n  var hi;\n  var lo = 0;\n  for (var i = 0; i < num.length; i++) {\n    var w = num.words[i];\n    hi = w * 0x40;\n    lo += w * 0x3d1;\n    hi += (lo / 0x4000000) | 0;\n    lo &= 0x3ffffff;\n\n    num.words[i] = lo;\n\n    lo = hi;\n  }\n\n  // Fast length reduction\n  if (num.words[num.length - 1] === 0) {\n    num.length--;\n    if (num.words[num.length - 1] === 0)\n      num.length--;\n  }\n  return num;\n};\n\nfunction P224() {\n  MPrime.call(\n    this,\n    'p224',\n    'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n}\ninherits(P224, MPrime);\n\nfunction P192() {\n  MPrime.call(\n    this,\n    'p192',\n    'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n}\ninherits(P192, MPrime);\n\nfunction P25519() {\n  // 2 ^ 255 - 19\n  MPrime.call(\n    this,\n    '25519',\n    '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n}\ninherits(P25519, MPrime);\n\nP25519.prototype.imulK = function imulK(num) {\n  // K = 0x13\n  var carry = 0;\n  for (var i = 0; i < num.length; i++) {\n    var hi = num.words[i] * 0x13 + carry;\n    var lo = hi & 0x3ffffff;\n    hi >>>= 26;\n\n    num.words[i] = lo;\n    carry = hi;\n  }\n  if (carry !== 0)\n    num.words[num.length++] = carry;\n  return num;\n};\n\n// Exported mostly for testing purposes, use plain name instead\nBN._prime = function prime(name) {\n  // Cached version of prime\n  if (primes[name])\n    return primes[name];\n\n  var prime;\n  if (name === 'k256')\n    prime = new K256();\n  else if (name === 'p224')\n    prime = new P224();\n  else if (name === 'p192')\n    prime = new P192();\n  else if (name === 'p25519')\n    prime = new P25519();\n  else\n    throw new Error('Unknown prime ' + name);\n  primes[name] = prime;\n\n  return prime;\n};\n\n//\n// Base reduction engine\n//\nfunction Red(m) {\n  if (typeof m === 'string') {\n    var prime = BN._prime(m);\n    this.m = prime.p;\n    this.prime = prime;\n  } else {\n    this.m = m;\n    this.prime = null;\n  }\n}\n\nRed.prototype._verify1 = function _verify1(a) {\n  assert(!a.sign, 'red works only with positives');\n  assert(a.red, 'red works only with red numbers');\n};\n\nRed.prototype._verify2 = function _verify2(a, b) {\n  assert(!a.sign && !b.sign, 'red works only with positives');\n  assert(a.red && a.red === b.red,\n         'red works only with red numbers');\n};\n\nRed.prototype.imod = function imod(a) {\n  if (this.prime)\n    return this.prime.ireduce(a)._forceRed(this);\n  return a.umod(this.m)._forceRed(this);\n};\n\nRed.prototype.neg = function neg(a) {\n  var r = a.clone();\n  r.sign = !r.sign;\n  return r.iadd(this.m)._forceRed(this);\n};\n\nRed.prototype.add = function add(a, b) {\n  this._verify2(a, b);\n\n  var res = a.add(b);\n  if (res.cmp(this.m) >= 0)\n    res.isub(this.m);\n  return res._forceRed(this);\n};\n\nRed.prototype.iadd = function iadd(a, b) {\n  this._verify2(a, b);\n\n  var res = a.iadd(b);\n  if (res.cmp(this.m) >= 0)\n    res.isub(this.m);\n  return res;\n};\n\nRed.prototype.sub = function sub(a, b) {\n  this._verify2(a, b);\n\n  var res = a.sub(b);\n  if (res.cmpn(0) < 0)\n    res.iadd(this.m);\n  return res._forceRed(this);\n};\n\nRed.prototype.isub = function isub(a, b) {\n  this._verify2(a, b);\n\n  var res = a.isub(b);\n  if (res.cmpn(0) < 0)\n    res.iadd(this.m);\n  return res;\n};\n\nRed.prototype.shl = function shl(a, num) {\n  this._verify1(a);\n  return this.imod(a.ushln(num));\n};\n\nRed.prototype.imul = function imul(a, b) {\n  this._verify2(a, b);\n  return this.imod(a.imul(b));\n};\n\nRed.prototype.mul = function mul(a, b) {\n  this._verify2(a, b);\n  return this.imod(a.mul(b));\n};\n\nRed.prototype.isqr = function isqr(a) {\n  return this.imul(a, a);\n};\n\nRed.prototype.sqr = function sqr(a) {\n  return this.mul(a, a);\n};\n\nRed.prototype.sqrt = function sqrt(a) {\n  if (a.cmpn(0) === 0)\n    return a.clone();\n\n  var mod3 = this.m.andln(3);\n  assert(mod3 % 2 === 1);\n\n  // Fast case\n  if (mod3 === 3) {\n    var pow = this.m.add(new BN(1)).iushrn(2);\n    var r = this.pow(a, pow);\n    return r;\n  }\n\n  // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n  //\n  // Find Q and S, that Q * 2 ^ S = (P - 1)\n  var q = this.m.subn(1);\n  var s = 0;\n  while (q.cmpn(0) !== 0 && q.andln(1) === 0) {\n    s++;\n    q.iushrn(1);\n  }\n  assert(q.cmpn(0) !== 0);\n\n  var one = new BN(1).toRed(this);\n  var nOne = one.redNeg();\n\n  // Find quadratic non-residue\n  // NOTE: Max is such because of generalized Riemann hypothesis.\n  var lpow = this.m.subn(1).iushrn(1);\n  var z = this.m.bitLength();\n  z = new BN(2 * z * z).toRed(this);\n  while (this.pow(z, lpow).cmp(nOne) !== 0)\n    z.redIAdd(nOne);\n\n  var c = this.pow(z, q);\n  var r = this.pow(a, q.addn(1).iushrn(1));\n  var t = this.pow(a, q);\n  var m = s;\n  while (t.cmp(one) !== 0) {\n    var tmp = t;\n    for (var i = 0; tmp.cmp(one) !== 0; i++)\n      tmp = tmp.redSqr();\n    assert(i < m);\n    var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n    r = r.redMul(b);\n    c = b.redSqr();\n    t = t.redMul(c);\n    m = i;\n  }\n\n  return r;\n};\n\nRed.prototype.invm = function invm(a) {\n  var inv = a._invmp(this.m);\n  if (inv.sign) {\n    inv.sign = false;\n    return this.imod(inv).redNeg();\n  } else {\n    return this.imod(inv);\n  }\n};\n\nRed.prototype.pow = function pow(a, num) {\n  var w = toBitArray(num);\n  if (w.length === 0)\n    return new BN(1);\n\n  // Skip leading zeroes\n  var res = a;\n  for (var i = 0; i < w.length; i++, res = this.sqr(res))\n    if (w[i] !== 0)\n      break;\n\n  if (++i < w.length) {\n    for (var q = this.sqr(res); i < w.length; i++, q = this.sqr(q)) {\n      if (w[i] === 0)\n        continue;\n      res = this.mul(res, q);\n    }\n  }\n\n  return res;\n};\n\nRed.prototype.convertTo = function convertTo(num) {\n  var r = num.umod(this.m);\n  if (r === num)\n    return r.clone();\n  else\n    return r;\n};\n\nRed.prototype.convertFrom = function convertFrom(num) {\n  var res = num.clone();\n  res.red = null;\n  return res;\n};\n\n//\n// Montgomery method engine\n//\n\nBN.mont = function mont(num) {\n  return new Mont(num);\n};\n\nfunction Mont(m) {\n  Red.call(this, m);\n\n  this.shift = this.m.bitLength();\n  if (this.shift % 26 !== 0)\n    this.shift += 26 - (this.shift % 26);\n  this.r = new BN(1).iushln(this.shift);\n  this.r2 = this.imod(this.r.sqr());\n  this.rinv = this.r._invmp(this.m);\n\n  this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n  this.minv = this.minv.umod(this.r);\n  this.minv = this.r.sub(this.minv);\n}\ninherits(Mont, Red);\n\nMont.prototype.convertTo = function convertTo(num) {\n  return this.imod(num.ushln(this.shift));\n};\n\nMont.prototype.convertFrom = function convertFrom(num) {\n  var r = this.imod(num.mul(this.rinv));\n  r.red = null;\n  return r;\n};\n\nMont.prototype.imul = function imul(a, b) {\n  if (a.cmpn(0) === 0 || b.cmpn(0) === 0) {\n    a.words[0] = 0;\n    a.length = 1;\n    return a;\n  }\n\n  var t = a.imul(b);\n  var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n  var u = t.isub(c).iushrn(this.shift);\n  var res = u;\n  if (u.cmp(this.m) >= 0)\n    res = u.isub(this.m);\n  else if (u.cmpn(0) < 0)\n    res = u.iadd(this.m);\n\n  return res._forceRed(this);\n};\n\nMont.prototype.mul = function mul(a, b) {\n  if (a.cmpn(0) === 0 || b.cmpn(0) === 0)\n    return new BN(0)._forceRed(this);\n\n  var t = a.mul(b);\n  var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n  var u = t.isub(c).iushrn(this.shift);\n  var res = u;\n  if (u.cmp(this.m) >= 0)\n    res = u.isub(this.m);\n  else if (u.cmpn(0) < 0)\n    res = u.iadd(this.m);\n\n  return res._forceRed(this);\n};\n\nMont.prototype.invm = function invm(a) {\n  // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n  var res = this.imod(a._invmp(this.m).mul(this.r2));\n  return res._forceRed(this);\n};\n\n})(typeof module === 'undefined' || module, this);\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/nkey-ecdsa/~/elliptic/~/bn.js/lib/bn.js\n **/","'use strict';\n\nvar bn = require('bn.js');\nvar elliptic = require('../../elliptic');\nvar utils = elliptic.utils;\nvar getNAF = utils.getNAF;\nvar getJSF = utils.getJSF;\nvar assert = utils.assert;\n\nfunction BaseCurve(type, conf) {\n  this.type = type;\n  this.p = new bn(conf.p, 16);\n\n  // Use Montgomery, when there is no fast reduction for the prime\n  this.red = conf.prime ? bn.red(conf.prime) : bn.mont(this.p);\n\n  // Useful for many curves\n  this.zero = new bn(0).toRed(this.red);\n  this.one = new bn(1).toRed(this.red);\n  this.two = new bn(2).toRed(this.red);\n\n  // Curve configuration, optional\n  this.n = conf.n && new bn(conf.n, 16);\n  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);\n\n  // Temporary arrays\n  this._wnafT1 = new Array(4);\n  this._wnafT2 = new Array(4);\n  this._wnafT3 = new Array(4);\n  this._wnafT4 = new Array(4);\n}\nmodule.exports = BaseCurve;\n\nBaseCurve.prototype.point = function point() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype.validate = function validate() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {\n  assert(p.precomputed);\n  var doubles = p._getDoubles();\n\n  var naf = getNAF(k, 1);\n  var I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1);\n  I /= 3;\n\n  // Translate into more windowed form\n  var repr = [];\n  for (var j = 0; j < naf.length; j += doubles.step) {\n    var nafW = 0;\n    for (var k = j + doubles.step - 1; k >= j; k--)\n      nafW = (nafW << 1) + naf[k];\n    repr.push(nafW);\n  }\n\n  var a = this.jpoint(null, null, null);\n  var b = this.jpoint(null, null, null);\n  for (var i = I; i > 0; i--) {\n    for (var j = 0; j < repr.length; j++) {\n      var nafW = repr[j];\n      if (nafW === i)\n        b = b.mixedAdd(doubles.points[j]);\n      else if (nafW === -i)\n        b = b.mixedAdd(doubles.points[j].neg());\n    }\n    a = a.add(b);\n  }\n  return a.toP();\n};\n\nBaseCurve.prototype._wnafMul = function _wnafMul(p, k) {\n  var w = 4;\n\n  // Precompute window\n  var nafPoints = p._getNAFPoints(w);\n  w = nafPoints.wnd;\n  var wnd = nafPoints.points;\n\n  // Get NAF form\n  var naf = getNAF(k, w);\n\n  // Add `this`*(N+1) for every w-NAF index\n  var acc = this.jpoint(null, null, null);\n  for (var i = naf.length - 1; i >= 0; i--) {\n    // Count zeroes\n    for (var k = 0; i >= 0 && naf[i] === 0; i--)\n      k++;\n    if (i >= 0)\n      k++;\n    acc = acc.dblp(k);\n\n    if (i < 0)\n      break;\n    var z = naf[i];\n    assert(z !== 0);\n    if (p.type === 'affine') {\n      // J +- P\n      if (z > 0)\n        acc = acc.mixedAdd(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.mixedAdd(wnd[(-z - 1) >> 1].neg());\n    } else {\n      // J +- J\n      if (z > 0)\n        acc = acc.add(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.add(wnd[(-z - 1) >> 1].neg());\n    }\n  }\n  return p.type === 'affine' ? acc.toP() : acc;\n};\n\nBaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW,\n                                                       points,\n                                                       coeffs,\n                                                       len) {\n  var wndWidth = this._wnafT1;\n  var wnd = this._wnafT2;\n  var naf = this._wnafT3;\n\n  // Fill all arrays\n  var max = 0;\n  for (var i = 0; i < len; i++) {\n    var p = points[i];\n    var nafPoints = p._getNAFPoints(defW);\n    wndWidth[i] = nafPoints.wnd;\n    wnd[i] = nafPoints.points;\n  }\n\n  // Comb small window NAFs\n  for (var i = len - 1; i >= 1; i -= 2) {\n    var a = i - 1;\n    var b = i;\n    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {\n      naf[a] = getNAF(coeffs[a], wndWidth[a]);\n      naf[b] = getNAF(coeffs[b], wndWidth[b]);\n      max = Math.max(naf[a].length, max);\n      max = Math.max(naf[b].length, max);\n      continue;\n    }\n\n    var comb = [\n      points[a], /* 1 */\n      null, /* 3 */\n      null, /* 5 */\n      points[b] /* 7 */\n    ];\n\n    // Try to avoid Projective points, if possible\n    if (points[a].y.cmp(points[b].y) === 0) {\n      comb[1] = points[a].add(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].add(points[b].neg());\n    } else {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    }\n\n    var index = [\n      -3, /* -1 -1 */\n      -1, /* -1 0 */\n      -5, /* -1 1 */\n      -7, /* 0 -1 */\n      0, /* 0 0 */\n      7, /* 0 1 */\n      5, /* 1 -1 */\n      1, /* 1 0 */\n      3  /* 1 1 */\n    ];\n\n    var jsf = getJSF(coeffs[a], coeffs[b]);\n    max = Math.max(jsf[0].length, max);\n    naf[a] = new Array(max);\n    naf[b] = new Array(max);\n    for (var j = 0; j < max; j++) {\n      var ja = jsf[0][j] | 0;\n      var jb = jsf[1][j] | 0;\n\n      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];\n      naf[b][j] = 0;\n      wnd[a] = comb;\n    }\n  }\n\n  var acc = this.jpoint(null, null, null);\n  var tmp = this._wnafT4;\n  for (var i = max; i >= 0; i--) {\n    var k = 0;\n\n    while (i >= 0) {\n      var zero = true;\n      for (var j = 0; j < len; j++) {\n        tmp[j] = naf[j][i] | 0;\n        if (tmp[j] !== 0)\n          zero = false;\n      }\n      if (!zero)\n        break;\n      k++;\n      i--;\n    }\n    if (i >= 0)\n      k++;\n    acc = acc.dblp(k);\n    if (i < 0)\n      break;\n\n    for (var j = 0; j < len; j++) {\n      var z = tmp[j];\n      var p;\n      if (z === 0)\n        continue;\n      else if (z > 0)\n        p = wnd[j][(z - 1) >> 1];\n      else if (z < 0)\n        p = wnd[j][(-z - 1) >> 1].neg();\n\n      if (p.type === 'affine')\n        acc = acc.mixedAdd(p);\n      else\n        acc = acc.add(p);\n    }\n  }\n  // Zeroify references\n  for (var i = 0; i < len; i++)\n    wnd[i] = null;\n  return acc.toP();\n};\n\nfunction BasePoint(curve, type) {\n  this.curve = curve;\n  this.type = type;\n  this.precomputed = null;\n}\nBaseCurve.BasePoint = BasePoint;\n\nBasePoint.prototype.eq = function eq(/*other*/) {\n  throw new Error('Not implemented');\n};\n\nBasePoint.prototype.validate = function validate() {\n  return this.curve.validate(this);\n};\n\nBaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  bytes = utils.toArray(bytes, enc);\n\n  var len = this.p.byteLength();\n  if (bytes[0] === 0x04 && bytes.length - 1 === 2 * len) {\n    return this.point(bytes.slice(1, 1 + len),\n                      bytes.slice(1 + len, 1 + 2 * len));\n  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) &&\n              bytes.length - 1 === len) {\n    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);\n  }\n  throw new Error('Unknown point format');\n};\n\nBasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {\n  return this.encode(enc, true);\n};\n\nBasePoint.prototype._encode = function _encode(compact) {\n  var len = this.curve.p.byteLength();\n  var x = this.getX().toArray('be', len);\n\n  if (compact)\n    return [ this.getY().isEven() ? 0x02 : 0x03 ].concat(x);\n\n  return [ 0x04 ].concat(x, this.getY().toArray('be', len)) ;\n};\n\nBasePoint.prototype.encode = function encode(enc, compact) {\n  return utils.encode(this._encode(compact), enc);\n};\n\nBasePoint.prototype.precompute = function precompute(power) {\n  if (this.precomputed)\n    return this;\n\n  var precomputed = {\n    doubles: null,\n    naf: null,\n    beta: null\n  };\n  precomputed.naf = this._getNAFPoints(8);\n  precomputed.doubles = this._getDoubles(4, power);\n  precomputed.beta = this._getBeta();\n  this.precomputed = precomputed;\n\n  return this;\n};\n\nBasePoint.prototype._hasDoubles = function _hasDoubles(k) {\n  if (!this.precomputed)\n    return false;\n\n  var doubles = this.precomputed.doubles;\n  if (!doubles)\n    return false;\n\n  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);\n};\n\nBasePoint.prototype._getDoubles = function _getDoubles(step, power) {\n  if (this.precomputed && this.precomputed.doubles)\n    return this.precomputed.doubles;\n\n  var doubles = [ this ];\n  var acc = this;\n  for (var i = 0; i < power; i += step) {\n    for (var j = 0; j < step; j++)\n      acc = acc.dbl();\n    doubles.push(acc);\n  }\n  return {\n    step: step,\n    points: doubles\n  };\n};\n\nBasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {\n  if (this.precomputed && this.precomputed.naf)\n    return this.precomputed.naf;\n\n  var res = [ this ];\n  var max = (1 << wnd) - 1;\n  var dbl = max === 1 ? null : this.dbl();\n  for (var i = 1; i < max; i++)\n    res[i] = res[i - 1].add(dbl);\n  return {\n    wnd: wnd,\n    points: res\n  };\n};\n\nBasePoint.prototype._getBeta = function _getBeta() {\n  return null;\n};\n\nBasePoint.prototype.dblp = function dblp(k) {\n  var r = this;\n  for (var i = 0; i < k; i++)\n    r = r.dbl();\n  return r;\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/nkey-ecdsa/~/elliptic/lib/elliptic/curve/base.js\n **/","'use strict';\n\nvar curve = require('../curve');\nvar elliptic = require('../../elliptic');\nvar bn = require('bn.js');\nvar inherits = require('inherits');\nvar Base = curve.base;\n\nvar assert = elliptic.utils.assert;\n\nfunction ShortCurve(conf) {\n  Base.call(this, 'short', conf);\n\n  this.a = new bn(conf.a, 16).toRed(this.red);\n  this.b = new bn(conf.b, 16).toRed(this.red);\n  this.tinv = this.two.redInvm();\n\n  this.zeroA = this.a.fromRed().cmpn(0) === 0;\n  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;\n\n  // If the curve is endomorphic, precalculate beta and lambda\n  this.endo = this._getEndomorphism(conf);\n  this._endoWnafT1 = new Array(4);\n  this._endoWnafT2 = new Array(4);\n}\ninherits(ShortCurve, Base);\nmodule.exports = ShortCurve;\n\nShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {\n  // No efficient endomorphism\n  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)\n    return;\n\n  // Compute beta and lambda, that lambda * P = (beta * Px; Py)\n  var beta;\n  var lambda;\n  if (conf.beta) {\n    beta = new bn(conf.beta, 16).toRed(this.red);\n  } else {\n    var betas = this._getEndoRoots(this.p);\n    // Choose the smallest beta\n    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];\n    beta = beta.toRed(this.red);\n  }\n  if (conf.lambda) {\n    lambda = new bn(conf.lambda, 16);\n  } else {\n    // Choose the lambda that is matching selected beta\n    var lambdas = this._getEndoRoots(this.n);\n    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {\n      lambda = lambdas[0];\n    } else {\n      lambda = lambdas[1];\n      assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);\n    }\n  }\n\n  // Get basis vectors, used for balanced length-two representation\n  var basis;\n  if (conf.basis) {\n    basis = conf.basis.map(function(vec) {\n      return {\n        a: new bn(vec.a, 16),\n        b: new bn(vec.b, 16)\n      };\n    });\n  } else {\n    basis = this._getEndoBasis(lambda);\n  }\n\n  return {\n    beta: beta,\n    lambda: lambda,\n    basis: basis\n  };\n};\n\nShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {\n  // Find roots of for x^2 + x + 1 in F\n  // Root = (-1 +- Sqrt(-3)) / 2\n  //\n  var red = num === this.p ? this.red : bn.mont(num);\n  var tinv = new bn(2).toRed(red).redInvm();\n  var ntinv = tinv.redNeg();\n\n  var s = new bn(3).toRed(red).redNeg().redSqrt().redMul(tinv);\n\n  var l1 = ntinv.redAdd(s).fromRed();\n  var l2 = ntinv.redSub(s).fromRed();\n  return [ l1, l2 ];\n};\n\nShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {\n  // aprxSqrt >= sqrt(this.n)\n  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));\n\n  // 3.74\n  // Run EGCD, until r(L + 1) < aprxSqrt\n  var u = lambda;\n  var v = this.n.clone();\n  var x1 = new bn(1);\n  var y1 = new bn(0);\n  var x2 = new bn(0);\n  var y2 = new bn(1);\n\n  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)\n  var a0;\n  var b0;\n  // First vector\n  var a1;\n  var b1;\n  // Second vector\n  var a2;\n  var b2;\n\n  var prevR;\n  var i = 0;\n  var r;\n  var x;\n  while (u.cmpn(0) !== 0) {\n    var q = v.div(u);\n    r = v.sub(q.mul(u));\n    x = x2.sub(q.mul(x1));\n    var y = y2.sub(q.mul(y1));\n\n    if (!a1 && r.cmp(aprxSqrt) < 0) {\n      a0 = prevR.neg();\n      b0 = x1;\n      a1 = r.neg();\n      b1 = x;\n    } else if (a1 && ++i === 2) {\n      break;\n    }\n    prevR = r;\n\n    v = u;\n    u = r;\n    x2 = x1;\n    x1 = x;\n    y2 = y1;\n    y1 = y;\n  }\n  a2 = r.neg();\n  b2 = x;\n\n  var len1 = a1.sqr().add(b1.sqr());\n  var len2 = a2.sqr().add(b2.sqr());\n  if (len2.cmp(len1) >= 0) {\n    a2 = a0;\n    b2 = b0;\n  }\n\n  // Normalize signs\n  if (a1.sign) {\n    a1 = a1.neg();\n    b1 = b1.neg();\n  }\n  if (a2.sign) {\n    a2 = a2.neg();\n    b2 = b2.neg();\n  }\n\n  return [\n    { a: a1, b: b1 },\n    { a: a2, b: b2 }\n  ];\n};\n\nShortCurve.prototype._endoSplit = function _endoSplit(k) {\n  var basis = this.endo.basis;\n  var v1 = basis[0];\n  var v2 = basis[1];\n\n  var c1 = v2.b.mul(k).divRound(this.n);\n  var c2 = v1.b.neg().mul(k).divRound(this.n);\n\n  var p1 = c1.mul(v1.a);\n  var p2 = c2.mul(v2.a);\n  var q1 = c1.mul(v1.b);\n  var q2 = c2.mul(v2.b);\n\n  // Calculate answer\n  var k1 = k.sub(p1).sub(p2);\n  var k2 = q1.add(q2).neg();\n  return { k1: k1, k2: k2 };\n};\n\nShortCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new bn(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);\n  var y = y2.redSqrt();\n\n  // XXX Is there any way to tell if the number is odd without converting it\n  // to non-red form?\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nShortCurve.prototype.validate = function validate(point) {\n  if (point.inf)\n    return true;\n\n  var x = point.x;\n  var y = point.y;\n\n  var ax = this.a.redMul(x);\n  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);\n  return y.redSqr().redISub(rhs).cmpn(0) === 0;\n};\n\nShortCurve.prototype._endoWnafMulAdd =\n    function _endoWnafMulAdd(points, coeffs) {\n  var npoints = this._endoWnafT1;\n  var ncoeffs = this._endoWnafT2;\n  for (var i = 0; i < points.length; i++) {\n    var split = this._endoSplit(coeffs[i]);\n    var p = points[i];\n    var beta = p._getBeta();\n\n    if (split.k1.sign) {\n      split.k1.sign = !split.k1.sign;\n      p = p.neg(true);\n    }\n    if (split.k2.sign) {\n      split.k2.sign = !split.k2.sign;\n      beta = beta.neg(true);\n    }\n\n    npoints[i * 2] = p;\n    npoints[i * 2 + 1] = beta;\n    ncoeffs[i * 2] = split.k1;\n    ncoeffs[i * 2 + 1] = split.k2;\n  }\n  var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2);\n\n  // Clean-up references to points and coefficients\n  for (var j = 0; j < i * 2; j++) {\n    npoints[j] = null;\n    ncoeffs[j] = null;\n  }\n  return res;\n};\n\nfunction Point(curve, x, y, isRed) {\n  Base.BasePoint.call(this, curve, 'affine');\n  if (x === null && y === null) {\n    this.x = null;\n    this.y = null;\n    this.inf = true;\n  } else {\n    this.x = new bn(x, 16);\n    this.y = new bn(y, 16);\n    // Force redgomery representation when loading from JSON\n    if (isRed) {\n      this.x.forceRed(this.curve.red);\n      this.y.forceRed(this.curve.red);\n    }\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    this.inf = false;\n  }\n}\ninherits(Point, Base.BasePoint);\n\nShortCurve.prototype.point = function point(x, y, isRed) {\n  return new Point(this, x, y, isRed);\n};\n\nShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {\n  return Point.fromJSON(this, obj, red);\n};\n\nPoint.prototype._getBeta = function _getBeta() {\n  if (!this.curve.endo)\n    return;\n\n  var pre = this.precomputed;\n  if (pre && pre.beta)\n    return pre.beta;\n\n  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);\n  if (pre) {\n    var curve = this.curve;\n    var endoMul = function(p) {\n      return curve.point(p.x.redMul(curve.endo.beta), p.y);\n    };\n    pre.beta = beta;\n    beta.precomputed = {\n      beta: null,\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(endoMul)\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(endoMul)\n      }\n    };\n  }\n  return beta;\n};\n\nPoint.prototype.toJSON = function toJSON() {\n  if (!this.precomputed)\n    return [ this.x, this.y ];\n\n  return [ this.x, this.y, this.precomputed && {\n    doubles: this.precomputed.doubles && {\n      step: this.precomputed.doubles.step,\n      points: this.precomputed.doubles.points.slice(1)\n    },\n    naf: this.precomputed.naf && {\n      wnd: this.precomputed.naf.wnd,\n      points: this.precomputed.naf.points.slice(1)\n    }\n  } ];\n};\n\nPoint.fromJSON = function fromJSON(curve, obj, red) {\n  if (typeof obj === 'string')\n    obj = JSON.parse(obj);\n  var res = curve.point(obj[0], obj[1], red);\n  if (!obj[2])\n    return res;\n\n  function obj2point(obj) {\n    return curve.point(obj[0], obj[1], red);\n  }\n\n  var pre = obj[2];\n  res.precomputed = {\n    beta: null,\n    doubles: pre.doubles && {\n      step: pre.doubles.step,\n      points: [ res ].concat(pre.doubles.points.map(obj2point))\n    },\n    naf: pre.naf && {\n      wnd: pre.naf.wnd,\n      points: [ res ].concat(pre.naf.points.map(obj2point))\n    }\n  };\n  return res;\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  return this.inf;\n};\n\nPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.inf)\n    return p;\n\n  // P + O = P\n  if (p.inf)\n    return this;\n\n  // P + P = 2P\n  if (this.eq(p))\n    return this.dbl();\n\n  // P + (-P) = O\n  if (this.neg().eq(p))\n    return this.curve.point(null, null);\n\n  // P + Q = O\n  if (this.x.cmp(p.x) === 0)\n    return this.curve.point(null, null);\n\n  var c = this.y.redSub(p.y);\n  if (c.cmpn(0) !== 0)\n    c = c.redMul(this.x.redSub(p.x).redInvm());\n  var nx = c.redSqr().redISub(this.x).redISub(p.x);\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.inf)\n    return this;\n\n  // 2P = O\n  var ys1 = this.y.redAdd(this.y);\n  if (ys1.cmpn(0) === 0)\n    return this.curve.point(null, null);\n\n  var a = this.curve.a;\n\n  var x2 = this.x.redSqr();\n  var dyinv = ys1.redInvm();\n  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);\n\n  var nx = c.redSqr().redISub(this.x.redAdd(this.x));\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.getX = function getX() {\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  return this.y.fromRed();\n};\n\nPoint.prototype.mul = function mul(k) {\n  k = new bn(k, 16);\n\n  if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else if (this.curve.endo)\n    return this.curve._endoWnafMulAdd([ this ], [ k ]);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2);\n};\n\nPoint.prototype.eq = function eq(p) {\n  return this === p ||\n         this.inf === p.inf &&\n             (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);\n};\n\nPoint.prototype.neg = function neg(_precompute) {\n  if (this.inf)\n    return this;\n\n  var res = this.curve.point(this.x, this.y.redNeg());\n  if (_precompute && this.precomputed) {\n    var pre = this.precomputed;\n    var negate = function(p) {\n      return p.neg();\n    };\n    res.precomputed = {\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(negate)\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(negate)\n      }\n    };\n  }\n  return res;\n};\n\nPoint.prototype.toJ = function toJ() {\n  if (this.inf)\n    return this.curve.jpoint(null, null, null);\n\n  var res = this.curve.jpoint(this.x, this.y, this.curve.one);\n  return res;\n};\n\nfunction JPoint(curve, x, y, z) {\n  Base.BasePoint.call(this, curve, 'jacobian');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.one;\n    this.y = this.curve.one;\n    this.z = new bn(0);\n  } else {\n    this.x = new bn(x, 16);\n    this.y = new bn(y, 16);\n    this.z = new bn(z, 16);\n  }\n  if (!this.x.red)\n    this.x = this.x.toRed(this.curve.red);\n  if (!this.y.red)\n    this.y = this.y.toRed(this.curve.red);\n  if (!this.z.red)\n    this.z = this.z.toRed(this.curve.red);\n\n  this.zOne = this.z === this.curve.one;\n}\ninherits(JPoint, Base.BasePoint);\n\nShortCurve.prototype.jpoint = function jpoint(x, y, z) {\n  return new JPoint(this, x, y, z);\n};\n\nJPoint.prototype.toP = function toP() {\n  if (this.isInfinity())\n    return this.curve.point(null, null);\n\n  var zinv = this.z.redInvm();\n  var zinv2 = zinv.redSqr();\n  var ax = this.x.redMul(zinv2);\n  var ay = this.y.redMul(zinv2).redMul(zinv);\n\n  return this.curve.point(ax, ay);\n};\n\nJPoint.prototype.neg = function neg() {\n  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);\n};\n\nJPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p;\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 12M + 4S + 7A\n  var pz2 = p.z.redSqr();\n  var z2 = this.z.redSqr();\n  var u1 = this.x.redMul(pz2);\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y.redMul(pz2.redMul(p.z));\n  var s2 = p.y.redMul(z2.redMul(this.z));\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(p.z).redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mixedAdd = function mixedAdd(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p.toJ();\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 8M + 3S + 7A\n  var z2 = this.z.redSqr();\n  var u1 = this.x;\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y;\n  var s2 = p.y.redMul(z2).redMul(this.z);\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.dblp = function dblp(pow) {\n  if (pow === 0)\n    return this;\n  if (this.isInfinity())\n    return this;\n  if (!pow)\n    return this.dbl();\n\n  if (this.curve.zeroA || this.curve.threeA) {\n    var r = this;\n    for (var i = 0; i < pow; i++)\n      r = r.dbl();\n    return r;\n  }\n\n  // 1M + 2S + 1A + N * (4S + 5M + 8A)\n  // N = 1 => 6M + 6S + 9A\n  var a = this.curve.a;\n  var tinv = this.curve.tinv;\n\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  // Reuse results\n  var jyd = jy.redAdd(jy);\n  for (var i = 0; i < pow; i++) {\n    var jx2 = jx.redSqr();\n    var jyd2 = jyd.redSqr();\n    var jyd4 = jyd2.redSqr();\n    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n    var t1 = jx.redMul(jyd2);\n    var nx = c.redSqr().redISub(t1.redAdd(t1));\n    var t2 = t1.redISub(nx);\n    var dny = c.redMul(t2);\n    dny = dny.redIAdd(dny).redISub(jyd4);\n    var nz = jyd.redMul(jz);\n    if (i + 1 < pow)\n      jz4 = jz4.redMul(jyd4);\n\n    jx = nx;\n    jz = nz;\n    jyd = dny;\n  }\n\n  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);\n};\n\nJPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  if (this.curve.zeroA)\n    return this._zeroDbl();\n  else if (this.curve.threeA)\n    return this._threeDbl();\n  else\n    return this._dbl();\n};\n\nJPoint.prototype._zeroDbl = function _zeroDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 14A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a; a = 0\n    var m = xx.redAdd(xx).redIAdd(xx);\n    // T = M ^ 2 - 2*S\n    var t = m.redSqr().redISub(s).redISub(s);\n\n    // 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2*Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-dbl-2009-l\n    // 2M + 5S + 13A\n\n    // A = X1^2\n    var a = this.x.redSqr();\n    // B = Y1^2\n    var b = this.y.redSqr();\n    // C = B^2\n    var c = b.redSqr();\n    // D = 2 * ((X1 + B)^2 - A - C)\n    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);\n    d = d.redIAdd(d);\n    // E = 3 * A\n    var e = a.redAdd(a).redIAdd(a);\n    // F = E^2\n    var f = e.redSqr();\n\n    // 8 * C\n    var c8 = c.redIAdd(c);\n    c8 = c8.redIAdd(c8);\n    c8 = c8.redIAdd(c8);\n\n    // X3 = F - 2 * D\n    nx = f.redISub(d).redISub(d);\n    // Y3 = E * (D - X3) - 8 * C\n    ny = e.redMul(d.redISub(nx)).redISub(c8);\n    // Z3 = 2 * Y1 * Z1\n    nz = this.y.redMul(this.z);\n    nz = nz.redIAdd(nz);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._threeDbl = function _threeDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 15A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a\n    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);\n    // T = M^2 - 2 * S\n    var t = m.redSqr().redISub(s).redISub(s);\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2 * Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b\n    // 3M + 5S\n\n    // delta = Z1^2\n    var delta = this.z.redSqr();\n    // gamma = Y1^2\n    var gamma = this.y.redSqr();\n    // beta = X1 * gamma\n    var beta = this.x.redMul(gamma);\n    // alpha = 3 * (X1 - delta) * (X1 + delta)\n    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));\n    alpha = alpha.redAdd(alpha).redIAdd(alpha);\n    // X3 = alpha^2 - 8 * beta\n    var beta4 = beta.redIAdd(beta);\n    beta4 = beta4.redIAdd(beta4);\n    var beta8 = beta4.redAdd(beta4);\n    nx = alpha.redSqr().redISub(beta8);\n    // Z3 = (Y1 + Z1)^2 - gamma - delta\n    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);\n    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2\n    var ggamma8 = gamma.redSqr();\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._dbl = function _dbl() {\n  var a = this.curve.a;\n\n  // 4M + 6S + 10A\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  var jx2 = jx.redSqr();\n  var jy2 = jy.redSqr();\n\n  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n  var jxd4 = jx.redAdd(jx);\n  jxd4 = jxd4.redIAdd(jxd4);\n  var t1 = jxd4.redMul(jy2);\n  var nx = c.redSqr().redISub(t1.redAdd(t1));\n  var t2 = t1.redISub(nx);\n\n  var jyd8 = jy2.redSqr();\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  var ny = c.redMul(t2).redISub(jyd8);\n  var nz = jy.redAdd(jy).redMul(jz);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.trpl = function trpl() {\n  if (!this.curve.zeroA)\n    return this.dbl().add(this);\n\n  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl\n  // 5M + 10S + ...\n\n  // XX = X1^2\n  var xx = this.x.redSqr();\n  // YY = Y1^2\n  var yy = this.y.redSqr();\n  // ZZ = Z1^2\n  var zz = this.z.redSqr();\n  // YYYY = YY^2\n  var yyyy = yy.redSqr();\n  // M = 3 * XX + a * ZZ2; a = 0\n  var m = xx.redAdd(xx).redIAdd(xx);\n  // MM = M^2\n  var mm = m.redSqr();\n  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM\n  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n  e = e.redIAdd(e);\n  e = e.redAdd(e).redIAdd(e);\n  e = e.redISub(mm);\n  // EE = E^2\n  var ee = e.redSqr();\n  // T = 16*YYYY\n  var t = yyyy.redIAdd(yyyy);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  // U = (M + E)^2 - MM - EE - T\n  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);\n  // X3 = 4 * (X1 * EE - 4 * YY * U)\n  var yyu4 = yy.redMul(u);\n  yyu4 = yyu4.redIAdd(yyu4);\n  yyu4 = yyu4.redIAdd(yyu4);\n  var nx = this.x.redMul(ee).redISub(yyu4);\n  nx = nx.redIAdd(nx);\n  nx = nx.redIAdd(nx);\n  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)\n  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  // Z3 = (Z1 + E)^2 - ZZ - EE\n  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mul = function mul(k, kbase) {\n  k = new bn(k, kbase);\n\n  return this.curve._wnafMul(this, k);\n};\n\nJPoint.prototype.eq = function eq(p) {\n  if (p.type === 'affine')\n    return this.eq(p.toJ());\n\n  if (this === p)\n    return true;\n\n  // x1 * z2^2 == x2 * z1^2\n  var z2 = this.z.redSqr();\n  var pz2 = p.z.redSqr();\n  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)\n    return false;\n\n  // y1 * z2^3 == y2 * z1^3\n  var z3 = z2.redMul(this.z);\n  var pz3 = pz2.redMul(p.z);\n  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;\n};\n\nJPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC JPoint Infinity>';\n  return '<EC JPoint x: ' + this.x.toString(16, 2) +\n      ' y: ' + this.y.toString(16, 2) +\n      ' z: ' + this.z.toString(16, 2) + '>';\n};\n\nJPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/nkey-ecdsa/~/elliptic/lib/elliptic/curve/short.js\n **/","'use strict';\n\nvar curve = require('../curve');\nvar bn = require('bn.js');\nvar inherits = require('inherits');\nvar Base = curve.base;\n\nvar elliptic = require('../../elliptic');\nvar utils = elliptic.utils;\n\nfunction MontCurve(conf) {\n  Base.call(this, 'mont', conf);\n\n  this.a = new bn(conf.a, 16).toRed(this.red);\n  this.b = new bn(conf.b, 16).toRed(this.red);\n  this.i4 = new bn(4).toRed(this.red).redInvm();\n  this.two = new bn(2).toRed(this.red);\n  this.a24 = this.i4.redMul(this.a.redAdd(this.two));\n}\ninherits(MontCurve, Base);\nmodule.exports = MontCurve;\n\nMontCurve.prototype.validate = function validate(point) {\n  var x = point.normalize().x;\n  var x2 = x.redSqr();\n  var rhs = x2.redMul(x).redAdd(x2.redMul(this.a)).redAdd(x);\n  var y = rhs.redSqrt();\n\n  return y.redSqr().cmp(rhs) === 0;\n};\n\nfunction Point(curve, x, z) {\n  Base.BasePoint.call(this, curve, 'projective');\n  if (x === null && z === null) {\n    this.x = this.curve.one;\n    this.z = this.curve.zero;\n  } else {\n    this.x = new bn(x, 16);\n    this.z = new bn(z, 16);\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.z.red)\n      this.z = this.z.toRed(this.curve.red);\n  }\n}\ninherits(Point, Base.BasePoint);\n\nMontCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  return this.point(utils.toArray(bytes, enc), 1);\n};\n\nMontCurve.prototype.point = function point(x, z) {\n  return new Point(this, x, z);\n};\n\nMontCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n  return Point.fromJSON(this, obj);\n};\n\nPoint.prototype.precompute = function precompute() {\n  // No-op\n};\n\nPoint.prototype._encode = function _encode() {\n  return this.getX().toArray('be', this.curve.p.byteLength());\n};\n\nPoint.fromJSON = function fromJSON(curve, obj) {\n  return new Point(curve, obj[0], obj[1] || curve.one);\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n\nPoint.prototype.dbl = function dbl() {\n  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#doubling-dbl-1987-m-3\n  // 2M + 2S + 4A\n\n  // A = X1 + Z1\n  var a = this.x.redAdd(this.z);\n  // AA = A^2\n  var aa = a.redSqr();\n  // B = X1 - Z1\n  var b = this.x.redSub(this.z);\n  // BB = B^2\n  var bb = b.redSqr();\n  // C = AA - BB\n  var c = aa.redSub(bb);\n  // X3 = AA * BB\n  var nx = aa.redMul(bb);\n  // Z3 = C * (BB + A24 * C)\n  var nz = c.redMul(bb.redAdd(this.curve.a24.redMul(c)));\n  return this.curve.point(nx, nz);\n};\n\nPoint.prototype.add = function add() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.diffAdd = function diffAdd(p, diff) {\n  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#diffadd-dadd-1987-m-3\n  // 4M + 2S + 6A\n\n  // A = X2 + Z2\n  var a = this.x.redAdd(this.z);\n  // B = X2 - Z2\n  var b = this.x.redSub(this.z);\n  // C = X3 + Z3\n  var c = p.x.redAdd(p.z);\n  // D = X3 - Z3\n  var d = p.x.redSub(p.z);\n  // DA = D * A\n  var da = d.redMul(a);\n  // CB = C * B\n  var cb = c.redMul(b);\n  // X5 = Z1 * (DA + CB)^2\n  var nx = diff.z.redMul(da.redAdd(cb).redSqr());\n  // Z5 = X1 * (DA - CB)^2\n  var nz = diff.x.redMul(da.redISub(cb).redSqr());\n  return this.curve.point(nx, nz);\n};\n\nPoint.prototype.mul = function mul(k) {\n  var t = k.clone();\n  var a = this; // (N / 2) * Q + Q\n  var b = this.curve.point(null, null); // (N / 2) * Q\n  var c = this; // Q\n\n  for (var bits = []; t.cmpn(0) !== 0; t.iushrn(1))\n    bits.push(t.andln(1));\n\n  for (var i = bits.length - 1; i >= 0; i--) {\n    if (bits[i] === 0) {\n      // N * Q + Q = ((N / 2) * Q + Q)) + (N / 2) * Q\n      a = a.diffAdd(b, c);\n      // N * Q = 2 * ((N / 2) * Q + Q))\n      b = b.dbl();\n    } else {\n      // N * Q = ((N / 2) * Q + Q) + ((N / 2) * Q)\n      b = a.diffAdd(b, c);\n      // N * Q + Q = 2 * ((N / 2) * Q + Q)\n      a = a.dbl();\n    }\n  }\n  return b;\n};\n\nPoint.prototype.mulAdd = function mulAdd() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.eq = function eq(other) {\n  return this.getX().cmp(other.getX()) === 0;\n};\n\nPoint.prototype.normalize = function normalize() {\n  this.x = this.x.redMul(this.z.redInvm());\n  this.z = this.curve.one;\n  return this;\n};\n\nPoint.prototype.getX = function getX() {\n  // Normalize coordinates\n  this.normalize();\n\n  return this.x.fromRed();\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/nkey-ecdsa/~/elliptic/lib/elliptic/curve/mont.js\n **/","'use strict';\n\nvar curve = require('../curve');\nvar elliptic = require('../../elliptic');\nvar bn = require('bn.js');\nvar inherits = require('inherits');\nvar Base = curve.base;\n\nvar assert = elliptic.utils.assert;\n\nfunction EdwardsCurve(conf) {\n  // NOTE: Important as we are creating point in Base.call()\n  this.twisted = (conf.a | 0) !== 1;\n  this.mOneA = this.twisted && (conf.a | 0) === -1;\n  this.extended = this.mOneA;\n\n  Base.call(this, 'edwards', conf);\n\n  this.a = new bn(conf.a, 16).umod(this.red.m);\n  this.a = this.a.toRed(this.red);\n  this.c = new bn(conf.c, 16).toRed(this.red);\n  this.c2 = this.c.redSqr();\n  this.d = new bn(conf.d, 16).toRed(this.red);\n  this.dd = this.d.redAdd(this.d);\n\n  assert(!this.twisted || this.c.fromRed().cmpn(1) === 0);\n  this.oneC = (conf.c | 0) === 1;\n}\ninherits(EdwardsCurve, Base);\nmodule.exports = EdwardsCurve;\n\nEdwardsCurve.prototype._mulA = function _mulA(num) {\n  if (this.mOneA)\n    return num.redNeg();\n  else\n    return this.a.redMul(num);\n};\n\nEdwardsCurve.prototype._mulC = function _mulC(num) {\n  if (this.oneC)\n    return num;\n  else\n    return this.c.redMul(num);\n};\n\n// Just for compatibility with Short curve\nEdwardsCurve.prototype.jpoint = function jpoint(x, y, z, t) {\n  return this.point(x, y, z, t);\n};\n\nEdwardsCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new bn(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var x2 = x.redSqr();\n  var rhs = this.c2.redSub(this.a.redMul(x2));\n  var lhs = this.one.redSub(this.c2.redMul(this.d).redMul(x2));\n\n  var y = rhs.redMul(lhs.redInvm()).redSqrt();\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nEdwardsCurve.prototype.pointFromY = function pointFromY(y, odd) {\n  y = new bn(y, 16);\n  if (!y.red)\n    y = y.toRed(this.red);\n\n  // x^2 = (y^2 - 1) / (d y^2 + 1)\n  var y2 = y.redSqr();\n  var lhs = y2.redSub(this.one);\n  var rhs = y2.redMul(this.d).redAdd(this.one);\n  var x2 = lhs.redMul(rhs.redInvm());\n\n  if (x2.cmp(this.zero) === 0) {\n    if (odd)\n      throw new Error('invalid point');\n    else\n      return this.point(this.zero, y);\n  }\n\n  var x = x2.redSqrt();\n  if (x.redSqr().redSub(x2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  if (x.isOdd() !== odd)\n    x = x.redNeg();\n\n  return this.point(x, y);\n};\n\nEdwardsCurve.prototype.validate = function validate(point) {\n  if (point.isInfinity())\n    return true;\n\n  // Curve: A * X^2 + Y^2 = C^2 * (1 + D * X^2 * Y^2)\n  point.normalize();\n\n  var x2 = point.x.redSqr();\n  var y2 = point.y.redSqr();\n  var lhs = x2.redMul(this.a).redAdd(y2);\n  var rhs = this.c2.redMul(this.one.redAdd(this.d.redMul(x2).redMul(y2)));\n\n  return lhs.cmp(rhs) === 0;\n};\n\nfunction Point(curve, x, y, z, t) {\n  Base.BasePoint.call(this, curve, 'projective');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.zero;\n    this.y = this.curve.one;\n    this.z = this.curve.one;\n    this.t = this.curve.zero;\n    this.zOne = true;\n  } else {\n    this.x = new bn(x, 16);\n    this.y = new bn(y, 16);\n    this.z = z ? new bn(z, 16) : this.curve.one;\n    this.t = t && new bn(t, 16);\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    if (!this.z.red)\n      this.z = this.z.toRed(this.curve.red);\n    if (this.t && !this.t.red)\n      this.t = this.t.toRed(this.curve.red);\n    this.zOne = this.z === this.curve.one;\n\n    // Use extended coordinates\n    if (this.curve.extended && !this.t) {\n      this.t = this.x.redMul(this.y);\n      if (!this.zOne)\n        this.t = this.t.redMul(this.z.redInvm());\n    }\n  }\n}\ninherits(Point, Base.BasePoint);\n\nEdwardsCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n  return Point.fromJSON(this, obj);\n};\n\nEdwardsCurve.prototype.point = function point(x, y, z, t) {\n  return new Point(this, x, y, z, t);\n};\n\nPoint.fromJSON = function fromJSON(curve, obj) {\n  return new Point(curve, obj[0], obj[1], obj[2]);\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) +\n      ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.x.cmpn(0) === 0 &&\n         this.y.cmp(this.z) === 0;\n};\n\nPoint.prototype._extDbl = function _extDbl() {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html\n  //     #doubling-dbl-2008-hwcd\n  // 4M + 4S\n\n  // A = X1^2\n  var a = this.x.redSqr();\n  // B = Y1^2\n  var b = this.y.redSqr();\n  // C = 2 * Z1^2\n  var c = this.z.redSqr();\n  c = c.redIAdd(c);\n  // D = a * A\n  var d = this.curve._mulA(a);\n  // E = (X1 + Y1)^2 - A - B\n  var e = this.x.redAdd(this.y).redSqr().redISub(a).redISub(b);\n  // G = D + B\n  var g = d.redAdd(b);\n  // F = G - C\n  var f = g.redSub(c);\n  // H = D - B\n  var h = d.redSub(b);\n  // X3 = E * F\n  var nx = e.redMul(f);\n  // Y3 = G * H\n  var ny = g.redMul(h);\n  // T3 = E * H\n  var nt = e.redMul(h);\n  // Z3 = F * G\n  var nz = f.redMul(g);\n  return this.curve.point(nx, ny, nz, nt);\n};\n\nPoint.prototype._projDbl = function _projDbl() {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html\n  //     #doubling-dbl-2008-bbjlp\n  //     #doubling-dbl-2007-bl\n  // and others\n  // Generally 3M + 4S or 2M + 4S\n\n  // B = (X1 + Y1)^2\n  var b = this.x.redAdd(this.y).redSqr();\n  // C = X1^2\n  var c = this.x.redSqr();\n  // D = Y1^2\n  var d = this.y.redSqr();\n\n  var nx;\n  var ny;\n  var nz;\n  if (this.curve.twisted) {\n    // E = a * C\n    var e = this.curve._mulA(c);\n    // F = E + D\n    var f = e.redAdd(d);\n    if (this.zOne) {\n      // X3 = (B - C - D) * (F - 2)\n      nx = b.redSub(c).redSub(d).redMul(f.redSub(this.curve.two));\n      // Y3 = F * (E - D)\n      ny = f.redMul(e.redSub(d));\n      // Z3 = F^2 - 2 * F\n      nz = f.redSqr().redSub(f).redSub(f);\n    } else {\n      // H = Z1^2\n      var h = this.z.redSqr();\n      // J = F - 2 * H\n      var j = f.redSub(h).redISub(h);\n      // X3 = (B-C-D)*J\n      nx = b.redSub(c).redISub(d).redMul(j);\n      // Y3 = F * (E - D)\n      ny = f.redMul(e.redSub(d));\n      // Z3 = F * J\n      nz = f.redMul(j);\n    }\n  } else {\n    // E = C + D\n    var e = c.redAdd(d);\n    // H = (c * Z1)^2\n    var h = this.curve._mulC(this.c.redMul(this.z)).redSqr();\n    // J = E - 2 * H\n    var j = e.redSub(h).redSub(h);\n    // X3 = c * (B - E) * J\n    nx = this.curve._mulC(b.redISub(e)).redMul(j);\n    // Y3 = c * E * (C - D)\n    ny = this.curve._mulC(e).redMul(c.redISub(d));\n    // Z3 = E * J\n    nz = e.redMul(j);\n  }\n  return this.curve.point(nx, ny, nz);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  // Double in extended coordinates\n  if (this.curve.extended)\n    return this._extDbl();\n  else\n    return this._projDbl();\n};\n\nPoint.prototype._extAdd = function _extAdd(p) {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html\n  //     #addition-add-2008-hwcd-3\n  // 8M\n\n  // A = (Y1 - X1) * (Y2 - X2)\n  var a = this.y.redSub(this.x).redMul(p.y.redSub(p.x));\n  // B = (Y1 + X1) * (Y2 + X2)\n  var b = this.y.redAdd(this.x).redMul(p.y.redAdd(p.x));\n  // C = T1 * k * T2\n  var c = this.t.redMul(this.curve.dd).redMul(p.t);\n  // D = Z1 * 2 * Z2\n  var d = this.z.redMul(p.z.redAdd(p.z));\n  // E = B - A\n  var e = b.redSub(a);\n  // F = D - C\n  var f = d.redSub(c);\n  // G = D + C\n  var g = d.redAdd(c);\n  // H = B + A\n  var h = b.redAdd(a);\n  // X3 = E * F\n  var nx = e.redMul(f);\n  // Y3 = G * H\n  var ny = g.redMul(h);\n  // T3 = E * H\n  var nt = e.redMul(h);\n  // Z3 = F * G\n  var nz = f.redMul(g);\n  return this.curve.point(nx, ny, nz, nt);\n};\n\nPoint.prototype._projAdd = function _projAdd(p) {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html\n  //     #addition-add-2008-bbjlp\n  //     #addition-add-2007-bl\n  // 10M + 1S\n\n  // A = Z1 * Z2\n  var a = this.z.redMul(p.z);\n  // B = A^2\n  var b = a.redSqr();\n  // C = X1 * X2\n  var c = this.x.redMul(p.x);\n  // D = Y1 * Y2\n  var d = this.y.redMul(p.y);\n  // E = d * C * D\n  var e = this.curve.d.redMul(c).redMul(d);\n  // F = B - E\n  var f = b.redSub(e);\n  // G = B + E\n  var g = b.redAdd(e);\n  // X3 = A * F * ((X1 + Y1) * (X2 + Y2) - C - D)\n  var tmp = this.x.redAdd(this.y).redMul(p.x.redAdd(p.y)).redISub(c).redISub(d);\n  var nx = a.redMul(f).redMul(tmp);\n  var ny;\n  var nz;\n  if (this.curve.twisted) {\n    // Y3 = A * G * (D - a * C)\n    ny = a.redMul(g).redMul(d.redSub(this.curve._mulA(c)));\n    // Z3 = F * G\n    nz = f.redMul(g);\n  } else {\n    // Y3 = A * G * (D - C)\n    ny = a.redMul(g).redMul(d.redSub(c));\n    // Z3 = c * F * G\n    nz = this.curve._mulC(f).redMul(g);\n  }\n  return this.curve.point(nx, ny, nz);\n};\n\nPoint.prototype.add = function add(p) {\n  if (this.isInfinity())\n    return p;\n  if (p.isInfinity())\n    return this;\n\n  if (this.curve.extended)\n    return this._extAdd(p);\n  else\n    return this._projAdd(p);\n};\n\nPoint.prototype.mul = function mul(k) {\n  if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p, k2) {\n  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2);\n};\n\nPoint.prototype.normalize = function normalize() {\n  if (this.zOne)\n    return this;\n\n  // Normalize coordinates\n  var zi = this.z.redInvm();\n  this.x = this.x.redMul(zi);\n  this.y = this.y.redMul(zi);\n  if (this.t)\n    this.t = this.t.redMul(zi);\n  this.z = this.curve.one;\n  this.zOne = true;\n  return this;\n};\n\nPoint.prototype.neg = function neg() {\n  return this.curve.point(this.x.redNeg(),\n                          this.y,\n                          this.z,\n                          this.t && this.t.redNeg());\n};\n\nPoint.prototype.getX = function getX() {\n  this.normalize();\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  this.normalize();\n  return this.y.fromRed();\n};\n\nPoint.prototype.eq = function eq(other) {\n  return this === other ||\n         this.getX().cmp(other.getX()) === 0 &&\n         this.getY().cmp(other.getY()) === 0;\n};\n\n// Compatibility with BaseCurve\nPoint.prototype.toP = Point.prototype.normalize;\nPoint.prototype.mixedAdd = Point.prototype.add;\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/nkey-ecdsa/~/elliptic/lib/elliptic/curve/edwards.js\n **/","'use strict';\n\nvar bn = require('bn.js');\nvar elliptic = require('../../elliptic');\nvar utils = elliptic.utils;\nvar assert = utils.assert;\n\nvar KeyPair = require('./key');\nvar Signature = require('./signature');\n\nfunction EC(options) {\n  if (!(this instanceof EC))\n    return new EC(options);\n\n  // Shortcut `elliptic.ec(curve-name)`\n  if (typeof options === 'string') {\n    assert(elliptic.curves.hasOwnProperty(options), 'Unknown curve ' + options);\n\n    options = elliptic.curves[options];\n  }\n\n  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`\n  if (options instanceof elliptic.curves.PresetCurve)\n    options = { curve: options };\n\n  this.curve = options.curve.curve;\n  this.n = this.curve.n;\n  this.nh = this.n.ushrn(1);\n  this.g = this.curve.g;\n\n  // Point on curve\n  this.g = options.curve.g;\n  this.g.precompute(options.curve.n.bitLength() + 1);\n\n  // Hash for function for DRBG\n  this.hash = options.hash || options.curve.hash;\n}\nmodule.exports = EC;\n\nEC.prototype.keyPair = function keyPair(options) {\n  return new KeyPair(this, options);\n};\n\nEC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {\n  return KeyPair.fromPrivate(this, priv, enc);\n};\n\nEC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {\n  return KeyPair.fromPublic(this, pub, enc);\n};\n\nEC.prototype.genKeyPair = function genKeyPair(options) {\n  if (!options)\n    options = {};\n\n  // Instantiate Hmac_DRBG\n  var drbg = new elliptic.hmacDRBG({\n    hash: this.hash,\n    pers: options.pers,\n    entropy: options.entropy || elliptic.rand(this.hash.hmacStrength),\n    nonce: this.n.toArray()\n  });\n\n  var bytes = this.n.byteLength();\n  var ns2 = this.n.sub(new bn(2));\n  do {\n    var priv = new bn(drbg.generate(bytes));\n    if (priv.cmp(ns2) > 0)\n      continue;\n\n    priv.iaddn(1);\n    return this.keyFromPrivate(priv);\n  } while (true);\n};\n\nEC.prototype._truncateToN = function truncateToN(msg, truncOnly) {\n  var delta = msg.byteLength() * 8 - this.n.bitLength();\n  if (delta > 0)\n    msg = msg.ushrn(delta);\n  if (!truncOnly && msg.cmp(this.n) >= 0)\n    return msg.sub(this.n);\n  else\n    return msg;\n};\n\nEC.prototype.sign = function sign(msg, key, enc, options) {\n  if (typeof enc === 'object') {\n    options = enc;\n    enc = null;\n  }\n  if (!options)\n    options = {};\n\n  key = this.keyFromPrivate(key, enc);\n  msg = this._truncateToN(new bn(msg, 16));\n\n  // Zero-extend key to provide enough entropy\n  var bytes = this.n.byteLength();\n  var bkey = key.getPrivate().toArray();\n  for (var i = bkey.length; i < bytes; i++)\n    bkey.unshift(0);\n\n  // Zero-extend nonce to have the same byte size as N\n  var nonce = msg.toArray();\n  for (var i = nonce.length; i < bytes; i++)\n    nonce.unshift(0);\n\n  // Instantiate Hmac_DRBG\n  var drbg = new elliptic.hmacDRBG({\n    hash: this.hash,\n    entropy: bkey,\n    nonce: nonce\n  });\n\n  // Number of bytes to generate\n  var ns1 = this.n.sub(new bn(1));\n  do {\n    var k = new bn(drbg.generate(this.n.byteLength()));\n    k = this._truncateToN(k, true);\n    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)\n      continue;\n\n    var kp = this.g.mul(k);\n    if (kp.isInfinity())\n      continue;\n\n    var kpX = kp.getX();\n    var r = kpX.umod(this.n);\n    if (r.cmpn(0) === 0)\n      continue;\n\n    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));\n    s = s.umod(this.n);\n    if (s.cmpn(0) === 0)\n      continue;\n\n    // Use complement of `s`, if it is > `n / 2`\n    if (options.canonical && s.cmp(this.nh) > 0)\n      s = this.n.sub(s);\n\n    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) |\n                        (kpX.cmp(r) !== 0 ? 2 : 0);\n\n    return new Signature({ r: r, s: s, recoveryParam: recoveryParam });\n  } while (true);\n};\n\nEC.prototype.verify = function verify(msg, signature, key, enc) {\n  msg = this._truncateToN(new bn(msg, 16));\n  key = this.keyFromPublic(key, enc);\n  signature = new Signature(signature, 'hex');\n\n  // Perform primitive values validation\n  var r = signature.r;\n  var s = signature.s;\n  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)\n    return false;\n  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)\n    return false;\n\n  // Validate signature\n  var sinv = s.invm(this.n);\n  var u1 = sinv.mul(msg).umod(this.n);\n  var u2 = sinv.mul(r).umod(this.n);\n\n  var p = this.g.mulAdd(u1, key.getPublic(), u2);\n  if (p.isInfinity())\n    return false;\n\n  return p.getX().umod(this.n).cmp(r) === 0;\n};\n\nEC.prototype.recoverPubKey = function(msg, signature, j, enc) {\n  assert((3 & j) === j, 'The recovery param is more than two bits');\n  signature = new Signature(signature, enc);\n\n  var n = this.n;\n  var e = new bn(msg);\n  var r = signature.r;\n  var s = signature.s;\n\n  // A set LSB signifies that the y-coordinate is odd\n  var isYOdd = j & 1;\n  var isSecondKey = j >> 1;\n  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)\n    throw new Error('Unable to find sencond key candinate');\n\n  // 1.1. Let x = r + jn.\n  r = this.curve.pointFromX(r, isYOdd);\n  var eNeg = e.neg().umod(n);\n\n  // 1.6.1 Compute Q = r^-1 (sR -  eG)\n  //               Q = r^-1 (sR + -eG)\n  var rInv = signature.r.invm(n);\n  return r.mul(s).add(this.g.mul(eNeg)).mul(rInv);\n};\n\nEC.prototype.getKeyRecoveryParam = function(e, signature, Q, enc) {\n  signature = new Signature(signature, enc);\n  if (signature.recoveryParam !== null)\n    return signature.recoveryParam;\n\n  for (var i = 0; i < 4; i++) {\n    var Qprime = this.recoverPubKey(e, signature, i);\n\n    if (Qprime.eq(Q))\n      return i;\n  }\n  throw new Error('Unable to find valid recovery factor');\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/nkey-ecdsa/~/elliptic/lib/elliptic/ec/index.js\n **/","'use strict';\n\nvar bn = require('bn.js');\n\nfunction KeyPair(ec, options) {\n  this.ec = ec;\n  this.priv = null;\n  this.pub = null;\n\n  // KeyPair(ec, { priv: ..., pub: ... })\n  if (options.priv)\n    this._importPrivate(options.priv, options.privEnc);\n  if (options.pub)\n    this._importPublic(options.pub, options.pubEnc);\n}\nmodule.exports = KeyPair;\n\nKeyPair.fromPublic = function fromPublic(ec, pub, enc) {\n  if (pub instanceof KeyPair)\n    return pub;\n\n  return new KeyPair(ec, {\n    pub: pub,\n    pubEnc: enc\n  });\n};\n\nKeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {\n  if (priv instanceof KeyPair)\n    return priv;\n\n  return new KeyPair(ec, {\n    priv: priv,\n    privEnc: enc\n  });\n};\n\nKeyPair.prototype.validate = function validate() {\n  var pub = this.getPublic();\n\n  if (pub.isInfinity())\n    return { result: false, reason: 'Invalid public key' };\n  if (!pub.validate())\n    return { result: false, reason: 'Public key is not a point' };\n  if (!pub.mul(this.ec.curve.n).isInfinity())\n    return { result: false, reason: 'Public key * N != O' };\n\n  return { result: true, reason: null };\n};\n\nKeyPair.prototype.getPublic = function getPublic(compact, enc) {\n  // compact is optional argument\n  if (typeof compact === 'string') {\n    enc = compact;\n    compact = null;\n  }\n\n  if (!this.pub)\n    this.pub = this.ec.g.mul(this.priv);\n\n  if (!enc)\n    return this.pub;\n\n  return this.pub.encode(enc, compact);\n};\n\nKeyPair.prototype.getPrivate = function getPrivate(enc) {\n  if (enc === 'hex')\n    return this.priv.toString(16, 2);\n  else\n    return this.priv;\n};\n\nKeyPair.prototype._importPrivate = function _importPrivate(key, enc) {\n  this.priv = new bn(key, enc || 16);\n\n  // Ensure that the priv won't be bigger than n, otherwise we may fail\n  // in fixed multiplication method\n  this.priv = this.priv.umod(this.ec.curve.n);\n};\n\nKeyPair.prototype._importPublic = function _importPublic(key, enc) {\n  if (key.x || key.y) {\n    this.pub = this.ec.curve.point(key.x, key.y);\n    return;\n  }\n  this.pub = this.ec.curve.decodePoint(key, enc);\n};\n\n// ECDH\nKeyPair.prototype.derive = function derive(pub) {\n  return pub.mul(this.priv).getX();\n};\n\n// ECDSA\nKeyPair.prototype.sign = function sign(msg, enc, options) {\n  return this.ec.sign(msg, this, enc, options);\n};\n\nKeyPair.prototype.verify = function verify(msg, signature) {\n  return this.ec.verify(msg, signature, this);\n};\n\nKeyPair.prototype.inspect = function inspect() {\n  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) +\n         ' pub: ' + (this.pub && this.pub.inspect()) + ' >';\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/nkey-ecdsa/~/elliptic/lib/elliptic/ec/key.js\n **/","'use strict';\n\nvar bn = require('bn.js');\n\nvar elliptic = require('../../elliptic');\nvar utils = elliptic.utils;\nvar assert = utils.assert;\n\nfunction Signature(options, enc) {\n  if (options instanceof Signature)\n    return options;\n\n  if (this._importDER(options, enc))\n    return;\n\n  assert(options.r && options.s, 'Signature without r or s');\n  this.r = new bn(options.r, 16);\n  this.s = new bn(options.s, 16);\n  if (options.recoveryParam !== null)\n    this.recoveryParam = options.recoveryParam;\n  else\n    this.recoveryParam = null;\n}\nmodule.exports = Signature;\n\nfunction Position() {\n  this.place = 0;\n}\n\nfunction getLength(buf, p) {\n  var initial = buf[p.place++];\n  if (!(initial & 0x80)) {\n    return initial;\n  }\n  var octetLen = initial & 0xf;\n  var val = 0;\n  for (var i = 0, off = p.place; i < octetLen; i++, off++) {\n    val <<= 8;\n    val |= buf[off];\n  }\n  p.place = off;\n  return val;\n}\n\nfunction rmPadding(buf) {\n  var i = 0;\n  var len = buf.length - 1;\n  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {\n    i++;\n  }\n  if (i === 0) {\n    return buf;\n  }\n  return buf.slice(i);\n}\n\nSignature.prototype._importDER = function _importDER(data, enc) {\n  data = utils.toArray(data, enc);\n  var p = new Position();\n  if (data[p.place++] !== 0x30) {\n    return false;\n  }\n  var len = getLength(data, p);\n  if ((len + p.place) !== data.length) {\n    return false;\n  }\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var rlen = getLength(data, p);\n  var r = data.slice(p.place, rlen + p.place);\n  p.place += rlen;\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var slen = getLength(data, p);\n  if (data.length !== slen + p.place) {\n    return false;\n  }\n  var s = data.slice(p.place, slen + p.place);\n  if (r[0] === 0 && (r[1] & 0x80)) {\n    r = r.slice(1);\n  }\n  if (s[0] === 0 && (s[1] & 0x80)) {\n    s = s.slice(1);\n  }\n\n  this.r = new bn(r);\n  this.s = new bn(s);\n  this.recoveryParam = null;\n\n  return true;\n};\n\nfunction constructLength(arr, len) {\n  if (len < 0x80) {\n    arr.push(len);\n    return;\n  }\n  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);\n  arr.push(octets | 0x80);\n  while (--octets) {\n    arr.push((len >>> (octets << 3)) & 0xff);\n  }\n  arr.push(len);\n}\n\nSignature.prototype.toDER = function toDER(enc) {\n  var r = this.r.toArray();\n  var s = this.s.toArray();\n\n  // Pad values\n  if (r[0] & 0x80)\n    r = [ 0 ].concat(r);\n  // Pad values\n  if (s[0] & 0x80)\n    s = [ 0 ].concat(s);\n\n  r = rmPadding(r);\n  s = rmPadding(s);\n\n  while (!s[0] && !(s[1] & 0x80)) {\n    s = s.slice(1);\n  }\n  var arr = [ 0x02 ];\n  constructLength(arr, r.length);\n  arr = arr.concat(r);\n  arr.push(0x02);\n  constructLength(arr, s.length);\n  var backHalf = arr.concat(s);\n  var res = [ 0x30 ];\n  constructLength(res, backHalf.length);\n  res = res.concat(backHalf);\n  return utils.encode(res, enc);\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/nkey-ecdsa/~/elliptic/lib/elliptic/ec/signature.js\n **/","'use strict';\n\nvar elliptic = require('../../elliptic');\nvar utils = elliptic.utils;\nvar assert = utils.assert;\nvar parseBytes = utils.parseBytes;\nvar cachedProperty = utils.cachedProperty;\n\n/**\n* @param {EDDSA} eddsa - instance\n* @param {Object} params - public/private key parameters\n*\n* @param {Array<Byte>} [params.secret] - secret seed bytes\n* @param {Point} [params.pub] - public key point (aka `A` in eddsa terms)\n* @param {Array<Byte>} [params.pub] - public key point encoded as bytes\n*\n*/\nfunction KeyPair(eddsa, params) {\n  this.eddsa = eddsa;\n  this._secret = parseBytes(params.secret);\n  if (eddsa.isPoint(params.pub))\n    this._pub = params.pub;\n  else\n    this._pubBytes = parseBytes(params.pub);\n}\n\nKeyPair.fromPublic = function fromPublic(eddsa, pub) {\n  if (pub instanceof KeyPair)\n    return pub;\n  return new KeyPair(eddsa, { pub: pub });\n};\n\nKeyPair.fromSecret = function fromSecret(eddsa, secret) {\n  if (secret instanceof KeyPair)\n    return secret;\n  return new KeyPair(eddsa, { secret: secret });\n};\n\nKeyPair.prototype.secret = function secret() {\n  return this._secret;\n};\n\ncachedProperty(KeyPair, function pubBytes() {\n  return this.eddsa.encodePoint(this.pub());\n});\n\ncachedProperty(KeyPair, function pub() {\n  if (this._pubBytes)\n    return this.eddsa.decodePoint(this._pubBytes);\n  return this.eddsa.g.mul(this.priv());\n});\n\ncachedProperty(KeyPair, function privBytes() {\n  var eddsa = this.eddsa;\n  var hash = this.hash();\n  var lastIx = eddsa.encodingLength - 1;\n\n  var a = hash.slice(0, eddsa.encodingLength);\n  a[0] &= 248;\n  a[lastIx] &= 127;\n  a[lastIx] |= 64;\n\n  return a;\n});\n\ncachedProperty(KeyPair, function priv() {\n  return this.eddsa.decodeInt(this.privBytes());\n});\n\ncachedProperty(KeyPair, function hash() {\n  return this.eddsa.hash().update(this.secret()).digest();\n});\n\ncachedProperty(KeyPair, function messagePrefix() {\n  return this.hash().slice(this.eddsa.encodingLength);\n});\n\nKeyPair.prototype.sign = function sign(message) {\n  assert(this._secret, 'KeyPair can only verify');\n  return this.eddsa.sign(message, this);\n};\n\nKeyPair.prototype.verify = function verify(message, sig) {\n  return this.eddsa.verify(message, sig, this);\n};\n\nKeyPair.prototype.getSecret = function getSecret(enc) {\n  assert(this._secret, 'KeyPair is public only');\n  return utils.encode(this.secret(), enc);\n};\n\nKeyPair.prototype.getPublic = function getPublic(enc) {\n  return utils.encode(this.pubBytes(), enc);\n};\n\nmodule.exports = KeyPair;\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/nkey-ecdsa/~/elliptic/lib/elliptic/eddsa/key.js\n **/","'use strict';\n\nvar bn = require('bn.js');\nvar elliptic = require('../../elliptic');\nvar utils = elliptic.utils;\nvar assert = utils.assert;\nvar cachedProperty = utils.cachedProperty;\nvar parseBytes = utils.parseBytes;\n\n/**\n* @param {EDDSA} eddsa - eddsa instance\n* @param {Array<Bytes>|Object} sig -\n* @param {Array<Bytes>|Point} [sig.R] - R point as Point or bytes\n* @param {Array<Bytes>|bn} [sig.S] - S scalar as bn or bytes\n* @param {Array<Bytes>} [sig.Rencoded] - R point encoded\n* @param {Array<Bytes>} [sig.Sencoded] - S scalar encoded\n*/\nfunction Signature(eddsa, sig) {\n  this.eddsa = eddsa;\n\n  if (typeof sig !== 'object')\n    sig = parseBytes(sig);\n\n  if (Array.isArray(sig)) {\n    sig = {\n      R: sig.slice(0, eddsa.encodingLength),\n      S: sig.slice(eddsa.encodingLength)\n    };\n  }\n\n  assert(sig.R && sig.S, 'Signature without R or S');\n\n  if (eddsa.isPoint(sig.R))\n    this._R = sig.R;\n  if (sig.S instanceof bn)\n    this._S = sig.S;\n\n  this._Rencoded = Array.isArray(sig.R) ? sig.R : sig.Rencoded;\n  this._Sencoded = Array.isArray(sig.S) ? sig.S : sig.Sencoded;\n}\n\ncachedProperty(Signature, function S() {\n  return this.eddsa.decodeInt(this.Sencoded());\n});\n\ncachedProperty(Signature, function R() {\n  return this.eddsa.decodePoint(this.Rencoded());\n});\n\ncachedProperty(Signature, function Rencoded() {\n  return this.eddsa.encodePoint(this.R());\n});\n\ncachedProperty(Signature, function Sencoded() {\n  return this.eddsa.encodeInt(this.S());\n});\n\nSignature.prototype.toBytes = function toBytes() {\n  return this.Rencoded().concat(this.Sencoded());\n};\n\nSignature.prototype.toHex = function toHex() {\n  return utils.encode(this.toBytes(), 'hex').toUpperCase();\n};\n\nmodule.exports = Signature;\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/nkey-ecdsa/~/elliptic/lib/elliptic/eddsa/signature.js\n **/","module.exports = {\n  p192: 'prime192v1',\n  p224: 'secp224r1',\n  p256: 'prime256v1',\n  p384: 'secp384r1',\n  p521: 'secp521r1'\n}\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/nkey-ecdsa/~/key-encoder/lib/aliases.js\n **/","'use strict'\n\nconst crypto = require('crypto')\nconst secp256k1 = require('secp256k1')\nconst nkey = require('nkey')\nconst type = 'ec'\n\nconst impl = nkey.wrap({\n  type,\n  genSync,\n  fromJSON\n})\n\nmodule.exports = impl\n\nfunction genSync () {\n  let priv\n  do {\n    priv = crypto.randomBytes(32)\n  } while (!secp256k1.privateKeyVerify(priv))\n\n  return impl.fromJSON({ priv })\n}\n\nfunction fromJSON (opts) {\n  if (!(opts.priv || opts.pub)) {\n    throw new Error('expected \"priv\" or \"pub\"')\n  }\n\n  const priv = typeof opts.priv === 'string' ? new Buffer(opts.priv, 'hex') : opts.priv\n  const pub = typeof opts.pub === 'string' ? new Buffer(opts.pub, 'hex') : opts.pub || pubFromPriv(priv)\n  const privEnc = typeof priv === 'string' && 'hex'\n  const pubEnc = typeof pub === 'string' && 'hex'\n  const pubKeyString = pub.toString('hex')\n  const privKeyString = priv && secp256k1.privateKeyExport(priv)\n  const fingerprint = crypto.createHash('sha256').update(pub).digest('hex')\n\n  return nkey.wrap({\n    type,\n    signSync,\n    verifySync,\n    hasDeterministicSig: false,\n    pubKeyString,\n    fingerprint,\n    pub,\n    priv,\n    toJSON\n  })\n\n  function signSync (msg) {\n    if (!priv) throw new Error('this is a public key')\n\n    let sig = secp256k1.sign(msg, priv)\n\n    // Ensure low S value\n    sig = secp256k1.signatureNormalize(sig.signature)\n\n    // Convert to DER array\n    return new Buffer(secp256k1.signatureExport(sig)).toString('hex')\n  }\n\n  function verifySync (msg, sig) {\n    if (typeof sig === 'string') sig = new Buffer(sig, 'hex')\n\n    sig = secp256k1.signatureImport(sig)\n    return secp256k1.verify(msg, sig, pub)\n  }\n\n  function pubFromPriv (priv) {\n    return secp256k1.publicKeyCreate(priv)\n  }\n\n  function toJSON (exportPrivate) {\n    const obj = {\n      type: 'ec',\n      curve: 'secp256k1',\n      pub: pubKeyString,\n      fingerprint\n    }\n\n    if (exportPrivate) obj.priv = privKeyString\n\n    return obj\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/nkey-secp256k1/index.js\n **/","'use strict'\n\nconst crypto = require('crypto')\nconst curve25519 = require('tweetnacl').box\nconst nkey = require('nkey')\nconst type = 'ec'\n\nconst impl = nkey.wrap({\n  type,\n  genSync,\n  fromJSON\n})\n\nmodule.exports = impl\n\nfunction genSync () {\n  const priv = curve25519.keyPair()\n  return impl.fromJSON({ priv })\n}\n\nfunction fromJSON (opts) {\n  if (!(opts.priv || opts.pub)) {\n    throw new Error('expected \"priv\" or \"pub\"')\n  }\n\n  const priv = typeof opts.priv === 'string'\n    ? new Buffer(opts.priv, 'hex') :\n    opts.priv && opts.priv.secretKey ? new Buffer(opts.priv.secretKey) : opts.priv\n\n  const privArr = priv && toUint8Array(priv)\n  const pub = typeof opts.pub === 'string'\n    ? new Buffer(opts.pub, 'hex')\n    : opts.pub || (opts.priv && opts.priv.publicKey && new Buffer(opts.priv.publicKey)) || pubFromPriv(priv)\n\n  const privEnc = typeof priv === 'string' && 'hex'\n  const pubEnc = typeof pub === 'string' && 'hex'\n  const pubKeyString = pub.toString('hex')\n  const privKeyString = priv && priv.toString('hex')\n  const fingerprint = crypto.createHash('sha256').update(pub).digest('hex')\n\n  return nkey.wrap({\n    type,\n    pubKeyString,\n    fingerprint,\n    pub,\n    priv,\n    ecdh: function (pub) {\n      if (!priv) throw new Error('this is a public key!')\n\n      pub = toUint8Array(pub)\n      const sharedKey = curve25519.before(pub, privArr)\n      return new Buffer(sharedKey)\n    },\n    toJSON\n  })\n\n  function pubFromPriv (priv) {\n    const arr = priv.secretKey || curve25519.keyPair.fromSecretKey(priv).publicKey\n    return new Buffer(arr)\n  }\n\n  function toJSON (exportPrivate) {\n    const obj = {\n      type: 'ec',\n      curve: 'curve25519',\n      pub: pubKeyString,\n      fingerprint\n    }\n\n    if (exportPrivate) obj.priv = privKeyString\n\n    return obj\n  }\n}\n\nfunction toUint8Array (buf) {\n  if (buf instanceof Uint8Array) return buf\n  if (!Buffer.isBuffer(buf)) {\n    throw new Error('expected Buffer or Uint8Array')\n  }\n\n  var arr = new Uint8Array(buf.length)\n  for (var i = 0; i < buf.length; i++) {\n    arr[i] = buf[i]\n  }\n\n  return arr\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/nkey-curve25519/index.js\n **/","'use strict'\n\nconst crypto = require('crypto')\nconst bitcoin = require('@tradle/bitcoinjs-lib')\nconst nkey = require('nkey')\nconst type = 'bitcoin'\nconst impl = nkey.wrap({\n  type,\n  genSync,\n  fromJSON\n})\n\nmodule.exports = exports = impl\n\nexports.DEFAULT_NETWORK = 'bitcoin'\n\nfunction genSync (opts) {\n  const networkName = opts.networkName || exports.DEFAULT_NETWORK\n  return impl.fromJSON({\n    priv: bitcoin.ECKey.makeRandom(),\n    networkName\n  })\n}\n\nfunction fromJSON (opts) {\n  if (!(opts.priv || opts.pub)) {\n    throw new Error('expected \"priv\" or \"pub\"')\n  }\n\n  const networkName = opts.networkName\n  const network = bitcoin.networks[networkName]\n  if (!network) throw new Error('invalid \"networkName\"')\n\n  let key\n  let priv = opts.priv\n  let pub = opts.pub\n  let privKeyString\n  let pubKeyString\n  if (typeof priv === 'string') {\n    privKeyString = priv\n    key = bitcoin.ECKey.fromWIF(priv)\n  } else if (priv) {\n    privKeyString = priv.toWIF(network)\n    key = priv\n  } else if (typeof pub === 'string') {\n    pubKeyString = pub\n    key = bitcoin.ECPubKey.fromHex(pub)\n    pub = key\n  } else {\n    key = pub\n  }\n\n  // if (!pubKeyString) pubKeyString = pub.toString('hex')\n\n  let fingerprint\n  const api = {\n    type,\n    signSync,\n    verifySync,\n    privKeyString,\n    toJSON,\n    hasDeterministicSig: true,\n    wif: privKeyString\n    // pubKeyString,\n    // fingerprint,\n    // pub,\n    // priv,\n  }\n\n  // lazy, could be expensive\n  Object.defineProperty(api, 'pub', {\n    enumerable: true,\n    get: function () {\n      return key.pub || key\n    }\n  })\n\n  Object.defineProperty(api, 'pubKeyString', {\n    enumerable: true,\n    get: function () {\n      if (!pubKeyString) {\n        pubKeyString = api.pub.toHex()\n      }\n\n      return pubKeyString\n    }\n  })\n\n  Object.defineProperty(api, 'fingerprint', {\n    enumerable: true,\n    get: function () {\n      if (!fingerprint) {\n        fingerprint = api.pub.getAddress(network).toString()\n      }\n\n      return fingerprint\n    }\n  })\n\n  return nkey.wrap(api)\n\n  function signSync (msg) {\n    if (!priv) throw new Error('this is a public key')\n\n    return key.sign(msg).toDER()\n  }\n\n  function verifySync (msg, sig) {\n    return api.pub.verify(msg, bitcoin.ECSignature.fromDER(sig))\n  }\n\n  function toJSON (exportPrivate) {\n    const obj = {\n      type,\n      networkName,\n      fingerprint: api.fingerprint,\n      pub: api.pubKeyString,\n    }\n\n    if (exportPrivate) obj.priv = privKeyString\n\n    return obj\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/nkey-bitcoin/index.js\n **/","'use strict';\n\nvar elliptic = exports;\n\nelliptic.version = require('../package.json').version;\nelliptic.utils = require('./elliptic/utils');\nelliptic.rand = require('brorand');\nelliptic.hmacDRBG = require('./elliptic/hmac-drbg');\nelliptic.curve = require('./elliptic/curve');\nelliptic.curves = require('./elliptic/curves');\n\n// Protocols\nelliptic.ec = require('./elliptic/ec');\nelliptic.eddsa = require('./elliptic/eddsa');\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/elliptic/lib/elliptic.js\n **/","'use strict';\n\nvar hash = require('hash.js');\nvar elliptic = require('../elliptic');\nvar utils = elliptic.utils;\nvar assert = utils.assert;\n\nfunction HmacDRBG(options) {\n  if (!(this instanceof HmacDRBG))\n    return new HmacDRBG(options);\n  this.hash = options.hash;\n  this.predResist = !!options.predResist;\n\n  this.outLen = this.hash.outSize;\n  this.minEntropy = options.minEntropy || this.hash.hmacStrength;\n\n  this.reseed = null;\n  this.reseedInterval = null;\n  this.K = null;\n  this.V = null;\n\n  var entropy = utils.toArray(options.entropy, options.entropyEnc);\n  var nonce = utils.toArray(options.nonce, options.nonceEnc);\n  var pers = utils.toArray(options.pers, options.persEnc);\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n  this._init(entropy, nonce, pers);\n}\nmodule.exports = HmacDRBG;\n\nHmacDRBG.prototype._init = function init(entropy, nonce, pers) {\n  var seed = entropy.concat(nonce).concat(pers);\n\n  this.K = new Array(this.outLen / 8);\n  this.V = new Array(this.outLen / 8);\n  for (var i = 0; i < this.V.length; i++) {\n    this.K[i] = 0x00;\n    this.V[i] = 0x01;\n  }\n\n  this._update(seed);\n  this.reseed = 1;\n  this.reseedInterval = 0x1000000000000;  // 2^48\n};\n\nHmacDRBG.prototype._hmac = function hmac() {\n  return new hash.hmac(this.hash, this.K);\n};\n\nHmacDRBG.prototype._update = function update(seed) {\n  var kmac = this._hmac()\n                 .update(this.V)\n                 .update([ 0x00 ]);\n  if (seed)\n    kmac = kmac.update(seed);\n  this.K = kmac.digest();\n  this.V = this._hmac().update(this.V).digest();\n  if (!seed)\n    return;\n\n  this.K = this._hmac()\n               .update(this.V)\n               .update([ 0x01 ])\n               .update(seed)\n               .digest();\n  this.V = this._hmac().update(this.V).digest();\n};\n\nHmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {\n  // Optional entropy enc\n  if (typeof entropyEnc !== 'string') {\n    addEnc = add;\n    add = entropyEnc;\n    entropyEnc = null;\n  }\n\n  entropy = utils.toBuffer(entropy, entropyEnc);\n  add = utils.toBuffer(add, addEnc);\n\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n\n  this._update(entropy.concat(add || []));\n  this.reseed = 1;\n};\n\nHmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {\n  if (this.reseed > this.reseedInterval)\n    throw new Error('Reseed is required');\n\n  // Optional encoding\n  if (typeof enc !== 'string') {\n    addEnc = add;\n    add = enc;\n    enc = null;\n  }\n\n  // Optional additional data\n  if (add) {\n    add = utils.toArray(add, addEnc);\n    this._update(add);\n  }\n\n  var temp = [];\n  while (temp.length < len) {\n    this.V = this._hmac().update(this.V).digest();\n    temp = temp.concat(this.V);\n  }\n\n  var res = temp.slice(0, len);\n  this._update(add);\n  this.reseed++;\n  return utils.encode(res, enc);\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/elliptic/lib/elliptic/hmac-drbg.js\n **/","'use strict';\n\nvar curve = exports;\n\ncurve.base = require('./base');\ncurve.short = require('./short');\ncurve.mont = require('./mont');\ncurve.edwards = require('./edwards');\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/elliptic/lib/elliptic/curve/index.js\n **/","'use strict';\n\nvar curves = exports;\n\nvar hash = require('hash.js');\nvar elliptic = require('../elliptic');\n\nvar assert = elliptic.utils.assert;\n\nfunction PresetCurve(options) {\n  if (options.type === 'short')\n    this.curve = new elliptic.curve.short(options);\n  else if (options.type === 'edwards')\n    this.curve = new elliptic.curve.edwards(options);\n  else\n    this.curve = new elliptic.curve.mont(options);\n  this.g = this.curve.g;\n  this.n = this.curve.n;\n  this.hash = options.hash;\n\n  assert(this.g.validate(), 'Invalid curve');\n  assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');\n}\ncurves.PresetCurve = PresetCurve;\n\nfunction defineCurve(name, options) {\n  Object.defineProperty(curves, name, {\n    configurable: true,\n    enumerable: true,\n    get: function() {\n      var curve = new PresetCurve(options);\n      Object.defineProperty(curves, name, {\n        configurable: true,\n        enumerable: true,\n        value: curve\n      });\n      return curve;\n    }\n  });\n}\n\ndefineCurve('p192', {\n  type: 'short',\n  prime: 'p192',\n  p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',\n  b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',\n  n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012',\n    '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811'\n  ]\n});\n\ndefineCurve('p224', {\n  type: 'short',\n  prime: 'p224',\n  p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',\n  b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',\n  n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    'b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21',\n    'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34'\n  ]\n});\n\ndefineCurve('p256', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',\n  a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',\n  b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',\n  n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296',\n    '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5'\n  ]\n});\n\ndefineCurve('p384', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 ffffffff',\n  a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 fffffffc',\n  b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' +\n     '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',\n  n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' +\n     'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',\n  hash: hash.sha384,\n  gRed: false,\n  g: [\n    'aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' +\n    '5502f25d bf55296c 3a545e38 72760ab7',\n    '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' +\n    '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f'\n  ]\n});\n\ndefineCurve('p521', {\n  type: 'short',\n  prime: null,\n  p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff',\n  a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff fffffffc',\n  b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' +\n     '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' +\n     '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',\n  n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' +\n     'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',\n  hash: hash.sha512,\n  gRed: false,\n  g: [\n    '000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' +\n    '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' +\n    'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66',\n    '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' +\n    '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' +\n    '3fad0761 353c7086 a272c240 88be9476 9fd16650'\n  ]\n});\n\ndefineCurve('curve25519', {\n  type: 'mont',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '76d06',\n  b: '0',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '9'\n  ]\n});\n\ndefineCurve('ed25519', {\n  type: 'edwards',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '-1',\n  c: '1',\n  // -121665 * (121666^(-1)) (mod P)\n  d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a',\n\n    // 4/5\n    '6666666666666666666666666666666666666666666666666666666666666658'\n  ]\n});\n\nvar pre;\ntry {\n  pre = require('./precomputed/secp256k1');\n} catch (e) {\n  pre = undefined;\n}\n\ndefineCurve('secp256k1', {\n  type: 'short',\n  prime: 'k256',\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',\n  a: '0',\n  b: '7',\n  n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',\n  h: '1',\n  hash: hash.sha256,\n\n  // Precomputed endomorphism\n  beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',\n  lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',\n  basis: [\n    {\n      a: '3086d221a7d46bcde86c90e49284eb15',\n      b: '-e4437ed6010e88286f547fa90abfe4c3'\n    },\n    {\n      a: '114ca50f7a8e2f3f657c1108d9d44cfd8',\n      b: '3086d221a7d46bcde86c90e49284eb15'\n    }\n  ],\n\n  gRed: false,\n  g: [\n    '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',\n    '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',\n    pre\n  ]\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/elliptic/lib/elliptic/curves.js\n **/","'use strict';\n\nvar hash = require('hash.js');\nvar elliptic = require('../../elliptic');\nvar utils = elliptic.utils;\nvar assert = utils.assert;\nvar parseBytes = utils.parseBytes;\nvar KeyPair = require('./key');\nvar Signature = require('./signature');\n\nfunction EDDSA(curve) {\n  assert(curve === 'ed25519', 'only tested with ed25519 so far');\n\n  if (!(this instanceof EDDSA))\n    return new EDDSA(curve);\n\n  var curve = elliptic.curves[curve].curve;\n  this.curve = curve;\n  this.g = curve.g;\n  this.g.precompute(curve.n.bitLength() + 1);\n\n  this.pointClass = curve.point().constructor;\n  this.encodingLength = Math.ceil(curve.n.bitLength() / 8);\n  this.hash = hash.sha512;\n}\n\nmodule.exports = EDDSA;\n\n/**\n* @param {Array|String} message - message bytes\n* @param {Array|String|KeyPair} secret - secret bytes or a keypair\n* @returns {Signature} - signature\n*/\nEDDSA.prototype.sign = function sign(message, secret) {\n  message = parseBytes(message);\n  var key = this.keyFromSecret(secret);\n  var r = this.hashInt(key.messagePrefix(), message);\n  var R = this.g.mul(r);\n  var Rencoded = this.encodePoint(R);\n  var s_ = this.hashInt(Rencoded, key.pubBytes(), message)\n               .mul(key.priv());\n  var S = r.add(s_).umod(this.curve.n);\n  return this.makeSignature({ R: R, S: S, Rencoded: Rencoded });\n};\n\n/**\n* @param {Array} message - message bytes\n* @param {Array|String|Signature} sig - sig bytes\n* @param {Array|String|Point|KeyPair} pub - public key\n* @returns {Boolean} - true if public key matches sig of message\n*/\nEDDSA.prototype.verify = function verify(message, sig, pub) {\n  message = parseBytes(message);\n  sig = this.makeSignature(sig);\n  var key = this.keyFromPublic(pub);\n  var h = this.hashInt(sig.Rencoded(), key.pubBytes(), message);\n  var SG = this.g.mul(sig.S());\n  var RplusAh = sig.R().add(key.pub().mul(h));\n  return RplusAh.eq(SG);\n};\n\nEDDSA.prototype.hashInt = function hashInt() {\n  var hash = this.hash();\n  for (var i = 0; i < arguments.length; i++)\n    hash.update(arguments[i]);\n  return utils.intFromLE(hash.digest()).umod(this.curve.n);\n};\n\nEDDSA.prototype.keyFromPublic = function keyFromPublic(pub) {\n  return KeyPair.fromPublic(this, pub);\n};\n\nEDDSA.prototype.keyFromSecret = function keyFromSecret(secret) {\n  return KeyPair.fromSecret(this, secret);\n};\n\nEDDSA.prototype.makeSignature = function makeSignature(sig) {\n  if (sig instanceof Signature)\n    return sig;\n  return new Signature(this, sig);\n};\n\n/**\n* * https://tools.ietf.org/html/draft-josefsson-eddsa-ed25519-03#section-5.2\n*\n* EDDSA defines methods for encoding and decoding points and integers. These are\n* helper convenience methods, that pass along to utility functions implied\n* parameters.\n*\n*/\nEDDSA.prototype.encodePoint = function encodePoint(point) {\n  var enc = point.getY().toArray('le', this.encodingLength);\n  enc[this.encodingLength - 1] |= point.getX().isOdd() ? 0x80 : 0;\n  return enc;\n};\n\nEDDSA.prototype.decodePoint = function decodePoint(bytes) {\n  bytes = utils.parseBytes(bytes);\n\n  var lastIx = bytes.length - 1;\n  var normed = bytes.slice(0, lastIx).concat(bytes[lastIx] & ~0x80);\n  var xIsOdd = (bytes[lastIx] & 0x80) !== 0;\n\n  var y = utils.intFromLE(normed);\n  return this.curve.pointFromY(y, xIsOdd);\n};\n\nEDDSA.prototype.encodeInt = function encodeInt(num) {\n  return num.toArray('le', this.encodingLength);\n};\n\nEDDSA.prototype.decodeInt = function decodeInt(bytes) {\n  return utils.intFromLE(bytes);\n};\n\nEDDSA.prototype.isPoint = function isPoint(val) {\n  return val instanceof this.pointClass;\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/elliptic/lib/elliptic/eddsa/index.js\n **/","var asn1 = exports;\n\nasn1.bignum = require('bn.js');\n\nasn1.define = require('./asn1/api').define;\nasn1.base = require('./asn1/base');\nasn1.constants = require('./asn1/constants');\nasn1.decoders = require('./asn1/decoders');\nasn1.encoders = require('./asn1/encoders');\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/nkey-ecdsa/~/asn1.js/lib/asn1.js\n **/","var base = exports;\n\nbase.Reporter = require('./reporter').Reporter;\nbase.DecoderBuffer = require('./buffer').DecoderBuffer;\nbase.EncoderBuffer = require('./buffer').EncoderBuffer;\nbase.Node = require('./node');\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/nkey-ecdsa/~/asn1.js/lib/asn1/base/index.js\n **/","var inherits = require('inherits');\nvar Reporter = require('../base').Reporter;\nvar Buffer = require('buffer').Buffer;\n\nfunction DecoderBuffer(base, options) {\n  Reporter.call(this, options);\n  if (!Buffer.isBuffer(base)) {\n    this.error('Input not Buffer');\n    return;\n  }\n\n  this.base = base;\n  this.offset = 0;\n  this.length = base.length;\n}\ninherits(DecoderBuffer, Reporter);\nexports.DecoderBuffer = DecoderBuffer;\n\nDecoderBuffer.prototype.save = function save() {\n  return { offset: this.offset, reporter: Reporter.prototype.save.call(this) };\n};\n\nDecoderBuffer.prototype.restore = function restore(save) {\n  // Return skipped data\n  var res = new DecoderBuffer(this.base);\n  res.offset = save.offset;\n  res.length = this.offset;\n\n  this.offset = save.offset;\n  Reporter.prototype.restore.call(this, save.reporter);\n\n  return res;\n};\n\nDecoderBuffer.prototype.isEmpty = function isEmpty() {\n  return this.offset === this.length;\n};\n\nDecoderBuffer.prototype.readUInt8 = function readUInt8(fail) {\n  if (this.offset + 1 <= this.length)\n    return this.base.readUInt8(this.offset++, true);\n  else\n    return this.error(fail || 'DecoderBuffer overrun');\n}\n\nDecoderBuffer.prototype.skip = function skip(bytes, fail) {\n  if (!(this.offset + bytes <= this.length))\n    return this.error(fail || 'DecoderBuffer overrun');\n\n  var res = new DecoderBuffer(this.base);\n\n  // Share reporter state\n  res._reporterState = this._reporterState;\n\n  res.offset = this.offset;\n  res.length = this.offset + bytes;\n  this.offset += bytes;\n  return res;\n}\n\nDecoderBuffer.prototype.raw = function raw(save) {\n  return this.base.slice(save ? save.offset : this.offset, this.length);\n}\n\nfunction EncoderBuffer(value, reporter) {\n  if (Array.isArray(value)) {\n    this.length = 0;\n    this.value = value.map(function(item) {\n      if (!(item instanceof EncoderBuffer))\n        item = new EncoderBuffer(item, reporter);\n      this.length += item.length;\n      return item;\n    }, this);\n  } else if (typeof value === 'number') {\n    if (!(0 <= value && value <= 0xff))\n      return reporter.error('non-byte EncoderBuffer value');\n    this.value = value;\n    this.length = 1;\n  } else if (typeof value === 'string') {\n    this.value = value;\n    this.length = Buffer.byteLength(value);\n  } else if (Buffer.isBuffer(value)) {\n    this.value = value;\n    this.length = value.length;\n  } else {\n    return reporter.error('Unsupported type: ' + typeof value);\n  }\n}\nexports.EncoderBuffer = EncoderBuffer;\n\nEncoderBuffer.prototype.join = function join(out, offset) {\n  if (!out)\n    out = new Buffer(this.length);\n  if (!offset)\n    offset = 0;\n\n  if (this.length === 0)\n    return out;\n\n  if (Array.isArray(this.value)) {\n    this.value.forEach(function(item) {\n      item.join(out, offset);\n      offset += item.length;\n    });\n  } else {\n    if (typeof this.value === 'number')\n      out[offset] = this.value;\n    else if (typeof this.value === 'string')\n      out.write(this.value, offset);\n    else if (Buffer.isBuffer(this.value))\n      this.value.copy(out, offset);\n    offset += this.length;\n  }\n\n  return out;\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/nkey-ecdsa/~/asn1.js/lib/asn1/base/buffer.js\n **/","var constants = exports;\n\n// Helper\nconstants._reverse = function reverse(map) {\n  var res = {};\n\n  Object.keys(map).forEach(function(key) {\n    // Convert key to integer if it is stringified\n    if ((key | 0) == key)\n      key = key | 0;\n\n    var value = map[key];\n    res[value] = key;\n  });\n\n  return res;\n};\n\nconstants.der = require('./der');\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/nkey-ecdsa/~/asn1.js/lib/asn1/constants/index.js\n **/","var constants = require('../constants');\n\nexports.tagClass = {\n  0: 'universal',\n  1: 'application',\n  2: 'context',\n  3: 'private'\n};\nexports.tagClassByName = constants._reverse(exports.tagClass);\n\nexports.tag = {\n  0x00: 'end',\n  0x01: 'bool',\n  0x02: 'int',\n  0x03: 'bitstr',\n  0x04: 'octstr',\n  0x05: 'null_',\n  0x06: 'objid',\n  0x07: 'objDesc',\n  0x08: 'external',\n  0x09: 'real',\n  0x0a: 'enum',\n  0x0b: 'embed',\n  0x0c: 'utf8str',\n  0x0d: 'relativeOid',\n  0x10: 'seq',\n  0x11: 'set',\n  0x12: 'numstr',\n  0x13: 'printstr',\n  0x14: 't61str',\n  0x15: 'videostr',\n  0x16: 'ia5str',\n  0x17: 'utctime',\n  0x18: 'gentime',\n  0x19: 'graphstr',\n  0x1a: 'iso646str',\n  0x1b: 'genstr',\n  0x1c: 'unistr',\n  0x1d: 'charstr',\n  0x1e: 'bmpstr'\n};\nexports.tagByName = constants._reverse(exports.tag);\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/nkey-ecdsa/~/asn1.js/lib/asn1/constants/der.js\n **/","var decoders = exports;\n\ndecoders.der = require('./der');\ndecoders.pem = require('./pem');\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/nkey-ecdsa/~/asn1.js/lib/asn1/decoders/index.js\n **/","var encoders = exports;\n\nencoders.der = require('./der');\nencoders.pem = require('./pem');\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/nkey-ecdsa/~/asn1.js/lib/asn1/encoders/index.js\n **/"],"sourceRoot":""}